position,channelId,channelTitle,videoId,publishedAt,publishedAtSQL,videoTitle,videoDescription,videoCategoryId,videoCategoryLabel,duration,durationSec,dimension,definition,caption,thumbnail_maxres,licensedContent,viewCount,likeCount,dislikeCount,favoriteCount,commentCount
1,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,smWEhWKVS_Q,2020-08-20T11:22:32Z,20/8/20 11:22,SQL Tutorial - EXISTS,"Another video brought to you by BeardedDev, bringing you tutorials on Data Engineering, Business Intelligence, T-SQL Programming and Data Analysis. If you like the video you can support me on Patreon, https://www.patreon.com/beardeddev In this SQL tutorial we take a look at exists, how to use exists with subqueries, how to create a correlated subquery and the difference between exists and in/not in. Exists can be used when we want to return results from one set based on whether the data exists in another set. Exists is not a replacement for joins and in the tutorial I discuss why, there are times when working with not in and NULL exists in the data that the results we are expecting are not returned but when using exists the results are what we expect. If you would like to follow along with this SQL tutorial then you can use the below SQL to create the necessary objects. Please feel free to post any comments. DROP TABLE IF EXISTS dbo.T1; CREATE TABLE dbo.T1 ( col1 TINYINT NULL ); DROP TABLE IF EXISTS dbo.T2; CREATE TABLE dbo.T2 ( col1 TINYINT NULL ); INSERT INTO dbo.T1 (col1) VALUES (1), (2), (3); INSERT INTO dbo.T2 (col1) VALUES (1), (2), (NULL); SELECT * FROM dbo.T1; SELECT * FROM dbo.T2; DROP TABLE IF EXISTS dbo.Employees; CREATE TABLE dbo.Employees ( EmpId INT NOT NULL IDENTITY(1, 1) PRIMARY KEY, FirstName VARCHAR(50) NOT NULL, LastName VARCHAR(50) NOT NULL, Position VARCHAR(50) NOT NULL ); DROP TABLE IF EXISTS dbo.Customers; CREATE TABLE dbo.Customers ( CustId INT NOT NULL IDENTITY(1, 1) PRIMARY KEY, FirstName VARCHAR(50) NOT NULL, LastName VARCHAR(50) NOT NULL ); INSERT INTO dbo.Employees (FirstName, LastName, Position) VALUES ('Deidre', 'Walsh', 'Sales Assistant'), ('Matthew', 'Arlington', 'Sales Assistant'), ('Michelle', 'Montgomery', 'Sales Assistant'), ('Lee', 'Chen', 'Sales Assistant'); INSERT INTO dbo.Customers (FirstName, LastName) VALUES ('Deidre', 'Walsh'), ('Raphael', 'Jones'), ('Lee', 'Chen');",27,Education,PT19M41S,1181,2d,hd,FALSE,,1,60,9,0,0,5
2,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,AB3PNRT3YDw,2020-08-10T23:00:05Z,10/8/20 23:00,How I Passed 70-768 - Developing SQL Data Models,"Another video brought to you by BeardedDev, bringing you tutorials on Data Engineering, Business Intelligence, T-SQL Programming and Data Analysis. If you like the videos you can support me on Patreon, https://www.patreon.com/beardeddev In this video I talk about my experience with the Microsoft Certification, 70-768: Developing SQL Data Models. For a full list of the exam objectives please check out this link and click on Download exam skills outline: https://docs.microsoft.com/en-us/learn/certifications/exams/70-768 Resources https://www.edx.org/course/developing-a-multidimensional-data-model https://www.edx.org/course/developing-a-tabular-data-model https://docs.microsoft.com/en-us/analysis-services/?view=asallproducts-allversions And I provide my own tips on taking the 70-768 certification but these can be applied to any microsoft certification. What certifications are you taking this year? Let me know in the comments below.",27,Education,PT18M50S,1130,2d,hd,FALSE,https://i.ytimg.com/vi/AB3PNRT3YDw/maxresdefault.jpg,1,107,7,0,0,4
3,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,#NAME?,2020-07-13T11:16:39Z,13/7/20 11:16,T-SQL Tutorial - REPLICATE,"Another video brought to you by BeardedDev, bringing you tutorials on Data Engineering, Business Intelligence, T-SQL Programming and Data Analysis. If you like the videos you can support me on Patreon, https://www.patreon.com/beardeddev Have you ever wondered how to leading 0s in SQL Server? What about creating a histogram? In this T-SQL Tutorial I show you how you can do both using the REPLICATE function. Adding leading 0s is something I have to do a lot in my work life and creating histograms gives you a good visual representation of the variances in the data. You can use the code examples below to follow along. Please feel free to post any comments Code Examples: IF OBJECT_ID(N'dbo.Invoice', N'U') IS NOT NULL DROP TABLE dbo.Invoice; GO CREATE TABLE dbo.Invoice ( InvoiceKey INT NOT NULL IDENTITY(1, 1), InvoiceNumber CHAR(10) NOT NULL, InvoiceAmount DECIMAL(10, 2) NOT NULL ) DECLARE @i INT = 1 WHILE @i (add less than symbol here)= 10 BEGIN INSERT INTO dbo.Invoice (InvoiceNumber, InvoiceAmount) SELECT POWER(@i, 3) AS InvoiceNumber, CAST(RAND() * (10000 * SQUARE(@i)) AS DECIMAL(10, 2)) AS InvoiceAmount SET @i = @i + 1 END SELECT InvoiceKey, REPLICATE('0', 10 - LEN(InvoiceNumber)) + InvoiceNumber AS InvoiceNumber, InvoiceAmount FROM dbo.Invoice UPDATE dbo.Invoice SET InvoiceNumber = REPLICATE('0', 10 - LEN(InvoiceNumber)) + InvoiceNumber WHERE LEN(InvoiceNumber) (add not equal too here) 10 SELECT *, CAST(100 * InvoiceAmount / SUM(InvoiceAmount) OVER(ORDER BY (SELECT NULL)) AS INT) AS PctofTotal, REPLICATE('*', CAST(100 * InvoiceAmount / SUM(InvoiceAmount) OVER(ORDER BY (SELECT NULL)) AS INT)) AS [Histogram] FROM dbo.Invoice",27,Education,PT18M31S,1111,2d,hd,FALSE,https://i.ytimg.com/vi/-n2be_uOacw/maxresdefault.jpg,1,129,9,0,0,2
4,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,xPMbgM8Eb2k,2020-07-09T11:50:34Z,9/7/20 11:50,T-SQL Tutorial - PIVOT without using PIVOT,"Another video brought to you by BeardedDev, bringing you tutorials on Data Engineering, Business Intelligence, T-SQL Programming and Data Analysis. If you like the videos you can support me on Patreon, https://www.patreon.com/beardeddev In this video I talk about an alternative approach to using the PIVOT statement in T-SQL, if you are not familiar with PIVOT click here to watch this tutorial: https://youtu.be/OuV7cES4Qcs. The PIVOT statement is extremely useful if we want to transfer rows to columns but what if we want to perform multiple aggregations on the data and how does SQL Server handle that internally. The alternative approach is to use CASE statements and apply grouping, I walk through some examples of CASE statements that return the same results as PIVOT then add more aggregations. You can use the code examples below to follow along. Please feel free to post any comments Code Examples: IF OBJECT_ID(N'dbo.LocationSales', N'U') IS NOT NULL DROP TABLE dbo.LocationSales; GO CREATE TABLE dbo.LocationSales ( [Location] [varchar](20) NOT NULL, -- grouping [Date] [date] NOT NULL, -- spreading Amount [decimal](6, 2) NOT NULL -- aggregating ) INSERT INTO dbo.LocationSales ([Location], [Date], Amount) VALUES ('Birmingham', '20170101', 1564.82), ('Birmingham', '20170201', 3984.64), ('Birmingham', '20180101', 6821.46), ('Birmingham', '20180201', 7018.56), ('Birmingham', '20180301', 6736.89), ('Birmingham', '20190101', 7832.93), ('Birmingham', '20190201', 6821.46), ('Birmingham', '20190301', 6821.46), ('Birmingham', '20200101', 8901.76), ('Birmingham', '20200201', 6821.46), ('Birmingham', '20200301', 6821.46), ('London', '20180101', 3755.81), ('London', '20180201', 4512.01), ('London', '20190101', 5087.54), ('London', '20190201', 4309.53), ('London', '20190301', 5168.38), ('London', '20200101', 8206.48), ('London', '20200201', 9468.54), ('London', '20200301', 5087.54), ('Manchester', '20190101', 2472.72), ('Manchester', '20190201', 5937.28), ('Manchester', '20200101', 5369.37), ('Manchester', '20200201', 5862.94), ('Manchester', '20200301', 4674.28); -- 3. Create SELECT SELECT [Location], [2017], [2018] [2019], [2020] FROM -- 1. Create a Derived Table ( SELECT [Location], YEAR([Date]) AS [Year], Amount FROM LocationSales ) AS D -- 2. Create PIVOT PIVOT ( SUM(Amount) FOR [Year] IN ([2017], [2018], [2019], [2020]) ) AS P SELECT [Location], SUM(CASE WHEN YEAR([Date]) = 2017 THEN Amount END) AS [Sum2017], SUM(CASE WHEN YEAR([Date]) = 2018 THEN Amount END) AS [Sum2018], SUM(CASE WHEN YEAR([Date]) = 2019 THEN Amount END) AS [Sum2019], SUM(CASE WHEN YEAR([Date]) = 2020 THEN Amount END) AS [Sum2020], AVG(CASE WHEN YEAR([Date]) = 2017 THEN Amount END) AS [Avg2017], AVG(CASE WHEN YEAR([Date]) = 2018 THEN Amount END) AS [Avg2018], AVG(CASE WHEN YEAR([Date]) = 2019 THEN Amount END) AS [Avg2019], AVG(CASE WHEN YEAR([Date]) = 2020 THEN Amount END) AS [Avg2020], max(CASE WHEN YEAR([Date]) = 2017 THEN Amount END) AS [max2017], max(CASE WHEN YEAR([Date]) = 2018 THEN Amount END) AS [max2018], max(CASE WHEN YEAR([Date]) = 2019 THEN Amount END) AS [max2019], max(CASE WHEN YEAR([Date]) = 2020 THEN Amount END) AS [max2020] FROM dbo.LocationSales GROUP BY [Location]",27,Education,PT15M43S,943,2d,hd,FALSE,https://i.ytimg.com/vi/xPMbgM8Eb2k/maxresdefault.jpg,1,158,8,0,0,7
5,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,OuV7cES4Qcs,2020-07-08T10:08:03Z,8/7/20 10:08,T-SQL Tutorial - PIVOTing Made Easy,"Another video brought to you by BeardedDev, bringing you tutorials on Data Engineering, Business Intelligence, T-SQL Programming and Data Analysis. If you like the videos you can support me on Patreon, https://www.patreon.com/beardeddev In this video I talk about the PIVOT statement in T-SQL, I talk about the two different types of PIVOT; Many-To-One and One-To-One and also the operations; Grouping, Spreading and Aggregating that make up PIVOT. I also show how you can create your data to practice using PIVOT in SQL Server and then walk through some PIVOT examples. You can use the code examples below to follow along. Please feel free to post any comments Code Examples: IF OBJECT_ID(N'dbo.LocationSales', N'U') IS NOT NULL DROP TABLE dbo.LocationSales; GO CREATE TABLE dbo.LocationSales ( [Location] [varchar](20) NOT NULL, -- grouping [Date] [date] NOT NULL, -- spreading Amount [decimal](6, 2) NOT NULL -- aggregating ) INSERT INTO dbo.LocationSales ([Location], [Date], Amount) VALUES ('Birmingham', '20170101', 1564.82), ('Birmingham', '20170201', 3984.64), ('Birmingham', '20180101', 6821.46), ('Birmingham', '20180201', 7018.56), ('Birmingham', '20180301', 6736.89), ('Birmingham', '20190101', 7832.93), ('Birmingham', '20190201', 6821.46), ('Birmingham', '20190301', 6821.46), ('Birmingham', '20200101', 8901.76), ('Birmingham', '20200201', 6821.46), ('Birmingham', '20200301', 6821.46), ('London', '20180101', 3755.81), ('London', '20180201', 4512.01), ('London', '20190101', 5087.54), ('London', '20190201', 4309.53), ('London', '20190301', 5168.38), ('London', '20200101', 8206.48), ('London', '20200201', 9468.54), ('London', '20200301', 5087.54), ('Manchester', '20190101', 2472.72), ('Manchester', '20190201', 5937.28), ('Manchester', '20200101', 5369.37), ('Manchester', '20200201', 5862.94), ('Manchester', '20200301', 4674.28); -- 3. Create SELECT SELECT [Location], [2017], [2018] [2019], [2020] FROM -- 1. Create a Derived Table ( SELECT [Location], YEAR([Date]) AS [Year], Amount FROM LocationSales ) AS D -- 2. Create PIVOT PIVOT ( SUM(Amount) FOR [Year] IN ([2017], [2018], [2019], [2020]) ) AS P -- PIVOT -- ONE to ONE Example -- 3. Create SELECT SELECT [Location], [2017], [2018], [2019], [2020] FROM -- 1. Create a Derived Table ( SELECT [Location], YEAR([Date]) AS [Year], SUM(Amount) AS Amount FROM dbo.LocationSales GROUP BY [Location], YEAR([Date]) ) AS D -- 2. Create PIVOT PIVOT ( MAX(Amount) FOR [Year] IN ([2017], [2018], [2019], [2020]) ) AS P",27,Education,PT21M28S,1288,2d,hd,FALSE,https://i.ytimg.com/vi/OuV7cES4Qcs/maxresdefault.jpg,1,164,10,0,0,3
6,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,IkPYrcPr3is,2020-02-15T23:13:59Z,15/2/20 23:13,How long does it take to pass Microsoft Certifications,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. If you like the videos you can support me on Patreon, https://www.patreon.com/beardeddev In this video I talk about how long it takes to pass Microsoft certifications, Microsoft certifications prove you have the technical knowledge of the exam topics. The views expressed in this video are my own and based on my own research, you may be able to pass the certifications a lot quicker. Whilst the Microsoft certifications are not a substitute for real world experience they can help you get in to a field of work that you are interested in. Microsoft certifications are also recognised all over the world and I have even seen adverts that would hold a candidate that currently holds any certifications in high regard. If you would like to view the video I did on How to pass 70-767 - Implementing a Data Warehouse in Microsoft SQL Server 2016, you can view the video here: https://youtu.be/Nb9ANmsoF1w Please feel free to post any comments",27,Education,PT8M9S,489,2d,hd,FALSE,https://i.ytimg.com/vi/IkPYrcPr3is/maxresdefault.jpg,1,400,18,1,0,6
7,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,hbLj8-ZfKYg,2020-02-10T19:45:50Z,10/2/20 19:45,SQL Tutorial - Additive CASE statements,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. If you like the videos you can support me on Patreon, https://www.patreon.com/beardeddev In this video I talk about how to use additive CASE statements in SQL Server. For an introduction to CASE statements check out this video: https://youtu.be/ZANtieWGDWM If you are new to CTEs check out this video: https://youtu.be/3QuYuU9OJfA, there is also a playlist on my channel It is important to note that in the first case statement: CASE WHEN Cat.EnglishProductCategoryName = 'Bikes' THEN 0.10 END This will cause any product categories that are not Bikes to be NULL, if this is not the desired result you can edit the query by adding ELSE: CASE WHEN Cat.EnglishProductCategoryName = 'Bikes' THEN 0.10 ELSE 0.00 END CASE Statements were introduced to SQL Server in 2008. They are used to evaluate conditions and return a result based on those conditions. CASE Statements can be used in SELECT, UPDATE, DELETE, WHERE, HAVING. In this CASE Tutorial we look at a common use of CASE statements within SELECT and also the benefit and common downfalls when writing CASE queries. CASE Statement Syntax: CASE WHEN [condition] THEN [value if true] ELSE [value if fales] END SQL Queries in this video: SELECT Cat.EnglishProductCategoryName , Subcat.EnglishProductSubcategoryName , Prod.EnglishProductName , CASE WHEN Cat.EnglishProductCategoryName = 'Bikes' THEN 0.10 END + CASE WHEN Subcat.EnglishProductSubcategoryName = 'Road Bikes' THEN 0.10 ELSE 0.00 END + CASE WHEN Subcat.EnglishProductSubcategoryName = 'Road Bikes' AND (Prod.EnglishProductName LIKE '%Red%' OR Prod.EnglishProductName LIKE '%Yellow%') THEN 0.05 ELSE 0.00 END AS Discount FROM dbo.DimProductCategory AS Cat INNER JOIN dbo.DimProductSubcategory AS Subcat ON Cat.ProductCategoryKey = Subcat.ProductCategoryKey INNER JOIN dbo.DimProduct AS Prod ON Subcat.ProductSubcategoryKey = Prod.ProductSubcategoryKey WHERE Cat.EnglishProductCategoryName = 'Bikes' --AND Subcat.EnglishProductSubcategoryName = 'Road Bikes' Please feel free to post any comments.",27,Education,PT18M41S,1121,2d,hd,FALSE,https://i.ytimg.com/vi/hbLj8-ZfKYg/maxresdefault.jpg,1,1615,54,0,0,9
8,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,DS8QZ2HEqvk,2019-07-21T13:01:19Z,21/7/19 13:01,SQL Tutorial - How to use NTILE in SQL Server,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev To improve your T-SQL skills check out my recommended reading list: T-SQL Querying https://www.amazon.com/gp/product/0735685045/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735685045&linkCode=as2&tag=beardeddev05-20&linkId=e93b0f7483b1fa06aca5a3aec4f7764b T-SQL Fundamentals https://www.amazon.com/gp/product/150930200X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=150930200X&linkCode=as2&tag=beardeddev05-20&linkId=70aa2ffa3e84cab66cb964ca1e9cee62 Microsoft SQL Server 2012 High-Performance T-SQL Using Window Functions https://www.amazon.com/gp/product/0735658366/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735658366&linkCode=as2&tag=beardeddev05-20&linkId=b88746aea666c9f98da147e70b4491ca In this SQL Tutorial we cover an overview of NTILE and the syntax, a discussion of the difference between partitions and tiles. We also demonstrate a particularly poor example of using NTILE and typical use cases. To follow along with the video please use scripts below: IF OBJECT_ID(N'dbo.Sale', N'U') IS NOT NULL DROP TABLE dbo.Sale IF OBJECT_ID(N'dbo.SaleChannel', N'U') IS NOT NULL DROP TABLE dbo.SaleChannel CREATE TABLE SaleChannel ( SaleChannelId INT NOT NULL IDENTITY(1, 1) CONSTRAINT PK_SalesChannel_SaleChannelId PRIMARY KEY (SaleChannelId) , SaleChannel VARCHAR(10) NOT NULL ) INSERT INTO dbo.SaleChannel (SaleChannel) VALUES ('In-Store'), ('Online') CREATE TABLE Sale ( SaleId INT NOT NULL IDENTITY(1, 1) CONSTRAINT PK_Sales_SaleId PRIMARY KEY (SaleId) , SaleChannelId INT NOT NULL CONSTRAINT FK_Sales_SaleChannelId FOREIGN KEY (SaleChannelId) REFERENCES SaleChannel (SaleChannelId) , SaleDate DATE NOT NULL , SaleAmount DECIMAL(6, 2) NOT NULL ) INSERT INTO dbo.Sale (SaleChannelId, SaleDate, SaleAmount) VALUES (1, '20180101', 15.99) , (1, '20180201', 7.49) , (1, '20180301', 14.99) , (1, '20180401', 6.49) , (1, '20180501', 13.99) , (1, '20180601', 5.49) , (1, '20180701', 19.99) , (1, '20180801', 10.49) , (1, '20180901', 18.99) , (1, '20181001', 11.49) , (1, '20181101', 17.99) , (1, '20181201', 12.49) , (2, '20180101', 16.99) , (2, '20180201', 13.49) , (2, '20180301', 15.99) , (2, '20180401', 14.49) , (2, '20180501', 19.99) , (2, '20180601', 7.49)",27,Education,PT15M28S,928,2d,hd,FALSE,,1,1113,27,1,0,3
9,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,PmSbugwxNX0,2019-05-12T15:12:48Z,12/5/19 15:12,SQL Tutorial - How to remove data using CTEs,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev In this SQL Tutorial we remove data from a table using a CTE. We go through examples of populating duplicate data in a table then identifying the row number then deleting from the CTE which in turn deletes from the underlying table. We also discuss that when using this method there can only be one underlying table in the CTE and show an error that will be shown when joins are involved. If you would like to see more video tutorials on CTEs check out my playlist: https://www.youtube.com/watch?v=3QuYuU9OJfA&list=PLgR-BOYibnN1jq0eQtCztDmNN6Af5RY-G Code to follow tutorial: -- check if Customers table exists IF OBJECT_ID(N'dbo.Customers', N'U') IS NOT NULL DROP TABLE dbo.Customers -- create table Customers CREATE TABLE dbo.Customers ( FirstName VARCHAR(50) , LastName VARCHAR(50) , DOB DATE , CityId INT ) -- check if City table exists IF OBJECT_ID(N'dbo.City', N'U') IS NOT NULL DROP TABLE dbo.City -- create table City CREATE TABLE dbo.City ( CityId INT , City VARCHAR(50) ) -- populate City table INSERT INTO dbo.City (CityId, City) VALUES (1, 'Birmingham') , (2, 'London') , (3, 'Manchester') , (4, 'Newcastle') -- simulate inserting duplicate data, each customer is inserted 3x INSERT INTO dbo.Customers (FirstName, LastName, DOB, CityId) VALUES ('Tony', 'Smith', '19840407', 1) , ('Michelle', 'Carter', '19951122', 2) , ('Sarah', 'Gulliver', '19790730', 3) , ('Matthew', 'Wilkins', '19880808', 4) , ('Tony', 'Smith', '19840407', 1) , ('Michelle', 'Carter', '19951122', 2) , ('Sarah', 'Gulliver', '19790730', 3) , ('Matthew', 'Wilkins', '19880808', 4) , ('Tony', 'Smith', '19840407', 1) , ('Michelle', 'Carter', '19951122', 2) , ('Sarah', 'Gulliver', '19790730', 3) , ('Matthew', 'Wilkins', '19880808', 4) WITH CTE AS ( SELECT ROW_NUMBER() OVER(PARTITION BY FirstName, LastName, DOB, CityId ORDER BY FirstName) AS R , * FROM dbo.Customers ) DELETE FROM CTE WHERE R (insert greater than or equal to here) 2",27,Education,PT11M52S,712,2d,hd,FALSE,https://i.ytimg.com/vi/PmSbugwxNX0/maxresdefault.jpg,1,804,31,0,0,2
10,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,qA9Atd1IeJU,2018-11-13T23:46:22Z,13/11/18 23:46,SQL Tutorial - How to Calculate Rolling Totals,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev In this SQL Tutorial we discuss how to calculate rolling totals using window functions. We go through examples using the over clause and taking advantage of changing our window/frames by using rows preceding and current row. There is also a bonus in this tutorial where we show an example of how to use current row and rows following. If you would like to see more video tutorials on window functions there is a playlist available on my channel. SQL: SELECT * , SUM(SalesAmount) OVER(ORDER BY [Date] ROWS BETWEEN 9 PRECEDING AND CURRENT ROW) AS Total , SUM(SalesAmount) OVER(ORDER BY [Date] ROWS BETWEEN CURRENT ROW AND 9 FOLLOWING) AS Forward FROM #TempSales ORDER BY [Date] Please feel free to comment below.",27,Education,PT10M6S,606,2d,hd,FALSE,https://i.ytimg.com/vi/qA9Atd1IeJU/maxresdefault.jpg,1,2955,105,1,0,7
11,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,cYu-cP8qsl0,2018-11-11T19:11:44Z,11/11/18 19:11,SSIS Tutorial - Execute SQL Task,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev In this SSIS Tutorial we talk about the Execute SQL Task within the Control Flow, along with the Data Flow Task this will make up 90% of what you will need to do in terms of an ETL process. We discuss examples on how we can use the Execute SQL Task to Truncate Tables, Execute Stored Procedures with Parameters and run a SELECT statement and return a result set. This SSIS Tutorial doesn't discuss how to create connection managers, if you are new to SSIS and would like to learn how to create connection managers check out the below videos on my channel: If you are interested in watching all tutorials and videos on SQL Server Integration Services then check out the playlist available:",27,Education,PT15M22S,922,2d,hd,FALSE,,1,2658,49,0,0,5
12,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,J3ERo-M0BA4,2018-11-02T09:00:02Z,2/11/18 9:00,SQL Fixes - Login Error No process is on the other end of the pipe,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev T-SQL Querying https://www.amazon.com/gp/product/0735685045/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735685045&linkCode=as2&tag=beardeddev05-20&linkId=e93b0f7483b1fa06aca5a3aec4f7764b T-SQL Fundamentals https://www.amazon.com/gp/product/150930200X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=150930200X&linkCode=as2&tag=beardeddev05-20&linkId=70aa2ffa3e84cab66cb964ca1e9cee62 Microsoft SQL Server 2012 High-Performance T-SQL Using Window Functions https://www.amazon.com/gp/product/0735658366/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735658366&linkCode=as2&tag=beardeddev05-20&linkId=b88746aea666c9f98da147e70b4491ca In this video we take a look at a login error when trying to connect to SQL Server Management Studio (SSMS) - No process is on the other end of the pipe. I have seen recommendations on forums that when you see this error SQL Server must be reinstalled but that is a last resort. No process is on the other end of the pipe is not very descriptive and it means that we are unable to access SQL Server using SQL Server Authentication. In this video we talk about how we can resolve this issue. We login as sysadmin and look at the properties of the server under the security page, we notice that the server is set up for Windows Authentication even though we have the option of selecting SQL Server Authentication when connecting. We change this setting and restart the services and have resolved the problem. It is worth mentioning that I believe that the authentication method is set to Windows Authentication when installing SQL Server so be careful if you will be setting up SQL Server users. Let me know if this resolved the issue.",27,Education,PT6M15S,375,2d,hd,FALSE,https://i.ytimg.com/vi/J3ERo-M0BA4/maxresdefault.jpg,1,10850,138,8,0,27
13,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,gcUutvtRV-8,2018-10-31T20:37:44Z,31/10/18 20:37,SQL Questions - TRUNCATE,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev In this video we look at common questions surrounding TRUNCATE in SQL Server. Can TRUNCATE be rolled back? Is TRUNCATE Data Definition Language or Data Manipulation Language? I am using SQL Server 2012 so you might experience different results in trying to rollback TRUNCATE in different Relational Database Management Systems such as Oracle. In this video I demonstrate that when using TRUNCATE within an explicit transaction that TRUNCATE can be rolled back. We also talk about whether TRUNCATE is DDL or DML, most online sources point to DDL but this is really a grey area. I show setting up a new user that has db_datawriter permission on the database and how the user is able to delete from a table but when I try to execute TRUNCATE with the same permission an error message is shown. We then change the user role to ddl_admin and the user is able to execute the TRUNCATE statement. Let me know whether you feel TRUNCATE is DDL or DML in the comments below.",27,Education,PT11M54S,714,2d,hd,FALSE,https://i.ytimg.com/vi/gcUutvtRV-8/maxresdefault.jpg,1,328,11,0,0,1
14,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,xkJy25T1IXM,2018-10-28T13:55:52Z,28/10/18 13:55,SQL Sunday Quiz - Week 8,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev SQL Sunday Quiz This is SQL Sunday Quiz - Week 1 and the question is all Set Operators. Do you know the difference between UNION and UNION ALL, do you know the difference between EXCEPT and INTERCEPT then see if you can answer this SQL Server Question. If you have a question you would like to see it featured on the channel please email me at askbeardeddev@gmail.com.",27,Education,PT2M24S,144,2d,hd,FALSE,https://i.ytimg.com/vi/xkJy25T1IXM/maxresdefault.jpg,1,198,7,0,0,5
15,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,THCWEFbLSSw,2018-10-24T18:00:03Z,24/10/18 18:00,Excel Tutorial - Creating Your First Macro,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev In this Excel Tutorial we show an example of how to get started working with Macros. Macros save us lots of time and are ideal to replace any steps that need to be repeated. In this macro example you are shown how to record a macro and add a heading and a few rows to a sheet. We also discuss editing macros and a brief introduction to VBA, whilst recording a macro Excel is recording the steps in VBA (Visual Basic for Applications), once a macro is saved we can then edit the code. Once saved we can run the new macro. Please note that for this example we are using Microsoft Excel 2016 so if you are a different version the layout might differ.",27,Education,PT7M21S,441,2d,hd,FALSE,https://i.ytimg.com/vi/THCWEFbLSSw/maxresdefault.jpg,1,185,7,0,0,1
16,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,YsV5neYhZQ4,2018-10-23T22:08:12Z,23/10/18 22:08,SQL TUTORIAL - SELF JOINS Hierarchy Tables,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev This SQL Tutorial is all about hierarchy tables and self joins. We start off by looking at hierarchies that we are all aware of such as Parent and Child. The video then describes how we can create a hierarchy table in SQL Server including a Primary Key and a Foreign Key that references the Primary Key in the same table. If you are new to working with constraints in SQL Server please check out these videos: SQL Tutorial - Primary Key Constraints: https://youtu.be/DJ054rHGhRw SQL Tutorial - Create Table with Constraints: https://youtu.be/bfBnZKf2EGg If you would like to follow along with this SQL Tutorial then this is the create table statement used: CREATE TABLE dbo.Staff ( StaffId INT IDENTITY(1, 1) NOT NULL CONSTRAINT PK_Staff_StaffId PRIMARY KEY (StaffId) , StaffTitle VARCHAR(50) NOT NULL , ManagerId INT NULL CONSTRAINT FK_Staff_ManagerId FOREIGN KEY (ManagerId) REFERENCES dbo.Staff (StaffId) ) We then insert some dummy data in to the Hierarchy table and have a look at the results when executing a SELECT statement. On to discussing Self Joins, and the difference between using an INNER JOIN and a LEFT OUTER JOIN when joining a table to itself although the same applies if you were joining two separate underlying tables together. Then we apply a Self Join and return results, as the table and columns are the same we need to apply aliases. SELECT A.StaffTitle , B.StaffTitle AS ReportsTo FROM dbo.Staff AS A LEFT OUTER JOIN dbo.Staff AS B ON A.ManagerId = B.StaffId",27,Education,PT14M53S,893,2d,hd,FALSE,https://i.ytimg.com/vi/YsV5neYhZQ4/maxresdefault.jpg,1,3247,44,0,0,15
17,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,IJRJh7jS78g,2018-10-21T11:00:02Z,21/10/18 11:00,SQL Sunday Quiz - Week 7,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev SQL Sunday Quiz This is SQL Sunday Quiz - Week 7 and the question is all about the identity property in SQL Server. If you are not familiar with identity insert check out this video here: https://youtu.be/7uO_VgYEzz4 If you have a question you would like to see it featured on the channel please email me at askbeardeddev@gmail.com.",27,Education,PT4M39S,279,2d,hd,FALSE,https://i.ytimg.com/vi/IJRJh7jS78g/maxresdefault.jpg,1,150,0,0,0,5
18,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,jvuDf4w8cG8,2018-10-14T11:00:06Z,14/10/18 11:00,SQL Sunday Quiz - Week 6,This is SQL Sunday Quiz - Week 6 and the question is all about SQL Data Types. Do you know the difference between CHAR and VARCHAR? What data types should I use when creating columns? See if you can answer this weeks SQL Sunday Quiz question. If you have a question you would like to see it featured on the channel please email me at askbeardeddev@gmail.com.,27,Education,PT1M54S,114,2d,hd,FALSE,,1,123,2,0,0,2
19,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,CDFGQazIo2A,2018-10-07T11:00:01Z,7/10/18 11:00,SQL Sunday Quiz - Week 5,This is SQL Sunday Quiz - Week 5 and the question is all about SQL Functions. Have you ever heard of modulo? What is modulo? See if you can answer this weeks SQL Sunday Quiz question. If you have a question you would like to see it featured on the channel please email me at askbeardeddev@gmail.com.,27,Education,PT1M21S,81,2d,hd,FALSE,,1,164,1,0,0,2
20,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,TRJrG-hW1Yo,2018-10-04T08:00:02Z,4/10/18 8:00,QlikView Tutorial - Load Inline,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev In this video we introduce loading data in to QlikView and go through some examples. Loading Inline is one option of loading data in to QlikView, it involves a simple script and can be useful for testing or if we need to load data that does not have a data source. We talk through how to open QlikView Script Editor and use the wizard to create a script to Load Data Inline. Script used in this video: Employees: LOAD * INLINE [ Name | Position | StartDate Tony | Sales Manager | 01/01/2018 Michelle | Sales Assistant | 01/03/2018 ](delimiter is '|'); For more videos on QlikView subscribe to the channel and if there are any areas in QlikView or QlikSense that you would like me to do some tutorials on let me know in the comments below.",27,Education,PT9M1S,541,2d,hd,FALSE,,1,685,6,0,0,2
21,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,taulFcl6nvo,2018-10-02T08:00:04Z,2/10/18 8:00,SQL Tutorial - Stored Procedures OUTPUT Parameters,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev If you are new to working with Stored Procedures, check out this video here: https://youtu.be/njenU-w6G_8 on how to create a stored procedure. In this video we take a lot at stored procedure output parameters within SQL Server. Output Parameters enable us to return a value to the caller. In this tutorial we create a basic stored procedure that has two input parameters and one output parameter. We pass in values for Employee First Name and Last Name and return the Employee position. We then show that if we just execute the stored procedure without assigning the output variable then an error is shown. We then talk about how we can assign the output parameter value that is returned to a variable that will enable further use within SQL Server. SQL in this video: CREATE PROCEDURE spReturnEmployeePosition @FirstName VARCHAR(50) , @LastName VARCHAR(50) , @Position VARCHAR(50) OUTPUT AS BEGIN SELECT @Position = EmployeePosition FROM dbo.Employees WHERE EmployeeFirstName = @FirstName AND EmployeeLastName = @LastName END DECLARE @Pos VARCHAR(50) EXEC dbo.spReturnEmployeePosition @FirstName = 'Tony', @LastName = 'Smith', @Position = @Pos OUTPUT PRINT @Pos As always I hope you enjoy the video and remember to subscribe to BeardedDev. If you would like to see any video tutorials in future on the channel let me know in the comments.",27,Education,PT11M11S,671,2d,hd,FALSE,https://i.ytimg.com/vi/taulFcl6nvo/maxresdefault.jpg,1,2968,54,0,0,7
22,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,Kpg7t4D4GcA,2018-09-30T11:00:03Z,30/9/18 11:00,SQL Sunday Quiz - Week 4,"This is SQL Sunday Quiz - Week 2 and the question is all about SQL Programming. We will probably have all heard about SQL Injection but where can it exist, watch the video and post your answers in the comments below. If you have a question you would like to see it featured on the channel please email me at askbeardeddev@gmail.com.",27,Education,PT1M32S,92,2d,hd,FALSE,https://i.ytimg.com/vi/Kpg7t4D4GcA/maxresdefault.jpg,1,135,4,0,0,2
23,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,nqG1YI2iTfs,2018-09-23T11:00:09Z,23/9/18 11:00,SQL Sunday Quiz - Week 3,This is SQL Sunday Quiz - Week 2 and the question is all about SQL Data Warehousing. If you have a question you would like to see it featured on the channel please email me at askbeardeddev@gmail.com.,27,Education,PT1M32S,92,2d,hd,FALSE,,1,142,3,0,0,2
24,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,iS_pJN7R4hs,2018-09-16T11:00:08Z,16/9/18 11:00,SQL Sunday Quiz - Week 2,This is SQL Sunday Quiz - Week 2 and the question is all about SQL Server Integration Services - Projects and Packages. If you have a question you would like to see it featured on the channel please email me at askbeardeddev@gmail.com.,27,Education,PT1M35S,95,2d,hd,FALSE,,1,197,4,0,0,2
25,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,6tRgeEKVXNk,2018-09-13T11:00:00Z,13/9/18 11:00,SQL Tutorial - Working with Variables,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev In this SQL Tutorial we take a look at how to work with variables in SQL Server. Understanding variables and how they can be used is an important skill in any developers armoury. Variables open us up to a new world of opportunities when working with data and can be used for looping or controlling conditional logic. In this video we look at a simple query that we are asked to run over and over, we talk about how we can use variables to make the query more dynamic and less prone to errors. The SQL used in this video: DECLARE @StartDate DATE, @EndDate DATE SET @StartDate = '20180210' SET @EndDate = '20180220' SELECT Sales_Customer_Id , SUM(Sales_Amount) AS Spend FROM dbo.Sales WHERE Sales_Date (greater than)= @StartDate AND Sales_Date (less than)= @EndDate GROUP BY Sales_Customer_Id",27,Education,PT10M19S,619,2d,hd,FALSE,https://i.ytimg.com/vi/6tRgeEKVXNk/maxresdefault.jpg,1,2181,37,0,0,3
26,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,rl35fX6wH2o,2018-09-12T11:00:12Z,12/9/18 11:00,SQL Tutorial - Show Totals with GROUP BY using OVER,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev In this SQL Tutorial we look at how we can use OVER to show totals of a query that involves GROUP BY. We start by explaining the issue, when using GROUP BY in a query we cannot show totals as we cannot perform an aggregate function on top of an aggregate function, this will cause SQL Server to display an error. How we can get round this is to call upon our friend Window Functions, by using the OVER clause we can then generate a total as this operates on the SELECT stage. Please see the SQL Code used in this tutorial below: SELECT Sales_Customer_Id , SUM(Sales_Amount) AS Cust_Total , SUM(SUM(Sales_Amount)) OVER(ORDER BY (SELECT NULL)) AS Grand_Total , AVG(SUM(Sales_Amount)) OVER(ORDER BY (SELECT NULL)) AS Average_Cust_Total , CAST((SUM(Sales_Amount) / SUM(SUM(Sales_Amount)) OVER(ORDER BY (SELECT NULL))) * 100 AS DECIMAL(6,2)) AS Pct FROM dbo.Sales GROUP BY Sales_Customer_Id",27,Education,PT7M40S,460,2d,hd,FALSE,https://i.ytimg.com/vi/rl35fX6wH2o/maxresdefault.jpg,1,2233,101,1,0,31
27,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,aCnQDbYSVMA,2018-09-11T11:00:01Z,11/9/18 11:00,QlikView Tutorial - Set vs Let,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev In this QlikView Tutorial you learn how to set the values of variables in the script and the difference between Set and Let. In QlikView we can assign the values of variables in one of two ways; using set which will assign what is passed to the variable or using let which will first evaluate what is passed to the variable and store the result. You will also learn how to check the values of variables whilst executing the script in the debug window and how to output the values of variables in the front end of QlikView in text boxes.",27,Education,PT6M28S,388,2d,hd,FALSE,https://i.ytimg.com/vi/aCnQDbYSVMA/maxresdefault.jpg,1,253,5,0,0,1
28,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,U80JVTd6Wms,2018-09-10T11:00:07Z,10/9/18 11:00,SQL Tutorial - Clustered Indexes OLTP,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev In this video tutorial we talk all about Clustered Indexes in SQL Server. Indexes allow data to be retrieved quickly but we have to respect a proper indexing strategy as too many indexes can cause DML operations to be come slow. Working with indexes is all about finding the balance between read and write operations on the database. Code featured in the video to allow you to follow along: -- Add Table IF OBJECT_ID(N'dbo.Employees', N'U') IS NOT NULL DROP TABLE dbo.Employees; CREATE TABLE dbo.Employees ( EmployeeId INT IDENTITY(1, 1) NOT NULL , EmployeeFirstName VARCHAR(50) NOT NULL , EmployeeLastName VARCHAR(50) NOT NULL , EmployeeDateOfBirth DATE NOT NULL , EmployeePosition VARCHAR(50) NOT NULL , EmployeeStartDate DATE NOT NULL CONSTRAINT DF_EmployeesNew_EmployeeStartDate DEFAULT (GETDATE()) , EmployeeEndDate DATE NULL , EmployeePayrollId INT NOT NULL ); -- Add Data INSERT INTO dbo.Employees (EmployeeFirstName, EmployeeLastName, EmployeeDateOfBirth, EmployeePosition, EmployeeStartDate, EmployeeEndDate, EmployeePayrollId) VALUES ('Tony', 'Smith', '19860415', 'Sales Executive', '20180101', NULL, 123456) , ('Robin', 'Jones', '19860415', 'Sales Manager', '20180101', NULL, 123457) , ('Michelle', 'Parker', '19860415', 'Sales Executive', '20180101', NULL, 123458) , ('Alex', 'Weaver', '19860415', 'Sales Executive', '20180101', NULL, 123459) , ('Paul', 'Attenborough', '19860415', 'Sales Assistant', '20180101', NULL, 123460) -- Retrieve Data SELECT * FROM dbo.Employees WHERE EmployeeId = 3; -- ADD CLUSTERED INDEX TO EXISTING TABLE ALTER TABLE dbo.Employees ADD CONSTRAINT PK_Employee_EmployeeID PRIMARY KEY (EmployeeId); -- DOES THE TABLE HAVE AN INDEX? SELECT name , syspart.index_id FROM sys.tables AS systab INNER JOIN sys.partitions AS syspart ON systab.[object_id] = syspart.[object_id] WHERE systab.name = 'Employees'; -- WHAT TYPE OF INDEX? SELECT name , [type] , type_desc FROM sys.indexes WHERE name = 'PK_Employees_EmployeeId'",27,Education,PT21M5S,1265,2d,hd,FALSE,https://i.ytimg.com/vi/U80JVTd6Wms/maxresdefault.jpg,1,175,7,0,0,1
29,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,4RGfEYaAqdY,2018-09-09T11:00:01Z,9/9/18 11:00,SQL Sunday Quiz - Week 1,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev This is SQL Sunday Quiz - Week 1 and the question is all about Logical Query Processing. If you have a question you would like to see it featured on the channel please email me at askbeardeddev@gmail.com.",27,Education,PT1M14S,74,2d,hd,FALSE,,1,276,5,0,0,5
30,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,qyjxSzVE5eU,2018-09-05T11:36:39Z,5/9/18 11:36,Window Functions - Calculate Running Differences,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. You can now support me on patreon - https://www.patreon.com/beardeddev If you are new to working with window functions check out this video: https://youtu.be/H6OTMoXjNiM In this video I talk about how to calculate a running difference using LAG and Window Functions. Also covered in this video: CTE - Common Table Expressions Aggregate Functions - Average WITH CTE AS ( SELECT Sales_Customer_Id , Sales_Date , Sales_Amount , LAG(Sales_Amount) OVER(PARTITION BY Sales_Customer_Id ORDER BY Sales_Date) AS PrevValue , Sales_Amount - LAG(Sales_Amount) OVER(PARTITION BY Sales_Customer_Id ORDER BY Sales_Date) AS RunningDifference FROM dbo.Sales ) SELECT Sales_Customer_Id , AVG(RunningDifference) AS AverageDifference FROM CTE GROUP BY Sales_Customer_Id ORDER BY AverageDifference DESC; Please feel free to post comments.",27,Education,PT11M44S,704,2d,hd,FALSE,https://i.ytimg.com/vi/qyjxSzVE5eU/maxresdefault.jpg,1,2677,95,1,0,10
31,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,cufa0EgKJPk,2018-08-19T19:46:19Z,19/8/18 19:46,QlikView - Introduction to QlikView,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. In this video, an introduction to QlikView we take a look at the QlikView interface and also discuss major benefits of QlikView such as the in-memory and associative data model. We also talk about what we like within QlikView such as selections in charts, exporting data to excel and reducing data users can see using Section Access as well as what we don't like about QlikView, true boolean values are represented by -1 rather than 1 and that if we have the script open we cannot open other QlikView apps. QlikView is easy to get started with and I show how I was able to load data and create some simple charts all within a short time period. We also discuss different charts available with QlikView and the data sources that can be used. If you are interested in downloading QlikView personal edition for free please go to this link: http://www.qlikview.com/download",27,Education,PT9M44S,584,2d,hd,FALSE,https://i.ytimg.com/vi/cufa0EgKJPk/maxresdefault.jpg,1,440,4,0,0,0
32,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,sGbs-5nxWes,2018-04-17T11:00:05Z,17/4/18 11:00,SQL Tutorial - LIKE,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. In this video I talk about using LIKE in Microsoft SQL Server. If you would like to know how I created the sample set of data using SQL please check out this tutorial: https://youtu.be/ERzAeboeqhY LIKE is used in the WHERE clause and allows us to search for a pattern in a string. LIKE can be extremely slow so it is worth showing caution and I wouldn't recommend using LIKE in any stored procedures. As LIKE is part of the WHERE clause it can be used in INSERT, UPDATE and DELETE statements but this is not something I would advise, it would be much better in an UPDATE statement to use LIKE in a SELECT statement to identify the rows to be affected and then run an UPDATE based on unique identifiers for those rows. If LIKE is used correctly then indexing can still be used within the query execution but it must be a SARG - more on this in future videos and tutorials. % - represents zero, one or multiple characters _ - one character [] - character list Please feel free to post comments.",27,Education,PT13M49S,829,2d,hd,FALSE,https://i.ytimg.com/vi/sGbs-5nxWes/maxresdefault.jpg,1,192,8,0,0,2
33,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,#NAME?,2018-04-13T11:00:01Z,13/4/18 11:00,SSIS Tutorial - Parameterising Connection Managers,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. If you are not familiar with how to create Connection Managers in SQL Server Integration Services please check out the video here: https://youtu.be/5SNHNlBmbi8 Connection Managers exist at both the Project and Package Scope In this SSIS Tutorial, I show examples of how to parameterise both Project and Package Connection Managers. The examples I cover are parameterising an OLE DB Connection and a flat file Connection. Parameterising Connection Strings allow to us to easily make changes because of a server move or new file location. We know only have to make the changes in one place allowing us more control. SQL Server Data Tools is extremely helpful in helping us to parameterise and most of the work is done for us. I also cover examples on once the project is deployed to the server how we can change the connection strings in the SSIDB Catalog. Parameters can only be changed before package execution not during, if this is the case the value needs to be passed to a variable. Please feel free to post comments.",27,Education,PT10M53S,653,2d,hd,FALSE,https://i.ytimg.com/vi/-YBvfaygWO8/maxresdefault.jpg,1,12287,112,4,0,7
34,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,ZANtieWGDWM,2018-04-10T11:00:01Z,10/4/18 11:00,SQL Tutorial - CASE Statements,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. In this video I talk about how to use CASE statements in SQL Server. T-SQL Querying https://www.amazon.com/gp/product/0735685045/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735685045&linkCode=as2&tag=beardeddev05-20&linkId=e93b0f7483b1fa06aca5a3aec4f7764b T-SQL Fundamentals https://www.amazon.com/gp/product/150930200X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=150930200X&linkCode=as2&tag=beardeddev05-20&linkId=70aa2ffa3e84cab66cb964ca1e9cee62 Microsoft SQL Server 2012 High-Performance T-SQL Using Window Functions https://www.amazon.com/gp/product/0735658366/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735658366&linkCode=as2&tag=beardeddev05-20&linkId=b88746aea666c9f98da147e70b4491ca CASE Statements were introduced to SQL Server in 2008. They are used to evaluate conditions and return a result based on those conditions. CASE Statements can be used in SELECT, UPDATE, DELETE, WHERE, HAVING. In this CASE Tutorial we look at a common use of CASE statements within SELECT and also the benefit and common downfalls when writing CASE queries. CASE Statement Syntax: CASE WHEN [condition] THEN [result] END SQL Queries in this video: SELECT CustomerId , FirstName , MiddleName , LastName , CASE WHEN CustomerId = 5995 THEN 'Unknown' WHEN Gender = 'M' THEN 'Male' WHEN Gender = 'F' THEN 'Female' ELSE 'Unknown' END AS Gender , DOB FROM dbo.CustomersSample Please feel free to post comments.",27,Education,PT10M4S,604,2d,hd,FALSE,https://i.ytimg.com/vi/ZANtieWGDWM/maxresdefault.jpg,1,18384,176,2,0,21
35,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,ERzAeboeqhY,2018-04-06T11:00:01Z,6/4/18 11:00,SQL Tutorial - Creating a sample of data,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. In this video I talk about how to create a sample set of data to work in Microsoft SQL Server. Creating a sample set of data can be extremely beneficial for development or testing, there is no need to wait minutes or hours for queries to run. The techniques explored in this SQL Server Tutorial are: NTILE - if you have are new to working with NTILE check out this video: https://youtu.be/xL7BtCT7ix4 Nested CTEs - if you are new to working with CTEs check out this video: https://youtu.be/3QuYuU9OJfA Or for a full tutorial on CTEs check out this playlist: Aggregate Functions - if you are new to working with Aggregate Functions and the GROUP BY clause check out this video: https://youtu.be/TYD6gWP3jBg SELECT * INTO SQL Queries in the video: WITH Number AS ( SELECT CustomerId , NTILE(1000) OVER(ORDER BY CustomerId) AS N FROM dbo.Customers ) , TopCustomer AS ( SELECT MAX(CustomerId) AS CustId FROM Number GROUP BY N ) SELECT C2.* INTO dbo.CustomersSample FROM TopCustomer AS C1 INNER JOIN dbo.Customers AS C2 ON C1.CustId = C2.CustomerId SELECT * FROM dbo.CustomersSample Please feel free to post comments.",27,Education,PT10M48S,648,2d,hd,FALSE,https://i.ytimg.com/vi/ERzAeboeqhY/maxresdefault.jpg,1,2085,66,1,0,7
36,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,ozy31aJpW-o,2018-04-02T11:00:47Z,2/4/18 11:00,SQL Tutorial - PIVOT,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. In this video I talk about using PIVOT in Microsoft SQL Server. T-SQL Querying https://www.amazon.com/gp/product/0735685045/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735685045&linkCode=as2&tag=beardeddev05-20&linkId=e93b0f7483b1fa06aca5a3aec4f7764b T-SQL Fundamentals https://www.amazon.com/gp/product/150930200X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=150930200X&linkCode=as2&tag=beardeddev05-20&linkId=70aa2ffa3e84cab66cb964ca1e9cee62 Microsoft SQL Server 2012 High-Performance T-SQL Using Window Functions https://www.amazon.com/gp/product/0735658366/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735658366&linkCode=as2&tag=beardeddev05-20&linkId=b88746aea666c9f98da147e70b4491ca Using PIVOT allows us rotate data from rows to columns making the data more readable. PIVOT is ideal for reporting in SQL Server and can be used as a starting point to visualise trends. In this PIVOT tutorial I demonstrate the difference between how data is presented compared to GROUP BY. PIVOT Syntax SELECT [columns] FROM ( [source_query] ) PIVOT ( [aggr_function]([aggr_column] FOR [spreading_column] IN ([spreading_elements])) SQL Queries in the video: Results using GROUP BY statement SELECT Sales_Customer_Id , DATENAME(MONTH, Sales_Date) AS [Month] , Sales_Amount FROM dbo.Sales GROUP BY Sales_Customer_Id , DATENAME(MONTH, Sales_Date) Results using PIVOT statement SELECT Sales_Customer_Id , [January] , [February] , [March] FROM ( SELECT Sales_Customer_Id , DATENAME(MONTH, Sales_Date) AS [Month] , Sales_Amount FROM dbo.Sales ) AS Src PIVOT ( SUM(Sales_Amount) FOR [Month] IN ([January], [February], [March]) ) AS Pvt Alternative PIVOT statement SELECT [Month] , [1] , [2] , [3] , [4] , [5] , [6] , [7] , [8] FROM ( SELECT Sales_Customer_Id , DATENAME(MONTH, Sales_Date) AS [Month] , Sales_Amount FROM dbo.Sales ) AS Src PIVOT ( SUM(Sales_Amount) FOR Sales_Customer_Id IN ([1], [2], [3], [4], [5], [6], [7], [8]) ) AS Pvt Please feel free to post comments.",27,Education,PT13M11S,791,2d,hd,FALSE,https://i.ytimg.com/vi/ozy31aJpW-o/maxresdefault.jpg,1,27817,370,7,0,44
37,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,wOCCxRAQ914,2018-03-12T20:51:02Z,12/3/18 20:51,SQL Tutorial - Window Functions - Lag and Lead,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. In this video I talk about using Lag and Lead in Windows Functions. T-SQL Querying https://www.amazon.com/gp/product/0735685045/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735685045&linkCode=as2&tag=beardeddev05-20&linkId=e93b0f7483b1fa06aca5a3aec4f7764b T-SQL Fundamentals https://www.amazon.com/gp/product/150930200X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=150930200X&linkCode=as2&tag=beardeddev05-20&linkId=70aa2ffa3e84cab66cb964ca1e9cee62 Microsoft SQL Server 2012 High-Performance T-SQL Using Window Functions https://www.amazon.com/gp/product/0735658366/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735658366&linkCode=as2&tag=beardeddev05-20&linkId=b88746aea666c9f98da147e70b4491ca This video covers the requirements to pass the exam: If you would like to follow along with the tutorial please run the SQL below: IF OBJECT_ID(N'dbo.Sales', N'U') IS NOT NULL DROP TABLE dbo.Sales; GO CREATE TABLE dbo.Sales ( Sales_Id INT NOT NULL IDENTITY(1, 1) CONSTRAINT PK_Sales_Sales_Id PRIMARY KEY , Sales_Customer_Id INT NOT NULL , Sales_Date DATETIME2 NOT NULL , Sales_Amount DECIMAL (16, 2) NOT NULL ) INSERT INTO dbo.Sales (Sales_Customer_Id, Sales_Date, Sales_Amount) VALUES (1, '20180102', 54.99) , (1, '20180103', 72.99) , (1, '20180104', 34.99) , (1, '20180115', 29.99) , (1, '20180121', 67.00) Lag and Lead are useful for performing trend analysis, in the example I show how we can display a customer spending trend. Lag will show the previous value. Lead will show the next value. Lag and Lead accept multiple parameters as demonstrated in the video: LAG([Column], [Offset], [Value if NULL]) The example of LAG and LEAD in the video can be shown by executing the below SQL query: SELECT Sales_Customer_Id , Sales_Date , LAG(Sales_Amount, 2, 0) OVER(PARTITION BY Sales_Customer_Id ORDER BY Sales_Date) AS PrevValue , Sales_Amount , LEAD(Sales_Amount, 2, 0) OVER(PARTITION BY Sales_Customer_Id ORDER BY Sales_Date) AS NextValue FROM dbo.Sales Please feel free to post comments.",27,Education,PT8M10S,490,2d,hd,FALSE,https://i.ytimg.com/vi/wOCCxRAQ914/maxresdefault.jpg,1,8839,330,3,0,42
38,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,Nb9ANmsoF1w,2018-02-18T22:35:36Z,18/2/18 22:35,How I Passed 70-767 Certification - Implementing a Data Warehouse using SQL,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. In this video I talk about my experience with Microsoft Certification, 70-767: Implementing a Data Warehouse using SQL. This video covers the requirements to pass the exam: Design, implement and maintain a data warehouse Extract, transform and load data (SQL Server Integration Services) Build data quality solutions (Data Quality Services and Master Data Services) For a full list of the exam objectives please check out this link: https://www.microsoft.com/en-us/learning/exam-70-767.aspx I also talk about useful preparation resources: MSSQL Tips: https://www.mssqltips.com/sqlservertip/4741/exam-material-for-the-microsoft-70767--implementing-a-sql-data-warehouse/ - this covers all the exam topics and provides useful links to articles, videos, recommended books and courses available And I provide my own tips on taking the 70-767 certification but these can be applied to any microsoft certification. What certifications are you taking this year? Let me know in the comments below.",27,Education,PT10M59S,659,2d,hd,FALSE,https://i.ytimg.com/vi/Nb9ANmsoF1w/maxresdefault.jpg,1,8068,119,3,0,31
39,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,DJ054rHGhRw,2017-12-10T16:44:54Z,10/12/17 16:44,SQL Tutorial - PRIMARY KEY CONSTRAINTS,"Another fantastic SQL Tutorial brought to you by BeardedDev. In this video we look at what Primary Keys are and how to add Primary Keys within Create Table statements or Alter Table statements: https://youtu.be/DJ054rHGhRw If you are new to primary keys this tutorial will help you know how to add primary keys by using object explorer and tsql. If you want to know what a composite primary key is watch this video: https://youtu.be/DJ054rHGhRw If you are interested in learning how to add constraints to tables in SQL Server check out this link: https://youtu.be/bfBnZKf2EGg For more great instructional videos on data development or business intelligence click here to see all the videos available on my channel: https://www.youtube.com/channel/UCWczzX6DyFV2KOYP_-CEZUA/videos SQL: IF OBJECT_ID(N'dbo.Customers', N'U') IS NOT NULL DROP TABLE dbo.Customers; GO CREATE TABLE dbo.Customers ( CustomerId INT IDENTITY(1, 1) NOT NULL , FirstName NVARCHAR(50) NOT NULL , MiddleName NVARCHAR(50) NOT NULL , LastName NVARCHAR(50) NOT NULL , DOB DATE NULL , Email NVARCHAR(100) NULL , HomeTel VARCHAR(20) NULL , MobileTel VARCHAR(20) NULL , [1stLineAddress] VARCHAR(100) NULL , City INT NULL , County INT NULL , Country INT NULL ) IF OBJECT_ID(N'dbo.Customers', N'U') IS NOT NULL DROP TABLE dbo.Customers; GO CREATE TABLE dbo.Customers ( CustomerId INT IDENTITY(1, 1) NOT NULL CONSTRAINT PK_Customers_CustomerID PRIMARY KEY (CustomerId) , FirstName NVARCHAR(50) NOT NULL , MiddleName NVARCHAR(50) NOT NULL , LastName NVARCHAR(50) NOT NULL , DOB DATE NULL , Email NVARCHAR(100) NULL , HomeTel VARCHAR(20) NULL , MobileTel VARCHAR(20) NULL , [1stLineAddress] VARCHAR(100) NULL , City INT NULL , County INT NULL , Country INT NULL ) ALTER TABLE dbo.Customers ADD CONSTRAINT PK_Customers_CustomerId PRIMARY KEY (CustomerId) SELECT * FROM sys.key_constraints Don't forget to subscribe to the channel and let me know your thoughts in the comments section below.",27,Education,PT8M57S,537,2d,hd,FALSE,https://i.ytimg.com/vi/DJ054rHGhRw/maxresdefault.jpg,1,839,8,0,0,4
40,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,KDoaM76UA0g,2017-12-09T19:46:10Z,9/12/17 19:46,SQL Tutorial - How to rename tables or columns,"Another fantastic SQL Tutorial brought to you by BeardedDev. In this video tutorial we learn how to rename columns and tables in SQL: https://youtu.be/KDoaM76UA0g If you want to check out my video tutorial on how to create tables, click on the link: SQL Tutorial - Create Table with Constraints - https://youtu.be/bfBnZKf2EGg We are all human and that means sometimes we make mistakes when naming objects such as tables and columns in our database. To rename columns or tables we can use the system stored procedure sp_rename. In this video we go through examples using sp_rename to rename tables, rename columns and there is even a bonus query on how to rename an index. If you are new to the channel and are interested in learning Data Development and Business Intelligence, hit the subscribe button or check out all of my videos using this link: https://www.youtube.com/channel/UCWczzX6DyFV2KOYP_-CEZUA/videos SQL Syntax: CREATE TABLE dbo.CstomerDetals ( Cust_Id INT IDENTITY(1, 1) NOT NULL CONSTRAINT PK_Customr_Cust_Id PRIMARY KEY (Cust_Id) , Title CHAR(5) NULL , First_Name VARCHAR(50) NOT NULL , Middle_Name VARCHAR(50) NOT NULL , Last_Name VARCHAR(50) NOT NULL , DBO DATE NOT NULL ) EXEC sp_rename 'dbo.CstomerDetals', 'CustomerDetails' EXEC sp_rename 'dbo.CustomerDetails.DBO', 'DOB', 'COLUMN' EXEC sp_rename 'dbo.CustomerDetails.PK_Customr_Cust_Id', 'PK_Customer_Cust_Id', 'INDEX' Before renaming any objects it is important to identify any objects such as stored procedures that reference the object you are renaming as these will show an error that the name is not recognised when run.",27,Education,PT9M27S,567,2d,hd,FALSE,https://i.ytimg.com/vi/KDoaM76UA0g/maxresdefault.jpg,1,1666,15,2,0,3
41,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,zJidbjOQlJM,2017-12-09T18:10:56Z,9/12/17 18:10,SQL Tutorial - TRUNCATE TABLE,"Another fantastic SQL Tutorial brought to you by BeardedDev. SQL Tutorial - TRUNCATE TABLE - https://youtu.be/zJidbjOQlJM If you want to to see a tutorial on how to use the DELETE statement in SQL Server, check out this video: https://youtu.be/VFNRtOQcyl0 If you want to see a tutorial on how to use the INSERT statement in SQL Server, check out this video: https://youtu.be/ar8scs8E5YI You can see all videos on my channel focusing on Business Intelligence and Data Development by clicking the below link: https://www.youtube.com/channel/UCWczzX6DyFV2KOYP_-CEZUA/videos This tutorial will give you an overview of the TRUNCATE statement as well as discussing the differences compared to DELETE and show examples. TRUNCATE TABLE removes all data from a table but keeps the table definition, DROP TABLE would completely remove the table. TRUNCATE TABLE resets the current identity value and that is shown in an example in this video, we use IDENT_CURRENT statement to identify the current value then run the statement a second time after the TRUNCATE TABLE to see the difference. TRUNCATE TABLE is also minimally logged, meaning only data pages that are removed are logged and we are unable to ROLLBACK. DELETE will log each row and can be rolled back. We also show an example of the differences in performance between TRUNCATE and DELETE, when I run TRUNCATE it executes almost instantly but DELETE takes 46 seconds. Don't forget to subscribe and hit the notification button to be made aware of when new videos are uploaded. SQL Statements used in the video: SELECT IDENT_CURRENT('dbo.CustomersSTG2') AS Current_Identity TRUNCATE TABLE dbo.CustomersSTG2 INSERT INTO dbo.CustomersSTG2 (FullName, Age) SELECT FullName , Age FROM dbo.CustomersSTG DELETE FROM dbo.CustomersSTG2 -- TRUNCATE SYNTAX TRUNCATE TABLE [schema].[tablename]",27,Education,PT8M48S,528,2d,hd,FALSE,https://i.ytimg.com/vi/zJidbjOQlJM/maxresdefault.jpg,1,689,10,0,0,0
42,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,6S7z2wabJxk,2017-11-17T05:00:01Z,17/11/17 5:00,"SQL Tutorial - Window Functions - Calculate Running Totals, Averages","Another fantastic SQL Tutorial brought to you by BeardedDev. If you are new to working with Window Functions check out this video: https://youtu.be/H6OTMoXjNiM T-SQL Querying https://www.amazon.com/gp/product/0735685045/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735685045&linkCode=as2&tag=beardeddev05-20&linkId=e93b0f7483b1fa06aca5a3aec4f7764b T-SQL Fundamentals https://www.amazon.com/gp/product/150930200X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=150930200X&linkCode=as2&tag=beardeddev05-20&linkId=70aa2ffa3e84cab66cb964ca1e9cee62 Microsoft SQL Server 2012 High-Performance T-SQL Using Window Functions https://www.amazon.com/gp/product/0735658366/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735658366&linkCode=as2&tag=beardeddev05-20&linkId=b88746aea666c9f98da147e70b4491ca In this video we learn how to use Window Functions to calculate running totals and running averages. This video teaches about Window Frames: Rows Range Preceding Current Row Following Window Frames are a filtered portion of a partition. Window Functions were first introduced in SQL Server 2005 but further enhancements and support was added in SQL Server 2012. Window Functions can only be included within SELECT or ORDER BY clauses. Functions Available: Aggregate - COUNT, SUM, MIN, MAX, AVG Ranking - ROW_NUMBER, RANK, DENSE_RANK, NTILE Offset - FIRST_VALUE, LAST_VALUE, LEAD, LAG Statistical - PERCENT_RANK, CUME_DIST, PERCENTILE_CONT, PERCENTILE_DIST Windows Functions also have FRAMES ROWS RANGE Window Functions are a powerful tool within SQL Server and I am excited to bring more videos and tutorials working with Window Functions in the future. SQL: SELECT Sales_Id , Sales_Date , Sales_Total , SUM(Sales_Total) OVER(ORDER BY Sales_Date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS [Running Total] FROM dbo.Sales_2 WHERE Sales_Cust_Id = 3 ORDER BY Sales_Date SELECT Sales_Id , Sales_Date , Sales_Total , SUM(Sales_Total) OVER(ORDER BY Sales_Date ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS [Running Total] FROM dbo.Sales_2 WHERE Sales_Cust_Id = 3 ORDER BY Sales_Date SELECT Sales_Id , Sales_Date , Sales_Total , SUM(Sales_Total) OVER(ORDER BY Sales_Date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS [Running Total] FROM dbo.Sales_2 WHERE Sales_Cust_Id = 3 ORDER BY Sales_Date SELECT Sales_Id , Sales_Date , Sales_Total , SUM(Sales_Total) OVER(ORDER BY Sales_Date ROWS UNBOUNDED PRECEDING) AS [Running Total] FROM dbo.Sales_2 WHERE Sales_Cust_Id = 3 ORDER BY Sales_Date SELECT Sales_Id , Sales_Date , Sales_Total , SUM(Sales_Total) OVER(ORDER BY Sales_Date ROWS UNBOUNDED PRECEDING) AS [Running Total] , CAST(AVG(Sales_Total) OVER(ORDER BY Sales_Date ROWS UNBOUNDED PRECEDING) AS DECIMAL(8, 2)) AS [Running Average] FROM dbo.Sales_2 WHERE Sales_Cust_Id = 3 ORDER BY Sales_Date",27,Education,PT13M6S,786,2d,hd,FALSE,https://i.ytimg.com/vi/6S7z2wabJxk/maxresdefault.jpg,1,14193,369,2,0,23
43,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,8cThSPmAwXE,2017-11-14T05:00:00Z,14/11/17 5:00,SQL Interview Questions - What is the difference between Rank and Dense Rank,Another fantastic tutorial brought to you by BeardedDev,27,Education,PT9M32S,572,2d,hd,FALSE,https://i.ytimg.com/vi/8cThSPmAwXE/maxresdefault.jpg,1,2293,40,0,0,1
44,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,PfMznx4sS8U,2017-11-10T05:00:01Z,10/11/17 5:00,SQL Tutorial - Window Functions - Ranking with Group By,"Another fantastic SQL Tutorial brought to you by BeardedDev. T-SQL Querying https://www.amazon.com/gp/product/0735685045/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735685045&linkCode=as2&tag=beardeddev05-20&linkId=e93b0f7483b1fa06aca5a3aec4f7764b T-SQL Fundamentals https://www.amazon.com/gp/product/150930200X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=150930200X&linkCode=as2&tag=beardeddev05-20&linkId=70aa2ffa3e84cab66cb964ca1e9cee62 Microsoft SQL Server 2012 High-Performance T-SQL Using Window Functions https://www.amazon.com/gp/product/0735658366/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735658366&linkCode=as2&tag=beardeddev05-20&linkId=b88746aea666c9f98da147e70b4491ca If you are new to working with Windows Functions check out this video: https://youtu.be/H6OTMoXjNiM If you want to find out more about the Group By clause and working with aggregate functions check out this video: https://youtu.be/TYD6gWP3jBg If you are interested in finding out more about ranking functions available in SQL Server check out this video: https://youtu.be/xL7BtCT7ix4 In this tutorial we explore ranking functions as part of Window Functions using the Group By clause within SQL Server. In this example we go through how to rank customers based on the sum of the orders they have placed with us. The window function example also covers the difference between using Rank and Dense_Rank. SQL SELECT Sales_Cust_Id , SUM(Sales_Total) AS Total FROM dbo.Sales_2 GROUP BY Sales_Cust_Id ORDER BY Total DESC SELECT Sales_Cust_Id , SUM(Sales_Total) AS Total , RANK() OVER(ORDER BY SUM(Sales_Total) DESC) AS rnk , DENSE_RANK() OVER(ORDER BY SUM(Sales_Total) DESC) AS dnse FROM dbo.Sales_2 GROUP BY Sales_Cust_Id ORDER BY rnk",27,Education,PT7M14S,434,2d,hd,FALSE,https://i.ytimg.com/vi/PfMznx4sS8U/maxresdefault.jpg,1,5613,159,1,0,8
45,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,xL7BtCT7ix4,2017-11-08T19:56:43Z,8/11/17 19:56,SQL Tutorial - Window Functions - Ranking,"Another fantastic SQL Tutorial brought to you by BeardedDev. If you are new to working with Window Functions check out this video: https://youtu.be/H6OTMoXjNiM T-SQL Querying https://www.amazon.com/gp/product/0735685045/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735685045&linkCode=as2&tag=beardeddev05-20&linkId=e93b0f7483b1fa06aca5a3aec4f7764b T-SQL Fundamentals https://www.amazon.com/gp/product/150930200X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=150930200X&linkCode=as2&tag=beardeddev05-20&linkId=70aa2ffa3e84cab66cb964ca1e9cee62 Microsoft SQL Server 2012 High-Performance T-SQL Using Window Functions https://www.amazon.com/gp/product/0735658366/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735658366&linkCode=as2&tag=beardeddev05-20&linkId=b88746aea666c9f98da147e70b4491ca In this video we explore ranking functions available as part of Window Functions: ROW_NUMBER() RANK() DENSE_RANK() NTILE() This tutorial shows an example of when to use each ranking function and the differences between them. Window Functions were first introduced in SQL Server 2005 but further enhancements and support was added in SQL Server 2012. We look at the OVER clause and PARTITION BY. Window Functions can only be included within SELECT or ORDER BY clauses. Functions Available: Aggregate - COUNT, SUM, MIN, MAX, AVG Ranking - ROW_NUMBER, RANK, DENSE_RANK, NTILE Offset - FIRST_VALUE, LAST_VALUE, LEAD, LAG Statistical - PERCENT_RANK, CUME_DIST, PERCENTILE_CONT, PERCENTILE_DIST Windows Functions also have FRAMES ROWS RANGE Window Functions are a powerful tool within SQL Server and I am excited to bring more videos and tutorials working with Window Functions in the future. ROW_NUMBER - unique incrementing integers RANK - same rank for same values DENSE_RANK - same rank for same values NTILE - assigns tile numbers based on number of tiles requested SQL: SELECT Sales_Id , Sales_Total , ROW_NUMBER() OVER(ORDER BY Sales_Total DESC) AS rownum , RANK() OVER(ORDER BY Sales_Total DESC) AS rnk , DENSE_RANK() OVER(ORDER BY Sales_Total DESC) AS dense , NTILE(3) OVER(ORDER BY Sales_Total DESC) AS ntle FROM dbo.Sales_2 SELECT Sales_Id , NTILE(10) OVER(ORDER BY Sales_Total DESC) AS ntle FROM dbo.Sales_2",27,Education,PT17M32S,1052,2d,hd,FALSE,https://i.ytimg.com/vi/xL7BtCT7ix4/maxresdefault.jpg,1,11026,339,0,0,20
46,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,qA7FDLmsgCU,2017-10-24T04:00:02Z,24/10/17 4:00,SSIS Tutorial - Lookup Transformation,"Another SSIS Tutorial brought to you by BeardedDev. https://youtu.be/qA7FDLmsgCU In this video we take a look at the lookup transformation in Integration Services. Lookup Transformations are used to join data sources and add columns to the data pipe in an SSIS package. The tutorial demonstrates how to use Lookup Transformations within your SSIS package and discusses the options available for using the Lookup Transformation. When using the Lookup Transformations we need to understand what the different cache modes are and when to use each one. This SSIS Tutorial will teach you exactly that. Full Cache mode will load all data in to the cache then perform lookups against the cache. Partial Cache mode will lookup to source and then load that row in to the cache, if the next row is not available in the cache then this will be loaded from source in to the cache and so on - this will involve multiple hits to the data source. No Cache mode - will not load any data in to cache but latest row will always be available Watch this excellent SSIS Tutorial on Lookup Transformation with an example and let me know what you guys think in the comments.",27,Education,PT16M4S,964,2d,hd,FALSE,https://i.ytimg.com/vi/qA7FDLmsgCU/maxresdefault.jpg,1,7628,87,5,0,3
47,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,X8rze8rhyK4,2017-10-20T04:00:01Z,20/10/17 4:00,SSIS Quick Tips - Data Viewers,Another SSIS Tutorial brought to you by BeardedDev. This is part of a new video series called SSIS Quick Tips in which I go through quick fire examples of how to make your Integration Services packages more efficient. In this short video we have a look at Data Viewers within Integration Services and how we can use them to debug our packages and get a view of our data that is flowing through the pipeline.,27,Education,PT4M5S,245,2d,hd,FALSE,https://i.ytimg.com/vi/X8rze8rhyK4/maxresdefault.jpg,1,272,9,0,0,0
48,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,1Rp0rRegEYs,2017-10-17T04:00:01Z,17/10/17 4:00,SSIS Tutorial - Derived Column Transformation - Handling NULLs,"Another SSIS Tutorial brought to you by BeardedDev. In this video we take a look at the Derived Column Transformation, probably one the most used Transformation tasks and one of the easiest to learn, in this task we go through replacing NULLs using SSIS expressions. This SSIS Tutorial will teach you how to get started designing a simple Integration Services package and how to get started with the Derived Column Transformation, you will understand how to replace NULLs within your SSIS package using either conditional logic through an expression or the new REPLACENULL function.",27,Education,PT11M29S,689,2d,hd,FALSE,https://i.ytimg.com/vi/1Rp0rRegEYs/maxresdefault.jpg,1,2570,29,0,0,0
49,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,X7Oyx3HFbLg,2017-10-14T11:02:45Z,14/10/17 11:02,SSIS Tutorial - Derived Column Transformation,"Another SSIS Tutorial brought to you by BeardedDev. In this video we take a look at the Derived Column Transformation, probably one the most used Transformation tasks and one of the easiest to learn, in this task we go through replacing column values using SSIS expressions. This SSIS Tutorial will teach you how to get started designing a simple Integration Services package and how to get started with the Derived Column Transformation, you will understand how to use expressions to change column values based on conditional logic or using built-in functions with expressions.",27,Education,PT10M32S,632,2d,hd,FALSE,https://i.ytimg.com/vi/X7Oyx3HFbLg/maxresdefault.jpg,1,3311,54,3,0,2
50,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,tQascgVTTEw,2017-10-07T13:29:23Z,7/10/17 13:29,SSIS Tutorial - Script Task Vs Script Component,"Another SSIS Tutorial brought to you by BeardedDev. In this video we take a look at the Script Task and Script Component, we know that Integration Services is a great ETL Tool but sometimes we have to work outside the scope of SSIS and thanks to the .Net Framework the Script Task and Script Component extend the capabilities of Integration Services. This tutorial takes a look at the differences between the Script Task and Script Component and when to use them. The Script Task is part of the control flow and the Script Component is part of the data flow and must be set as a source, transformation or destination in SSIS. We are able to write code in Visual C# or Visual Basic and refer to or set variables within the script.",27,Education,PT10M4S,604,2d,hd,FALSE,https://i.ytimg.com/vi/tQascgVTTEw/maxresdefault.jpg,1,3698,45,1,0,2
51,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,7uO_VgYEzz4,2017-08-21T20:51:06Z,21/8/17 20:51,SQL Tutorial - IDENTITY INSERT,"Another fantastic SQL Tutorial brought you by BeardedDev. Tutorials on SQL Querying, SQL Development, Database Administration, Data Analysis and Business Intelligence. Subscribe to the channel for more fantastic tutorials. This video contains everything you need to know about IDENTITY_INSERT in SQL Server with working examples. IDENTITY_INSERT allows us to explicitly INSERT values in to a column with an IDENTITY property. Find out all columns that have an identity property: SELECT * FROM sys.columns WHERE is_identity = 1 Always remember to set IDENTITY_INSERT OFF Syntax: SET IDENTITY_INSERT [table] ON; [INSERT Statement] SET IDENTITY_INSERT [table] OFF; Associated Videos: Create Table with Constraints - https://youtu.be/FsVpkamX--Q Recently Uploaded Videos: SQL Tutorial - COALESCE, ISNULL - https://youtu.be/Cn-r775hcJE SQL Tutorial - Create Table with Constraints - https://youtu.be/bfBnZKf2EGg SSIS Tutorial - Import and Export Wizard - https://youtu.be/-ZAbo8ZOsmY",27,Education,PT12M3S,723,2d,hd,FALSE,https://i.ytimg.com/vi/7uO_VgYEzz4/maxresdefault.jpg,1,2967,32,2,0,7
52,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,V-DQ9e1cy8I,2017-08-15T19:27:58Z,15/8/17 19:27,SQL Tutorial - CHECK Constraints,"Another fantastic SQL Tutorial brought you by BeardedDev. Tutorials on SQL Querying, SQL Development, Database Administration, Data Analysis and Business Intelligence. Subscribe to the channel for more fantastic tutorials. This video contains everything you need to know about CHECK Constraints in SQL Server with working examples. CHECK Constraints allow us to enforce limits on the data that can be entered in to our tables, in this tutorial we look at preventing entering Sales Values that are less than or equal to 0, after all we don't sell anything for nothing. CHECK Constraints only prevent values that evaluate to false from being added and we work through another example of how CHECK Constraints do not prevent NULLs from being added if the Data Definition allows. All Constraints are associated with Tables so if a Table is removed the Constraint is removed too. There is another example of how we can only add CHECK Constraints to existing columns if the data within that column meets the requirements of the Constraint. We also discuss how we can query the System Table, sys.check_constraints to retrieve information about CHECK Constraints within the Database. CHECK Constraint Syntax: CREATE TABLE dbo.Sales ( Sales_Id INT IDENTITY(1, 1) , Sales_Date DATE , Sales_Value DECIMAL(16, 2) [constraint name] CHECK (Sales_Value [greater than] 0) ) ALTER TABLE [table name] ADD CONSTRAINT [constraint name] CHECK (column [less than or greater than or equal to] value) Associated Videos: Create Table with Constraints - https://youtu.be/bfBnZKf2EGg Recently Uploaded Videos: SSIS Tutorial - How to Create Connection Managers - https://youtu.be/5SNHNlBmbi8 Different Roles working with Data - https://youtu.be/lBU1XQ87cLg SQL Tutorial - Window Functions - https://youtu.be/H6OTMoXjNiM",27,Education,PT13M5S,785,2d,hd,FALSE,https://i.ytimg.com/vi/V-DQ9e1cy8I/maxresdefault.jpg,1,973,10,0,0,2
53,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,5SNHNlBmbi8,2017-08-14T19:17:25Z,14/8/17 19:17,SSIS Tutorial - How to Create Connection Managers,"https://youtu.be/5SNHNlBmbi8 Another fantastic SSIS Tutorial brought to you by BeardedDev. In this video we cover how to create Connection Managers in SSIS using SQL Server Data Tools. We look at SQL Connection Managers, Flat File Connection Managers and Excel Connection Managers. The tutorial also covers the difference between Project and Package Connection Manager and how to change a Package Connection to a Project Connection Manager. Are you interested in SQL Development, Database Administration, Data Analysis or Business Intelligence? Then subscribe to the channel and check out my videos. Here are some links to videos I have uploaded recently: https://youtu.be/lBU1XQ87cLg - check this out if you want to know the difference between a SQL Developer and a DBA or if you want to get involved with data but don't know which position you want https://youtu.be/H6OTMoXjNiM - check this out for a great introduction in to the power of Window Functions",27,Education,PT12M32S,752,2d,hd,FALSE,https://i.ytimg.com/vi/5SNHNlBmbi8/maxresdefault.jpg,1,12925,78,7,0,12
54,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,lBU1XQ87cLg,2017-08-13T08:00:03Z,13/8/17 8:00,Different Roles Working With Data,Another fantastic video brought to you by BeardedDev. In this video we take a look at the different roles working with data and what those positions entail. SQL Developer DBA Data Analyst Business Intelligence Developer,27,Education,PT10M31S,631,2d,hd,FALSE,https://i.ytimg.com/vi/lBU1XQ87cLg/maxresdefault.jpg,1,104,11,0,0,2
55,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,H6OTMoXjNiM,2017-08-12T14:25:24Z,12/8/17 14:25,SQL Tutorial - Window Functions,"Another fantastic SQL Tutorial brought to you by BeardedDev. In this video we begin to explore Window Functions and their purpose within SQL Server. T-SQL Querying https://www.amazon.com/gp/product/0735685045/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735685045&linkCode=as2&tag=beardeddev05-20&linkId=e93b0f7483b1fa06aca5a3aec4f7764b T-SQL Fundamentals https://www.amazon.com/gp/product/150930200X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=150930200X&linkCode=as2&tag=beardeddev05-20&linkId=70aa2ffa3e84cab66cb964ca1e9cee62 Microsoft SQL Server 2012 High-Performance T-SQL Using Window Functions https://www.amazon.com/gp/product/0735658366/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735658366&linkCode=as2&tag=beardeddev05-20&linkId=b88746aea666c9f98da147e70b4491ca Window Functions are used for performing data analysis calculations and address an important need compared to the GROUP BY clause that we are able to return the underlying data in the same query. This video shows an example of the differences between the GROUP BY clause and Window Functions. Window Functions were first introduced in SQL Server 2005 but further enhancements and support was added in SQL Server 2012. We look at the OVER clause and PARTITION BY. Window Functions can only be included within SELECT or ORDER BY clauses. Functions Available: Aggregate - COUNT, SUM, MIN, MAX, AVG Offset - FIRST_VALUE, LAST_VALUE, LEAD, LAG Statistical - PERCENT_RANK, CUME_DIST, PERCENTILE_CONT, PERCENTILE_DIST Windows Functions also have FRAMES ROWS RANGE Window Functions are a powerful tool within SQL Server and I am excited to bring more videos and tutorials working with Window Functions in the future. Code: WITH CTE AS ( SELECT Sales_Id , SUM(Line_Total) AS Total FROM Sales_Details GROUP BY Sales_Id ) SELECT * FROM CTE AS A INNER JOIN Sales_Details AS B ON A.Sales_Id = B.Sales_Id SELECT Sales_Id , Sales_Date , Item , Price , Quantity , Line_Total , COUNT(Line_Total) OVER(PARTITION BY Sales_Id) AS Line_Count , SUM(Line_Total) OVER(PARTITION BY Sales_Id) AS Sales_Total , SUM(Line_Total) OVER(PARTITION BY Sales_Date) AS Daily_Total , SUM(Line_Total) OVER() AS Total FROM Sales_Details ORDER BY Sales_Total",27,Education,PT12M41S,761,2d,hd,FALSE,https://i.ytimg.com/vi/H6OTMoXjNiM/maxresdefault.jpg,1,41333,811,23,0,108
56,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,6bzc5MrAn6s,2017-06-11T19:25:15Z,11/6/17 19:25,SQL Tutorial - UNION ALL,"This video will teach you how to use UNION ALL, a Set Operator available within SQL Server. UNION ALL allows users to combine multiple sets in to one result set.",27,Education,PT18M56S,1136,2d,hd,FALSE,https://i.ytimg.com/vi/6bzc5MrAn6s/maxresdefault.jpg,1,428,11,0,0,2
57,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,Onb-KeBSFQE,2017-06-10T12:51:05Z,10/6/17 12:51,SQL Tutorial - Set Operators,"This video is an introduction in to Set Operators in SQL Server, it will cover the different Set Operators available including UNION, UNION ALL, INTERSECT and EXCEPT and will also show how each is processed using VENN Diagrams. The video will also go over the rules for using Set Operators such as having the same amount of columns in each set and how data types must be compatible.",27,Education,PT7M6S,426,2d,hd,FALSE,https://i.ytimg.com/vi/Onb-KeBSFQE/maxresdefault.jpg,1,1952,33,0,0,4
58,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,sBRfBU5jh18,2017-05-29T08:56:59Z,29/5/17 8:56,SQL Tutorial - Logical Query Processing,This video demonstrates the differences between how we write a query in Microsoft SQL Server and how the query is processed by the database engine. It is very important to understand the logical query processing order to understand how write queries correctly and also when analysing queries from a performance perspective. T-SQL Querying https://www.amazon.com/gp/product/0735685045/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735685045&linkCode=as2&tag=beardeddev05-20&linkId=e93b0f7483b1fa06aca5a3aec4f7764b T-SQL Fundamentals https://www.amazon.com/gp/product/150930200X/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=150930200X&linkCode=as2&tag=beardeddev05-20&linkId=70aa2ffa3e84cab66cb964ca1e9cee62 Microsoft SQL Server 2012 High-Performance T-SQL Using Window Functions https://www.amazon.com/gp/product/0735658366/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0735658366&linkCode=as2&tag=beardeddev05-20&linkId=b88746aea666c9f98da147e70b4491ca Logical Query Processing Order: 1. FROM 2. WHERE 3. GROUP BY 4. HAVING 5. SELECT 6. ORDER BY,27,Education,PT10M39S,639,2d,hd,FALSE,https://i.ytimg.com/vi/sBRfBU5jh18/maxresdefault.jpg,1,3901,74,0,0,16
59,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,bfBnZKf2EGg,2017-05-28T12:38:12Z,28/5/17 12:38,SQL Tutorial - Create Table with Constraints,"This video tutorial will show you how to create a table with constraints in Microsoft SQL Server. The video covers, data types of columns, NOT NULL constraints, PRIMARY KEY constraints, FOREIGN KEY constraints, CHECK constraints and DEFAULT constraints. Data types enforce limits to the what can inserted in to tables and constraints further build on this, for example if you wanted to add a column called age, the values will usually range from 0 - 100 so we could choose a data type of TINYINT which allows values of up to 255 but this means if you enter 255 this is still a valid age. We want to control this even further so we can add a CHECK constraint that will only allow values from 0 - 100. Check out the video for how to add this constraint. CREATE TABLE dbo.[Login] ( Username VARCHAR(30) NOT NULL CONSTRAINT PK_Login_Username PRIMARY KEY (Username) , [Password] VARCHAR(30) NOT NULL , LastUpdate DATETIME2 NOT NULL CONSTRAINT DF_Login_LastUpdate DEFAULT (CURRENT_TIMESTAMP) , [Status] CHAR(10) NOT NULL CONSTRAINT CK_Login_Status CHECK ([Status] IN ('Active', 'Inactive')) , CustomerID INT CONSTRAINT FK_Login_CustomerId FOREIGN KEY (CustomerId) REFERENCES Customers (CustomerId) )",27,Education,PT20M35S,1235,2d,hd,FALSE,https://i.ytimg.com/vi/bfBnZKf2EGg/maxresdefault.jpg,1,3218,31,2,0,7
60,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,LnIY12v3EAc,2017-05-25T21:38:36Z,25/5/17 21:38,SQL Interview Questions - FizzBuzz Challenge,"This video will teach you different ways to answer the Fizz Buzz Challenge within Microsoft SQL Server. The FizzBuzz Challenge is a common Interview Question and there are different criteria that can be set so we have a look at different ways including; PRINT with Loop, TABLE VARIABLE with Loop and a Recursive CTE. SQL Code: -- print with loop and if statement DECLARE @N INT = 1 DECLARE @Result VARCHAR(10) WHILE @N [less than]= 30000 BEGIN SET @Result = '' IF @N % 3 = 0 SET @Result = 'Fizz' IF @N % 5 = 0 SET @Result = @Result + 'Buzz' IF @Result = '' SET @Result = @N PRINT @Result SET @N = @N + 1 END -- table variable with loop and case statement DECLARE @Results TABLE (N INT, Result NVARCHAR(10)) DECLARE @N INT SET @N = 1 WHILE @N [less than]= 30000 BEGIN INSERT INTO @Results (N) SELECT @N SET @N = @N + 1 END SELECT CASE WHEN (N % 3 = 0) and (N % 5 = 0) THEN 'FizzBuzz' WHEN (N % 3 = 0) THEN 'Fizz' WHEN (N % 5 = 0) THEN 'Buzz' ELSE CONVERT(VARCHAR(8), N) END AS Result FROM @Results -- recursive CTE WITH CTE (N) AS ( SELECT 1 UNION ALL SELECT N + 1 FROM CTE WHERE N [less than] 30000 ) SELECT CASE WHEN N % 3 = 0 AND N % 5 = 0 THEN 'FizzBuzz' WHEN N % 3 = 0 THEN 'Fizz' WHEN N % 5 = 0 THEN 'Buzz' ELSE CAST(N AS VARCHAR(10)) END AS Result FROM CTE OPTION (MAXRECURSION 30000)",27,Education,PT16M24S,984,2d,hd,FALSE,https://i.ytimg.com/vi/LnIY12v3EAc/maxresdefault.jpg,1,776,11,0,0,6
61,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,W1SLFIe1ldE,2017-05-24T20:50:02Z,24/5/17 20:50,SQL Tutorial - Scalar Functions,"This video will teach you how to create scalar functions in SQL Server, scalar functions only return a single value and are user-defined functions. In this video you learn how to create scalar functions and how to use them within SQL. CREATE FUNCTION dbo.Multiply ( @n INT , @m INT ) RETURNS INT AS BEGIN DECLARE @Result INT SELECT @Result = @n * @m RETURN @Result END SELECT dbo.Multiply(2, 3) IF OBJECT_ID(N'fn_FullName', N'FN') IS NOT NULL DROP FUNCTION fn_FullName; GO CREATE FUNCTION fn_FullName ( @CustomerId INT ) RETURNS VARCHAR(110) AS BEGIN DECLARE @FullName VARCHAR(110) SET @FullName = (SELECT REPLACE(C_First_Name + ' ' + ISNULL(C_Middle_Name, '') + ' ' + C_Last_Name, ' ', ' ') FROM dbo.Customers WHERE C_Id = @CustomerId) RETURN @FullName END SELECT fn_FullName(C_Id) FROM dbo.Customers IF OBJECT_ID(N'fn_TotalSpend', N'FN') IS NOT NULL DROP FUNCTION fn_TotalSpend; GO CREATE FUNCTION dbo.fn_TotalSpend ( @C_Id INT ) RETURNS DECIMAL(16, 2) AS BEGIN DECLARE @TotalSpend DECIMAL(16, 2) SELECT @TotalSpend = SUM(O_Total) FROM dbo.Customers AS A INNER JOIN Orders AS B ON A.C_Id = B.O_C_Id INNER JOIN Order_Details AS C ON B.O_Id = C.OD_O_Id WHERE C_Id = @C_Id GROUP BY C_Id RETURN @TotalSpend END SELECT C_First_Name, C_Last_Name, dbo.fn_TotalSpend(C_Id) AS TotalSpend FROM dbo.Customers WHERE dbo.fn_TotalSpend(C_Id) IS NOT NULL",27,Education,PT22M36S,1356,2d,hd,FALSE,,1,1950,18,0,0,2
62,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,XsQgAJsGaxE,2017-05-23T18:23:40Z,23/5/17 18:23,SSIS Tutorial - Data Conversion,"This video will teach you how to create a package including a data conversion task within SQL Server Integration Services, SSIS is an ETL tool that allows you to efficiently extract, transform and load data. In this tutorial we look at how to extract data from Microsoft Excel then transform the data with data conversion then load the data in to Microsoft SQL Server.. You will also learn how to create connection managers and use the data source assistant. Scenarios: We need to import customers from an Excel file in to our Customers loading table in the database. If you are studying for Implementing a Data Watahouse with Microsoft SQL Server 2012 or interested in learning SQL Server Integration Services then this video will show how to basic package and get started with SQL Server Data Tools.",27,Education,PT18M21S,1101,2d,hd,FALSE,https://i.ytimg.com/vi/XsQgAJsGaxE/maxresdefault.jpg,1,5984,96,2,0,7
63,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,yV91Xkf9sKo,2017-05-22T19:14:29Z,22/5/17 19:14,SSIS Tutorial - Basic Data Flow,"This video will teach you how to create a basic data flow package within SQL Server Integration Services, SSIS is an ETL tool that allows you to efficiently extract, transform and load data. In this tutorial we look at how to create flat files with data from our SQL Server database. You will also learn how to create connection managers and use the data source assistant. Scenarios: We need to create a file to pass to the payroll team for processing. If you are studying for Implementing a Data Watahouse with Microsoft SQL Server 2012 or interested in learning SQL Server Integration Services then this video will show how to create a basic package and get started with SQL Server Data Tools.",27,Education,PT11M47S,707,2d,hd,FALSE,https://i.ytimg.com/vi/yV91Xkf9sKo/maxresdefault.jpg,1,27493,251,7,0,10
64,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,m6GtpC5AwfA,2017-04-23T12:33:57Z,23/4/17 12:33,SQL Tutorial - Views,"This video will teach you how to create, alter and drop views with working examples, within SQL Server, we also look at the benefits and limitations of views and creating views with schemabinding and encryption. CREATE VIEW ‘name’ (optional column list) (optional) WITH (SCHEMABINDING / ENCRYPTION) AS SELECT STATEMENT SQL Statements used below: IF OBJECT_ID(N'vwSummary', N'V') IS NOT NULL DROP VIEW vwSummary; GO CREATE VIEW vwSummary (Customer_Id, Customer_Name, Order_Id, Order_Date, Title, [Paperback/Hardback]) WITH ENCRYPTION AS SELECT C_Id AS Customer_Id, C_First_Name + ' ' + C_Last_Name AS Customer_Name, O_Id AS Order_Id, O_Date AS Order_Date, P_Title AS Title, P_Type AS [Paperback/Hardback] FROM dbo.Customers INNER JOIN dbo.Orders ON C_Id = O_C_Id INNER JOIN dbo.Order_Details ON O_Id = OD_O_Id INNER JOIN dbo.Books ON OD_P_Id = P_Id; SELECT Customer_Id, Customer_Name, Order_Id, Order_Date, Title, [Paperback/Hardback] FROM vwSummary WHERE Customer_Id = 1 ALTER TABLE dbo.Customers ALTER COLUMN C_First_Name NVARCHAR(100) NOT NULL ALTER TABLE dbo.Customers ALTER COLUMN C_Middle_Name VARCHAR(50) NULL Find out View text: SELECT b.[definition] FROM sys.objects AS A INNER JOIN sys.sql_modules AS B ON A.object_id = B.object_Id WHERE a.[type] = N'V': CREATE VIEW vwLowStock (Title, Stock) AS SELECT P_Title, P_Stock FROM dbo.Books WHERE P_Stock ‘less than’= 5 DROP VIEW vwLowStock CREATE VIEW vwTotals AS SELECT O_C_Id AS Customer_Id, SUM(O_Total) AS Total FROM Orders GROUP BY O_C_Id Views are covered in the Microsoft Exam – Querying SQL Server (70-461) 2012 / 2014.",27,Education,PT18M16S,1096,2d,hd,FALSE,https://i.ytimg.com/vi/m6GtpC5AwfA/maxresdefault.jpg,1,196,5,0,0,2
65,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,VFNRtOQcyl0,2017-04-20T06:48:57Z,20/4/17 6:48,SQL Tutorial - DELETE,"This video will teach you how to run the DELETE statement with working examples, within SQL Server, we also look at the alternatives of removing data from a database. DELETE FROM ‘table name’ WHERE ‘column’ = ‘value’ Remember always take a backup, for a tutorial on how to back up databases click the link below: https://youtu.be/rtX0T_bK5-0 To learn how to INSERT data in to a table click the link below: https://youtu.be/ar8scs8E5YI To learn how to UPDATE data in a database click the link below: https://youtu.be/1afeK8tGwrY You’re Fired: DELETE FROM MyEmployees WHERE EmployeeID IN (16, 23) Rename table: EXEC sp_rename 'Books_New', 'Books_Old' To check out other videos on my channel click the link below: https://www.youtube.com/channel/UCWczzX6DyFV2KOYP_-CEZUA",27,Education,PT10M4S,604,2d,hd,FALSE,https://i.ytimg.com/vi/VFNRtOQcyl0/maxresdefault.jpg,1,139,6,0,0,0
66,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,ar8scs8E5YI,2017-04-19T23:32:12Z,19/4/17 23:32,SQL Tutorial - INSERT,"This video will teach you how to INSERT data into a table with working examples, within SQL Server, we also look at the different types of INSERT statements that can be run including INSERT SELECT. Statements: INSERT INTO dbo.Customers (C_First_Name, C_Middle_Name, C_Last_Name, C_1st_Line, C_2nd_Line, C_City, C_PostCode, C_Tel, C_Email, C_DOB) VALUES ('Anne', 'Marie', 'Smith', '62 The Grove', 'Southbridge', 'London', 'SE1 2SH', '0207 556 1234', 'anne.smith@email.com', '19840123') INSERT INTO ‘table_name’ (‘column names’) VALUES (‘values’) INSERT INTO dbo.Customers (C_First_Name, C_Last_Name, C_Tel, C_Email, C_DOB) VALUES ('Charlie', 'Hawkins', '07789456789', 'charlieh@email.com', '19610527') INSERT INTO dbo.Books (P_Title, P_Author, P_Year, P_BarCode, P_Stock, P_Type) VALUES ('The Sense of an Ending', 'Julian Barnes', 2012, (SELECT MAX(P_BarCode) FROM dbo.Books) + 1, 10, 'Paperback') , ('The Boy in the Striped Pyjamas', 'John Boyne', 2008, (SELECT MAX(P_BarCode) FROM dbo.Books) + 2, 10, 'Paperback') , ('Lolita', 'Vladimir Nabokov', 2000, (SELECT MAX(P_BarCode) FROM dbo.Books) + 3, 10, 'Hardback') INSERT INTO dbo.Customers (C_First_Name, C_Last_Name, C_1st_Line, C_City, C_Email, C_DOB) SELECT FirstName, Surname, [1st Line of Address], City, Email, DOB FROM dbo.Customers_Excel INSERT statements (DML) are covered in the Microsoft Exam – Querying SQL Server (70-461) 2012 / 2014. To learn how to backup and restore databases check out the video below: SQL Tutorial – Backup and Restore https://youtu.be/rtX0T_bK5-0 To learn how to UPDATE data in a database check out the video below: https://youtu.be/1afeK8tGwrY To learn how to use the Import and Export Wizard in SQL check out the video below: https://youtu.be/-ZAbo8ZOsmY",27,Education,PT19M58S,1198,2d,hd,FALSE,https://i.ytimg.com/vi/ar8scs8E5YI/maxresdefault.jpg,1,186,2,0,0,0
67,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,#NAME?,2017-04-19T15:58:13Z,19/4/17 15:58,SSIS Tutorial - Import and Export Wizard,"This video will teach you how to import and export data with examples, in Microsoft SQL Server, we also look the capabilities of the SSIS Import and Wizard. Examples: How to import data in to the database from Microsoft Excel and create a destination table How to export data using a SQL query and create a destination flat file (CSV). SSIS Import and Wizard is a great tool to perform Extract and Load tasks. Import and Export Wizard: Can perform simple data movements (simplified ETL process without the T) Can save packages to be reused or edit as needed in SSDT Can create destination tables or files Can write a query to filter data we are transferring Can perform basic data transformations Beware of warnings: Truncation can occur SELECT O_Date, P_Title, P_BarCode, DATEDIFF(DD, O_Date, CURRENT_TIMESTAMP) AS [Days_Since_Purchase] FROM Customers INNER JOIN Orders ON C_Id = O_C_Id INNER JOIN Order_Details ON O_Id = OD_O_Id INNER JOIN Books ON OD_P_Id = P_Id WHERE C_Id = 2 Steps performed: Choose a data source Choose a destination Specify table copy or query Select source tables and views Save and run package",27,Education,PT20M42S,1242,2d,hd,FALSE,https://i.ytimg.com/vi/-ZAbo8ZOsmY/maxresdefault.jpg,1,4651,22,4,0,5
68,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,KOzX0nyq2bM,2017-04-18T17:36:59Z,18/4/17 17:36,Spreadsheet Tutorial - Max XP in Pokemon Go,"This video will teach you some functions you can use in spreadsheet software to perform data analysis and how to calculate the maximum amount of XP you can gain in Pokemon Go. This video covers IF Statements, basic formulas; SUM etc., ROUNDUP / ROUNDDOWN and how to add comments to cells in Microsoft Excel. The Easter event is on us in Pokemon Go and offers double XP which gives us an excellent opportunity to level up. Link to file: http://jmp.sh/DdpZdhk Calculate how many Pokemon I can evolve IF Statements: =IF([logical_test], [value_if_true], [value_if_false]) =IF((B2*D2)’less than’C2, “Yes”, “No”) =IF((B2*D2)’less than’C2, B2, “No”) =IF((B2*D2)’less than’C2, B2, C2/D2) Apply rounding =IF((B2*D2)’less than’C2, B2, ROUNDDOWN(C2/D2, 0)) Calculate how many candies I have left Basic Calculations =D2*E2 =C2-(D2*E2) Calculate how many more Pokemon I could evolve Basic Calculations =F2/D2 =ROUNDDOWN(F2/D2, 0) Calculate how much XP I can gain Aggregating Data =SUM(E2:E1000) =SUM(E2:E1000)*500 Calculate how many lucky eggs I need Aggregating Data =SUM(E2:E1000)/60 Apply Rounding =ROUNDUP(SUM(E2:E1000)/60, 0)",27,Education,PT21M6S,1266,2d,hd,FALSE,https://i.ytimg.com/vi/KOzX0nyq2bM/maxresdefault.jpg,1,106,1,0,0,0
69,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,1afeK8tGwrY,2017-04-17T16:51:38Z,17/4/17 16:51,SQL Tutorial - UPDATE,"This video will teach you how to UPDATE data within a table with working examples, within SQL Server, we also look at the dangers of running an UPDATE statement without a WHERE clause and the impact this will have. Remember: Always take a backup of your database when running DML scripts Test your script locally Add a WHERE clause unless you want to update all data within the table Statements: UPDATE ‘table_name’ SET ‘column_name’ = ‘value’ WHERE ‘column_name’ = ‘value’ UPDATE Customers_New SET C_Last_Name = 'Masters' WHERE C_Id = 4 UPDATE multiple columns: UPDATE Customers_New SET C_1st_Line = '10 Wayside', C_2nd_Line = 'Withington', C_City = 'Telford', C_PostCode = 'TF2 1SH' WHERE C_Id = 2 UPDATE data based on a join: UPDATE A SET A.C_Last_Name = B.C_Last_Name FROM Customers AS A INNER JOIN Customers_New AS B ON A.C_Id = B.C_Id WHERE A.C_Last_Name 'not equal too' B.C_Last_Name UPDATE statements (DML) are covered in the Microsoft Exam – Querying SQL Server (70-461) 2012 / 2014. To learn how to backup and restore databases check out the video below: SQL Tutorial – Backup and Restore https://youtu.be/rtX0T_bK5-0",27,Education,PT20M9S,1209,2d,hd,FALSE,,1,320,5,0,0,8
70,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,FsVpkamX--Q,2017-04-17T03:01:00Z,17/4/17 3:01,SQL Tutorial - Sequence Objects,"This video will teach you how to create sequence objects with working examples, within SQL Server, we also look at the benefits of sequence objects and some of the differences between a sequence object and identity. CREATE SEQUENCE 'name' AS 'data type' START WITH 'value' INCREMENT BY 'value' MINVALUE 'value' (optional – will default to data type range) MAXVALUE 'value' (optional – will default to data type range) CYCLE? (optional – will default to NO CYCLE) How to find details of sequence objects within the database: sys.sequences – will show all information regarding sequence objects including current value How to restart the value of a sequence object: ALTER SEQUENCE 'name' RESTART WITH 'value' How to drop a sequence: DROP SEQUENCE 'name' (cannot drop a sequence if it is in use!) How to generate the next value for a sequence: SELECT NEXT VALUE FOR 'name' Sequences are covered in the Microsoft Exam – Querying SQL Server (70-461) 2012 / 2014. SQL Statements used below: CREATE SEQUENCE seq_test AS TINYINT START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 100 CYCLE CREATE TABLE Food_Orders ( Id TINYINT DEFAULT NEXT VALUE FOR seq_test , [Date] DATETIME2 , Summary VARCHAR(100) ) CREATE TABLE Food_Orders_2 ( Id TINYINT DEFAULT NEXT VALUE FOR seq_test , [Date] DATETIME2 , Summary VARCHAR(100) ) -- loop to insert data to test sequence DECLARE @N TINYINT = 1 WHILE @N 'less than' 110 BEGIN INSERT INTO Food_Orders([Date], Summary) VALUES (CURRENT_TIMESTAMP, 'Burger and Chips') INSERT INTO Food_Orders_2([Date], Summary) VALUES (CURRENT_TIMESTAMP, 'Burger and Chips') SET @N = @N + 1 END SELECT NEXT VALUE FOR seq_test ALTER SEQUENCE seq_test RESTART WITH 1 DROP SEQUENCE seq_test CREATE SEQUENCE seq_new AS INT START WITH 1 INCREMENT BY -1 SELECT NEXT VALUE FOR seq_new SQL errors covered: The sequence object 'name' has reached its minimum or maximum value. Restart the sequence object to allow new values to be generated Cannot DROP SEQUENCE 'name' because it is being referenced by object 'name'",27,Education,PT22M6S,1326,2d,hd,FALSE,,1,1605,23,0,0,4
71,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,OMRCjSfF13U,2017-04-02T15:49:33Z,2/4/17 15:49,SQL Development - Cross Joins,SQL - Tutorial on how to create cross joins,27,Education,PT8M19S,499,2d,hd,FALSE,https://i.ytimg.com/vi/OMRCjSfF13U/maxresdefault.jpg,1,185,5,0,0,0
72,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,rtX0T_bK5-0,2017-04-02T15:49:33Z,2/4/17 15:49,SQL Tutorial - Backup and Restore,"Another video brought to you by BeardedDev, bringing you tutorials on Business Intelligence, SQL Programming and Data Analysis. In this video I talk about how to backup a database in SQL Server and then how to restore the database from the backup file. Please post any comments below.",27,Education,PT8M40S,520,2d,hd,FALSE,https://i.ytimg.com/vi/rtX0T_bK5-0/maxresdefault.jpg,1,105,2,0,0,0
73,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,3QuYuU9OJfA,2017-04-01T16:24:19Z,1/4/17 16:24,SQL TUTORIAL - CTEs Part 1,A tutorial on how to write and use CTEs How to calculate aggregations and then join to underlying base table How to remove duplicates using CTEs How to created nested CTEs How to create stored procedures that contain CTEs,27,Education,PT19M29S,1169,2d,hd,FALSE,https://i.ytimg.com/vi/3QuYuU9OJfA/maxresdefault.jpg,1,1757,58,0,0,14
74,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,OUI37y1qcuI,2017-04-01T16:24:19Z,1/4/17 16:24,SQL TUTORIAL - CTEs Part 2,DescriptionA tutorial on how to write and use CTEs How to calculate aggregations and then join to underlying base table How to remove duplicates using CTEs How to created nested CTEs How to create stored procedures that contain CTEs,27,Education,PT17M51S,1071,2d,hd,FALSE,https://i.ytimg.com/vi/OUI37y1qcuI/maxresdefault.jpg,1,695,25,1,0,1
75,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,njenU-w6G_8,2017-01-24T23:18:40Z,24/1/17 23:18,SQL TUTORIAL - How to create a Stored Procedure,"Tutorial on how to create stored procedures, execute stored procedures and the benefits of working with stored procedures with working examples. CREATE PROCEDURE [dbo].[pStockCheck] @Title VARCHAR(100) AS BEGIN SELECT P_Title, P_Stock FROM Books WHERE P_Title = @Title END CREATE PROCEDURE [dbo].[pCustomerAddress] @FirstName AS VARCHAR(50) , @LastName AS VARCHAR(50) AS BEGIN SELECT C_1st_Line, ISNULL(C_2nd_Line, '') AS C_2nd_Line, C_City, C_PostCode, C_Tel FROM customers WHERE C_First_Name = @FirstName AND C_Last_Name = @LastName END",27,Education,PT22M32S,1352,2d,hd,FALSE,https://i.ytimg.com/vi/njenU-w6G_8/maxresdefault.jpg,1,1195,28,0,0,11
76,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,TYD6gWP3jBg,2017-01-14T13:59:11Z,14/1/17 13:59,"SQL TUTORIAL - GROUP BY, HAVING, Aggregate Functions","Tutorial on how to use GROUP BY, HAVING and Aggregate Functions including working through examples",27,Education,PT22M44S,1364,2d,hd,FALSE,https://i.ytimg.com/vi/TYD6gWP3jBg/maxresdefault.jpg,1,1186,13,0,0,3
77,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,Cn-r775hcJE,2017-01-13T00:09:28Z,13/1/17 0:09,"SQL TUTORIAL - COALESCE, ISNULL",Tutorial on how to use COALESCE and ISNULL Shows the differences between COALESCE and ISNULL,27,Education,PT29M52S,1792,2d,hd,FALSE,https://i.ytimg.com/vi/Cn-r775hcJE/maxresdefault.jpg,1,1966,40,0,0,9
78,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,omBpGqKJgHY,2017-01-11T23:04:01Z,11/1/17 23:04,SQL TUTORIAL - JOINs,Tutorial on how to use INNER and LEFT OUTER JOINs in SQL with examples and the difference between the two.,27,Education,PT20M54S,1254,2d,hd,FALSE,https://i.ytimg.com/vi/omBpGqKJgHY/maxresdefault.jpg,1,413,14,0,0,3
79,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,Xxmmq6OuxSk,2017-01-11T23:03:56Z,11/1/17 23:03,SQL TUTORIAL - IN and NOT IN,Tutorial on how to use IN and NOT IN in SQL and a look at subqueries,27,Education,PT16M50S,1010,2d,hd,FALSE,https://i.ytimg.com/vi/Xxmmq6OuxSk/maxresdefault.jpg,1,606,10,0,0,3
80,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,VGeC-5GGLdE,2017-01-09T19:39:09Z,9/1/17 19:39,SQL for Beginners Part 5 - ORDER BY,Tutorial on how to use ORDER BY in SQL with examples,27,Education,PT11M35S,695,2d,hd,FALSE,https://i.ytimg.com/vi/VGeC-5GGLdE/maxresdefault.jpg,1,192,7,0,0,0
81,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,q8gAWIlAKk0,2017-01-08T17:37:04Z,8/1/17 17:37,SQL TUTORIAL - CONCAT,Tutorial on how to use the CONCAT function in SQL and a look at working with character strings,27,Education,PT10M59S,659,2d,hd,FALSE,https://i.ytimg.com/vi/q8gAWIlAKk0/maxresdefault.jpg,1,337,16,0,0,3
82,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,wm1ZyZ7amOE,2017-01-08T16:29:49Z,8/1/17 16:29,SQL TUTORIAL - Add Column,Tutorial on how to add columns to existing tables within SQL and a look at adding columns that do not allow NULLs,27,Education,PT10M37S,637,2d,hd,FALSE,https://i.ytimg.com/vi/wm1ZyZ7amOE/maxresdefault.jpg,1,204,3,0,0,0
83,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,4TnUR1GcV74,2017-01-07T19:18:56Z,7/1/17 19:18,SQL for Beginners Part 4 - DISTINCT,Tutorial on how to use DISTINCT in SQL with examples,27,Education,PT16M58S,1018,2d,hd,FALSE,https://i.ytimg.com/vi/4TnUR1GcV74/maxresdefault.jpg,1,239,7,0,0,0
84,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,t1NWeGDmS9Y,2017-01-07T18:23:14Z,7/1/17 18:23,"SQL for Beginners Part 3 - WHERE, NULL",Tutorial on how to use the WHERE clause in SQL and a look at NULL values with examples,27,Education,PT18M58S,1138,2d,hd,FALSE,https://i.ytimg.com/vi/t1NWeGDmS9Y/maxresdefault.jpg,1,295,10,0,0,0
85,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,ucHYLqlPEGc,2017-01-07T16:00:06Z,7/1/17 16:00,SQL for Beginners Part 2 - SELECT,Tutorial on how to write SELECT statements in SQL with examples,27,Education,PT11M41S,701,2d,hd,FALSE,https://i.ytimg.com/vi/ucHYLqlPEGc/maxresdefault.jpg,1,399,7,0,0,2
86,UCWczzX6DyFV2KOYP_-CEZUA,BeardedDev,3R_MvBsLGEA,2017-01-07T15:05:26Z,7/1/17 15:05,SQL for Beginners Part 1 - What is a Database?,"Tutorial on what a database is, the difference between a database and speadsheets and how to connect to the database using SQL Server Management Studio",27,Education,PT9M12S,552,2d,hd,FALSE,https://i.ytimg.com/vi/3R_MvBsLGEA/maxresdefault.jpg,1,742,16,0,0,10