position	channelId	channelTitle	videoId	publishedAt	publishedAtSQL	videoTitle	videoDescription	videoCategoryId	videoCategoryLabel	duration	durationSec	dimension	definition	caption	thumbnail_maxres	licensedContent	viewCount	likeCount	dislikeCount	favoriteCount	commentCount
1	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	38ozTaFNXc0	2020-08-16T11:18:06Z	2020-08-16 11:18:06	EuroPython 2020 - Poster 2 Track Stream - 2020-07-23	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT15H27M11S	1631	2d	sd	false	https://i.ytimg.com/vi/38ozTaFNXc0/maxresdefault.jpg		58	2	1	0	0
2	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DjWHc4RyaB0	2020-08-16T11:18:06Z	2020-08-16 11:18:06	EuroPython 2020 - Poster 1 Track Stream - 2020-07-24	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT15H59M	3540	2d	hd	false	https://i.ytimg.com/vi/DjWHc4RyaB0/maxresdefault.jpg		25	0	0	0	0
3	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	KWPTN8OY1to	2020-08-16T11:18:06Z	2020-08-16 11:18:06	EuroPython 2020 - Poster 1 Track Stream - 2020-07-23	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT15H26M53S	1613	2d	hd	false	https://i.ytimg.com/vi/KWPTN8OY1to/maxresdefault.jpg		69	1	1	0	1
4	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cxsuE5YCNwI	2020-08-16T11:18:06Z	2020-08-16 11:18:06	EuroPython 2020 - Sprints Sunday Stream - 2020-07-26	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT13H58M10S	3490	2d	hd	false	https://i.ytimg.com/vi/cxsuE5YCNwI/maxresdefault.jpg		47	0	0	0	0
5	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ekRqcv_ul1I	2020-08-16T11:18:06Z	2020-08-16 11:18:06	EuroPython 2020 - Sprints Sunday Open Space Stream - 2020-07-26	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT14H53M42S	3222	2d	hd	false	https://i.ytimg.com/vi/ekRqcv_ul1I/maxresdefault.jpg		114	2	0	0	0
6	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fgsdl_g90qM	2020-08-16T11:18:06Z	2020-08-16 11:18:06	EuroPython 2020 - Sprints Saturday Afternoon Stream - 2020-07-25	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT10H54M8S	3248	2d	hd	false	https://i.ytimg.com/vi/fgsdl_g90qM/maxresdefault.jpg		218	6	2	0	0
7	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xdW-Wew4OAE	2020-08-16T11:18:06Z	2020-08-16 11:18:06	EuroPython 2020 - Poster 2 Track Stream - 2020-07-24	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT15H59M9S	3549	2d	hd	false	https://i.ytimg.com/vi/xdW-Wew4OAE/maxresdefault.jpg		42	0	0	0	0
8	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qUu9mBMQDdw	2020-08-12T12:12:06Z	2020-08-12 12:12:06	EuroPython 2020 - Parrot Track Stream - Part 1 - 2020-07-23	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT12H32M5S	1925	2d	hd	false	https://i.ytimg.com/vi/qUu9mBMQDdw/maxresdefault.jpg		489	16	0	0	
9	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WAsIhG_ZlG4	2020-08-12T12:12:05Z	2020-08-12 12:12:05	EuroPython 2020 - Ni Track Stream - Part 1 - 2020-07-23	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT8H45M30S	2730	2d	hd	false	https://i.ytimg.com/vi/WAsIhG_ZlG4/maxresdefault.jpg		160	3	0	0	
10	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	z9J1IVNIc-Y	2020-08-12T12:12:03Z	2020-08-12 12:12:03	EuroPython 2020 - Sprints Saturday Opening Stream - 2020-07-25	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT1H59M55S	3595	2d	hd	false			138	2	0	0	
11	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	RVK7rsFEfpc	2020-08-12T12:12:02Z	2020-08-12 12:12:02	EuroPython 2020 - Microsoft Track Stream - Part 1 - 2020-07-23	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT10H2M49S	169	2d	hd	false	https://i.ytimg.com/vi/RVK7rsFEfpc/maxresdefault.jpg		695	10	0	0	
12	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Hy_-HNIvVyc	2020-08-12T12:11:36Z	2020-08-12 12:11:36	EuroPython 2020 - Microsoft Track Stream - Part 2 - 2020-07-23	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT13H30M34S	1834	2d	hd	false	https://i.ytimg.com/vi/Hy_-HNIvVyc/maxresdefault.jpg		134	3	0	0	
13	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	G3pqxUIWjiw	2020-08-12T12:11:35Z	2020-08-12 12:11:35	EuroPython 2020 - Brian Track Stream - Part 1 - 2020-07-23	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT11H25S	25	2d	hd	false	https://i.ytimg.com/vi/G3pqxUIWjiw/maxresdefault.jpg		167	5	0	0	
14	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MoVHxRZ1688	2020-08-12T12:11:35Z	2020-08-12 12:11:35	EuroPython 2020 - Microsoft Track Stream - Part 1 - 2020-07-24	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT9H13M31S	811	2d	hd	false	https://i.ytimg.com/vi/MoVHxRZ1688/maxresdefault.jpg		275	12	0	0	
15	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Q6kV4AJnzuw	2020-08-12T12:11:35Z	2020-08-12 12:11:35	EuroPython 2020 - Brian Track Stream - Part 1 - 2020-07-24	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT11H42M18S	2538	2d	hd	false	https://i.ytimg.com/vi/Q6kV4AJnzuw/maxresdefault.jpg		57	3	0	0	
16	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Swl9tUnGGGE	2020-08-12T12:11:35Z	2020-08-12 12:11:35	EuroPython 2020 - Brian Track Stream - Part 2 - 2020-07-23	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT12H32M8S	1928	2d	hd	false	https://i.ytimg.com/vi/Swl9tUnGGGE/maxresdefault.jpg		84	8	0	0	
17	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	X7UaKw2X5uI	2020-08-12T12:11:35Z	2020-08-12 12:11:35	EuroPython 2020 - Ni Track Stream - Part 1 - 2020-07-24	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT10H55M17S	3317	2d	hd	false	https://i.ytimg.com/vi/X7UaKw2X5uI/maxresdefault.jpg		78	2	0	0	
18	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YwZjCLUhERU	2020-08-12T12:11:35Z	2020-08-12 12:11:35	EuroPython 2020 - Parrot Track Stream - Part 2 - 2020-07-23	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT11H44S	44	2d	hd	false	https://i.ytimg.com/vi/YwZjCLUhERU/maxresdefault.jpg		99	2	0	0	
19	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hPjFRGXoqz0	2020-08-12T12:11:35Z	2020-08-12 12:11:35	EuroPython 2020 - Microsoft Track Stream - Part 2 - 2020-07-24	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT6H30M59S	1859	2d	hd	false	https://i.ytimg.com/vi/hPjFRGXoqz0/maxresdefault.jpg		148	1	0	0	
20	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lcTfOkm7ayk	2020-08-12T12:11:35Z	2020-08-12 12:11:35	EuroPython 2020 - Brian Track Stream - Part 2 - 2020-07-24	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT4H26M32S	1592	2d	hd	false	https://i.ytimg.com/vi/lcTfOkm7ayk/maxresdefault.jpg		72	4	1	0	
21	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nUd1Tm5XQQI	2020-08-12T12:11:35Z	2020-08-12 12:11:35	EuroPython 2020 - Parrot Track Stream - Part 1 - 2020-07-24	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT10H7M35S	455	2d	hd	false	https://i.ytimg.com/vi/nUd1Tm5XQQI/maxresdefault.jpg		135	5	1	0	
22	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rMglI4StVLY	2020-08-12T12:11:35Z	2020-08-12 12:11:35	EuroPython 2020 - Ni Track Stream - Part 2 - 2020-07-23	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT14H47M32S	2852	2d	hd	false	https://i.ytimg.com/vi/rMglI4StVLY/maxresdefault.jpg		43	3	0	0	
23	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sOYxgyDrA9o	2020-08-12T12:11:35Z	2020-08-12 12:11:35	EuroPython 2020 - Parrot Track Stream - Part 2 - 2020-07-24	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT5H58M28S	3508	2d	hd	false	https://i.ytimg.com/vi/sOYxgyDrA9o/maxresdefault.jpg		79	3	1	0	
24	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tMcImjOGGeI	2020-08-12T12:11:35Z	2020-08-12 12:11:35	EuroPython 2020 - Ni Track Stream - Part 2 - 2020-07-24	EuroPython 2020 Online - Unedited Live Stream Recording Edited videos will be available later in 2020. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT5H12M12S	732	2d	hd	false	https://i.ytimg.com/vi/tMcImjOGGeI/maxresdefault.jpg		55	3	2	0	
25	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jFO1IYEulJM	2019-10-01T09:02:33Z	2019-10-01 09:02:33	Lennart Regebro - Moving big projects to Python 3	"Moving big projects to Python 3 [EuroPython 2019 - Talk - 2019-07-12 - Boston] [Basel, CH] By Lennart Regebro Next year Python 2 is no longer maintained. But you have a monster code base with clever tricks and libraries that don't support Python 2, and your data may be stored in a format that is hard to move Python 3. And that's the easy bit. This talk focuses on the process of moving, not the code changes. Because it's the process that is the hard part. How do you get your code in a state where it's ready to move? How do you get the whole team on the boat to Python 3? All Python 3 talks I have seen, including those I have given, and all the texts on how to port, including the book I wrote, focus on the code changes. With increasing backwards compatibility in Python 3 and forward-compatibility in Python 2, this actually became a lesser problem for big code bases. The extra issues of large, old code bases Can you stop adding features? (1 min) Separate team vs getting everyone on it (2 min) Python 2 compatibility: You need it (1 min) The steps Fix your development process (2 min) Replace old libraries, or take over maintenance and port them (2 min) Make sure your tests are solid (1 min) Run 2to3 but only backwards compatible fixers (2 min) Run tests on Python 3 to stop backsliding (4 min) Run all tests: Expansive or slow Store passed tests Detect tests that change Turning it off adds a lot of extra work Port all your little utilities and tool scripts (1 min) Fix fix fix fix (1 min) Add tests with Python 2 data, to test migration (2 min) You might need migration scripts Extra careful staging tests (1 min) Production: Try, fail, repeat (1 min) Clean the code up (3 min) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT33M20S	2000	2d	hd	false	https://i.ytimg.com/vi/jFO1IYEulJM/maxresdefault.jpg		889	19	2	0	1
26	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1_23AVsiQEc	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Pablo Salgado - The soul of the beast	"The soul of the beast [EuroPython 2019 - Talk - 2019-07-12 - PyCharm] [Basel, CH] By Pablo Salgado Why The audience will discover one of the core pieces of the language that sits at the middle of the decisions about what new rules can or cannot be implemented in the Python programming language. They will learn how the particularities of the grammar limit what can be achieved but also serve to maintain the language consistent, powerful but straightforward. Attendants will learn how core developers solved some challenging scenarios that arise as a consequence of said limitations or how others cannot be resolved unless Python gets a significant transformation in the internal mechanism that parses the grammar. Finally, they will learn how a new rule is added to the CPython grammar, serving as a perfect example of how all the pieces come together. In summary, the audience will gain a more technical response to why people perceive the Python programming language as easy but powerful one and at the same time will gain some insight on how to understand and extend the pieces that form it. This talk will not only help members of the audience understand better the design of the language a how grammars and parser work, but will also help people wanting to contribute to CPython understanding the general structure of the compiler pipeline and how to work on it. Who This talk is for those that want to understand Python a bit deeper: not only how everything works under the hood but also what are the technical decisions in its making and what are the consequences. The talk is targeted to all Python programmers, no matter the skill level as everyone will find something for their particular level of expertise: Beginner programmers will be introduced in the topic of language grammars and will learn what a Grammar is and what are the building blocks. Also, the audience members in this level will gain insight into how everything is thread together in CPython. Medium and advanced programmers will learn some in-depth technical details and how they relate to features they already know and understand. The talk not only will try to enlight some new areas related to grammar technicalities, parser features and design and CPython implementation details but will also connect many pieces of information to explain how the small technical decisions impact the bigger picture. Outline Who am I What is the Python Grammar What is grammar? How they look like. Elements: terminal symbols, nonterminal symbols, productions. The properties of Python Grammar? Leftmost derivation 1 token lookahead No epsilon productions! (Plus what epsilon productions are) Some immediate consequences of these properties. How the Python parser generator works General structure of the parser generator. Non Deterministic Finite Automata Deterministic Finite Automata. Some examples (with cool graphs!) generated from the python grammar and the parser generator of the actual finite automatas that Python uses. Concrete syntax trees. Advantages of the grammar (or ""why Python is so easy to understand) LL(1) grammars are context-free (no state to maintain while parsing). LL(1) grammars are simple to implement and very fast to parse. LL(1) grammars are very limited, keeping the language simple Disadvantages of the grammar: Grammar ambiguity. LL(1) grammars need some hacks for very simple things. How keyword arguments were incorporated in the grammar with a hack: The grammar rule is very strange because it is ""fixed"" in the Abstract syntax tree Why parenthesized with statements cannot be implemented (with statements formed of multiple elements surrounded by parenthesis and separated by commas). Implementing a new grammar rule in CPython: the arrow operator : A complete mini-tutorial on how to introduce a new operator: A - B that gets executed as A.strongrarrow/strong(B). Altering the grammar and generating the new parser. Introducing a new token. Changing the tokenizer. Changing the Abstract Syntax Tree Generator. Changing the compiler. Implementing the new opcode. Implementing the strongrarrow/strong protocol. The future and summary of the talk: We have been discussing in the CPython discourse to change the parser generator to something more powerful. Dangers and advantages of other parser generators. What other implementations are using? Summary of the talk License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT45M57S	2757	2d	hd	false	https://i.ytimg.com/vi/1_23AVsiQEc/maxresdefault.jpg		489	15	0	0	3
27	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	EL5sg3A67mI	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Michal Wysokinski - AsyncIO in production - War Stories	"AsyncIO in production - War Stories [EuroPython 2019 - Talk - 2019-07-12 - Osaka / Samarkand] [Basel, CH] By Michal Wysokinski My team has been running AsyncIO in production for over 2 years now and the only thing I can say about my experience with it is: ""Oh boy, what a rollercoaster of feelings"". I've experienced laughs and tears, sweat and blood but also sang songs of glory. AsyncIO is currently the biggest buzzword in the Python world advertised as a silver bullet capable of solving all Python's shortcomings in the field of performance. However, it also brings a burden of being a completely new approach with a fresh implementation which is not often mentioned and taken into consideration. In some of my team's projects we've achieved a great success thanks to AsyncIO, but there's been a few where we decided to get rid of it and replace it with a more traditional fork-join architecture. I'd like to share my experience with AsyncIO, tell some War Stories and discuss which projects it suits perfectly and which ones should avoid it. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT47M6S	2826	2d	hd	false	https://i.ytimg.com/vi/EL5sg3A67mI/maxresdefault.jpg		649	12	0	0	0
28	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ILfPgkqdSYc	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Stefan Baerisch - Go(lang) to Python	"Go(lang) to Python [EuroPython 2019 - Talk - 2019-07-12 - Osaka / Samarkand] [Basel, CH] By Stefan Baerisch Python and Go are a great combination. Like Python, Go is easy to learn, powerful to use and has many useful libraries. Go and Python work great together: Go has better performance and parallelism, while Python is more expressive. Wouldn't it be nice if you could combine the benefits of Go and Python in one program? This talk shows you how. Why you may want to attend Extension modules written in C/C++ or other languages are one of the major strength Python. Go is a useful language to extend Python. This talk explains to you how to implement extension modules in Go. Content of the Talk The talk shows how to use CGO to make Go code available as a C library and then to use Cython to make this library available as a Python extension module. We start by building a wrapper for simple Go code that adds some numbers and returns the results. This program is our end-to-end example to demonstrate the steps necessary to create a Python extension module in Go. Next, we move to more complex use cases. We look at different ways to share complex data and to use Python callbacks from Go. Then, we see how to how to handle Go's Garbage Collector when exposing with Go Objects. Finally, the talk goes into the advantages and disadvantages of Go as an extension language for Python. We also look at some of the alternative ways to make Go code available in Python. Recommended Prerequisites To get the most out of the talk, you should know about the difference between native Python modules and extension modules written in other languages. Some background on concepts like garbage collection, stack and heap, and dynamic/shared libraries are beneficial. Knowledge of the Python C API is not required. You do not need to know how to write Go code to follow the talk - the talk explains all the required Go. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT44M58S	2698	2d	hd	false	https://i.ytimg.com/vi/ILfPgkqdSYc/maxresdefault.jpg		579	5	0	0	0
29	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MC30D_sVD6Y	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Peter Bittner - Modern Continuous Delivery for Python Developers	"Modern Continuous Delivery for Python Developers [EuroPython 2019 - Talk - 2019-07-12 - Shanghai] [Basel, CH] By Peter Bittner Deployment automation, cloud platforms, containerization, short iterations to develop and release software—we’ve progressed a lot. And finally it’s official: Kubernetes and OpenShift are the established platforms to help us do scaling and zero downtime deployments with just a few hundred lines of YAML. It’s a great time. Can we finally put all our eggs into one basket? Identify the cloud platform that fits our needs, and jump on it? That could well backfire: Vendor lock-in is the new waterfall, it slows you down. In future you’ll want to jump over to the next better platform, in a matter of minutes. Not months. This talk is about The Art of Writing deployment pipelines that will survive Kubernetes, OpenShift and the like. It’s for Python developers and Kubernetes enthusiasts of all levels – no domain specific knowledge required, all you need to understand will be explained. You’ll learn how to separate application-specific and deployment-specific configuration details, to maximize your freedom and avoid vendor lock-in. Come see a demo of a Django project setup that covers everything from local development to automatic scaling, flexible enough to be deployed on any of your favorite container platforms. Take home a working, future-proof setup for your Python applications. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT46M48S	2808	2d	hd	false	https://i.ytimg.com/vi/MC30D_sVD6Y/maxresdefault.jpg		835	10	0	0	1
30	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MJePVWbu5g4	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Ben Nuttall - Astro Pi: Python on the International Space Station	"Astro Pi: Python on the International Space Station [EuroPython 2019 - Talk - 2019-07-12 - PyCharm] [Basel, CH] By Ben Nuttall A collaboration between the Raspberry Pi Foundation and the European Space Agency put two Raspberry Pi computers augmented with sensor boards and camera modules on the International Space Station in 2015. Every year we run a series of competitions for kids in schools around Europe to design science experiments using the available sensors. Mission Zero is a low-barrier challenge where students can run a 1 minute Python program in space to display a message to the astronauts. They have access to the sensors for conditional logic but cannot record data or take photos. Mission Space Lab is a more involved challenge, including planning an experiment, writing and testing code which will run for 3 hours in space, either studying life in space or life on earth (which includes taking photos of Earth out of the ISS window). MSL teams get to keep the data and photo they record in their experiment and are to write a report analysing their findings. A small tech team at the Raspberry Pi Foundation maintain the operating system used in flight and work in collaboration with ESA and partners to keep the operation of the Pis running smoothly on the ISS LAN. As well as sharing details of the OS maintenance and devops for the Astro Pis, I'll share photos taken from space and show findings from student experiments using opencv, tensorflow, scikit-learn, ephem and more. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M37S	1777	2d	hd	false	https://i.ytimg.com/vi/MJePVWbu5g4/maxresdefault.jpg		232	5	0	0	0
31	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SMv2iLwf3tU	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Jan Wagner - Docker meets Python - A look on the Docker SDK for Python	"Docker meets Python - A look on the Docker SDK for Python [EuroPython 2019 - Talk - 2019-07-12 - Osaka / Samarkand] [Basel, CH] By Jan Wagner My talk aims to introduce and have a closer look on the Docker SDK for Python. I will cover: - How and where to get the SDK - How it works and how to use it in general - Possible use-cases like: Processing Container-Logs, Testing with pytest on different Python Versions, Deploy via Python Script, etc.. For my talk, you should know what Docker is and how to use it. A basic idea of pytest and server administration is nice to have, but not necessarily needed to follow my talk. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT12M47S	767	2d	hd	false	https://i.ytimg.com/vi/SMv2iLwf3tU/maxresdefault.jpg		1063	12	0	0	1
32	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UVL4LFy8ch0	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Pierre Glaser - Parallel computing in Python: Current state and recent advances	"Parallel computing in Python: Current state and recent advances [EuroPython 2019 - Talk - 2019-07-12 - Osaka / Samarkand] [Basel, CH] By Pierre Glaser h2Parallel computing in Python: Current state and recent advances/h2 Modern hardware is multi-core. It is crucial for Python to provide high-performance parallelism. This talk will expose to both data-scientists and library developers the current state of affairs and the recent advances for parallel computing with Python. The goal is to help practitioners and developers to make better decisions on this matter. I will first cover how Python can interface with parallelism, from leveraging external parallelism of C-extensions –especially the BLAS family– to Python's multiprocessing and multithreading API. I will touch upon use cases, e.g single vs multi machine, as well as and pros and cons of the various solutions for each use case. Most of these considerations will be backed by benchmarks from the scikit-learn machine learning library. From these low-level interfaces emerged higher-level parallel processing libraries, such as concurrent.futures, joblib and loky (used by dask and scikit-learn) These libraries make it easy for Python programmers to use safe and reliable parallelism in their code. They can even work in more exotic situations, such as interactive sessions, in which Python’s native multiprocessing support tends to fail. I will describe their purpose as well as the canonical use-cases they address. The last part of this talk will focus on the most recent advances in the Python standard library, addressing one of the principal performance bottlenecks of multi-core/multi-machine processing, which is data communication. We will present a new API for shared-memory management between different Python processes, and performance improvements for the serialization of large Python objects ( PEP 574, pickle extensions). These performance improvements will be leveraged by distributed data science frameworks such as dask, ray and pyspark. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M14S	1814	2d	hd	false	https://i.ytimg.com/vi/UVL4LFy8ch0/maxresdefault.jpg		1424	31	0	0	7
33	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YsQ7Ps0qH7k	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Wojciech Rząsa - From HTTP to Kafka-based microservices	"From HTTP to Kafka-based microservices [EuroPython 2019 - Talk - 2019-07-12 - Osaka / Samarkand] [Basel, CH] By Wojciech Rząsa HTTP or asynchronous communication in microservices? This question is frequently repeated and discussed. Obviously, HTTP-based communication is easier for developers and architects. Even if your developers have no prior experience with microservices, they will probably understand how to implement an HTTP service well. While asynchronous communication has a lot of advantages that allow to design and implement really robust microservices system, they also bring new challenges not so obvious for people who didn’t have a chance to work with such an environment before. In FLYR we mostly have HTTP-based Inter Process Communication (IPC) in our infrastructure. At some point, we realized that to provide the functionality required by our product we needed something more flexible and more… asynchronous. We designed and implemented a Python library to facilitate switching to asynchronous IPC, supporting one- or two-way or even single-request – multi-response communication. An important thing in the design process was to provide developers having HTTP experience a tool that would ease the process of switching to asynchronous communication. Consequently, to switch an HTTP server-side endpoint to asynchronous IPC is a straightforward task. We selected Kafka for our message broker, not surprisingly by comparing its performance reports with our very rough, but no less demanding performance requirements. But we also took care to hide the details of the broker logic from developers. Yes, we don’t use all Kafka capabilities, if you need e.g. Kafka Streams, you will have to use another solution. But we can decide what capabilities are used in our microservices and how we can make changes in the way our services communicate in a single place. There are also hooks, Kubernetes health checks and more with a lot of flexibility available out of the box. We plan to opensource our library. At the moment of writing it ‘opensourcing’ is still a work in progress and we didn’t have sufficient time to do it due to strict time constraints we have on delivering functionality to our customers, but we hope to be able to do it soon. In this talk I would like to describe how we solved particularly important problems, what solutions we developed, how we use them and what problems still need to be addressed by developers. In other words, I would like to describe you the journey we made from HTTP to Kafka-based microservices. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M18S	1818	2d	hd	false	https://i.ytimg.com/vi/YsQ7Ps0qH7k/maxresdefault.jpg		373	7	2	0	0
34	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	asL0dbN6pAY	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Justin Mayer - Zen of Python Dependency Management	"Zen of Python Dependency Management [EuroPython 2019 - Talk - 2019-07-12 - Boston] [Basel, CH] By Justin Mayer Ensuring reliably repeatable dependency installation has long been an unsolved problem for many Python projects. Pinning dependencies via setup.py and requirements.txt has historically been met with extra work and unexpected results, particularly when managing the dependencies of dependencies. Thanks to PEP 518, Python projects can now more easily manage dependencies via the new pyproject.toml file specification. In its wake, a number of useful tools have arisen that use this file to provide enhanced dependency resolution, including Poetry, Hatch, and Pipenv. Attendees of this talk will take home the following knowledge and skills: how to replace three files (setup.py, requirements.txt, and MANIFEST.ini) with just one: pyproject.toml why dependency resolution is hard and why it matters how Poetry, Hatch, and Pipenv differ and when to use each why one might use a less magical alternative: pip-tools how to use pipx to isolate system-wide Python tools License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT28M33S	1713	2d	hd	false	https://i.ytimg.com/vi/asL0dbN6pAY/maxresdefault.jpg		990	19	0	0	0
35	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eRzMJuwuYpU	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Dmitry Figol - Optimizing Docker builds for Python applications	"Optimizing Docker builds for Python applications [EuroPython 2019 - Talk - 2019-07-12 - PyCharm] [Basel, CH] By Dmitry Figol Do you deploy Python applications in Docker? Then this session is for you! We will start by reviewing a simple Dockerfile to package a Python application and move to more complex examples which speed up the build process and reduce the size of the resulting Docker image for both development and production builds. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M45S	1785	2d	hd	false	https://i.ytimg.com/vi/eRzMJuwuYpU/maxresdefault.jpg		1997	67	0	0	3
36	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fhn0p8uS788	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Alessandro Molina - Python Standard Library, The Hidden Gems	"Python Standard Library, The Hidden Gems [EuroPython 2019 - Talk - 2019-07-12 - Boston] [Basel, CH] By Alessandro Molina The Python Standard Library is a very rich toolset, which is the reason why Python is stated to come with ""batteries included"". In such an amount of features and tools it's easy to get lost and miss some of the less unknown modules or gems hidden within the whole load of functions and classes. This talk aims at showcasing some recipes, snippets and usages of standard library modules and functions that are less known or that are not covered in the most common books and tutorials available for Python. The talk will try to showcase a bunch of short examples in the hope to foster the ""oh, wow! I didn't think about that"" reaction at least once in the audience. We will see how frequently for tasks where you used third party libraries or frameworks a solution bultin into the standard library is already available, and such solution is guaranteed to be maintained and well working for the years to come thanks to the standard library reliability and stability. The showcased examples are took from the “Modern Python Standard Library Cookbook” book that I authored. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT44M25S	2665	2d	hd	false	https://i.ytimg.com/vi/fhn0p8uS788/maxresdefault.jpg		1809	52	0	0	1
37	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pLPWSR0lKAg	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Alexys Jacob - How we run GraphQL APIs in production on our Kubernetes cluster	"How we run GraphQL APIs in production on our Kubernetes cluster [EuroPython 2019 - Talk - 2019-07-12 - Singapore] [Basel, CH] By Alexys Jacob In this talk I would like to share the workflow and tools we use to build, deploy and operate GraphQL APIs on our on-premise Kubernetes cluster. I will share code and command examples explaining how we are operating our applications since our recent transition from REST APIs on Web servers to GraphQL APIs containers on Kubernetes. This talk will not be about the difference between REST and GraphQL but focus on the workflow, tools and experience we gained in switching our run time environments and API models. At Numberly, we have built and are operating our own on-premise Kubernetes cluster so we will also be talking about its capabilities and share some of the experience we gained in doing so. Proposed agenda: - Our previous workflow and its limitations - How we designed our Kubernetes cluster, its capabilities and the choices we made - Developer workflow, environments management and deployment - Our GraphQL stack, featuring a sample application - What we're still working on to improve License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT40M45S	2445	2d	hd	false	https://i.ytimg.com/vi/pLPWSR0lKAg/maxresdefault.jpg		435	6	1	0	1
38	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	r0_n9d9x97Y	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Adrian Mönnich - useFlask() - or how to use a React frontend for your Flask app	"useFlask() - or how to use a React frontend for your Flask app [EuroPython 2019 - Talk - 2019-07-12 - PyCharm] [Basel, CH] By Adrian Mönnich Many Flask projects nowadays still use mostly static HTML, WTForms and just a bit of AJAX. All the JavaScript is usually included straight from .js files or just minified with Python tools like webassets. But the JavaScript ecosystem has evolved a lot - one can now use tools like Babel to write modern JS even when targeting older browsers and a Webpack+Babel build is very straightforward and allows for advanced preprocessing of JavaScript code. In this talk we'll even go one step further and not only use Webpack to build the assets, but also integrate a small demo Flask app with a React frontend where the Flask app only serves the static HTML page and uses a RESTful API to communicate with the React app. We'll also look into how to keep convenient Flask features such as URL building in client-side code (using the js-flask-urls package) and of course React hooks will be used! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M13S	1753	2d	hd	false	https://i.ytimg.com/vi/r0_n9d9x97Y/maxresdefault.jpg		1651	22	3	0	2
39	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	uI6fmAuOjc8	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Danny Engelbarts - And now for something completely different.	"And now for something completely different. [EuroPython 2019 - Talk - 2019-07-12 - Singapore] [Basel, CH] By Danny Engelbarts The goal of this talk is to show the audience a different way of thinking about and developing regex statements. I have been working with UNIX for decades now and, although i always managed to avoid Perl, i have been intrigued with Regex constructs ever since my first encounter. These weird unreadable things that can transform text like nothing else or can find what i’m looking for in massive files, in no time at all. I’ve created regexes that only appeal to the most nerdiest of nerds and i’ve stunned colleagues by fixing their futile regex attempts in just a few keystrokes. But when Damian Conway showed me how regexes really work i was awestruck. And now i want to share this knowledge. This talk is aimed at pythonistas that have some experience with the re module. I will take some easy examples and explain in plain english how a regex engine searches for a match. This will show that a regex is not some mysterious incomprehensible pattern description or declarative blueprint. Instead it is a small program that is very good at comparing single characters. Like any programming language it turns out that once you understand the rules and structure it suddenly becomes so much easier to use. With this new found knowledge we will up the ante and try some more difficult stuff, adding other semantics and some tips and tricks. We’ll look at some pitfalls, maybe compare regex to python solutions and have a look at some regexes found in the wild (either on my drive or on github). License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT44M22S	2662	2d	hd	false	https://i.ytimg.com/vi/uI6fmAuOjc8/maxresdefault.jpg		215	9	0	0	0
40	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yJPpFDM_0NE	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Batuhan Taşkaya - Hack The CPython	"Hack The CPython [EuroPython 2019 - Talk - 2019-07-12 - Osaka / Samarkand] [Basel, CH] By Batuhan Taşkaya Have you ever realized how dynamic CPython interpreter is? Maybe it is the most dynamic interpreter you may see. It gives interfaces to internal things like garbage collector or AST, allows to alter functions code, modify built-in functions etc. This talk will go beyond that dynamism. From adding a new syntax to hooking the evaluation loop, it will show how to hack parts of python. Before understanding these hacks, you will learn internals of CPython step-by-step. Steps are important because in every step we have at least one hacking option. Also it gives the audience a short brief of how python works. After learning how cpython works, we'll cover how to hack (use things that is not their main purpose) the interpreter and the interfaces it gave. For an example we will disassembly the bytecode and then assemble it again with adding our statements or adding a new syntax for python at runtime with AST. Talk will hack these steps: - AST - Bytecode - CTypes - CPython evaluation loop License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT17M	1020	2d	hd	false	https://i.ytimg.com/vi/yJPpFDM_0NE/maxresdefault.jpg		955	32	1	0	8
41	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ypgJkISlbLM	2019-10-01T09:02:31Z	2019-10-01 09:02:31	Grzegorz Kocjan - Don't start with a database	"Don't start with a database [EuroPython 2019 - Talk - 2019-07-12 - Shanghai] [Basel, CH] By Grzegorz Kocjan What you do when you start a new project? Usually, we begin with database design, then we prepare a migration system, user registration, and all different stuff that distracts us from doing what is most important - business logic. With the clean architecture, we can learn how to start a project in another way and this will be one of two main topics of my talk. The second one will be about new features in Python. You probably heard about typings, mypy, and dataclasses, but I will show you how they can be used in real life project that can be developed over many years in production lifecycle. There will be no ""hello world"" app, no copy &amp; paste of documentation, only practical knowledge learned through many years of practice. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT43M48S	2628	2d	hd	false	https://i.ytimg.com/vi/ypgJkISlbLM/maxresdefault.jpg		824	28	0	0	0
42	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JCmPa42rov4	2019-10-01T09:02:30Z	2019-10-01 09:02:30	Ivana Kellyerova - import bacon 🥓	"import bacon 🥓 [EuroPython 2019 - Talk - 2019-07-12 - PyCharm] [Basel, CH] By Ivana Kellyerova It's often said that Python comes with batteries included, meaning that the standard library can do basically anything except for maybe conjure bacon for you (though I heard that's coming in 3.8). I don't think we fully appreciate the sheer vastness of it, though, so I went through it module by module looking for hidden gems (sorry, eggs). This is a by no means exhaustive compilation of the useful, the underrated, and the funny. When it comes to the Python standard library, chances are you use it on a daily basis -- or more likely, a more or less stable subset of it. The usual way we add things to the subset is by looking for a solution to a problem and ending up getting pointed to a standard library module. That, however, means that the odds of you finding out that there is a whole module whose sole purpose is to tell you if a string is a Python keyword are very slim. The aim of this talk is to showcase CPython libraries that are interesting in some way: mostly for their usefulness, but in some cases simply for being wonderfully weird in some way. The talk is not aimed at any particular level of Python experience - as a beginner you'll get a taste of just how many batteries Python ships with, and as a person using the language often you might end up growing your own personal subset a bit more. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT28M11S	1691	2d	hd	false	https://i.ytimg.com/vi/JCmPa42rov4/maxresdefault.jpg		512	12	0	0	0
43	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	oKOcBXTyHCM	2019-10-01T09:02:30Z	2019-10-01 09:02:30	Andrei Neagu - Better WebSockets - Server-Sent Events, a carefree alternative	"Better WebSockets - Server-Sent Events, a carefree alternative [EuroPython 2019 - Talk - 2019-07-12 - Osaka / Samarkand] [Basel, CH] By Andrei Neagu Have you ever found yourself in a situation where you: - had to use WbSockets? - had to to create a separate project and had the issue of interfacing both? - had to handle disconnections? - had to handle reconnections? - had to handle all the above and scale WebSockets? If your experience was horrible (like mine was), we shall take a look at Server-Sent Events, an alternative to WebSockets. The following arguments will be discussed: - intro to the subject - inner workings - differences from WebSockets - implementation explanation for a generic HTTP server in Python - use cases License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT27M41S	1661	2d	hd	false	https://i.ytimg.com/vi/oKOcBXTyHCM/maxresdefault.jpg		526	5	0	0	0
44	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3lACaWE9h7M	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Radomir Dopieralski - Game Development with CircuitPython	"Game Development with CircuitPython [EuroPython 2019 - Talk - 2019-07-12 - Boston] [Basel, CH] By Radomir Dopieralski Making computer games is difficult: it requires creativity, multidisciplinary knowledge of art, psychology, math, computer science, physics and others, patience, open mind and dedication. Making computer games with Python is a nightmare. You hit practically every sharp corner that Python has, starting with installation, through binary libraries, poor hardware support, up to distribution. PewPew devices are an attempt at solving the worst problems by giving you a dedicated, cheap, simple and portable gaming device, that you can easily program with Python with just a simple text editor. They also make pretty neat conference badges. I will talk about how they were conceived, how they are used, and how you can extend and improve them yourself. At the end of the talk you should have a good idea about what is CircuitPython and MicroPython and how they can be used to build and program such simple devices. You should also know where to find the resources necessary to try designing and building your own. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT26M12S	1572	2d	hd	false	https://i.ytimg.com/vi/3lACaWE9h7M/maxresdefault.jpg		223	6	0	0	1
45	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3pNJDhD6v7A	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Peter Sperl - Configuring uWSGI for Production: The defaults are all wrong	"Configuring uWSGI for Production: The defaults are all wrong [EuroPython 2019 - Talk - 2019-07-12 - Singapore] [Basel, CH] By Peter Sperl Two years ago, we began migrating from a proprietary service framework to a WSGI-compliant one. We chose uWSGI as our host because of its performance and feature set. But, while powerful, uWSGI's defaults are driven by backward compatibility and are not ideal for new deployments. Powerful features can be overlooked due to the sheer magnitude of its feature set and spotty documentation. As we've scaled up the number of services hosted by uWSGI over the last year, we've had to tweak our standard configuration. In this talk, we'll present the base uWSGI configuration we use as a starting point for all services, as well as some tips to avoid known gotchas and provide a base level of defensiveness and high reliability. This base configuration makes use of several ""no-cost"" uWSGI features that help protect services from common, yet difficult to prevent issues -- some of which we discovered the hard way. We'll also talk about some programmatic uWSGI features which can be leveraged to improve reliability and improve outage response. Some of the topics we'll cover include: - Mitigating memory leaks - Mitigating stuck, hung, or infinitely looping processes - Preventing misconfigurations - Preventing wasted development effort - Improving outage response License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT31M3S	1863	2d	hd	false	https://i.ytimg.com/vi/3pNJDhD6v7A/maxresdefault.jpg		236	11	0	0	0
46	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	68_SNVi3fkI	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Dustin Ingram - Google Cloud for Pythonistas	"Google Cloud for Pythonistas [EuroPython 2019 - Talk - 2019-07-12 - MongoDB] [Basel, CH] By Dustin Ingram Support for Python on Google Cloud has never been better. Join us for a tour of Python runtimes, services and client libraries, including App Engine, Cloud Functions, Cloud Run, and more. We'll also discuss tools for monitoring and debugging your Python application, and best practices for using Python on Google Cloud. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M37S	1777	2d	hd	false	https://i.ytimg.com/vi/68_SNVi3fkI/maxresdefault.jpg		190	5	1	0	0
47	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6BdveiyuAYQ	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Max Humber - How to read (code)	"How to read (code) [EuroPython 2019 - Talk - 2019-07-12 - MongoDB] [Basel, CH] By Max Humber When you learn a new language, like French or German or even English, you first learn how to read. Then you learn how to write. When you learn a new emprogramming/em language, you first learn how to write. And that’s it. Imagine that you were never formally taught how to read. And that you were told that you should just figure it out … by writing … a whole bunch. How would that even work? I don’t think it would. If you can’t read. You can’t write. It’s that simple. Do you think that Shakespeare would be Shakespeare if he never read a single book in his entire life? No. Nothing is created in a vacuum. Good writers are good writers because they’re good readers. Just as reading is an invaluable skill so to is reading code. It’s a skill that’s never formally taught. But it’s a skill that is essential nonetheless. In this talk I’ll show you how to effectively read code so that might write better code. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT27M47S	1667	2d	hd	false	https://i.ytimg.com/vi/6BdveiyuAYQ/maxresdefault.jpg		405	9	0	0	1
48	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6JdSrGWodY0	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Łukasz Kąkol - Code review for Beginners and Experts: Tips & Tricks	"Code review for Beginners and Experts: Tips & Tricks [EuroPython 2019 - Talk - 2019-07-12 - MongoDB] [Basel, CH] By Łukasz Kąkol Code review is not just boring duty. It's mutual responsibility for the software we're releasing. It's one of the most critical aspects of code quality, and therefore it's the first step of quality assurance. This is also the key to easier programming and better maintainability. Clean code is much easier to debug, and it's much harder to introduce a bug in such code. When you think about code review, you probably think about verifying and examining the code. Reviewing the expert's code may look like a waste of time because he knows what he's doing. Reviewing the code by a beginner may look like a waste of time because he's not able to find as many defects as an experienced developer. Code review is a code quality tool in the first place, but it's also much beyond that. You can teach or help someone, learn from somebody and much more both from the position of reviewer and reviewee. There is much more about the real power of code review which I want to share with you. This talk is also about how to do it the right way and how to not do it based on lessons learned and my experience within the diverse teams of people with a variety of knowledge and experience. I was reviewing the code but, on the other hand, I was also being reviewed. I'd like to pass my observations to people who are reviewing the code both in commercial and open source projects for a while. This talk is also for those who want to start to review the code, but they do not know how to do it. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT28M9S	1689	2d	hd	false	https://i.ytimg.com/vi/6JdSrGWodY0/maxresdefault.jpg		285	5	0	0	0
49	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	CRf7HS_iflU	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Alexys Jacob - How we run GraphQL APIs in production on our Kubernetes cluster	"How we run GraphQL APIs in production on our Kubernetes cluster [EuroPython 2019 - Talk - 2019-07-12 - Singapore] [Basel, CH] By Alexys Jacob In this talk I would like to share the workflow and tools we use to build, deploy and operate GraphQL APIs on our on-premise Kubernetes cluster. I will share code and command examples explaining how we are operating our applications since our recent transition from REST APIs on Web servers to GraphQL APIs containers on Kubernetes. This talk will not be about the difference between REST and GraphQL but focus on the workflow, tools and experience we gained in switching our run time environments and API models. At Numberly, we have built and are operating our own on-premise Kubernetes cluster so we will also be talking about its capabilities and share some of the experience we gained in doing so. Proposed agenda: - Our previous workflow and its limitations - How we designed our Kubernetes cluster, its capabilities and the choices we made - Developer workflow, environments management and deployment - Our GraphQL stack, featuring a sample application - What we're still working on to improve License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT40M45S	2445	2d	hd	false	https://i.ytimg.com/vi/CRf7HS_iflU/maxresdefault.jpg		181	3	0	0	0
50	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DyYa09ft1z8	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Europython 2019 - Morning Announcements on Friday, July 12	"Morning Announcements [EuroPython 2019 - - 2019-07-12 - MongoDB] [Basel, CH] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT4M3S	243	2d	hd	false	https://i.ytimg.com/vi/DyYa09ft1z8/maxresdefault.jpg		24	0	0	0	0
51	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	E_oIU4IU2W8	2019-10-01T09:01:45Z	2019-10-01 09:01:45	James Saryerwinnie - Downloading a Billion Files in Python	"Downloading a Billion Files in Python [EuroPython 2019 - Talk - 2019-07-12 - Shanghai] [Basel, CH] By James Saryerwinnie You've been given a task. You need to download some files from a server to your local machine. The files are fairly small, and you can list and access these files from the remote server through a REST API. You'd like to download them as fast as possible. The catch? There's a billion of them. Yes, one billion files. How would would you do this? Would you do this synchronously in a single for loop? Would you use a producer/consumer queue with threads? Multiprocessing? Asyncio? In this talk, we'll examine 3 different mechanisms for concurrently downloading files: multithreading, multiprocessing, and asyncio. For each of these mechanisms we'll look at design best practices, how to handle debugging and error handling, and of course the overall performance. By examining three different approaches using the same data set, we gain a better understanding of the tradeoffs of each approach so we can pick the right library for the job. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT28M18S	1698	2d	hd	false	https://i.ytimg.com/vi/E_oIU4IU2W8/maxresdefault.jpg		659	31	0	0	2
52	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HGcMHjzBzuw	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Trapsilo Bumi - Enhancing Angklung Music Rehearsals with Python	"Enhancing Angklung Music Rehearsals with Python [EuroPython 2019 - Talk - 2019-07-12 - Shanghai] [Basel, CH] By Trapsilo Bumi Angklung is a traditional musical instrument from Indonesia. This instrument has a lot of variety in how it is performed; a common format is the orchestral format in which 15-30 players gather to form a team. Playing Angklung in this way is fun but also presents some challenges that are hard to solve manually. First, I will introduce you to the instrument and how it works/how it is played. Then, I will show you how Python-based algorithms can be used to ease the pains of managing Angklung teams, by reading Angklung-specific sheet music and calculating the most optimal distribution of Angklung based on several important factors. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT28M33S	1713	2d	hd	false	https://i.ytimg.com/vi/HGcMHjzBzuw/maxresdefault.jpg		81	4	0	0	0
53	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	L7Q698q3RUU	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Andrey Vlasovskikh - The Story of Features Coming in Python 3.8 and Beyond	"The Story of Features Coming in Python 3.8 and Beyond [EuroPython 2019 - Talk - 2019-07-12 - Singapore] [Basel, CH] By Andrey Vlasovskikh What's coming in Python 3.8? You can learn it by yourself by reading an excellent document a href=""https://docs.python.org/3.8/whatsnew/3.8.html""What's New in Python 3.8/a. I'm not going to retell this document. Instead I'll focus on things barely described there or not mentioned at all: Why will the new features appear in Python 3.8 and what's the story behind them? What is being discussed and developed now, but won't appear in Python 3.8? I'll share the news I learned at PyCon 2019 from the talks and discussions with Python core developers. I'll mention the following topics: New syntax: codex := expr/code, codef(..., /, ...)/code, codef'{expr=}'/code New types: codeLiteral/code, codeFinal/code, codeTypedDict/code Future features of typing and async/await New approaches to optimizing Python: sub-interpreters, mypyc License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M28S	1828	2d	hd	false	https://i.ytimg.com/vi/L7Q698q3RUU/maxresdefault.jpg		252	4	0	0	0
54	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TXRPCZ7Nmh4	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Victor Stinner - Python Performance: Past, Present and Future	"Python Performance: Past, Present and Future [EuroPython 2019 - Keynote - 2019-07-12 - MongoDB] [Basel, CH] By Victor Stinner Python Performance: Past, Present and Future License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT47M42S	2862	2d	hd	false	https://i.ytimg.com/vi/TXRPCZ7Nmh4/maxresdefault.jpg		698	15	2	0	0
55	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	US0L6rjXVcQ	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Nicholas Tollervey - Tools of the Trade: The Making of a Code Editor.	"Tools of the Trade: The Making of a Code Editor. [EuroPython 2019 - Talk - 2019-07-12 - Singapore] [Basel, CH] By Nicholas Tollervey This talk tells the story of Mu, a native code editor written in Python (https://codewith.mu/). One Sunday afternoon I foolishly asked myself, ""How hard can it be to write a simple code editor?"" Several years later an international team of volunteers are still working on the project. We have had to address: Cross platform GUI development. Cross platform packaging solutions for Python. Creating an interactive visual debugger. Integrating with iPython notebook. Integrating with various IoT MicroPython devices. Integrating with frameworks such as PyGame/PyGameZero and Flask. Automating cross platform testing. Researching and testing UX with a challenging user base. Accessibility for all. Internationalisation. Creating an inclusive, welcoming and supportive community. This talk will explain why Mu was created, how Mu was created and, most importantly, shares the decision making, technical research and implementation details of Mu in the hope others can learn from our mistakes, mis-steps and muck-ups. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M49S	1849	2d	hd	false	https://i.ytimg.com/vi/US0L6rjXVcQ/maxresdefault.jpg		151	2	1	0	0
56	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UmeK-yOc1Mo	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Anastasiia Tymoshchuk - The Agile comedy: from hell to paradise	"The Agile comedy: from hell to paradise [EuroPython 2019 - Talk - 2019-07-12 - Shanghai] [Basel, CH] By Anastasiia Tymoshchuk Nowadays everyone wants to bring Agile Best Practices into all the teams, but it's a hard task to implement it and adapt based on different teams. Setting up all necessary Agile meetings and using buzz words is not enough for the team to be happy and successful while working in Agile environment. Inspired by the ""Divine Comedy"" by Dante Alighieri, I decided to create a short guide into Agile best practices. It will guide through Failures, Challenges to the Success in building a happy dream team! This talk is divided into three parts: 1. Failures in setting up Agile processes for a team. 2. Challenges on the way to happy and successful team. 3. Successful examples how to have happy and productive Agile team and constantly deliver a great product. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT25M43S	1543	2d	hd	false	https://i.ytimg.com/vi/UmeK-yOc1Mo/maxresdefault.jpg		316	6	0	0	0
57	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dfe8MUdSoXs	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Miguel Grinberg - Look Ma, No HTTP!	"Look Ma, No HTTP! [EuroPython 2019 - Talk - 2019-07-12 - Shanghai] [Basel, CH] By Miguel Grinberg In this talk I'm going to live code a web application that is built exclusively on top of WebSocket, without using HTTP at all! What's the benefit of using WebSocket over HTTP, you may ask? With WebSocket each client establishes a permanent connection to the server, so there is no request/response cycle and no need for the client to poll the server for data. Each side can freely send data to the other side at any time, so this is an ideal stack for building highly dynamic, event-driven applications. For this live coding exercise I'm going to use the Socket.IO server for Python, and the Socket.IO client for JavaScript. No Flask, no Django, no HTTP! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT58M47S	3527	2d	hd	false	https://i.ytimg.com/vi/dfe8MUdSoXs/maxresdefault.jpg		480	12	0	0	1
58	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fEy68VRmOeQ	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Radoslav Georgiev - Software patterns for productive teams	"Software patterns for productive teams [EuroPython 2019 - Talk - 2019-07-12 - MongoDB] [Basel, CH] By Radoslav Georgiev Software development is a team game. When we want to deliver more work, one of the variables that we can change is the team size. But as we all know, increasing the team size does not automatically translate into increased productivity &amp; more features shipped. If things are left unmanaged, people can step on each other toes, block each other &amp; generally decrease the overall productivity of a given software project. In this talk we'll identify different problems teams can face &amp; see how we can solve them using different strategies &amp; patterns. In the end, we want to enable the team to perform better &amp; ship features with high confidence. We want enable the team &amp; put its potential into building good software. Problems we are going to cover: Constant merge conflicts / working in the same files Blocking each other on different features / Feature deadlock Constantly switching between bugfixing &amp; feature development Constant regressions and things breaking down Fighting with local setup &amp; not being able to properly test things, especially when working with 3rd parties Merge strategies &amp; improving the work with git &amp; GitHub Communication between team members &amp; ego fights For each problem, we are going to propose different solutions with provided real-life examples from our experience &amp; projects. The examples show are going to be in the context of large Python / Django projects. This talk is the natural sequel of the following talks from previous EuroPythons: EuroPython 2017 - Practical Debugging - Tips, Tricks and Ways to think - https://www.youtube.com/watch?v=9Ys4gCUtTh8 EuroPython 2019 - Django structure for scale and longevity - https://www.youtube.com/watch?v=yG3ZdxBb1oo License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT43M32S	2612	2d	hd	false	https://i.ytimg.com/vi/fEy68VRmOeQ/maxresdefault.jpg		475	14	0	0	1
59	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hlqwf6lkPj0	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Mikhail Bushkov, Max Vogler - Evolving a helper script into a 180,000-lines-of-Python-code project	"Evolving a helper script into a 180,000-lines-of-Python-code project [EuroPython 2019 - Talk - 2019-07-12 - Singapore] [Basel, CH] By Mikhail Bushkov, Max Vogler GRR Rapid Response (https://github.com/google/grr) is an incident response framework focused on remote live forensics. It consists of a Python client (agent) that is installed on target systems, and Python server infrastructure that can manage and talk to clients. The goal of GRR is to support forensics and investigations in a fast, scalable manner to allow analysts to quickly triage attacks and perform analysis remotely. GRR was started at Google in 2009 as a simple Python helper script used by Incident Response engineers. Eventually a little Python script got a little server component, was adapted to run on multiple systems (Mac, Linux, Windows), then a little UI was added and a few nice features were introduced (large-scale hunts, collection of predefined artifacts, memory analysis). A helper script has eventually evolved into a sophisticated framework with 180,000 lines of Python code. In the presentation we’ll talk about the process of evolving a small prototype-like Python project into a production-ready system, using GRR as an example. The topics that we’ll cover are: * Taking shortcuts - both in terms of design and implementation. Reasons for taking them and their eventual costs. * Relying on Python’s power features (i.e. meta-classes, mixins)? Long-term consequences on maintainability and readability. * Organising the project into separate PyPI packages - benefits of doing that. * Continuous integration, testing and automated builds for various platforms - implementation costs and maintainability effects. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT43M52S	2632	2d	hd	false	https://i.ytimg.com/vi/hlqwf6lkPj0/maxresdefault.jpg		194	6	0	0	0
60	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kFixTiYGWfk	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Clinton Roy - Running a Synchrotron on Open Source Python	"Running a Synchrotron on Open Source Python [EuroPython 2019 - Talk - 2019-07-12 - MongoDB] [Basel, CH] By Clinton Roy A synchrotron is a large research facility that has a large software stack to keep things running, fortunately a large chunk of the stack is Open Source and fair chunk of it is Python to boot. By the end of the talk attendees will understand the scale of the infrastructure (both physical and software) that is required, and have an idea of what sort of problems a synchrotron could help them solve. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT39M29S	2369	2d	hd	false	https://i.ytimg.com/vi/kFixTiYGWfk/maxresdefault.jpg		82	1	0	0	0
61	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lrDZo9Kmzjg	2019-10-01T09:01:45Z	2019-10-01 09:01:45	EuroPython 2019 - Closing Session	"Closing Session [EuroPython 2019 - - 2019-07-12 - MongoDB] [Basel, CH] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT10M7S	607	2d	hd	false	https://i.ytimg.com/vi/lrDZo9Kmzjg/maxresdefault.jpg		44	1	0	0	0
62	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	o1Vue9CWRxU	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Bernat Gabor - status quo of virtual environments	"status quo of virtual environments [EuroPython 2019 - Talk - 2019-07-12 - MongoDB] [Basel, CH] By Bernat Gabor Python is easy to learn and use programming language; however, managing dependencies and package versions for it are nowhere as pleasant. One of the basic building block created to help with this is virtual environments. Join me in understanding how virtual environments work from within (by one of the project maintainers); also, to find out if the good old virtualenv project has any place left, now that Python 3.4+ contains venv. This talk is aimed to be a bit more technical in its first parts, presenting in technical details what a virtualenv is. The target audience is anyone who used virtual environments and wants to understand how they tick from within. I’ll also emphasise diversity and inclusion at Python interpreter level by highlighting other interpreters than CPython: Jython, PyPy or Iron Python. A concise outline goes as follows: What is a virtual environment? - why we need it - what we use it for - demo - virtualenv vs system env How do we build a virtual environment (CPython) - technical workflow of venv creation - activation -- bash -- powershell -- cmd.bat Other interpreters - why other than CPython? - PyPy - Jython - virtualenv - all Python support - extra activation - xonosh Summary and q/a License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M56S	1796	2d	hd	false	https://i.ytimg.com/vi/o1Vue9CWRxU/maxresdefault.jpg		1085	10	1	0	3
63	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	p6R1h2Nn468	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Peter Sperl - Configuring uWSGI for Production: The defaults are all wrong	"Configuring uWSGI for Production: The defaults are all wrong [EuroPython 2019 - Talk - 2019-07-12 - Singapore] [Basel, CH] By Peter Sperl Two years ago, we began migrating from a proprietary service framework to a WSGI-compliant one. We chose uWSGI as our host because of its performance and feature set. But, while powerful, uWSGI's defaults are driven by backward compatibility and are not ideal for new deployments. Powerful features can be overlooked due to the sheer magnitude of its feature set and spotty documentation. As we've scaled up the number of services hosted by uWSGI over the last year, we've had to tweak our standard configuration. In this talk, we'll present the base uWSGI configuration we use as a starting point for all services, as well as some tips to avoid known gotchas and provide a base level of defensiveness and high reliability. This base configuration makes use of several ""no-cost"" uWSGI features that help protect services from common, yet difficult to prevent issues -- some of which we discovered the hard way. We'll also talk about some programmatic uWSGI features which can be leveraged to improve reliability and improve outage response. Some of the topics we'll cover include: - Mitigating memory leaks - Mitigating stuck, hung, or infinitely looping processes - Preventing misconfigurations - Preventing wasted development effort - Improving outage response License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT31M3S	1863	2d	hd	false	https://i.ytimg.com/vi/p6R1h2Nn468/maxresdefault.jpg		854	18	0	0	0
64	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pSS3fV8DkQY	2019-10-01T09:01:45Z	2019-10-01 09:01:45	EuroPython 2019 - Sprint Orientation	"Sprint Orientation [EuroPython 2019 - - 2019-07-12 - MongoDB] [Basel, CH] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT14M25S	865	2d	hd	false	https://i.ytimg.com/vi/pSS3fV8DkQY/maxresdefault.jpg		40	0	0	0	0
65	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	plAnsL8oZeM	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Radosław Ganczarek - Code quality in Python	"Code quality in Python [EuroPython 2019 - Talk - 2019-07-12 - Boston] [Basel, CH] By Radosław Ganczarek Four years ago I talked about code quality during EuroPython in Bilbao. A lot of things changed from that time. Firstly, most tools I presented were still developed and gained new features, but also new ones appeared I wanted to discuss with you. Secondly, Python changed, Python 3 has type hints on board and there is a new tool dedicated to checking the types. Thirdly - I changed. I'm more distanced form my zealous approach from four years ago. I got real and reasonable. That's why I wanted to talk about code quality tools in Python again. I'll talk about all the software that can make code review a bit simpler by pointing out possible errors, duplicates or unused code. I'll talk again about formatters and how can they be used in modern-time projects. And I'll talk about hobgoblins, if you know what I mean :) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT26M54S	1614	2d	hd	false	https://i.ytimg.com/vi/plAnsL8oZeM/maxresdefault.jpg		314	6	1	0	1
66	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	prfgtpdeoNA	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Holger Krekel - Delta Chat, CFFI, pytest and all the Rust	"Delta Chat, CFFI, pytest and all the Rust [EuroPython 2019 - Talk - 2019-07-12 - Boston] [Basel, CH] By Holger Krekel Delta Chat, a new approach to decentralized messaging, uses Python in several ways. Delta Chat is a Whatsapp/Telegram-style messenger app which uses the existing e-mail server network instead of central servers. There is no address book upload, and no necessity to tie accounts to mobile numbers. We'll live-demo how ""Chat over E-mail"" works, with random audience members, in real-time. We'll then look into how Python is used for automated testing (with pytest) against the messenger core library which is exposed through CFFI. However, the core library will soon be ported to full Rust. Are there better ways to interface Rust with Python than going through C-interfaces? In the third part we'll introduce first example Chat Bots, written in Python. Do you want to send an machine-generated system allert to a sysadmin group? Or safely archive all media that is posted to a family group? Or have your IoT sensor react to commands or send info? Just do it without registering a bot to some central cite, or by exposing all content information to (e. g. Telegram) servers. A Chat Bot only needs access to a standard IMAP/SMTP account. We'll look at the simple Python API for writing and testing powerful and versatile Chat bots. Delta Chat: https://delta.chat Core library and Py bindings: https://github.com/deltachat/deltachat-core Deltabot: https://github.com/deltachat/deltabot/ License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT1H2M12S	132	2d	hd	false	https://i.ytimg.com/vi/prfgtpdeoNA/maxresdefault.jpg		180	0	0	0	0
67	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rXxPpxDQ22s	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Danny Engelbarts - And now for something completely different.	"And now for something completely different. [EuroPython 2019 - Talk - 2019-07-12 - Singapore] [Basel, CH] By Danny Engelbarts The goal of this talk is to show the audience a different way of thinking about and developing regex statements. I have been working with UNIX for decades now and, although i always managed to avoid Perl, i have been intrigued with Regex constructs ever since my first encounter. These weird unreadable things that can transform text like nothing else or can find what i’m looking for in massive files, in no time at all. I’ve created regexes that only appeal to the most nerdiest of nerds and i’ve stunned colleagues by fixing their futile regex attempts in just a few keystrokes. But when Damian Conway showed me how regexes really work i was awestruck. And now i want to share this knowledge. This talk is aimed at pythonistas that have some experience with the re module. I will take some easy examples and explain in plain english how a regex engine searches for a match. This will show that a regex is not some mysterious incomprehensible pattern description or declarative blueprint. Instead it is a small program that is very good at comparing single characters. Like any programming language it turns out that once you understand the rules and structure it suddenly becomes so much easier to use. With this new found knowledge we will up the ante and try some more difficult stuff, adding other semantics and some tips and tricks. We’ll look at some pitfalls, maybe compare regex to python solutions and have a look at some regexes found in the wild (either on my drive or on github). License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT44M22S	2662	2d	hd	false	https://i.ytimg.com/vi/rXxPpxDQ22s/maxresdefault.jpg		99	0	0	0	0
68	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sW76-pRkZk8	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Lynn Root - Advanced asyncio: Solving Real-world Production Problems	"Advanced asyncio: Solving Real-world Production Problems [EuroPython 2019 - Talk - 2019-07-12 - MongoDB] [Basel, CH] By Lynn Root By building a simplified chaos monkey service, we will walk through how to create a good foundation for an asyncio-based service, including graceful shutdowns, proper exception handling, and testing asynchronous code. We’ll get into the hairier topics as well, covering topics like working with synchronous code, debugging and profiling, and working with threaded code. We’ll learn how to approach asynchronous and concurrent programming with Python’s asyncio library, take away some best practices, and learn what pitfalls to avoid. Outline: (40 minutes + 5 min Q&amp;A, if unable to get 45 minutes, then 30 min slot with no time for Q&amp;A) Intro (2m) Speaker/company intro Setting the context/purpose of talk Foundations (9m - trimmed to 6m for 30 min slot) Initial setup of an asyncio service (2m) --- Required boilerplate code --- Inspiration from official asyncio tutorial docs Making a service emactually/em concurrent (5m) --- non-blocking vs concurrent --- when to be concurrent vs serial --- using callbacks vs awaits vs scheduling tasks (create_task) vs asyncio.Events --- Making synchronous code asyncio-friendly (2m) Intermediate (9m - trimmed to 6m for 30 min slot) Graceful shutdowns (3m) --- What a signal handler is, why it’s needed --- What signals to listen to --- Gotchas of cancelling tasks, asyncio.shield + shutdown behavior Exception handling (3m) --- Difference between top-level exception handling and handling within other coroutines --- Avoid mistakenly swallowing/missing raised exceptions --- Making use of loop.setemexception/emhandler Making threaded code asyncio-“friendly” (3m) --- Calling threaded code from coroutines (aka running within a ThreadPoolExecutor) --- Calling coroutines from from threaded code (aka runemcoroutine/emthreadsafe) Advanced (19m - trimmed to 15m for 30 min slot) Testing asyncio code (7m) --- Benefits of debug mode --- How to mock coroutines Debugging an asyncio service (5m) --- Reinforce debug mode --- Using “tricks"" like codeasyncio.all_tasks/code with logging, codeloop.slow_callback_duration/code, adding context/stack trace in default exception handler Profiling (7m) --- Basic profiling (cProfile, strace) - not that different from sync code --- Continuous profiling with 3rd party tools, i.e. github.com/what-studio/profiling --- PyCharm’s asyncio &amp; thread profiler --- How to properly trace a workflow/request (e.g. for the purpose of distributed tracing) (to be cut if not enough time) Wrap up/Review (1m) /ol License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT40M3S	2403	2d	hd	false	https://i.ytimg.com/vi/sW76-pRkZk8/maxresdefault.jpg		1797	53	1	0	2
69	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xUXsIDtlv9s	2019-10-01T09:01:45Z	2019-10-01 09:01:45	Andrey Vlasovskikh - The Story of Features Coming in Python 3.8 and Beyond	"The Story of Features Coming in Python 3.8 and Beyond [EuroPython 2019 - Talk - 2019-07-12 - Singapore] [Basel, CH] By Andrey Vlasovskikh What's coming in Python 3.8? You can learn it by yourself by reading an excellent document a href=""https://docs.python.org/3.8/whatsnew/3.8.html""What's New in Python 3.8/a. I'm not going to retell this document. Instead I'll focus on things barely described there or not mentioned at all: Why will the new features appear in Python 3.8 and what's the story behind them? What is being discussed and developed now, but won't appear in Python 3.8? I'll share the news I learned at PyCon 2019 from the talks and discussions with Python core developers. I'll mention the following topics: New syntax: codex := expr/code, codef(..., /, ...)/code, codef'{expr=}'/code New types: codeLiteral/code, codeFinal/code, codeTypedDict/code Future features of typing and async/await New approaches to optimizing Python: sub-interpreters, mypyc License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT30M28S	1828	2d	hd	false	https://i.ytimg.com/vi/xUXsIDtlv9s/maxresdefault.jpg		1001	11	1	0	2
70	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	38uCu6ZEvfo	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Patrick Arminio - GraphQL in Python 🍓	"GraphQL in Python 🍓 [EuroPython 2019 - Talk - 2019-07-11 - MongoDB] [Basel, CH] By Patrick Arminio Over the past few years GraphQL has gained much traction, but what’s the state of GraphQL in Python. This talk describes what GraphQL is, why it has been created and the current state of GraphQL libraries in Python. There will be a short history of GraphQL, some examples of what makes it shine and why it can be preferred to REST. We will also analyse the current state of GraphQL in Python, having a brief overview of the current libraries and then having an in-depth look at Strawberry a new library based on dataclasses that makes it easy to create GraphQl APIs in Python. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT26M47S	1607	2d	hd	false	https://i.ytimg.com/vi/38uCu6ZEvfo/maxresdefault.jpg		2225	39	0	0	1
71	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	41ubI6a3jzI	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Nar Kumar Chhantyal - Building Data Workflows with Luigi and Kubernetes	"Building Data Workflows with Luigi and Kubernetes [EuroPython 2019 - Talk - 2019-07-11 - PyCharm] [Basel, CH] By Nar Kumar Chhantyal This talk will focus on how one can build complex data pipelines in Python. I will introduce Luigi and show how it solves problems while running multiple chain of batch jobs like dependency resolution, workflow management, visualisation, failure handling etc. After that, I will present how to package Luigi pipelines as Docker image for easier testing and deployment. Finally, I will go through way to deploy them on Kubernetes cluster, thus making it possible to scale Big Data pipelines on-demand and reduce infrastructure costs. I will also give tips and tricks to make Luigi Scheduler play well with Kubernetes batch execution feature. This talk will be accompanied by demo project. It will be very beneficial for audience who have some experience in running batch jobs (not necessarily in Python), typically people who work in Big Data sphere like data scientists, data engineers, BI devs and software developers. Familiarity with Python is helpful but not needed. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M25S	1765	2d	hd	false	https://i.ytimg.com/vi/41ubI6a3jzI/maxresdefault.jpg		758	16	1	0	0
72	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9CdCczxwuZ4	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Brad Miro - Deep Learning with TensorFlow 2.0	"Deep Learning with TensorFlow 2.0 [EuroPython 2019 - Talk - 2019-07-11 - Osaka / Samarkand [PyData track] [Basel, CH] By Brad Miro Learn about the updates being made to TensorFlow in its 2.0 version. We’ll give an overview of what’s available in the new version as well as do a deep dive into an example using its central high-level API, Keras. You’ll walk away with a better understanding of how you can get started building machine learning models in Python with TensorFlow 2.0 as well as the other exciting available features! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT32M15S	1935	2d	hd	false	https://i.ytimg.com/vi/9CdCczxwuZ4/maxresdefault.jpg		749	23	0	0	1
73	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DKns_rH8rrg	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Antonio Cuni - How to write a JIT compiler in 30 minutes	"How to write a JIT compiler in 30 minutes [EuroPython 2019 - Talk - 2019-07-11 - MongoDB] [Basel, CH] By Antonio Cuni Real-world JIT compilers like PyPy and Numba are complex and advanced. However, the basic ideas behind JIT compilers are easy to understand, as this talk aim to show. This is a live-coding exercise: we will start from a blank page and write a working (albeit simple and limited) JIT compiler from scratch. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT40M40S	2440	2d	hd	false	https://i.ytimg.com/vi/DKns_rH8rrg/maxresdefault.jpg		1072	14	2	0	0
74	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HHiEQRX7nO4	2019-09-23T18:20:48Z	2019-09-23 18:20:48	EuroPython 2019 - Recruiting Session	Recruiting Session [EuroPython 2019 - - 2019-07-11 - Osaka / Samarkand [PyData track]] [Basel, Switzerland] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT49M35S	2975	2d	hd	false	https://i.ytimg.com/vi/HHiEQRX7nO4/maxresdefault.jpg		112	2	0	0	0
75	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JcdY2SxAFqY	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Michele Simionato - Tips for the scientific programmer	"Tips for the scientific programmer [EuroPython 2019 - Talk - 2019-07-11 - PyCharm] [Basel, CH] By Michele Simionato This is a talk for people who need to perform large numeric calculations. They could be scientists, developers working in close contact with scientists, or even people working on finance and other quantitative fields. Such people are routinely confronted with issues like 1 parallelism: how to parallelize calculations efficiently 2 data: how to store and manage large amounts of data efficiently 3 memory: how to avoid running out of memory 4 performance: how to be fast The goal of the talk is to teach some lessons learned after several years of doing numeric simulations in a context were micro-optimizations are the least important factor, while overall architecture, design choices and good algorithms are of paramount importance. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT45M15S	2715	2d	hd	false	https://i.ytimg.com/vi/JcdY2SxAFqY/maxresdefault.jpg		212	3	1	0	0
76	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	KDb-dW0FqZE	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Iulia Avram - Gamifying the study of algorithms	"Gamifying the study of algorithms [EuroPython 2019 - Talk - 2019-07-11 - Osaka / Samarkand [PyData track] [Basel, CH] By Iulia Avram Do you remember when you used to learn algorithms? It was probably either back when you were studying for your degree, or when you were brushing up for a technical interview. If you're like most of the developers I know, solving algorithms probably went from being a fun past-time, to a bothersome necessity, to a thing of the past. Our life has been greatly improved by our tools and there's little need to know all sorting methods out there, or how to search through a tree. Or maybe we're wrong, maybe knowing these things could make a difference in how we write code. I am going to try to dispel some of the myths surrounding the study of algorithms and competitive programming, and argue that sharpening this skill is something that benefits us, as software developers, outside of passing technical tests; that knowing many algorithms makes us better and faster problem solvers. Lastly, this talk is about resources and ways in which to gamify the study of algorithms. Going at it the same way as for exams or interviews makes it very bothersome very quickly. It gets easy to lose sight of the biggest picture and to start thinking of algorithms in abstract terms, outside their applications. All these are factors that prompt the question: why should I carry on with it? Therefore, something needs to be changed in the way we do this. Algorithms are fun and they don't deserve the disdain we give them. Knowing algorithms is not only for the geniuses and innovators. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M31S	1831	2d	hd	false	https://i.ytimg.com/vi/KDb-dW0FqZE/maxresdefault.jpg		232	4	0	0	1
77	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NS8aU-Rpfvg	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Christian Heimes - Introduction to low-level profiling and tracing	"Introduction to low-level profiling and tracing [EuroPython 2019 - Talk - 2019-07-11 - MongoDB] [Basel, CH] By Christian Heimes Python has built-in tracing and profiling facilities in form of callback hooks in the sys module. The settrace and setprofile callbacks have several drawbacks. They slow down the Python interpreter considerable and only allow tracing of Python code. Modern OS and CPUs come with a variety of APIs for efficient and low-level tracing down to system calls, Kernel space code, and hardware events. Some tools even create code that runs in Kernel space. This talks is an introduction and comparison of various low and high level tools for profiling and tracing as well as visualization tools like flame graphs. It covers ptrace, perf, SystemTap, and BCC/eBPF. Ptrace based commands like strace are easy to use but slow. Perf allows lightweight profiling of hardware events and CPU instructions. SystemTap is a powerful toolkit plus DSL to instrument probe points inside the Kernel as well as static SystemTap/DTrace markers in libs and languages like Java, PHP, and Python. CPython comes with a set of instrumentations for SystemTap. BCC is a collection of tools that run as JIT optimized eBPF code in Kernel space. The talk is an introduction to basic concepts of low-level tracing and profiling on Linux. The main goal is the show the potential of the tools. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT45M21S	2721	2d	hd	false	https://i.ytimg.com/vi/NS8aU-Rpfvg/maxresdefault.jpg		386	10	0	0	0
78	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	O1y96EG0bTw	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Philipp Thomann - PlotVR - walk through your data	"PlotVR - walk through your data [EuroPython 2019 - Talk - 2019-07-11 - Osaka / Samarkand [PyData track] [Basel, CH] By Philipp Thomann Are you bored by 3D-plots that only give you a simple rotatable 2d-projection? plotVR is an open source package that provides a simple way for data scientists to plot data, pick up a phone, get a real 3d impression - either by VR or by AR - and use the computer's keyboard to walk through the scatter plot: precodehttps://www.github.com/thomann/plotVR /code/pre After installing and plotting your dataframe open your phone's browser and use your GoogleVR Cardboard. Furthermore performant Android- and iOS-apps are available - both support VR-Cardboard and the iOS-Version also AR. Once you are immersed in your Cardboard how do you navigate through the scatter? plotVR lets you use the computer's keyboard to walk as you would in any first person game. You want to share your impression? Just save the HTML and publish it. The technologies beneath this project are: a web server that handles the communication between the DataScience-session and the phone, WebSockets to quickly proxy the keyboard events, QR-codes facilitate the simple pairing of both, and an HTML-Page on the computer to grab the keyboard events. And the translation of these keyboard events into 3D terms is a nice exercise in three.js, OpenGL, and SceneKit for HTML, Android, and iOS resp. Ready to see your data as you have never seen before? Join the talk! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT26M35S	1595	2d	hd	false	https://i.ytimg.com/vi/O1y96EG0bTw/maxresdefault.jpg		122	2	0	0	0
79	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QxGHvF8BVYQ	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Athina Frantzana - Are women underrepresented in the High Performance Computing (HPC) community?	"Are women underrepresented in the High Performance Computing (HPC) community? [EuroPython 2019 - Keynote - 2019-07-11 - MongoDB] [Basel, CH] By Athina Frantzana This study is the first attempt to understand the current gender demographics of the HPC community, and identify potential reasons and ways to tackle the gender imbalance. By listening to the people who constitute the community, the study offers a guideline on what the HPC community should focus on in order to become more attractive, accessible and useful to everyone. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT42M13S	2533	2d	hd	false	https://i.ytimg.com/vi/QxGHvF8BVYQ/maxresdefault.jpg		304	10	7	0	5
80	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UaFSnaYh2b8	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Christoph Deil - Understanding Numba - the Python and Numpy compiler	"Understanding Numba - the Python and Numpy compiler [EuroPython 2019 - Talk - 2019-07-11 - PyCharm] [Basel, CH] By Christoph Deil Do you have numerical code written in Python and Numpy? Do you wish it ran faster, using the full potential of your CPU? Then you should try Numba, a JIT compiler that translates a subset of Python and Numpy code into fast machine code. This talk will explain how Numba works, and when and how to use it for numerical algorithms, focusing on how to get very good performance on the CPU. To understand this talk, only a basic knowledge of Python and Numpy is needed. You will learn how Python compiles functions to bytecode and how Numba compiles bytecode to machine code. Why algorithms implemented using Numpy sometimes don't yield great performance, and how to do better using Numba. You will learn about the @numba.jit and @numba.vectorize decorators and how to create functions that use the CPU well by using e.g. multi-threading (several CPU cores), vector instructions (single instruction multiple data) and fast math (trade float accuracy for speed). You will also learn when it does and doesn't make sense to use Numba, by contrasting it briefly with some other options for high-performance computing from Python: PyPy, C, C++, Cython, Numexpr, Dask, PyTorch, Tensorflow and Google JAX License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M29S	1829	2d	hd	false	https://i.ytimg.com/vi/UaFSnaYh2b8/maxresdefault.jpg		1694	30	0	0	0
81	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YKEuaN4CWU0	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Alexander Hendorf - Explaining AI to Managers 👨‍💼🤖👩‍💼	"Explaining AI to Managers 👨‍💼🤖👩‍💼 [EuroPython 2019 - Talk - 2019-07-11 - Osaka / Samarkand [PyData track] [Basel, CH] By Alexander CS Hendorf Artificial intelligence promises great value. The technology is mostly understood only by few, yet still unexplainable even for experts. In this talk I'll present how to narrow the hype down to real value explainable to everyone in your organisation - without the math. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M29S	1829	2d	hd	false	https://i.ytimg.com/vi/YKEuaN4CWU0/maxresdefault.jpg		210	6	0	0	0
82	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ac5b8LyHJcQ	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Mario Corchero - Exceptional Exceptions	"Exceptional Exceptions [EuroPython 2019 - Talk - 2019-07-11 - PyCharm] [Basel, CH] By Mario Corchero Did you know there are multiple ways to raise and capture exceptions? Have you ever wondered if you should raise a built-in exception or create your own hierarchy? Did you ever find it hard to understand what an exception meant? This talk will go through the decisions needed to raise and capture exceptions when creating a library. We will look at how to translate and handle errors, create your own exceptions, and make exceptions clear and easy to troubleshoot, while also understanding how they actually work, common pitfalls. This talk will enable intermediate developers to leave the room with a solid understanding of how to work effectively with exceptions. As the exception flow usually goes untested, this will help prevent frustrating situations when errors occur that are not easy to understand or when an unexpected result is produced. The talk will delve into the different ways of working with exceptions. We will illustrate this with a real-world example to which many developers will be able to relate. Following the talk, intermediate developers will leave the room more informed and better prepared to create and handle exceptions, having learned about many utilities that were already available to them, but were never used or were used improperly. The not-so-advanced Pythonistas will get an in-depth dive into exceptions. Even if they might not be able to grasp all of the content, they will get a sense of the features that most programmers are unaware of and learn to use them when the proper situation arrives. Advanced programmers will find this to be a humorous talk that will certainly teach them at least one new thing, as I will dive into parts of the grammar of Python that even many advanced programmers are not used to. The talk is also full of niche information like why the variable that catches exceptions doesn’t like outside of the codeexcept/code scope. The talk is comprised of four main sections preceded by an introduction to the problem and a conclusion with time for questions at the end. We will look at how to raise, capture, create and design exceptions, offering tips and pitfalls in each section. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT27M44S	1664	2d	hd	false	https://i.ytimg.com/vi/ac5b8LyHJcQ/maxresdefault.jpg		339	13	0	0	0
83	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	gJtE-anbcww	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Raphael Pierzina - Advanced pytest	"Advanced pytest [EuroPython 2019 - Talk - 2019-07-11 - PyCharm] [Basel, CH] By Raphael Pierzina There are many reasons why I think pytest is a fantastic test framework: assertion introspection, setup and teardown with fixtures, parametrized tests. But plugins are the real game changer! We'll dive right into customizing a test suite by developing a series of pytest plugins based on a few neat hacks. We'll learn how to automatically add markers to slow running tests, run only tests that use a fixture which can be specified on the CLI, generate test reports in a custom format, and automatically create GitHub issues for test regressions. We'll wrap up this talk by using Cookiecutter to create Python packages from our plugins that are ready to be published on PyPI. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT53M29S	3209	2d	hd	false	https://i.ytimg.com/vi/gJtE-anbcww/maxresdefault.jpg		2202	31	1	0	2
84	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	knj2-VcF2d8	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Ronan Lamy - Opening PyPy's magic black box	"Opening PyPy's magic black box [EuroPython 2019 - Talk - 2019-07-11 - MongoDB] [Basel, CH] By Ronan Lamy PyPy is a fast and compliant implementation of Python. In other words, it's an interpreter for the Python language that can act as a full replacement for the reference interpreter, CPython. It's optimised to enable efficient just-in-time (JIT) compilation of Python code to machine code, and has releases matching versions 2.7, and 3.6. It now also supports the main pillars of the scientific ecosystem (numpy, Cython, scipy, pandas, ...) thanks to its emulation layer for the C API of CPython. The PyPy JIT is often just described as ""magically running your code faster"", but is actually what is known as a ""meta-tracing JIT"". A tracing JIT optimises loops by recording and optimising a single, hopefully representative, execution of the loop. While crude, that approach is known to be effective for just-in-time compiler. Additionally, PyPy's JIT is ""meta"" in the sense that it traces the execution of the interpreter while it runs some user-code instead of tracing the user-code directly. This again simplifies the compiler. We will explore how all this works together and is implemented (spoiler: it's Python all the way down!). This talk assumes no prior knowledge of compiler theory nor of PyPy internals, and should be of interest to anybody who wishes that their pure-Python code would run faster. The audience will gain a firmer understanding of how PyPy operates and optimises code, and how to how to get the most out of the PyPy JIT. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT45M32S	2732	2d	hd	false	https://i.ytimg.com/vi/knj2-VcF2d8/maxresdefault.jpg		277	3	1	0	0
85	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lxh4lsvEBhI	2019-09-23T18:20:48Z	2019-09-23 18:20:48	Stefan Behnel - Get up to speed with Cython 3.0	"Get up to speed with Cython 3.0 [EuroPython 2019 - Talk - 2019-07-11 - PyCharm] [Basel, CH] By Stefan Behnel Processing lots of data, in need of more speed, or struggling to make use of native code? The Cython compiler for Python solves all of these problems in a pythonic way, by compiling Python code to optimised C code. Cython [1] has a very long history of faithfully helping users to solve their Python performance problems and integrating native code into Python in production critical settings, while stimulating somewhat less confidence with its 0.x versioning scheme. For the next Cython version, a stable 3.0 release, we are planning to clean up several historically grown issues in the language to make the Cython compiler more friendly for modern Python users to work with. In this talk, I will show how Cython can be used for compiling and speeding up Python code, using fast native data structures and libraries. I will then give an overview of the changes that are on their way for the 3.0 release and how they will affect the user experience. [1] https://cython.org License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT46M30S	2790	2d	hd	false	https://i.ytimg.com/vi/lxh4lsvEBhI/maxresdefault.jpg		4227	79	3	0	3
86	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	01wVpwu4sV4	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Maria Molina-Contreras - “When a biologist met Python”	"“When a biologist met Python” [EuroPython 2019 - Talk - 2019-07-11 - Singapore [PyData track] [Basel, CH] By Maria Molina-Contreras Biology and computing are closer than we usually think, for example many algorithms are inspired in biology patterns, and complementary to that, researchers needs special algorithms to have a better understanding of our environment. Thus, there is a strong relation an dependency. In the past years, Biology has been transformed into computational biology. Therefore technological advances helps us to predict physical interactions between atoms and DNA, because we are being able to integrate information from biology into algorithms. Python has become a popular programming language in biosciences because it has a clean syntax that makes it easy to read language. In addition to this, there are many modules (toolkits) extending to different biological domains, like metabolomics, structure analysis, phylogenomics, molecular biology and others. Python is currently improving researcher’s workflow, helping us to focus on the theory or experimental part, instead of fighting with old buggy applications. This talk aims to be oriented to all audiences (with/without biological background) since we will go together through an amazing adventure into the natural sciences using tools like Biopython, Bokeh, Networkx, Ecopy and much more! Are you brave enough to follow me on this journey? License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT24M59S	1499	2d	hd	false	https://i.ytimg.com/vi/01wVpwu4sV4/maxresdefault.jpg		266	12	0	0	0
87	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	25P5apB4XWM	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Michał Karzyński - From Python script to Open Source Project	"From Python script to Open Source Project [EuroPython 2019 - Talk - 2019-07-11 - Boston] [Basel, CH] By Michał Karzyński Did you write a cool and useful Python script? Would you like to share it with the community, but you're not sure how to go about that? If so, then this talks is for you. We'll go over a list of simple steps which can turn your script into a fully fledged open-source project. The Python community has a rich set of tools which can help verify the quality of your code through automated code-review and linting. You can benefit by taking advantage of this ecosystem. Complete the steps in this checklist, and your project will be easier to maintain, you'll be ready to take contributions from the community and those contributions will be up to high standards. Your project will also keep up with other projects on PyPI and you will be alerted if any new release causes an incompatibility with your code. The same checklist can be used for non open-source projects as well. The project maturity checklist includes: Properly structure your code Use a setup.py file Add entry_points for your script command Create a requirements.txt file Use Black to format your code Create a tox.ini config and include code linters Set up a Git repo Refactor your code to be unit-testable and add tests Add missing docstrings Add type annotations and a MyPy verification step Upload to GitHub Add a continuous integration service (e.g. Travis) Add a requirements updater (e.g. pyup.bot) Add test coverage checker (e.g. coveralls) Add a Readme file and documentation Publish your project on PyPI Advertise your project License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT32M36S	1956	2d	hd	false	https://i.ytimg.com/vi/25P5apB4XWM/maxresdefault.jpg		505	12	0	0	0
88	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4KKjo9WwvVA	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Paul Hughes - Building Data-Driven Client Relationship Management in Banking with Python	"Building Data-Driven Client Relationship Management in Banking with Python [EuroPython 2019 - Talk - 2019-07-11 - Singapore [PyData track] [Basel, CH] By Paul Hughes This is a case study that documents how a small data science team in a big bank took on the challenge to transform a fragmented sales process into a data-driven one using Python and machine learning. This talk outlines the various ways Python has been instrumental in delivering a production solution that serves advisers and relationship manager on a continuous basis. The Challenge - A bank has many clients with diverse needs and cost pressures mean fewer advisers resulting in reduced client coverage. - Multiple sales channels and mixed service levels meant sales processes were uncoordinated and driven by heuristics and often very subjective. - And... Excel sheets everywhere! Solution - Go data-driven! - Learn from clients and understand product usage - Empower and inform advisers and call centre agents - Build a front-to-back sales process (no more Excels!) - How? With Python! The Python Bits - Scikit learn machine learning pipelines that implement two distinct approaches to product affinity in banking and wealth management - SQL Alchemy based API for data engineering and rapid prototyping of analytics - Pandas and Jupyter for development and collaboration - Luigi pipeline for daily processing of millions of transactions and engineering features - Extracting features from text with NLP (Spacy) - Delivering machine learning interpretability in production, e.g. with Random Forests and treeinterpreter - A Python module that we built with all the reusable bits: building training and prediction datasets, developing pipelines, generating monitoring data and enabling explainability License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement	28	Science & Technology	PT31M21S	1881	2d	hd	false	https://i.ytimg.com/vi/4KKjo9WwvVA/maxresdefault.jpg		315	9	0	0	0
89	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5NV5QWMGzcc	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Stephan Jaensch - Testing Microservices: fast and with confidence	"Testing Microservices: fast and with confidence [EuroPython 2019 - Talk - 2019-07-11 - Shanghai] [Basel, CH] By Stephan Jaensch A main advantage of microservices is improved developer velocity. One roadblock to achieving it is giving developers the confidence that their changes are correct and safe, which is a challenging problem in such a distributed architecture. Typical approaches involve relying on automated end-to-end testing, which is costly to set up, develop tests for and run. In this talk I will explore an approach to testing that does not require the presence of any external dependencies (not even ""fake"" or ""test double"" implementations of them), but provides many of the benefits of an end-to-end test. Come by to learn about how we can use a downstream service's API specification to make sure the system under test interacts with it in the correct way (""contract testing"") - a key ingredient missing from most unit or integration test setups. We'll then go even further to cover testing scenarios that previously could only be covered with end-to-end tests: how to maintain and validate state of your downstream dependencies. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT23M35S	1415	2d	hd	false	https://i.ytimg.com/vi/5NV5QWMGzcc/maxresdefault.jpg		258	4	0	0	0
90	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5ck1wObN65c	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Alejandro Saucedo - The state of Machine Learning Operations in 2019	"The state of Machine Learning Operations in 2019 [EuroPython 2019 - Talk - 2019-07-11 - Singapore [PyData track] [Basel, CH] By Alejandro Saucedo This talk will provide an overview of the key challenges and trends in the productization of machine learning systems, including concepts such as reproducibility, explainability and orchestration. The talk will also provide a high level overview of several key open source tools and frameworks available to tackle these issues, which have been identifyed putting together the Awesome Machine Learning Operations list (https://github.com/EthicalML/awesome-machine-learning-operations). The key concepts that will be covered are: * Reproducibility * Explainability * Orchestration of models The reproducibility piece will cover key motivations as well as practical requirements for model versioning, together with tools that allow data scientists to achieve version control of model+config+data to ensure full model lineage. The explainability piece will contain a high level overview of why this has become an important topic in machine learning, including the high profile incidents that tech companies have experienced where undesired biases have slipped into data. This will also include a high level overview of some of the tools available. Finally, the orchestration piece will cover some of the fundamental challenges with large scale serving of models, together with some of the key tools that are available to ensure this challenge can be tackled. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT1H1M39S	99	2d	hd	false	https://i.ytimg.com/vi/5ck1wObN65c/maxresdefault.jpg		321	9	0	0	0
91	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	CHpSsVcrVME	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Maria Molina-Contreras - “When a biologist met Python”	"“When a biologist met Python” [EuroPython 2019 - Talk - 2019-07-11 - Singapore [PyData track] [Basel, CH] By Maria Molina-Contreras Biology and computing are closer than we usually think, for example many algorithms are inspired in biology patterns, and complementary to that, researchers needs special algorithms to have a better understanding of our environment. Thus, there is a strong relation an dependency. In the past years, Biology has been transformed into computational biology. Therefore technological advances helps us to predict physical interactions between atoms and DNA, because we are being able to integrate information from biology into algorithms. Python has become a popular programming language in biosciences because it has a clean syntax that makes it easy to read language. In addition to this, there are many modules (toolkits) extending to different biological domains, like metabolomics, structure analysis, phylogenomics, molecular biology and others. Python is currently improving researcher’s workflow, helping us to focus on the theory or experimental part, instead of fighting with old buggy applications. This talk aims to be oriented to all audiences (with/without biological background) since we will go together through an amazing adventure into the natural sciences using tools like Biopython, Bokeh, Networkx, Ecopy and much more! Are you brave enough to follow me on this journey? License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT24M59S	1499	2d	hd	false	https://i.ytimg.com/vi/CHpSsVcrVME/maxresdefault.jpg		110	4	0	0	0
92	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	F2LajzvSX18	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Hubert Bryłkowski - Natural language processing with neural networks.	"Natural language processing with neural networks. [EuroPython 2019 - Talk - 2019-07-11 - Singapore [PyData track] [Basel, CH] By Hubert Bryłkowski Getting started with a natural language processing and neural networks is easier nowadays thanks to the numerous talks and tutorials. The goal is to dive deeper for those who already know the basics, or want to expand their knowledge in a machine learning field. The talk will start with the common use cases that can be generalized to the specific problems in a NLP world. Then I will present an overview of possible features that we can use as input to our network, and show that even simple feature engineering can change our results. Furthermore, I will compare different network architectures - starting with the fully connected networks, through convolution neural networks to recursive neural networks. I will not only considering the good parts, but also - what is usually overlooked - pitfalls of every solution. All of these will be done considering number of parameters, which transfers into training and prediction costs and time. I will also share a number of “tricks” that enables getting the best results even out of the simple architectures, as these are usually the fastest and quite often hard to beat, at the same time being the easiest to interpret. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M5S	1745	2d	hd	false	https://i.ytimg.com/vi/F2LajzvSX18/maxresdefault.jpg		205	6	0	0	1
93	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QEEBNF0aeeg	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Jon Nordby - Audio Classification with Machine Learning	"Audio Classification with Machine Learning [EuroPython 2019 - Talk - 2019-07-11 - Singapore [PyData track] [Basel, CH] By Jon Nordby Sound is a rich source of information about the world around us. Modern deep learning approaches can give human-like performance on a range of sound classifiction tasks. This makes it possible to build systems that use sound to for example: understand speech, to analyze music, to assist in medical diagnostics, detect quality problems in manufacturing, and to study the behavior of animals. This talk will show you how to build practical machine learning models that can classify sound. We will convert sound into spectrograms, a visual representation of sound over time, and apply machine learning models similar to what is used to for image classification. The focus will be on Convolutional Neural Networks, which have been shown to work very well for this task. The Keras and Tensorflow deep learning frameworks will be used. Some tricks for getting usable results with small amounts of data will be covered, including transfer learning, audio embeddings and data augmentation. A basic understanding of machine learning is recommended. Familiarity with digital sound is a bonus. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT43M27S	2607	2d	hd	false	https://i.ytimg.com/vi/QEEBNF0aeeg/maxresdefault.jpg		1964	43	2	0	3
94	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Rn4X2ZgZvsk	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Daniele Procida - The world's cheapest, simplest plotter	"The world's cheapest, simplest plotter [EuroPython 2019 - Talk - 2019-07-11 - Boston] [Basel, CH] By Daniele Procida I present an ultra-cheap (total cost of materials :€12.50) plotter that can be built with minimal skills. At its heart is a Raspberry Pi Zero and some relatively custom software, driving three servo motors. The mechanical hardware can be built from nothing but stiff card, a ball-point pen and some glue. The only tools required are a ruler, a sharp knife, a screwdriver and something to make holes in the card. Almost everything required can be found in a desk or kitchen drawer. The entire device can be built with no special skills in about an hour (and much of that time will be spent getting the glue off the kitchen table before you get in trouble). As you can see from the following images, the plotter produces images with a distinct charm: https://www.dropbox.com/s/s7x3cnxzp1zwnp0/europython.jpg?dl=0 https://www.dropbox.com/s/lzykb02rxh2d9ef/IMG_0065.jpg?dl=0 https://www.dropbox.com/s/8ibihhbfz9gmql0/IMG_0067.jpg?dl=0 https://www.dropbox.com/s/50lemnzw5ismcrq/IMG_0075.jpg?dl=0 It can also function as the world's most inconvenient camera: take a photo using the Raspberry Pi's camera, convert it into lines, and draw it. This is fun, but it's much more than that. There are barriers of skill, expense and materials around robotics. This project comes with me to African PyCons, and makes it possible for programmers to explore Python-based robotics, however limited their resources. The tools and complete kit of materials to build several plotters can be carried in a small box. The plotter code is published on GitHub: https://github.com/evildmp/PantoGraph. The code for converting bitmaps to cartesian vectors is at https://github.com/evildmp/linedraw/. I expect this to appeal to anyone who is interested in the idea of Python-driven robotics but is put off by the cost and complexity of hardware required actually to achieve something. It will be particularly of interest to people involved in education, or who'd like to explore Python with young people. The code, mathematics and especially the hardware in this project are all simple. The code resists the temptation to abstraction, and makes a point of breaking operations down into steps that are as easy as possible to follow. The project shows that doing things with robotics isn't just for people with well-equipped workshops and the engineering skills to use them. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT27M7S	1627	2d	hd	false	https://i.ytimg.com/vi/Rn4X2ZgZvsk/maxresdefault.jpg		673	9	1	0	1
95	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Top7eYEpQSI	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Jeff Hollan - Deploy Python to the cloud faster with Azure Serverless	"Deploy Python to the cloud faster with Azure Serverless [EuroPython 2019 - Talk - 2019-07-11 - MongoDB] [Basel, CH] By Jeff Hollan Bringing your Python scripts or apps and running them in the cloud is easier than ever with serverless computing. In this talk, we’ll show how you can use Azure Functions to easily deploy and scale your Python workloads without having to manage any servers or pay for unused compute resources. We’ll also show how deep integration with Visual Studio Code offers a great local development experience with full support for debugging and testing your app, and allows you to seamlessly deploy your serverless code to the cloud. We’ll start by giving a brief overview of the value of serverless computing. Next, we'll create a brand new Python app in Visual Studio Code, and start to add in business logic and ML capabilities. Once we get the app running debugged locally, we’ll publish it to the cloud as a serverless function, and demonstrate the serverless scalability. Finally, we’ll walk you through the tools and capabilities you can leverage around monitoring and management of your Python Azure Functions. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M50S	1790	2d	hd	false	https://i.ytimg.com/vi/Top7eYEpQSI/maxresdefault.jpg		3396	71	1	0	3
96	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	VJ_d8jENWmo	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Joe Drumgoole - Introduction to Python and MongoDB	"Introduction to Python and MongoDB [EuroPython 2019 - Talk - 2019-07-11 - MongoDB] [Basel, CH] By Joe Drumgoole This talk will give anyone who has a basic knowledge of Python insight into how easy it is to build database applications using the PyMongo Python library for MongoDB. There will be live coding! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M52S	1792	2d	hd	false	https://i.ytimg.com/vi/VJ_d8jENWmo/maxresdefault.jpg		349	6	0	0	0
97	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WOKskgq1x7Y	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Luba Elliott - AI in Contemporary Art	"AI in Contemporary Art [EuroPython 2019 - Keynote - 2019-07-11 - MongoDB] [Basel, CH] By Luba Elliott Over the past couple of years, there has been increasing interest in applying the latest advances in machine learning to creative projects in art and design. From DeepDream and style transfer to a GAN-generated painting selling for $430,000 at auction, AI art has moved beyond the world of research and academia and become a trend in its own right. Meanwhile, the contemporary art world's fascination with the social impact of facial recognition, recommendation systems and deep fakes has encouraged artists to explore AI critically as subject matter. This talk will give an overview of how artists and technologists are using and thinking about machine learning, its creative potential and societal impact. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT43M26S	2606	2d	hd	false	https://i.ytimg.com/vi/WOKskgq1x7Y/maxresdefault.jpg		170	4	0	0	0
98	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YwJRS2Xe-Hc	2019-09-23T18:18:29Z	2019-09-23 18:18:29	EuroPython 2019 - Lightning talks on Thursday, July 11	"Lightning Talks [EuroPython 2019 - - 2019-07-11 - MongoDB] [Basel, CH] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT1H5M7S	307	2d	hd	false	https://i.ytimg.com/vi/YwJRS2Xe-Hc/maxresdefault.jpg		103	5	0	0	0
99	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	atmdimiU9Jc	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Florian Wahl - Building Industry 4.0 logistics applications with MicroPython and ESP32 MCUs	"Building Industry 4.0 logistics applications with MicroPython and ESP32 MCUs [EuroPython 2019 - Talk - 2019-07-11 - Shanghai] [Basel, CH] By Florian Wahl In this session, we will report about a forklift hailing application we built using MicroPython and the ESP32-based prototyping hardware M5Stack. In a production facility, machine operators can hail a forklift using an ESP32 device running MicroPython. The device sends a request to a forklift dispatcher software, written in Python. The request is queued and subsequently, the next available forklift is notified and sent to the machine. Each forklift is also fitted with an ESP32 device. In this project, the prototyping hardware M5Stack was used. It features an ESP32 micro controller with Bluetooth, WIFI, GPIO, three buttons, and a display. Attendees will learn how MicroPython and prototyping hardware can be used to scale from an idea on the developers desk to a working system in a rough Industry 4.0 production environment. The talk will recap our journey with MicroPython, the lessons learned, and the pitfalls to avoid. Furthermore, the tooling setup will be introduced, including our M5Stack GUI-simulator to mock the M5Stack display. The central dispatch server is built using Python and deployed in a Docker container. Messages are exchanged using MQTT, a popular IoT message protocol. The talk will conclude with a live demonstration of the forklift hailing system. Attendees should be comfortable with the Python syntax but are not expected to have any MicroPython, MQTT, Docker or domain knowledge. Materials can be found at https://gitlab.com/fwahl/europython2019. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M24S	1824	2d	hd	false	https://i.ytimg.com/vi/atmdimiU9Jc/maxresdefault.jpg		820	15	0	0	3
100	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dF9ZH3_fQ-Y	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Tin Marković - Refactoring in Python	"Refactoring in Python [EuroPython 2019 - Talk - 2019-07-11 - MongoDB] [Basel, CH] By Tin Marković [Replacement talk] This talk was a replacement for Stanislav Geidl's talk: From legacy code to modern code Honest apologies to anyone whose expectations were subverted, but Stanislav fell sick and could not attend. Find the updated abstract below: This talk will describe experiences and lessons learned from tackling extremely demanding code. How to bring order to mismanaged code and elevate the code base to a standard that's acceptable in today's tech environment. Python makes wonderful code accessible at our fingertips, but it also allows us to take a lot of liberty. When you start, code is beautiful and makes sense. With each step you walk on, you find more and more hacks showing up. Eventually, the brilliant codebase you've started with can not be seen under the mud. Not every code-base can be rewritten, not everything can be redone from scratch. Cool libraries often take a lot of liberty with code structure and make cross-integration difficult, if not impossible. Tests sound ideal, but in practice, they're just so hard to make right. Why is this, and how to change it? The talk will tackle the problems in three parts: - The Easy Wins: What to do to instantly increase the code quality in your organisation. How? Why isn't it enough? - Patterns and Antipatterns: How to identify code that ""smells"", how to replace it? How to integrate into old code, better? - The Philosophy: What approach to set down for the future? Why to care? How to write replace-able code. How to prevent history from repeating. The talk will close with audience discussion and experiences, questions and proposals - building a collection of some on-premise tips and tricks. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT31M3S	1863	2d	hd	false	https://i.ytimg.com/vi/dF9ZH3_fQ-Y/maxresdefault.jpg		421	9	0	0	0
101	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eNB1wzfyTTU	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Jon Nordby - Audio Classification with Machine Learning	"Audio Classification with Machine Learning [EuroPython 2019 - Talk - 2019-07-11 - Singapore [PyData track] [Basel, CH] By Jon Nordby Sound is a rich source of information about the world around us. Modern deep learning approaches can give human-like performance on a range of sound classifiction tasks. This makes it possible to build systems that use sound to for example: understand speech, to analyze music, to assist in medical diagnostics, detect quality problems in manufacturing, and to study the behavior of animals. This talk will show you how to build practical machine learning models that can classify sound. We will convert sound into spectrograms, a visual representation of sound over time, and apply machine learning models similar to what is used to for image classification. The focus will be on Convolutional Neural Networks, which have been shown to work very well for this task. The Keras and Tensorflow deep learning frameworks will be used. Some tricks for getting usable results with small amounts of data will be covered, including transfer learning, audio embeddings and data augmentation. A basic understanding of machine learning is recommended. Familiarity with digital sound is a bonus. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT43M27S	2607	2d	hd	false	https://i.ytimg.com/vi/eNB1wzfyTTU/maxresdefault.jpg		292	6	0	0	0
102	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fuAtAGPp2DM	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Sebastian Roll - The Dangers of Outsourcing Software Development	"The Dangers of Outsourcing Software Development [EuroPython 2019 - Talk - 2019-07-11 - Shanghai] [Basel, CH] By Sebastian Roll Customer lock-in. Dubious “Land and Expand” strategies. We have all heard about outsourced software projects that run far past schedule and obliterates the budget, yet somehow fail to meet even basic requirements. How can this happen. How can your company reduce the risks of delegating software development to an external party? The Principal–Agent Problem is a well researched dilemma in economic literature. It occurs when a person or entity (“agent”), is tasked to work on behalf of another person or entity (""principal""). When the two parties have divergent interests, the agent might act contrary to the best interests of the principal. Examples of principal-agent relationships are: - Employer vs Employee - Shareholder vs Management - Voter vs Political party - Contractor vs Software Consultant When a firm decides to outsource software development to a third party, there is an economic divergence of interest at play, as both parties seek to maximize profit. The contractor wants its requirements met at low cost and on a predictable schedule. The third party, when acting nefariously, can maximize its own gains by extending the project, utilizing junior or low-cost labor, and creating a relationship of dependency. In this session we will look into some nefarious techniques and practices used in the IT consulting industry and how best to avoid them. We will also learn why it is particularly hard to mitigate the risks of outsourced software development. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M28S	1828	2d	hd	false	https://i.ytimg.com/vi/fuAtAGPp2DM/maxresdefault.jpg		261	4	0	0	0
103	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jGseHScYdSg	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Johnny Dude - How Thinking in Python Made Me a Better Software Engineer	"How Thinking in Python Made Me a Better Software Engineer [EuroPython 2019 - Talk - 2019-07-11 - Boston] [Basel, CH] By Johnny Dude Did you ever wonder why development in Python can be x10 faster than development in languages like c++? Observing my teams’ experimentations, the python community, and reading, I have adopted various habits, patterns, and tools. But most importantly I learned thinking in Python. I consider thinking in Python a key for rapid development and good engineering. Thinking in a programming language affects the amount of information you need to keep in your working memory. It also affects the abstractions and tools that pop in your mind and then used in constructing solutions. Let’s explore what it means to think in Python. Why Python allows you to focus on problem solving, while languages like c++ often distract your attention from the problem at hand. In this talk I will cover some good and bad practices by examples while trying to consider the amount of effort needed to write it, read it, and talk about it with other team members. Key Takeaways: Tips for speeding your work without compromising quality, and reasoning for using it. The audience should be comfortably familiar with the process of software development, and software problem solving, and experience using Python. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT31M24S	1884	2d	hd	false	https://i.ytimg.com/vi/jGseHScYdSg/maxresdefault.jpg		711	23	0	0	1
104	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jTy-tyFvou0	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Marc-Andre Lemburg - EPS General Assembly 2019	"EPS General Assembly 2019 [EuroPython 2019 - EuroPython session - 2019-07-11 - Boston] [Basel, CH] By Marc-Andre Lemburg This is where the EuroPython Society (EPS) board gives its reports, resolutions are passed and the EPS members can vote in a new EPS board. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT52M14S	3134	2d	hd	false	https://i.ytimg.com/vi/jTy-tyFvou0/maxresdefault.jpg		42	1	0	0	0
105	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	mHaz5laPyHE	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Miroslav Šedivý - A Day Has Only 24±1 Hours	"A Day Has Only 24±1 Hours [EuroPython 2019 - Talk - 2019-07-11 - Boston] [Basel, CH] By Miroslav Šedivý On the last Sunday of October you may get “one more hour of sleep” but as well may spend much more time debugging code dealing with the time zones, daylight saving time shifts and datetime stuff in general. We'll look at a few pitfalls you may encounter when working with datetimes in Python. We'll dissect the pytz library, explain why it contains over 500 individual time zones while focusing on the 63 entries in Europe. We'll also find the reason why pytz is not part of the standard Python, why it gets updated so often and why even that won't solve all your problems. Do you know what happens after 2021 when the EU stops DST switching? Two centuries of short-sighted propaganda and long-term chaos in forty-five minutes. Maybe that will make you want to avoid time zones in your code altogether! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT44M24S	2664	2d	hd	false	https://i.ytimg.com/vi/mHaz5laPyHE/maxresdefault.jpg		210	6	0	0	0
106	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	os_daySYRFs	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Hynek Schlawack - Maintaining a Python Project When It’s Not Your Job	"Maintaining a Python Project When It’s Not Your Job [EuroPython 2019 - Talk - 2019-07-11 - Shanghai] [Basel, CH] By Hynek Schlawack PyPI is a gold mine of great packages but those packages have to be written first. More often than not, projects that millions of people depend on are written and maintained by only one person. If you’re unlucky, that person is you! So how do you square delivering a high quality Python package you can be proud of and having only limited time at your disposal? The answer is not “try harder,” the answer is to do less. This talk will help you get there by talking about how you can make your life easier, remove causes of friction with your contributors, and empower said contributors to take over tasks that you can’t make time for anymore. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT45M50S	2750	2d	hd	false	https://i.ytimg.com/vi/os_daySYRFs/maxresdefault.jpg		159	4	0	0	0
107	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vyz7zdGiPVY	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Paul Everitt - Python 1994	"Python 1994 [EuroPython 2019 - Talk - 2019-07-11 - Boston] [Basel, CH] By Paul Everitt “Come for the language, stay for the community.” The Python community started in 1994 at a NIST workshop in Maryland. What was the world of Python like in its first years? Did we have any clue whatsoever? A joke-focused tour of early Python, heavy on question-and-answer. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT38M26S	2306	2d	hd	false	https://i.ytimg.com/vi/vyz7zdGiPVY/maxresdefault.jpg		250	6	0	0	2
108	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xRxKXvYtAyI	2019-09-23T18:18:29Z	2019-09-23 18:18:29	Reuven Lerner - Practical decorators	"Practical decorators [EuroPython 2019 - Talk - 2019-07-11 - Shanghai] [Basel, CH] By Reuven Lerner Decorators are one of Python's most powerful features. But even if you understand what they do, it's not always obvious what you can do with them. Sure, from a practical perspective, they let you remove repeated code from your callables. And semantically, they let you think at a higher level of abstraction, applying the same treatment to functions and classes. But what can you actually do with them? For many Python developers I've encountered, decorators sometimes appear to be a solution looking for a problem. In this talk, I'll show you some practical uses for decorators, and how you can use them to make your code more readable and maintainable, while also providing more semantic power. Moreover, you'll see examples of things would be hard to do without decorators. I hope that after this talk, you'll have a good sense of how to use decorators in your own Python projects. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT27M30S	1650	2d	hd	false	https://i.ytimg.com/vi/xRxKXvYtAyI/maxresdefault.jpg		508	9	0	0	0
109	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2LQ_ytrxDEs	2019-09-23T18:18:28Z	2019-09-23 18:18:28	Marc-Andre Lemburg - EuroPython 2020: Help us build the next edition!	"EuroPython 2020: Help us build the next edition! [EuroPython 2019 - EuroPython session - 2019-07-11 - Boston] [Basel, CH] By Marc-Andre Lemburg We need help with organizing and running EuroPython 2020. In this session, we will explain how the EuroPython workgroup model works and where you could help. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT24M40S	1480	2d	hd	false	https://i.ytimg.com/vi/2LQ_ytrxDEs/maxresdefault.jpg		87	2	0	0	0
110	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	uYgla2-mxMc	2019-09-23T18:18:28Z	2019-09-23 18:18:28	Anton Caceres - How To Build a Python Microservice Without Losing a Job	"How To Build a Python Microservice Without Losing a Job [EuroPython 2019 - Talk - 2019-07-11 - Shanghai] [Basel, CH] By Anton Caceres Sarcastic talk, sharing real-life experience on both technical and social aspects of doing an architecture migration to microservices without losing a job. Any change in software architecture is a significant time investment. Writing microservices in Python is a joy, but when you decide on it, there is often no way back. Therefore it is always an advantage to know what to expect in advance, not just from inspiring blog posts but also from the harsh reality. I would like to share typical pitfalls of choosing a framework stack, communication protocol, conventions, and deployment process — all covered by real projects. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M16S	1816	2d	hd	false	https://i.ytimg.com/vi/uYgla2-mxMc/maxresdefault.jpg		2038	38	0	0	4
111	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UQo-ebJk4a4	2019-09-23T18:14:38Z	2019-09-23 18:14:38	Vita Smid - Static typing: beyond the basics of def foo(x: int) -str:	"Static typing: beyond the basics of def foo(x: int) -str: [EuroPython 2019 - Talk - 2019-07-10 - Boston] [Basel, CH] By Vita Smid The Python community has been warming up to static typing for a few years now. You may have seen talks that did a great job of introducing the basic concepts, mypy, and high-level strategies to cover existing code bases. We need to go deeper. Let’s talk about the challenges you inevitably encounter when you try to type-check a large code base. One full of many moving parts, complex architectures, metaprogramming tricks, and interfaces with a dozen other packages. Static type checking is very powerful – when you use it to maximum advantage and explain your code to the typechecker accurately. We will cover a few tools at your disposal: generics, signature overloads, protocols, custom mypy plug-ins, and more. There is more than just tools, though. Behind them all are universal concepts valid in any language. I hope to convince you that thinking in terms of the type system helps you write better code… License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M27S	1827	2d	hd	false	https://i.ytimg.com/vi/UQo-ebJk4a4/maxresdefault.jpg		413	16	0	0	0
112	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wVwcOq-SsiU	2019-09-03T16:35:29Z	2019-09-03 16:35:29	EuroPython - The largest Python conference in Europe	This trailer was created for EuroPython 2019, July 8-14, 2019, in Basel, Switzerland. Brought to you by the EuroPython 2019 Team and the EuroPython Society. EuroPython 2020 was held online from July 23-26. Join us at EuroPython 2021 from July 26 - Aug 1 in Dublin, Ireland! Enjoy, -- EuroPython 2019 Team https://ep2019.europython.eu/ http://www.europython-society.org/	28	Science & Technology	PT1M45S	105	2d	hd	false			5751	23	1	0	0
113	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JKNvYK0sdW8	2019-09-03T16:23:09Z	2019-09-03 16:23:09	Mai Giménez - Tensorflow Estimators	"Tensorflow Estimators [EuroPython 2019 - Talk - 2019-07-10 - Osaka / Samarkand [PyData track] [Basel, CH] By Mai Giménez Tensorflow is one of the most powerful machine learning libraries. However, one could argue that it is as well one of the most convoluted libraries to utilise. Or it used to be. Tensorflow has been updating its API, simplifying the pipeline while keeping it flexible. You could either predict your class label using a pre-trained canned estimator or doing some fancy operations with the inner tensors of your neural network. It's a choose your own adventure game. But it's challenging to make sense of all the new changes. Fear not. Here, we learned what changes we should adopt. This talk will walk you through the following new features: - codeEstimators/code: complete representation of a model. We will learn about the different levels of abstraction of an codeestimator/code. - codeDatasets/code: efficient input pipelines. We need large datasets to train models, and we should be conscious about how we are handling them. - codeTf-hub/code: a repository of Pre-trained modules. Starting each task from zero is not the best option. Particularly, when we have pre-trained models ready to boost the performance of our system. The objective is at the end of this talk you will learn how to design a neural network following the best practices. Basic knowledge of neural networks and the naming conventions in Tensorflow will be useful for understanding this talk, but I will try to minimise the gibberish to a local minimum. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT25M42S	1542	2d	hd	false	https://i.ytimg.com/vi/JKNvYK0sdW8/maxresdefault.jpg		192	5	0	0	0
114	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	avt77g27SbM	2019-09-03T16:23:09Z	2019-09-03 16:23:09	EuroPython 2019 - Opening Session	"Opening Session [EuroPython 2019 - - 2019-07-10 - MongoDB [PyData track] [Basel, CH] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT15M35S	935	2d	hd	false	https://i.ytimg.com/vi/avt77g27SbM/maxresdefault.jpg		921	5	0	0	2
115	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fyBvgmG-i30	2019-09-03T16:23:09Z	2019-09-03 16:23:09	EuroPython 2019 - Lightning talks on Friday, July 12	"Lightning Talks [EuroPython 2019 - - 2019-07-12 - MongoDB [PyData track] [Basel, CH] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT45M36S	2736	2d	hd	false	https://i.ytimg.com/vi/fyBvgmG-i30/maxresdefault.jpg		97	3	0	0	0
116	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nxuVLBW-C1g	2019-09-03T16:23:09Z	2019-09-03 16:23:09	Lilian Nandi anonymous - Teaching Programming to the Next Generation	"Teaching Programming to the Next Generation [EuroPython 2019 - Talk - 2019-07-10 - Boston] [Basel, CH] By Lilian Nandi anonymous Our generation of young people in school (aged 5-18) have noticed the connection between Computer pRogramming, Technology &amp; Success and Billionaires.On mass they are clamoring to master the skill of Computer pRogramming. We describe a successful working model for the teaching of Computer pRogamming. Computer Science is now regarded as one of the leading disciplines in the 21st century. Computers are ubiquitous and prevalent in most, if not all, sectors of our modern society – applications include using them in weather forecasting, robotic surgery, space exploration, e-commerce, smart cities, driverless cars, etc. Therefore, coding or computer programming is now regarded by many as an essential skill for the young person, and it has been dubbed the ‘4th’ R’ (computer pRogramming) along with Reading, wRiting and aRithmetic. In recognition of the new status of computer programming, governments worldwide have launched initiatives to have it taught in schools from Kindergarten through to junior school and all the way through secondary school. So, the question emerges is how do we best teach and motivate the next generation in acquiring this skill? Given the fact that this field is very much in its infancy, there are insufficient number of skilled Computer Science teachers and very little pedagogy to guide the educator. Therefore, the whole world is learning how best to teach this subject by trial and error. The talk will describe a case study whereby coding/computer programming, in the form of Python programming, was introduced to a group of 110 young people from the ages of 11 to 18 (Years 7-13 in a U.K secondary school). The talk will include descriptions of the various teaching methodologies introduced to the young people for this purpose and the outcomes; the talk will also address various challenges and questions about how to teach coding to young people. The talk will conclude with helpful suggestions, based on the findings of the case study, on how to proceed with the teaching of computer programming to these people. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT44M10S	2650	2d	hd	false	https://i.ytimg.com/vi/nxuVLBW-C1g/maxresdefault.jpg		298	5	0	0	2
117	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	urVUlKbQfQ4	2019-09-03T16:23:09Z	2019-09-03 16:23:09	Olivier Grisel - Histogram-based Gradient Boosting in scikit-learn 0.21	"Histogram-based Gradient Boosting in scikit-learn 0.21 [EuroPython 2019 - Talk - 2019-07-10 - MongoDB [PyData track] [Basel, CH] By Olivier Grisel scikit-learn 0.21 was recently released and this presentation will give an overview its main new features in general and present the new implementation of Gradient Boosted Trees. Gradient Boosted Trees (also known as Gradient Boosting Machines) are very competitive supervised machine learning models especially on tabular data. Scikit-learn offered a traditional implementation of this family of methods for many years. However its computational performance was no longer competitive and was dramatically dominated by specialized state of the art libraries such as XGBoost and LightGBM. The new implementation in version 0.21 uses histograms of binned features to evaluate the tree node spit candidates. This implementation can efficiently leverage multi-core CPUs and is competitive with XGBoost and LightGBM. We will also introduce pygbm, a numba-based implementation of gradient boosted trees that was used as prototype for the scikit-learn implementation and compare the numba vs cython developer experience. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT45M5S	2705	2d	hd	false	https://i.ytimg.com/vi/urVUlKbQfQ4/maxresdefault.jpg		837	17	0	0	1
118	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xmr39hMI_9s	2019-09-03T16:23:09Z	2019-09-03 16:23:09	EuroPython 2019 - Lightning talks on Wednesday, July 10	"Lightning Talks [EuroPython 2019 - - 2019-07-10 - MongoDB [PyData track] [Basel, CH] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT1H9M29S	569	2d	hd	false	https://i.ytimg.com/vi/xmr39hMI_9s/maxresdefault.jpg		437	8	0	0	2
119	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1F2wEi6fkAM	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Adriana Dorneles - What about recommendation engines?	"What about recommendation engines? [EuroPython 2019 - Talk - 2019-07-10 - Singapore [PyData track] [Basel, CH] By Adriana Dorneles How recommendation engines are taking part in our daily routine and how companies as Netflix and Amazon implement it? This talk aims to show the elements that compound a recommendation engine to people who have never been in touch with the matter or want to know a bit more. At the end of this session, you might be able to reproduce your own recommendation system and also know where to find more about it. Talk structure: 1. What is and why use a recommendation engine? 2. Recommendation engine importance 3. Steps of a recommendation 4. Recommendation algorithms 5. Basic Statistics for distance and correlation 6. Example License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M54S	1794	2d	hd	false	https://i.ytimg.com/vi/1F2wEi6fkAM/maxresdefault.jpg		338	4	1	0	0
120	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3i6db5zX3Rw	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Sebastian Witowski - Wait, IPython can do that?!	"Wait, IPython can do that?! [EuroPython 2019 - Talk - 2019-07-10 - Shanghai] [Basel, CH] By Sebastian Witowski I've been programming in Python for over 7 years. And from the time someone introduced me to IPython, it immediately became my default Python REPL. I enjoyed the syntax highlighting, code completion or the instant access to the documentation. Over the years, I've picked up more and more tricks that IPython could do: embedding IPython sessions, starting IPython automatically when a test fails, taking advantage of the startup files, not to mention all the various magic functions. It took me some time to discover all those features (if there is one thing I would like you to take away from this talk, it’s that reading the documentation of a tool that you are using emevery day/em is probably a good idea) and in this talk, I will give an overview of what you can do with IPython REPL. Some of the things I will talk about: - Documentation with ? and ??, running shell functions in IPython, magic functions - Profiles, startup files, configuration file, kernels, and extensions - How to better use IPython for debugging - How to use IPython for profiling - Alternatives to IPython REPL This talk is for you if you are a casual user of IPython - you know some of its features, but maybe not all of them and instead of reading through the documentation, you would prefer to see someone giving an overview of IPython features and how you can use them. This talk is NOT for you if you are up to date with IPython documentation and you think you know most of its features. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT42M22S	2542	2d	hd	false	https://i.ytimg.com/vi/3i6db5zX3Rw/maxresdefault.jpg		2226	48	1	0	2
121	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6-KIq7-06NA	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Mustafa Anil Tuncel - Bioinformatics pipeline for revealing tumour heterogeneity	"Bioinformatics pipeline for revealing tumour heterogeneity [EuroPython 2019 - Talk - 2019-07-10 - Singapore [PyData track] [Basel, CH] By Mustafa Anil Tuncel Reproducibility of research is a common issue in science, especially in computationally expensive research fields e.g. cancer research. A comprehensive picture of the genomic aberrations that occur during tumour progression and the resulting intra-tumour heterogeneity, is essential for personalised and precise cancer therapies. With the change in the tumour environment under treatment, heterogeneity allows the tumour additional ways to evolve resistance, such that intra-tumour genomic diversity is a cause of relapse and treatment failure. Earlier bulk sequencing technologies were incapable of determining the diversity in the tumour. br / Single-cell DNA sequencing - a recent sequencing technology - offers resolution down to the level of individual cells and is playing an increasingly important role in this field. We present a reproducible and scalable Python data analysis pipeline that employs a statistical model and an MCMC algorithm to infer the evolutionary history of copy number alterations of a tumour from single cells. The pipeline is built using Python, Conda environment management system and the Snakemake workflow management system. The pipeline starts from the raw sequencing files and a settings file for parameter configurations. After running the data analysis, pipeline produces report and figures to inform the treatment decision of the cancer patient. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT28M4S	1684	2d	hd	false	https://i.ytimg.com/vi/6-KIq7-06NA/maxresdefault.jpg		196	4	0	0	1
122	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7PQqVAU8FZ4	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Dom Weldon - Dash: Interactive Data Visualization Web Apps with no Javascript	"Dash: Interactive Data Visualization Web Apps with no Javascript [EuroPython 2019 - Talk - 2019-07-10 - Singapore [PyData track] [Basel, CH] By Dom Weldon Your data science or machine learning project probably won't just produce a written report. Instead, projects are increasingly expected to produce interactive tools to allow end-users to explore data and results with rich, interactive visualizations. Inevitably, this will be done in a web browser, meaning you'll need to add a quantitatively trained web developer to your team, or have your data scientists spend time learning HTML, Javascript and CSS. Dash, a project by the team that makes Plotly, solves some of these problems by allowing data scientists to build rich and interactive websites in pure python, with minimal knowledge of HTML and absolutely no Javascript. At decisionLab, a London-based data science consultancy producing decision tools, we've embraced Dash to produce proof-of-concept models for our projects in alpha. Although we're not officially connected to the plotly/Dash project, by using the library daily across many projects, we've learned many lessons and what we feel are best practises we'd like to share, and hear feedback on! This talk will give an overview of Dash, how it works and what it can be used for, before outlining some of the common problems that emerge when data scientists are let loose to produce web applications, and web developers have to work with the pydata ecosystem. The talk also covers effective working practises to start producing cool interactive statistical web applications, fast. We'll also identify some of the pitfalls of Dash, and how and when to make the decision to stop using Dash and start building a proper web application. Slides: http://domweldon-europython-2019-dash.s3.eu-west-2.amazonaws.com/index.html License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT32M26S	1946	2d	hd	false	https://i.ytimg.com/vi/7PQqVAU8FZ4/maxresdefault.jpg		375	4	0	0	0
123	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	At3UztXdCiE	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Michele De Simoni - TensorFlow 2.0: TensorFlow Strikes Back	"TensorFlow 2.0: TensorFlow Strikes Back [EuroPython 2019 - Talk - 2019-07-10 - Osaka / Samarkand [PyData track] [Basel, CH] By Michele De Simoni The talk will showcase the main features of this new TF version that should appease the needs of the Researcher and Practitioner alike. A focus will be put on: - Keras as the new standard API - Eager Mode &amp; Graph - Production Pipeline - Extended Ecosystem Prerequisites: Basic Python, Exposure to a deep learning framework is advised but not necessary hr / If you are even remotely interested in machine learning, deep learning or data science, you have probably heard of TensorFlow. Released publicly on November 9, 2015, by the lovely people of Google Brain, TensorFlow is not only one of the most active (and starred) Open Source projects on GitHub but most importantly the most popular deep learning framework. Since its inception, TensorFlow has always had a simple set of goals in mind: performance, scalability and a relatively straightforward path to production (at Google scale). While over the year TF achieved each one of these goals becoming the defacto gold standard of deep learning framework, ease of use was not one of its selling points, but actually, it's Achille's heel. Until the coming of Keras, the TensorFlow programming experience was not a pleasant one and even then the often too high level, and magical Keras was not enough for more complex tasks. However, what TF lacked in that area it more than made up with raw performance and most importantly an ecosystem of tools, libraries, and services that made deploying models in productions a straightforward experience. Things have however changed in these four years; the deep learning world has seen a Cambrian explosion in terms of growth, new APIs, competing frameworks and an exponentially larger audience demanding from TensorFlow a more modern and Pythonic API much like the one offered by PyTorch its main competitor. The core team has listened to its users and has given us TensorFlow 2.0. TensorFlow 2.0 has done away with an old, crusty, poorly designed and cumbersome API by adopting Keras as the default model specification API while also learning a thing or two about eager execution from Pytorch. The result is an almost an entirely new framework when it comes down to usability while the production side of things has only got better and better over time thanks to an ever-expanding universe of supporting projects. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT43M19S	2599	2d	hd	false	https://i.ytimg.com/vi/At3UztXdCiE/maxresdefault.jpg		223	6	0	0	0
124	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BS2_DrN0pw4	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Max Bélanger - How to ship a Python app to a hundred million desktops	"How to ship a Python app to a hundred million desktops [EuroPython 2019 - Talk - 2019-07-11 - Shanghai] [Basel, CH] By Max Bélanger Python is widely used to write scripts and tools, but did you know that it can also be used to build client-side end-user applications? Crossing the gap from script to app can be challenging: Join us to learn how to write modern, high quality desktop apps in Python! At Dropbox, we’ve been fans of Python from the very beginning: we’ll take you on a tour of our app for Windows/macOS/Linux and share our “lessons learned” from over 10 years of development. We’ll share best practices and techniques for shipping Python code to hundreds of millions of devices: discover how to maximize security, improve performance and guarantee stability. We’ll explore the key choices we made and why: learn how we migrated to Python 3 by simultaneously shipping both versions, or how we use HTML to power our GUI (a la Electron). We’ll reveal our favorite tools and libraries: learn how we scaled from a few engineers to over 100 and added support for other programming languages (like Rust). The goal of this talk is to share our learnings from using Python on Windows, macOS and Linux to encourage the use of Python when building Desktop apps. - We also want to recognize the third-party libraries we’ve used (and their authors) to raise their profile with the overall community. - We hope this will inspire attendees to write more desktop Python code, and raise awareness for this use case with the community as a whole. We intend to speak to any Python developer/engineer or enthusiast who makes use of Python in a Desktop environment (or wants to), whether it’s to make scripts, tools or apps. We do not expect knowledge of any specific third-party Python libraries; in fact, we hope to draw attention to and recognize many libraries we’ve found useful. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT44M50S	2690	2d	hd	false	https://i.ytimg.com/vi/BS2_DrN0pw4/maxresdefault.jpg		666	15	0	0	1
125	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FolV-xUD3Ko	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Paul Ganssle - Build your Python Extensions with Rust!	"Build your Python Extensions with Rust! [EuroPython 2019 - Talk - 2019-07-10 - PyCharm] [Basel, CH] By Paul Ganssle When your Python needs to be fast, one powerful tool is the ability to write compiled extension modules. Normally this is done using the C API, but that requires managing reference counts and memory allocation and is nearly impossible to do emcorrectly/em for non-trivial programs. In this talk, we'll look at how you can write extension modules in Rust - a memory-safe systems programming language that is increasingly popular as a replacement for C and C++, and the a href=""https://insights.stackoverflow.com/survey/2019#technology-_-most-loved-dreaded-and-wanted-languages""most loved language in the Stack Overflow developer survey 4 years running/a. This talk will focus on codepyo3/code and codemilksnake/code, two popular libraries that provide very different approaches for writing Rust extensions; it will cover a basic introduction to the libraries, and compare their relative strengths and weaknesses. These will also be compared to C and Cython extension modules from a performance, safety and maintainability perspective. k License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M26S	1826	2d	hd	false	https://i.ytimg.com/vi/FolV-xUD3Ko/maxresdefault.jpg		687	13	1	0	2
126	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HtbLNgXmLrw	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Christoph Heer - Is it me, or the GIL?	"Is it me, or the GIL? [EuroPython 2019 - Talk - 2019-07-10 - Shanghai] [Basel, CH] By Christoph Heer Python's Global Interpreter Lock is a friend and rival at the same time. We, as developers, can focus on the design and implementation of applications without the hassle of memory management. On the other side, we complain about the GIL as the limiting factor of performance sensitive applications. Therefore, it is common to refactor parts of systems when the system doesn't perform or scale enough anymore. The refactoring often includes the switch of the used concurrency paradigms like replacing multithreading with multiprocessing or asyncio. Another option is moving logic of CPU-bound workload into C extensions or a full rewrite in a ""GIL-free"" language. But how do you know that the GIL is the actual performance bottleneck? While scaling and developing performance sensitive components in Python, my colleagues and I often also assumed the GIL as cause of our performance problems because it is a common and simple answer for this usually complex and varied problems. Instead of starting a rewrite or major refactoring, we took a step back and tried to prove our assumption. With the result that analyzing the impact of the GIL contention on the overall performance is a very interesting problem without common practices or easy usable set of tools that support Python developers. Within this talk, I will share and explain the methods and tools, which we use to analyze the relevance of the GIL on our application performance and how it helped us to stay focused on the actual problematic areas of our applications that required improvements to meet our performance goals. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT37M24S	2244	2d	hd	false	https://i.ytimg.com/vi/HtbLNgXmLrw/maxresdefault.jpg		351	4	0	0	0
127	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IghyoR6ld60	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Tom Forbes - Writing a Python autoreloader	"Writing a Python autoreloader [EuroPython 2019 - Talk - 2019-07-10 - Shanghai] [Basel, CH] By Tom Forbes Reloading your code changes quickly is an integral part of the development experience in frameworks like Django and Flask that developers have come to rely on. But how do they work under the hood and what challenges do you face while writing one? In this talk I will explore how I refactored the autoreload implementation in Django 2.2 and the lessons I learned along the way (hint: it's surprisingly complex!). I will also be introducing a library I've developed to simplify this if you ever find yourself writing your own. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT30M29S	1829	2d	hd	false	https://i.ytimg.com/vi/IghyoR6ld60/maxresdefault.jpg		404	9	1	0	0
128	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JCpuRWB5BvU	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Paolo Galeone - Dissecting tf.function to discover AutoGraph strengths and subtleties	"Dissecting tf.function to discover AutoGraph strengths and subtleties [EuroPython 2019 - Talk - 2019-07-10 - Singapore [PyData track] [Basel, CH] By Paolo Galeone AutoGraph is one of the most exciting new features of Tensorflow 2.0: it allows transforming a subset of Python syntax into its portable, high-performance and language agnostic graph representation bridging the gap between Tensorflow 1.x and the 2.0 release based on eager execution. Using AutoGraph with the code@tf.fuction/code decorator seems easy, but in practice, writing efficient and correctly graph-convertible code requires to know in detail how AutoGraph and tf.function work. In particular, knowing how: A graph is created and when it is re-used; To deal with functions that create a state; To correctly use the Tensorflow codetf.Tensor/code object instead of using the Python native types to speed-up the computation; defines the minimum skill-set required to write correct graph-accelerable code. The talk will guide you trough AutoGraph and codetf.function/code highlighting all the peculiarities that are worth knowing to build the right skill-set. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT27M13S	1633	2d	hd	false	https://i.ytimg.com/vi/JCpuRWB5BvU/maxresdefault.jpg		230	2	0	0	0
129	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NMJmR_HXjrQ	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Jovan Veljanoski - Modern Data Science with Vaex: A new approach to DataFrames and pipelines	"Modern Data Science with Vaex: A new approach to DataFrames and pipelines [EuroPython 2019 - Talk - 2019-07-10 - MongoDB [PyData track] [Basel, CH] By Jovan Veljanoski Working with datasets comprising millions or billions of samples is an increasingly common task, one that is typically tackled with distributed computing. Nodes in high-performance computing clusters have enough RAM to run intensive and well-tested data analysis workflows. More often than not, however, this is preceded by the scientific process of cleaning, filtering, grouping, and other transformations of the data, through continuous visualizations and correlation analysis. In today’s work environments, many data scientists prefer to do this on their laptops or workstations, as to more effectively use their time and not to rely on spotty internet connection to access their remote data and computation resources. Modern laptops have sufficiently fast I/O SSD storage, but upgrading RAM is expensive or impossible. Applying the combined benefits of computational graphs, which are common in neural network libraries, with delayed (a.k.a lazy) evaluations to a DataFrame library enables efficient memory and CPU usage. Together with memory-mapped storage (Apache Arrow, hdf5) and out-of-core algorithms, we can process considerably larger data sets with fewer resources. As an added bonus, the computational graphs ‘remember’ all operations applied to a DataFrame, meaning that data processing pipelines can be generated automatically. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT50M56S	3056	2d	hd	false	https://i.ytimg.com/vi/NMJmR_HXjrQ/maxresdefault.jpg		1101	24	0	0	0
130	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NMaWiUQitrY	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Christian Heimes, Steve Dower - Auditing hooks and security transparency for CPython	"Auditing hooks and security transparency for CPython [EuroPython 2019 - Talk - 2019-07-10 - PyCharm] [Basel, CH] By Christian Heimes, Steve Dower The Python Enhancement Proposal 551 describes the concept of security transparency for the CPython runtime environment. The PEP lists planned actions to detect anomalous or malicious use of Python and potentially prevent some abuse cases. The general idea is to make Python less useful for advanced persistent threats (APT). Python 3.8 will come with an implementation of PEP 578, auditing hooks and verified open call for reading code from files. In this talk, we will explain our motivation for the PEPs, why the PEPs are important for the future of Python, scope, and limitations. We will give examples, how auditing hooks and the verified open hook can be tight into Linux's and Windows' security frameworks to detect and potentially prevent abuse. The goal of the talk is not to present a ready-to-use security enhancement for CPython, but to declare the intent of the enhancements and start a discussion about a secure ""spython"" interpreter. We as a community must ensure Python's usefulness for developers, but at the same time make it no-good for malicious purposes. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT43M50S	2630	2d	hd	false	https://i.ytimg.com/vi/NMaWiUQitrY/maxresdefault.jpg		84	3	0	0	0
131	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OIyFQXg_uIU	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Shailen Sobhee - Supercharge your Deep Learning algorithms with optimized software	"Supercharge your Deep Learning algorithms with optimized software [EuroPython 2019 - Talk - 2019-07-10 - MongoDB [PyData track] [Basel, CH] By Shailen Sobhee In this talk, you will learn various optimization techniques to improve the runtime performance of your deep learning algorithms on Intel architecture. The presentation will cover how to accelerate the training of your deep neural networks with Tensorflow thanks to the highly optimized Intel® Math Kernel Library (Intel® MKL) and how we boost inferencing with Intel® nGraph and with the Intel® Distribution of OpenVINO™. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT21M51S	1311	2d	hd	false	https://i.ytimg.com/vi/OIyFQXg_uIU/maxresdefault.jpg		200	5	1	0	2
132	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	P6qqX2IC9Ac	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Thomas Kluiters - Securely executing Python machine learning models with distroless images at ING	"Securely executing Python machine learning models with distroless images at ING [EuroPython 2019 - Talk - 2019-07-10 - Osaka / Samarkand [PyData track] [Basel, CH] By Thomas Kluiters Executing machine learning models in a production environment can be tricky, especially at a major bank where compliance and risk are carefully taken into account. In this talk I explain how, we, at ING (a large bank operating on global scale), execute our Python models in a production environment by building minimal Docker images for python versions. I will first talk about the possible security risks of running any docker container in a production environment. Then I will talk about ways in which we can make Docker containers more secure by building minimal docker images for Python. Finally I will explain how these docker images are used in practice to serve machine learning models at ING. Prerequisites: - Some basic knowledge of Docker can be helpful - Some basic understanding of security can be helpful Goals: - Understand the security risks of running docker containers - Know how to make docker images more secure - How to build secure model serving docker images License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT22M17S	1337	2d	hd	false	https://i.ytimg.com/vi/P6qqX2IC9Ac/maxresdefault.jpg		138	5	1	0	0
133	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SxfbdUo1G8E	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Nemanja Milosevic - Classification Based on Missing Features in Deep Convolutional Neural Networks	"Classification Based on Missing Features in Deep Convolutional Neural Networks [EuroPython 2019 - Talk - 2019-07-10 - Osaka / Samarkand [PyData track] [Basel, CH] By Nemanja Milosevic Convolutional neural networks have been used for some time now for classification of images, among other things. Recently, some new research leads us to believe that neural network can be ""tricked"" into wrongly classifying images by adding noise or other artifacts to them. If we want to use Deep Convolutional models in critical scenarios (i.e. self driving cars) we have to be certain that these models that we are using will be certain and robust. In this presentation I will talk about a novel research approach for increasing neural network accuracy and robustness in difficult or adversarial situations. We will go over how convolutional layers work and how can we modify them to classify based on missing features on an image. With a simple modification we will gain some accuracy on a variation of a well-known MNIST dataset. All the examples will be in PyTorch 1.1. Some basic knowledge about neural networks, backpropagation etc. is needed. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT26M32S	1592	2d	hd	false	https://i.ytimg.com/vi/SxfbdUo1G8E/maxresdefault.jpg		177	0	0	0	1
134	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XmYSyqGbW2s	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Dimiter Naydenov - Extracting Tabular Data from PDFs with Camelot and Excalibur	"Extracting Tabular Data from PDFs with Camelot and Excalibur [EuroPython 2019 - Talk - 2019-07-10 - Osaka / Samarkand [PyData track] [Basel, CH] By Dimiter Naydenov Portable Document Format (PDF) is commonly used to produce, publish, exchange, and archive business and academic documents alike. Often in such PDFs there are tables with data that you want to extract and process in some automated fashion. Unlike HTML or other formats, PDF has no concept of tables as rows and columns with related data. Tables in PDFs are rendered to visually resemble a table (when printed) using low-level instructions to place the text of each table cell where it should be, while the original tabular structure is lost. While there are existing solutions to extract structured data from PDFs, most of them are expensive proprietary products or hosted online services, not Python-based, not open-source, and give you little control over the process, or how your sensitive PDF documents are handled. In this talk I'll present two open-source Python tools for PDF tables extraction, the CLI tool Camelot, and its web-based frontend UI - Excalibur. I'll show you how to install both locally, and how to use them to extract tabular data from PDFs with ease. Extraction under your control: 1) define rules with areas on the PDF page containing the table you want to extract; 2) save and reuse the rules to automate / batch-process similar PDFs; 3) export the extracted tables as CSV, Excel, JSON, HTML, or use directly as pandas DataFrames. If you find Camelot and Excalibur useful, please consider supporting those projects, or even get involved as a contributor! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M22S	1822	2d	hd	false	https://i.ytimg.com/vi/XmYSyqGbW2s/maxresdefault.jpg		1829	26	1	0	3
135	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	a5WIMg5sunw	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Yenny Cheung - Why You Should Pursue Public Speaking and How to Get There	"Why You Should Pursue Public Speaking and How to Get There [EuroPython 2019 - Keynote - 2019-07-10 - MongoDB [PyData track] [Basel, CH] By Yenny Cheung Fear of public speaking is the most common of all phobias. Want to speak confidently in front of the crowd? This talk shares tips on how to overcome the fear, and ways to get started. You will be prepared to brace presenting from a team meeting to a conference. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT41M50S	2510	2d	hd	false	https://i.ytimg.com/vi/a5WIMg5sunw/maxresdefault.jpg		208	4	0	0	0
136	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eDRck258bnw	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Rogier van der Geer - How to train an image classifier using PyTorch	"How to train an image classifier using PyTorch [EuroPython 2019 - Talk - 2019-07-10 - Singapore [PyData track] [Basel, CH] By Rogier van der Geer Neural networks are everywhere nowadays. But while it seems everyone is using them, training your first neural network can be quite a hurdle to overcome. In this talk I will take you by the hand, and following an example image classifier I trained, I will take you through the steps of making an image classifier in PyTorch. I will show you code snippets and explain the more intricate parts. Also, I will tell you about my experience, and about what mistakes to prevent. After this all you need to start training your first classifier is a data set! Of course I will provide a link to the full codebase at the end. The talk will focus on the practical aspect of training a neural network, and will only touch the theoretical side very briefly. Some basic prior knowledge of neural networks is beneficial, but not required, to follow this talk. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT42M4S	2524	2d	hd	false	https://i.ytimg.com/vi/eDRck258bnw/maxresdefault.jpg		629	21	1	0	2
137	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	en2zdTT-Vwk	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Peter Entschev - Distributed Multi-GPU Computing with Dask, CuPy and RAPIDS	"Distributed Multi-GPU Computing with Dask, CuPy and RAPIDS [EuroPython 2019 - Talk - 2019-07-10 - Osaka / Samarkand [PyData track] [Basel, CH] By Peter Entschev The search for faster computing remains of great importance to the software community. Relatively inexpensive modern hardware, such as GPUs, allows users to run highly parallel code on thousands, or even millions of cores on distributed systems. Building efficient GPU software is not a trivial task, often requiring a significant amount of engineering hours to attain the best performance. Similarly, distributed computing systems are inherently complex. In recent years, several libraries were developed to solve such problems. However, they often target a single aspect of computing, such as GPU computing with libraries like CuPy, or distributed computing with Dask. Libraries like Dask and CuPy tend to provide great performance while abstracting away the complexity from non-experts, being great candidates for developers writing software for various different applications. Unfortunately, they are often difficult to be combined, at least efficiently. With the recent introduction of NumPy community standards and protocols, it has become much easier to integrate any libraries that share the already well-known NumPy API. Such changes allow libraries like Dask, known for its easy-to-use parallelization and distributed computing capabilities, to defer some of that work to other libraries such as CuPy, providing users the benefits from both distributed and GPU computing with little to no change in their existing software built using the NumPy API. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M44S	1784	2d	hd	false	https://i.ytimg.com/vi/en2zdTT-Vwk/maxresdefault.jpg		888	20	0	0	0
138	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	gKu3AyRZ1yA	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Tiago Montes - Don't do this at work	"Don't do this at work [EuroPython 2019 - Talk - 2019-07-12 - PyCharm] [Basel, CH] By Tiago Montes In this talk I reframe a computer programming workshop for kids I delivered earlier this year, exploring and sharing my experience throughout that journey, from preparation to delivery, by recreating a simple yet engaging enough game. With that I'll both demonstrate several Python related techniques and tools many may not be aware of, on one hand, and, on the other, extract provocative questions about general learning processes, especially when targeted at professional developers. I promise zero slides and a somewhat fast-paced live (re)coding session, intertwined with comments on good/bad techniques, along with a surprising exploration of the turtle module in the Standard Library -- it is more capable than you think. I wrap up with a self-code review and with thoughts on how such a game could be improved, what implications that could have for both beginners and seasoned professionals: should you do this at work? Targeting 10 minute Q&amp;A / discussion by the end! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT45M31S	2731	2d	hd	false	https://i.ytimg.com/vi/gKu3AyRZ1yA/maxresdefault.jpg		437	12	0	0	0
139	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	gV01ZPxWuZg	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Petr Stehlík - The dos and don'ts of task queues	"The dos and don'ts of task queues [EuroPython 2019 - Talk - 2019-07-10 - Shanghai] [Basel, CH] By Petr Stehlík At Kiwi.com we heavily rely on task queues and asynchronous execution of code to process large amounts of requests coming to our back-ends. With the separation of our codebase to microservices, we can quickly try new tools and different approaches to process these large volumes of requests. The microservice we’ll be talking about is making unreliable slow 3rd party services reliable and asynchronous with a bit of business logic sprinkled on top of it. We’ll tell a failure story of ours but resulting in a valuable lesson. Most of our services use Celery and it’s the go-to tool for new services as well but we wanted to be different with this new microservice. RQ is the next best choice for task queues and it is presented as simpler and more straightforward than Celery. That can definitely be true but after 3 weeks of research, development and struggling we found out the unpleasant truth about being simple and making the right choices. We won’t talk about comparing the frameworks but rather about the approach on how to experiment with new things in your environment. After that, we’ll present our current setup which can take upon any number of tasks*. How we orchestrate the app and continuously integrate and deploy and what fun things await ahead of us in the development. *Conditions may apply. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M1S	1741	2d	hd	false	https://i.ytimg.com/vi/gV01ZPxWuZg/maxresdefault.jpg		501	5	0	0	0
140	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	i0BlJpDQW_U	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Mustafa Anil Tuncel - Bioinformatics pipeline for revealing tumour heterogeneity	"Bioinformatics pipeline for revealing tumour heterogeneity [EuroPython 2019 - Talk - 2019-07-10 - Singapore [PyData track] [Basel, CH] By Mustafa Anil Tuncel Reproducibility of research is a common issue in science, especially in computationally expensive research fields e.g. cancer research. A comprehensive picture of the genomic aberrations that occur during tumour progression and the resulting intra-tumour heterogeneity, is essential for personalised and precise cancer therapies. With the change in the tumour environment under treatment, heterogeneity allows the tumour additional ways to evolve resistance, such that intra-tumour genomic diversity is a cause of relapse and treatment failure. Earlier bulk sequencing technologies were incapable of determining the diversity in the tumour. br / Single-cell DNA sequencing - a recent sequencing technology - offers resolution down to the level of individual cells and is playing an increasingly important role in this field. We present a reproducible and scalable Python data analysis pipeline that employs a statistical model and an MCMC algorithm to infer the evolutionary history of copy number alterations of a tumour from single cells. The pipeline is built using Python, Conda environment management system and the Snakemake workflow management system. The pipeline starts from the raw sequencing files and a settings file for parameter configurations. After running the data analysis, pipeline produces report and figures to inform the treatment decision of the cancer patient. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT28M4S	1684	2d	hd	false	https://i.ytimg.com/vi/i0BlJpDQW_U/maxresdefault.jpg		60	4	0	0	0
141	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	j5c4q_kKnK4	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Franziska Oschmann - Boosting research with machine learning.	"Boosting research with machine learning. [EuroPython 2019 - Talk - 2019-07-10 - Osaka / Samarkand [PyData track] [Basel, CH] By Franziska Oschmann Within the last 20 years machine learning (ML) experienced a boost in its impact on our daily lives. With the help of supervised and unsupervised methods tasks like computer vision, recognition of speech or text have been revolutionized. Due to this high impact of ML ongoing research focuses on the constant improvement of these methods. However, ML is not exclusively the subject of research, but can also be used as a tool for the investigation of research questions. For example, ML is used to uncover hidden patterns in experimental data not detectable with neither the human eye nor standard statistical methods or to train machines so that they can take over repetitive tasks like object recognition. The increasing usage of ML in research is also due to Python libraries such as keras or scikit-learn. These libraries have simplified the handling of ML methods and thus paved the way for the application of these methods in many different research fields. This talk is intended to present examples for current applications of ML in research. These use cases deal with the automatic recognition of single neurons throughout a stack of histological images or the prediction of human arm movements based on EEG signals. Based on these use cases an overview of Python-based techniques for data preparation and data analysis applying different techniques ranging from standard ML methods to state-of-the-art implementations of deep neural networks will be given. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M2S	1802	2d	hd	false	https://i.ytimg.com/vi/j5c4q_kKnK4/maxresdefault.jpg		87	5	0	0	0
142	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	mMzFhGXGrVc	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Dom Weldon - Dash: Interactive Data Visualization Web Apps with no Javascript	"Dash: Interactive Data Visualization Web Apps with no Javascript [EuroPython 2019 - Talk - 2019-07-10 - Singapore [PyData track] [Basel, CH] By Dom Weldon Your data science or machine learning project probably won't just produce a written report. Instead, projects are increasingly expected to produce interactive tools to allow end-users to explore data and results with rich, interactive visualizations. Inevitably, this will be done in a web browser, meaning you'll need to add a quantitatively trained web developer to your team, or have your data scientists spend time learning HTML, Javascript and CSS. Dash, a project by the team that makes Plotly, solves some of these problems by allowing data scientists to build rich and interactive websites in pure python, with minimal knowledge of HTML and absolutely no Javascript. At decisionLab, a London-based data science consultancy producing decision tools, we've embraced Dash to produce proof-of-concept models for our projects in alpha. Although we're not officially connected to the plotly/Dash project, by using the library daily across many projects, we've learned many lessons and what we feel are best practises we'd like to share, and hear feedback on! This talk will give an overview of Dash, how it works and what it can be used for, before outlining some of the common problems that emerge when data scientists are let loose to produce web applications, and web developers have to work with the pydata ecosystem. The talk also covers effective working practises to start producing cool interactive statistical web applications, fast. We'll also identify some of the pitfalls of Dash, and how and when to make the decision to stop using Dash and start building a proper web application. Slides: http://domweldon-europython-2019-dash.s3.eu-west-2.amazonaws.com/index.html License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT32M26S	1946	2d	hd	false	https://i.ytimg.com/vi/mMzFhGXGrVc/maxresdefault.jpg		459	8	0	0	1
143	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	u3vRpKodgiU	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Tyler Brough - Using Python to Teach Computational Finance	"Using Python to Teach Computational Finance [EuroPython 2019 - Talk - 2019-07-10 - Singapore [PyData track] [Basel, CH] By Tyler Brough In this demo-driven session, we will introduce the Probo package for teaching Python programming and concepts from computational finance to beginning programmers in the domain of finance. We'll show how Python is the perfect tool for teaching computational thinking to develop deeper quantitative reasoning. Jupyter notebooks, together with Python packages such as NumPy and Pandas, provide the ideal learning environment. We will start by introducing the Probo package for derivative pricing and hedging. We will demo the pricing of European and American options via the famous Black-Scholes option pricing model. Other examples include Monte Carlo simulation and binomial trees. Using Probo, the answers to derivative pricing problems are right at the students' fingertips. Students can operationalize their understanding by going directly from the mathematics of derivative pricing theories to their implementation in clean and simple code. We will end with a demonstration using Probo to teach the concept of dynamic hedging. Dynamic hedging is perhaps emthe/em crucial concept in modern financial derivatives theory. It is also one of the most difficult concepts to grasp. We'll show how developing deeper intuition is possible with computational thinking via Monte Carlo simulation of delta-hedging. By leveraging the power and simplicity of Python and Jupyter notebooks, the Probo package provides the ideal learning platform for students of computational finance. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT27M17S	1637	2d	hd	false	https://i.ytimg.com/vi/u3vRpKodgiU/maxresdefault.jpg		343	11	0	0	0
144	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yRVnTrp9dcY	2019-09-03T16:23:08Z	2019-09-03 16:23:08	Juan Santos - PEP yourself: 10 PEPs you should pay attention to	"PEP yourself: 10 PEPs you should pay attention to [EuroPython 2019 - Talk - 2019-07-12 - PyCharm] [Basel, CH] By Juan Santos Reading standards documents can be a dull task. But like in other fields, standards in Python play a big part. Python Enhancement Proposals (PEPs) are defined, improved, and eventually implemented by the community. They apply to mostly anything related to Python, from the more abstract and general to the more concrete and specific. Paying attention to them, and knowing which ones to read beforehand is a vital task that should take place prior to writing the first lines of code in a project. In this talk we will go over a condensed list of the most important PEPs to this date and see how they influence everyday coding. From style guides and docstring conventions to data classes and assignment expressions, we will see how these PEPs affect (or can affect) the code we write, and how can we use them to improve our code and make developing easier and more fun. After this talk, attendees will have a better grasp on why PEPs are important to Python, which are a must read, and which ones they should use as a guide in the future, both for coding and refactoring. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT26M17S	1577	2d	hd	false	https://i.ytimg.com/vi/yRVnTrp9dcY/maxresdefault.jpg		316	10	1	0	1
145	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-WDV0-OB4fE	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Mark Smith - Publish a (Perfect) Python Package on PyPI	"Publish a (Perfect) Python Package on PyPI [EuroPython 2019 - Talk - 2019-07-10 - Shanghai] [Basel, CH] By Mark Smith Always wanted to publish a package on PyPI, but didn't know where to start? This talk is for you! Starting with nothing, we'll build a package and publish it on PyPI using current best practices. Learn how to structure your project and your code. Discover what goes in your coderequirements.txt/code and your codesetup.py/code. Ensure your code will work in different on different platforms! Document your code so people won't ask you loads of questions! Finally, learn how avoid doing any of this yourself. This talk will cover: Why should you package your code for PyPI? How to structure your project and your code, including why you need a codesrc/code folder! Discover what goes in your codePipfile/code and your codesetup.py/code, and why. Learn the difference between installing your library to use it, and installing it to develop on it. Write tests for your project, and run them using Tox. Ensure your code will work in different on different platforms with Continuous Integration! Document your code so people won't ask you loads of questions! How to actually get your code on PyPI using Twine. Finally, learn how avoid doing any of this yourself (or avoid doing it twice) using CookieCutter templates. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M33S	1773	2d	hd	false	https://i.ytimg.com/vi/-WDV0-OB4fE/maxresdefault.jpg		1349	41	0	0	0
146	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	02-IYuDQdTE	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Cristián Maureira-Fredes - Unleash the power of C++ in Python	"Unleash the power of C++ in Python [EuroPython 2019 - Talk - 2019-07-10 - Shanghai] [Basel, CH] By Cristián Maureira-Fredes One of the main Python aspects is to have a clear syntax and be an easy-to-understand language, which compared to others like C++ (depending of the kindness of the developer) can make a huge difference. Not only the readability is in play, having a dynamically typed and interpreted language improves the development workflow. This improvement comes with a cost, performance. In most of the cases, a raw comparison of simple routines will leave Python behind, but there is a partial solution to this problem, connecting a powerful performant C++ library with the simplicity of Python. In this talk, we will go through the process of generating language bindings to allow you to take any amazing C or C++ project and bring it to Python land. We will briefly discuss one of the many success stories, and we will analyze how the Qt project managed to expose its whole framework to Python, with the help of a self-made binding generator called Shiboken. After the talk, you will be able to decide which option is better for the projects you have in mind, and with a bit of luck you will be responsible of exposing the next popular C++ library that makes the life of us all Pythonistas easier. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT29M27S	1767	2d	hd	false	https://i.ytimg.com/vi/02-IYuDQdTE/maxresdefault.jpg		434	14	0	0	0
147	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0RaotdCa_j0	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Samuel Colvin - Python's Parallel Programming Possibilities - 4 levels of concurrency	"Python's Parallel Programming Possibilities - 4 levels of concurrency [EuroPython 2019 - Talk - 2019-07-10 - Boston] [Basel, CH] By Samuel Colvin I'm going to talk about the 4 main levels of parallelism in modern Computing: multiple (virtual) machines multiple processes multiple threads multiple green threads, aka asyncio Why you might use each of them, how to go about doing so with python and some of the pitfalls you might fall into along the way. To do so, I'll give short examples in code of achieving each level: leveraging multiple hosts using RQ, and also the possibility of RPC with HTTP multiprocessing and threading using their respective modules from the python standard library asyncio demonstrated with AIOHTTP That sounds great, but there are ""gotchas"" you should know about before you get started, for example: multiple machines can actually be multiple virtual machines on the same host effectively communicating between processes is hard, how can we go about making it easier? the limitations of threading and the GIL runemin/emexecutor - do we ever really need to use multiprocessing or threading directly again use of asyncio when dealing with both networking between hosts and between processes - you end up using two different kinds of concurrency at the same time. That can be confusing, but also awesome. I'll finish of by showcasing a library I built, arq which is a job queueing and RPC library for python which uses asyncio and Redis. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT32M24S	1944	2d	hd	false	https://i.ytimg.com/vi/0RaotdCa_j0/maxresdefault.jpg		711	5	0	0	2
148	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2OD8loVvHXc	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Martin Christen - Geospatial Analysis using Python and JupyterHub	"Geospatial Analysis using Python and JupyterHub [EuroPython 2019 - Talk - 2019-07-10 - Singapore [PyData track] [Basel, CH] By Martin Christen Geospatial data is data containing a spatial component – describing objects with a reference to the planet's surface. This data usually consists of a spatial component, of various attributes, and sometimes of a time reference (where, what, and when). Efficient processing and visualization of small to large-scale spatial data is a challenging task. This talk describes how to process and visualize geospatial vector and raster data using Python and the Jupyter Notebook. To process the data a high performance computer with 4 GPUS (NVidia Tesla V100), 192 GB RAM, 44 CPU Cores is used to run JupyterHub. There are numerous modules available which help using geospatial data in using low- and high-level interfaces, which are shown in this presentation. In addition, it is shown how to use deep learning for raster analysis using the high performance GPUs and several deep learning frameworks. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M6S	1806	2d	hd	false	https://i.ytimg.com/vi/2OD8loVvHXc/maxresdefault.jpg		442	11	1	0	0
149	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3MSWONJMOK0	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Shailen Sobhee - Accelerate your Deep Learning Inferencing with the Intel® DL Boost technology	"Accelerate your Deep Learning Inferencing with the Intel® DL Boost technology [EuroPython 2019 - Talk - 2019-07-10 - Boston] [Basel, CH] By Shailen Sobhee Learn about Intel® Deep Learning Boost, also known as Vector Neural Network Instructions (VNNI), a new set of AVX-512 instructions, that are designed to deliver significantly more efficient Deep Learning (Inference) acceleration. Through this technology, I will show you how you can perform low-precision (INT8) inference much faster on hardware that support the VNNI instruction set (for example, the 2nd generation Intel Xeon Scalable processors, codenamed, Cascade Lake). In the live Jupyter notebook session, you can will be able to see the benefits of this new hardware technology. Note: This is an advanced talk. Knowledge about Deep Learning, Inferencing and basic awareness of hardware instruction sets would be desirable. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT28M44S	1724	2d	hd	false	https://i.ytimg.com/vi/3MSWONJMOK0/maxresdefault.jpg		213	8	0	0	0
150	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IdsrZYZ0TI0	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Matthieu Amiguet - Python for realtime audio processing in a live music context	"Python for realtime audio processing in a live music context [EuroPython 2019 - Talk - 2019-07-10 - MongoDB [PyData track] [Basel, CH] By Matthieu Amiguet At Les Chemins de Traverse we explore ways of ""augmenting"" acoustical musical instruments with new sonic possibilities offered by computers. For doing so, we need ultra-low latency real-time audio processing programs. Pretty much the typical situation where python should emnot/em be used, right? Wrong. As it happens, that's exactly what we've been doing for the past few years. Building on Olivier Belanger's wonderful pyo module and (ab)using python's flexibility, we developed custom software to allow us to express our musical ideas. If you want to hear how it sounds, you should go to Europython's social event that will feature a gig based on python-augmented (!) instruments. And if you want to know how we came to use python in this context and how we do it, you should come to this talk! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT42M47S	2567	2d	hd	false	https://i.ytimg.com/vi/IdsrZYZ0TI0/maxresdefault.jpg		2633	54	0	0	3
151	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JdorsyCim5U	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Marc-Andre Lemburg - PyRun - Shipping the Python 3.7 runtime in just 4.8MB	"PyRun - Shipping the Python 3.7 runtime in just 4.8MB [EuroPython 2019 - Talk - 2019-07-10 - Shanghai] [Basel, CH] By Marc-Andre Lemburg Python has become the defacto standard tool for many people to write tools, command scripts, smaller applications and even large applications. On Windows, it is fairly easy to build application bundles using e.g. py2exe, but on Unix, the situation is less obvious, unless you want to rely on OS specific Python distributions, which often require severall 100MB with of installation on the system and are usually customized in distribution specific ways. Instead of relying on OS installed Python distributions on Unix, our open-source eGenix PyRun provides a more or less complete Python runtime (interpreter and stdlib modules) in a single file, which can be ""installed"" by simply copying the binary to the destination system. The file can be as small as 4.8MB for Python 3.7, by using compressors such as upx. Due to its size, it's also the perfect Python distribution for Docker containers. The talk will show how PyRun works, is built, how to customize it to include additional modules and applications. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT31M7S	1867	2d	hd	false	https://i.ytimg.com/vi/JdorsyCim5U/maxresdefault.jpg		405	10	0	0	1
152	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Ov0scTjDVuQ	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Teresa Ingram - Opt Out of Online Sexism – Open Source Activism	"Opt Out of Online Sexism – Open Source Activism [EuroPython 2019 - Talk - 2019-07-10 - PyCharm] [Basel, CH] By Teresa Ingram ""Although people of all genders can experience violence and abuse online, the abuse experienced by women is often sexist or misogynistic in nature, and online threats of violence against women are often sexualized and include specific references to women’s bodies. "" - Amnesty International. This abuse pushes women offline, affecting their social well-being, representation and economic potential. In this talk I will discuss how we plan to help resolve this with our browser extension, Opt Out. I will discuss the online global tragedy that is online sexual harassment, our idea and where we’re at with current implementation. I will also talk about what it’s like to build an open source activism project, one which aims to be lead by the community it’s trying to protect. We will cover current research and results from our own engagement with the community, where the idea came from and challenges we have faced and plan to face in the future. I will also dive into the intricate world of natural language processing (NLP) for online harassment and talk about balancing state-of-the-art data science with web development in an open source community, one being managed by someone relatively new to tech. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT24M7S	1447	2d	hd	false	https://i.ytimg.com/vi/Ov0scTjDVuQ/maxresdefault.jpg		483	6	7	0	0
153	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QOHBbv2n_hw	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Christian Barra - How software can feed the world 🌱	"How software can feed the world 🌱 [EuroPython 2019 - Talk - 2019-07-11 - Osaka / Samarkand [PyData track] [Basel, CH] By Christian Barra Infarm is a FaaS, Farming as a Service, and whether you believe it or not, our business is in-house farming at scale. We design and build our farms, grow vegetables and sell them, and the backbone of our infrastructure is based on Python. You can check this video to see what we do - https://twitter.com/christianbarra/status/1096399602159439874 More than 10 million observations are recorded from our farms, feeding our farm management system that allows operators, plant scientists, and supervisors to monitor each farm in real-time. During this talk I will briefly introduce the world's problems we are trying to resolve at Infarm and then talk about our IoT farms, infrastructure, how we use Python and how we plan to improve the capabilities of our farms by adding edge machine learning. Agenda What are the problems we are trying to solve at Infarm Our 4 tech pillars How we started with Python Issues we are facing while scaling our Python infrastructure to support &gt; 400 farms How we plan to evolve our software and infrastructure on 4 different levels: consolidate, architecture, cloud native and observability How Python is going to support our automated farms and its role in making the farms smarter (edge computing with AI) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT43M11S	2591	2d	hd	false	https://i.ytimg.com/vi/QOHBbv2n_hw/maxresdefault.jpg		217	1	0	0	0
154	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	RYcLq_HwXSc	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Emmanuelle Gouillart - Image processing with scikit-image and Dash	"Image processing with scikit-image and Dash [EuroPython 2019 - Talk - 2019-07-10 - MongoDB [PyData track] [Basel, CH] By Emmanuelle Gouillart Images are an ubiquitous form of data in various fields of science and industry. Images often need to be transformed and processed, for example for helping medical diagnosis by extracting regions of interest or measures, or for building training sets for machine learning. In this talk, I will present and discuss several tools for automatic and interactive image processing with Python. I will start by a short introduction to scikit-image (https://scikit-image.org/), the open-source image processing toolkit of the Pydata ecosystem, which aims at processing images from a large class of modalities (2-D, 3-D, etc.) and strives to have a gentle learning curve with pedagogical example-based documentation. scikit-image provides users with a simple API based on a large number of functions, which can be used to build pipelines of image processing workflows. In a second part, I will explain how to use Dash for building interactive image processing operations. Dash (https://dash.plot.ly/) is an open-source Python web application framework developed by Plotly. Written on top of Flask, Plotly.js, and React.js, Dash is meant for building data visualization apps with highly custom user interfaces in pure Python. The dash-canvas component library of Dash (https://dash.plot.ly/canvas) is an interactive component for annotating images with several tools (freehand brush, lines, bounding boxes, ...). It also provides utility functions for using user-provided annotations for several image processing tasks such as segmentation, transformation, measures, etc. The latter functions are based on libraries such scikit-image and openCV. A gallery of examples showcases some typical uses of Dash for image processing on https://dash-canvas.plotly.host/. Also, other components of Dash can be leveraged easily to build powerful image processing applications, such as widgets to tune parameters or data tables for inspecting object properties. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M42S	1842	2d	hd	false	https://i.ytimg.com/vi/RYcLq_HwXSc/maxresdefault.jpg		592	9	0	0	0
155	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Sq1TDj8mIrs	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Leonardo Rochael Almeida - From days to minutes, from minutes to milliseconds with SQLAlchemy	"From days to minutes, from minutes to milliseconds with SQLAlchemy [EuroPython 2019 - Talk - 2019-07-10 - Boston] [Basel, CH] By Leonardo Rochael Almeida Object Relational Mappers (ORMs) are awesome enhancers of developer productivity. The freedom of having the library write that SQL and give you back a useful, rich model instance (or a bunch of them) instead of just a tuple or a list of records is simply amazing. But if you forget you have an actual database behind all that convenience, then it'll bite you back, usually when you've been in production for a while, after you've accumulated enough data that your once speedy application starts slowing down do a crawl. Databases work best when you ask them once for (or to do) a bunch of stuff, instead of asking them lots of times for small stuff. We'll discuss how innocent looking attribute accesses on your model instances translate to sequential queries (the infamous N+1 problem). Then we'll go through some practical solutions, taken from real cases, that resulted in massive speed ups. We'll cover how changes in Python code resulted in changes to the resulting SQL Queries. We'll see solutions not only for queries, but also for inserts and updates, which tend to be less well documented. Though this talk focuses on SQLAlchemy, the lessons should be applicable to most ORMs in most programing languages. The ideas discussed, and solutions proposed are also valid for any storage back-end, not only SQL databases. This talk is geared towards Python developers with systems that talk to databases. It should be accessible to anyone who already programs in Python (early intermediary level), but will be most useful for developers with projects talking to SQL databases, specially using an ORM like SQLAlchemy. Attendees will learn to detect how N+1 query situations arise and how to work around them effectively. They will also learn how to do mass inserts and mass updates with SQLAlchemy. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/ "	28	Science & Technology	PT45M19S	2719	2d	hd	false	https://i.ytimg.com/vi/Sq1TDj8mIrs/maxresdefault.jpg		390	5	0	0	0
156	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SzGIiUNHN2g	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Cheuk Ho - Do we have a diversity problem in Python community?	"Do we have a diversity problem in Python community? [EuroPython 2019 - Talk - 2019-07-10 - PyCharm] [Basel, CH] By Cheuk Ho The diversity statement quoted as follows: “The Python Software Foundation and the global Python community welcome and encourage participation by everyone. Our community is based on mutual respect, tolerance, and encouragement, and we are working to help each other live up to these principles. We want our community to be more diverse: whoever you are, and whatever your background, we welcome you.” Diversity, big deal! As an active members and event organisers (and also on the minority side of the gender) in the Python community, we have alway been concern by the question of: Do we truly have a problem in diversity? Especially, gender diversity. We would like to find out the truth, by data science, and see if we can find a clue why and how we can fix it. First, we will show the research others did regarding the representation of women in the R and Python communities [1]. Then, we will show the research that we did based on our experience and statistic. Including static analysis of the speakers diversity (regarding gender) at major PyCon and PyData conferences. Finally, as we all care about diversity and want improvements, we would like to find out the reason and what we can do about it. We would propose what we, the minorities and allies, could do against this seemingly unbalance situation and make the community better. This talk is for all that who cares about diversity in our community. [1] https://reshamas.github.io/why-women-are-flourishing-in-r-community-but-lagging-in-python/ Update: slides at https://slides.com/cheukting_ho/do-we-have-a-diversity-problem-in-python-community License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT31M8S	1868	2d	hd	false	https://i.ytimg.com/vi/SzGIiUNHN2g/maxresdefault.jpg		224	3	9	0	7
157	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XHNSYfkKnOQ	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Elizaveta Shashkova - Visual debugger for Jupyter Notebooks: Myth or Reality?	"Visual debugger for Jupyter Notebooks: Myth or Reality? [EuroPython 2019 - Talk - 2019-07-10 - MongoDB [PyData track] [Basel, CH] By Elizaveta Shashkova Many Python developers like Jupyter Notebooks for their flexibility: they are very useful for interactive prototyping, scientific experiments, visualizations and many other tasks. There are different development tools which make working with Jupyter Notebooks easier and smoother, but all of them lack very important feature: visual debugger. Since Jupyter Kernel is a usual Python process, it looks reasonably to use one of existing Python debuggers with it. But is it really possible? In this talk we’ll try to understand how Python debugger should be changed to work with Jupyter cells and how these changes are already implemented in the PyCharm IDE. After that we’ll look into the whole Jupyter architecture and try to understand which bottlenecks in it prevent creation of universal Jupyter debugger at the moment. This talk requires a basic knowledge of Jupyter Notebooks and understanding of Python functions and objects. It will be interesting for people who want to learn internals of the tools they use every day. Also it might be an inspiration for people who want to implement a visual debugger in their favourite IDE. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M26S	1826	2d	hd	false	https://i.ytimg.com/vi/XHNSYfkKnOQ/maxresdefault.jpg		1105	10	2	0	0
158	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YlIDlpspvVU	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Katherine Kampf - Building a Powerful Pet Detector in Notebooks	"Building a Powerful Pet Detector in Notebooks [EuroPython 2019 - Talk - 2019-07-10 - MongoDB [PyData track] [Basel, CH] By Katherine Kampf Ever wondered what breed that dog or cat is? Let’s build a pet detector service to recognize them in pictures! In this talk, we will walk through the training, optimizing, and deploying of a deep learning model using Azure Notebooks. We will use transfer learning to retrain a MobileNet model using TensorFlow to recognize dog and cat breeds using the Oxford IIIT Pet Dataset. Next, we’ll optimize the model and tune our hyperparameters to improve the model accuracy. Finally, we will deploy the model as a web service in. Come to learn how you can quickly create accurate image recognition models with a few simple techniques! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT26M46S	1606	2d	hd	false	https://i.ytimg.com/vi/YlIDlpspvVU/maxresdefault.jpg		388	5	1	0	0
159	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dnzaIeUgH_4	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Sven-Hendrik Haase - Become a command line wizard	"Become a command line wizard [EuroPython 2019 - Talk - 2019-07-10 - Boston] [Basel, CH] By Sven-Hendrik Haase There are many modern terminal tools with vastly improved user experiences as compared to their traditional alternatives. This talk aims to show off some of those modern terminal tools and compare them side by side with the traditional ones. Python is not only used by software developers with fancy IDEs but also by DevOps engineers, administrators, and on remote development machines where using a GUI is impractical. Therefore, many people are stuck with a terminal interface only and have to use tools like vim, grep, find, wc, cloc, less and many others to explore their way around their Python programs. However, thanks to the advent of many new and improved tools, we can do many of the same tasks better, faster and with nicer ergonomics. This talk will show off effective use of vim as an IDE with completions and linting provided by LSP, fd (instead of find) for finding files, ripgrep (instead of grep) for searching strings, tokei (instead of cloc) for counting lines of code, bat (instead of cat) for looking at files, hyperfine for microbenchmarking, httpie (instead of curl) for making HTTP requests, sd (instead of sed) for text replacement. This talk should make terminal work more approachable for all attendees by showing off how to do some everyday tasks on the terminal. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT30M37S	1837	2d	hd	false	https://i.ytimg.com/vi/dnzaIeUgH_4/maxresdefault.jpg		2493	89	3	0	0
160	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dw5u4nth6_M	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Gael Varoquaux - Machine learning on non curated data	"Machine learning on non curated data [EuroPython 2019 - Talk - 2019-07-11 - Singapore [PyData track] [Basel, CH] By Gael Varoquaux According to industry surveys [1], the number one hassle of data scientists is cleaning the data to analyze it. Textbook statistical modeling is sufficient for noisy signals, but errors of a discrete nature break standard tools of machine learning. I will discuss how to easily run machine learning on data tables with two common dirty-data problems: missing values and non-normalized entries. On both problems, I will show how to run standard machine-learning tools such as scikit-learn in the presence of such errors. The talk will be didactic and will discuss simple software solutions. It will build on the latest improvements to scikit-learn for missing values and the DirtyCat package [2] for non normalized entries. I will also summarize theoretical analyses in recent machine learning publications. This talk targets data practitioners. Its goal are to help data scientists to be more efficient analysing data with such errors and understanding their impacts. With missing values, I will use simple arguments and examples to outline how to obtain asymptotically good predictions [3]. Two components are key: imputation and adding an indicator of missingness. I will explain theoretical guidelines for these, and I will show how to implement these ideas in practice, with scikit-learn as a learner, or as a preprocesser. For non-normalized categories, I will show that using their string representations to “vectorize” them, creating vectorial representations gives a simple but powerful solution that can be plugged in standard statistical analysis tools [4]. [1] Kaggle, the state of ML and data science 2017 https://www.kaggle.com/surveys/2017 [2] https://dirty-cat.github.io/stable/ [3] Josse Julie, Prost Nicolas, Scornet Erwan, and Varoquaux Gaël (2019). “On the consistency of supervised learning with missing values”. https://arxiv.org/abs/1902.06931 [4] Cerda Patricio, Varoquaux Gaël, and Kégl Balázs. ""Similarity encoding for learning with dirty categorical variables."" Machine Learning 107.8-10 (2018): 1477 https://arxiv.org/abs/1806.00979 License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT42M53S	2573	2d	hd	false	https://i.ytimg.com/vi/dw5u4nth6_M/maxresdefault.jpg		544	11	0	0	0
161	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	k_vyCViObf8	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Paolo Galeone - Dissecting tf.function to discover AutoGraph strengths and subtleties	"Dissecting tf.function to discover AutoGraph strengths and subtleties [EuroPython 2019 - Talk - 2019-07-10 - Singapore [PyData track] [Basel, CH] By Paolo Galeone AutoGraph is one of the most exciting new features of Tensorflow 2.0: it allows transforming a subset of Python syntax into its portable, high-performance and language agnostic graph representation bridging the gap between Tensorflow 1.x and the 2.0 release based on eager execution. Using AutoGraph with the code@tf.fuction/code decorator seems easy, but in practice, writing efficient and correctly graph-convertible code requires to know in detail how AutoGraph and tf.function work. In particular, knowing how: A graph is created and when it is re-used; To deal with functions that create a state; To correctly use the Tensorflow codetf.Tensor/code object instead of using the Python native types to speed-up the computation; defines the minimum skill-set required to write correct graph-accelerable code. The talk will guide you trough AutoGraph and codetf.function/code highlighting all the peculiarities that are worth knowing to build the right skill-set. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT27M13S	1633	2d	hd	false	https://i.ytimg.com/vi/k_vyCViObf8/maxresdefault.jpg		174	2	0	0	0
162	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kytvDxxedWY	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Alisa Dammer - Python vs Rust for Simulation	"Python vs Rust for Simulation [EuroPython 2019 - Talk - 2019-07-10 - PyCharm] [Basel, CH] By Alisa Dammer Both Python and Rust are getting more and more popularity. Although it is unfair to compare them directly, this talk aims to provide a clear comparison with a pre-defined criteria applied to a specific use-case. Writing a simulation engine is very similar to writing a game engine and requires certain features from a language or framework. Possible comparison criteria: 1. Performance 2. Simplicity 3. Amount of code necessary for a MVP 4. Utilities: docs, tests, profile 5. Compatibility Tl;dr Do I want to go back to Python after Rust? Maybe+) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT28M58S	1738	2d	hd	false	https://i.ytimg.com/vi/kytvDxxedWY/maxresdefault.jpg		5753	85	10	0	10
163	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	uF2GhMAaQOQ	2019-09-03T16:23:07Z	2019-09-03 16:23:07	Lynn Cherny - Getting Your Data Joie De Vivre Back!	"Getting Your Data Joie De Vivre Back! [EuroPython 2019 - Keynote - 2019-07-10 - MongoDB [PyData track] [Basel, CH] By Lynn Cherny Most of us work too much and play too little.  When was the last time you smiled at something you made?  Playing with fun datasets, especially big data sets, opens up weird new forms of technical recreation.  Why not train an amusing model in a browser tab while you're waiting for that day-job Spark query to finish?  I'll show you some data toys I've built using AI and interesting data sets: Most of them involve both backend data science and front-end visualization tricks.  They range from poetry-composition helpers to game log analysis to image deconstruction and reconstruction. All of them taught me something, often about myself and what I like artistically, and sometimes about what ""big data"" actually means. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/	28	Science & Technology	PT47M17S	2837	2d	hd	false	https://i.ytimg.com/vi/uF2GhMAaQOQ/maxresdefault.jpg		657	4	2	0	0
164	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	T6vC_LOHBJ4	2019-07-12T22:38:52Z	2019-07-12 22:38:52	MongoDB - EuroPython Basel Friday, 12th 2019	MongoDB - EuroPython Basel Friday, 12th 2019	28	Science & Technology	PT9H28M24S	1704	2d	hd	false			2491	26	1	0	3
165	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ELI8WKiUmBY	2019-07-12T15:40:08Z	2019-07-12 15:40:08	PyCharm - EuroPython Basel Friday, 12th 2019	PyCharm - EuroPython Basel Friday, 12th 2019	28	Science & Technology	PT7H12M13S	733	2d	hd	false			1318	16	1	0	1
166	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WMTV2jdfUfA	2019-07-12T15:31:57Z	2019-07-12 15:31:57	Osaka - EuroPython Basel Friday, 12th 2019	Osaka - EuroPython Basel Friday, 12th 2019	28	Science & Technology	PT4H55M14S	3314	2d	hd	false			917	18	1	0	3
167	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	C-Ltp1D_m3c	2019-07-12T15:29:46Z	2019-07-12 15:29:46	Shanghai - EuroPython Basel Friday, 12th 2019	Shanghai - EuroPython Basel Friday, 12th 2019	28	Science & Technology	PT7H36M26S	2186	2d	hd	false			888	14	0	0	3
168	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HdtBT3yXUeE	2019-07-12T15:17:31Z	2019-07-12 15:17:31	Boston - EuroPython Basel Friday, 12th 2019	Boston - EuroPython Basel Friday, 12th 2019	28	Science & Technology	PT7H4M50S	290	2d	hd	false			789	7	0	0	2
169	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2hN7uTcaHLM	2019-07-12T15:09:42Z	2019-07-12 15:09:42	Singapore - EuroPython Basel Friday, 12th 2019	Singapore - EuroPython Basel Friday, 12th 2019	28	Science & Technology	PT7H22M	1320	2d	hd	false			610	9	0	0	1
170	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hgry3vkuI5Y	2019-07-11T17:56:02Z	2019-07-11 17:56:02	MongoDB - EuroPython Basel Thursday, 11th 2019	MongoDB - EuroPython Basel Thursday, 11th 2019	28	Science & Technology	PT10H1M34S	94	2d	hd	false			1133	16	1	0	4
171	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2FmMESSD2CM	2019-07-11T17:10:46Z	2019-07-11 17:10:46	Singapore - EuroPython Basel Thursday, 11th 2019	Singapore - EuroPython Basel Thursday, 11th 2019	28	Science & Technology	PT7H33M14S	1994	2d	hd	false			457	10	0	0	1
172	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lxXC76jHc98	2019-07-11T17:08:40Z	2019-07-11 17:08:40	Osaka - EuroPython Basel Thursday, 11th 2019	Osaka - EuroPython Basel Thursday, 11th 2019	28	Science & Technology	PT5H55M30S	3330	2d	hd	false			367	6	0	0	2
173	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	icVMirr1Kis	2019-07-11T17:00:51Z	2019-07-11 17:00:51	Boston - EuroPython Basel Thursday, 11th 2019	Boston - EuroPython Basel Thursday, 11th 2019	28	Science & Technology	PT7H41M36S	2496	2d	hd	false			656	5	0	0	1
174	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jWKnA2ZdzHk	2019-07-11T16:54:48Z	2019-07-11 16:54:48	PyCharm - EuroPython Basel Thursday, 11th 2019	PyCharm - EuroPython Basel Thursday, 11th 2019	28	Science & Technology	PT6H47M19S	2839	2d	hd	false			914	8	0	0	1
175	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3Dsq_sPLc3g	2019-07-11T16:47:52Z	2019-07-11 16:47:52	Shanghai - EuroPython Basel Thursday, 11th 2019	Shanghai - EuroPython Basel Thursday, 11th 2019	28	Science & Technology	PT6H56M1S	3361	2d	hd	false			763	10	0	0	1
176	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-jqzStNk6CM	2019-07-11T02:48:22Z	2019-07-11 02:48:22	PyCharm - EuroPython Basel Wednesday, 10th 2019	PyCharme - EuroPython Basel Wednesday, 10th 2019	28	Science & Technology	PT6H16M54S	1014	2d	hd	false			813	8	1	0	1
177	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XDy_3oiAKsk	2019-07-10T18:15:06Z	2019-07-10 18:15:06	MongoDB - EuroPython Basel Wednesday, 10th 2019	MongoDB - EuroPython Basel Wednesday, 10th 2019	28	Science & Technology	PT9H33M2S	1982	2d	hd	false			1383	27	0	0	2
178	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jnDfNJe-GlE	2019-07-10T17:24:59Z	2019-07-10 17:24:59	Osaka - EuroPython Basel Wednesday, 10th 2019	Osaka - EuroPython Basel Wednesday, 10th 2019	28	Science & Technology	PT6H2M43S	163	2d	hd	false			634	16	1	0	4
179	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	D6CHQNIox3s	2019-07-10T16:22:35Z	2019-07-10 16:22:35	Singapore - EuroPython Basel Wednesday, 10th 2019	Singapore - EuroPython Basel Wednesday, 10th 2019	28	Science & Technology	PT7H8M46S	526	2d	hd	false			507	8	0	0	1
180	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Dz89wIwX_EE	2019-07-10T15:59:39Z	2019-07-10 15:59:39	Boston - EuroPython Basel Wednesday, 10th 2019	Boston - EuroPython Basel Wednesday, 10th 2019	28	Science & Technology	PT6H44M58S	2698	2d	hd	false			1149	15	2	0	4
181	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SUQYuA9AJT0	2019-07-10T15:56:21Z	2019-07-10 15:56:21	Shanghai - EuroPython Basel Wednesday, 10th 2019	Shanghai - EuroPython Basel Wednesday, 10th 2019	28	Science & Technology	PT6H35M15S	2115	2d	hd	false			1050	16	1	0	2
182	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4TqztAPtGY8	2018-09-06T11:35:41Z	2018-09-06 11:35:41	Joshua Lowe - EduBlocks - Making the transition to Python easier!	EduBlocks - Making the transition to Python easier! [EuroPython 2018 - Talk - 2018-07-27 - Smarkets] [Edinburgh, UK] By Joshua Lowe Looking for ways to make the transition from block based programming to Python easier, then look no further! In this talk 14 year old Josh will introduce you to his project called EduBlocks, which is a drag and drop version of Python 3 that he has created to help teachers introduce programming languages, like Python, to children at an earlier age. The goal of the project is to make the transition from block based programs like Scratch to Python easier for students and teachers, as presently there is no drop-in solution that bridges this gap. Josh will share his journey so far with you, from how he came up with the idea when he was only 11 years old, the developments along the way, the exciting plans for the future and how schools today in over 72 different countries around the world are making use of EduBlocks on the Raspberry Pi and micro:bit. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT35M20S	2120	2d	hd	false	https://i.ytimg.com/vi/4TqztAPtGY8/maxresdefault.jpg		1185	18	0	0	0
183	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	apcNyycpidw	2018-09-06T11:35:41Z	2018-09-06 11:35:41	Alexandre Figura - Integration Tests with Super Powers	Integration Tests with Super Powers [EuroPython 2018 - Talk - 2018-07-27 - Smarkets] [Edinburgh, UK] By Alexandre Figura You are maybe like me: I never learned at school how to write tests. My teachers gave me at first a broad overview of computer history. Then, they explained me some basic design patterns. And to finish, I often had to write more or less basic programs, to validate and demonstrate my skills. Not the kind of code I would be really proud of today: the procrastinator monkey living in my head at this time was more thinking about planning my summer holidays, rather than writing Ninja code! And to make things worse, my studies focused on network and system engineering. Not software architecture. Funny story, because I decided to become programmer a couple of years later... What I realize now is that I don't have as much time as before to learn. And in a world driven by business, where time is money, and where tradeoffs are the rule, there is rarely enough money to write both shiny new features and a complete test suite. People who practice Test-Driven Development know how complicated it can be to write proper tests. TDD is often discouraging at first: the learning curve is steep. But this problem also exists in the testing world in general. Because writing good tests is hard, many beginners get headaches trying to reach this goal. How to convince project managers to have more time for writing tests in these conditions... But "le jeu en vaut la chandelle" as we say in French ("the juice is worth the squeeze"). Well tested applications are not only easier to maintain and extend. They also have in general a better API. That's what we will see in this talk, by focusing on how to write integration tests. Our journey will begin with a presentation of different testing strategies. We will then jump to the practical part, using Pytest, interface testing , dependency injections and stubs, amongst many others. And because we want to add nice buzzwords on our resume after EuroPython, we will finish this talk by automating the whole with Docker Compose. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M24S	1824	2d	hd	false	https://i.ytimg.com/vi/apcNyycpidw/maxresdefault.jpg		699	5	0	0	0
184	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	epPFCdEgHxM	2018-09-06T11:35:41Z	2018-09-06 11:35:41	Marcel Raas - Change music in two epochs	Change music in two epochs [EuroPython 2018 - Talk - 2018-07-27 - Fintry [PyData]] [Edinburgh, UK] By Marcel Raas This talk is about applying deep learning to music. We will look at the raw music data and discover the following: How to detect instruments from a piece of music How to detect what is being played by what instrument How to isolate instruments in multi-instrument (polyphonic) music Instead of applying it to existing music we will generate our own music using some simple musical rules. The benefit of this is that we are in control of the complexity and we know exactly what is being played. We start out simple and then start adding more instruments, different timbres, etc. As we go up in complexity, we shall see how to adapt our models to be able to deal with it. This gives interesting insights in what structures in deep nets work well. I will show: How to build a simple synthesizer using numpy How to create an unlimited data set of improvisation that sounds musical How to use this data set for detecting instruments using deep learning How to filter out one instrument when multiple synthesizers are playing at once License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT43M55S	2635	2d	hd	false	https://i.ytimg.com/vi/epPFCdEgHxM/maxresdefault.jpg		464	13	0	0	0
185	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0GoPTJE7Vms	2018-09-06T11:35:40Z	2018-09-06 11:35:40	Omar Gutiérrez - From linear algebra to machine learning	From linear algebra to machine learning [EuroPython 2018 - Talk - 2018-07-27 - Fintry [PyData]] [Edinburgh, UK] By Omar Gutiérrez Math is a crucial skill for people who are interested in Data Science and Machine Learning. Until now, most of the people who are doing Data Science have a strong background in math, usually, people with master or Ph.D. degrees. However, this fact seems to change in the next years, after the hype of Machine Learning we are facing a process of democratization. Now the door of Data Science is open for everyone. To truly madly deeply understand how the machine learning algorithms work we need to understand some mathematical concepts. In this tutorial, I would like to share my experience in the process of learning some of those concepts. What I want to do is build a bridge between those concepts and Python, more specifically, SciPy and NumPy and TensorFlow. Basically is just another tutorial about vectorization, in this case, oriented to understand and implement machine learning algorithms and the mathematical foundation that supports it. Outline Review of linear algebra: A brief review of essential linear algebra, concepts and the explanation with NumPy: scalars, vectors, matrices, tensors, multiplication of vectors, inner products, vector spaces, etc. Review of machine learning: A brief review of essential machine learning, concepts that are related to mathematical concepts: dimensionality reduction, principal component analysis, etc. Optimization: Analytical vs. numerical solutions. This part has too many formulas, well, not too many. Vectorization: Numpy and TensorFlow. Small practical cases: I want to show how we can solve the XOR problem with only one neuron Explain the math behind recurrent neural networks. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT33M6S	1986	2d	hd	false	https://i.ytimg.com/vi/0GoPTJE7Vms/maxresdefault.jpg		806	17	0	0	0
186	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6YLMWU-5H9o	2018-09-06T11:35:40Z	2018-09-06 11:35:40	Dan Taylor - Get Productive with Python in Visual Studio Code	Get Productive with Python in Visual Studio Code [EuroPython 2018 - Talk - 2018-07-27 - Smarkets] [Edinburgh, UK] By Dan Taylor In this demo driven session, we’ll show you how to use the cross-platform, free, and open source Visual Studio Code for all your Python development needs. From editing, to linting, to debugging and more, you will learn how to get started, as well as tips and tricks to save you time in your everyday development lifecycle. If you’re an experienced Python developer, you will learn how to take advantage of all of Visual Studio Code’s capabilities to maximize your productivity. If you’re a new Python developer, you will learn more about Python and how to use Visual Studio Code to get up and running quickly. We will start by showing how to create a new application, configure linting, manage virtual environments, and run code. Then we’ll show how to use more powerful features like debugging, unit testing and Visual Studio Live Share for collaborative editing and debugging with your co-workers. Finally, we’ll show how you can install additional extensions to set up your keyboard bindings, manage docker containers, deploy to the cloud, and more! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M1S	2701	2d	hd	false	https://i.ytimg.com/vi/6YLMWU-5H9o/maxresdefault.jpg		112959	1928	28	0	70
187	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JkxGyg6HHH0	2018-09-06T11:35:40Z	2018-09-06 11:35:40	EuroPython 2018 - Sprint Orientation	Sprint Orientation [EuroPython 2018 - - 2018-07-27 - Smarkets] [Edinburgh, UK] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT21M4S	1264	2d	hd	false	https://i.ytimg.com/vi/JkxGyg6HHH0/maxresdefault.jpg		136	0	0	0	0
188	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	KRqv2Bm1J18	2018-09-06T11:35:40Z	2018-09-06 11:35:40	Jeethu Rao - Faster Python startup	Faster Python startup [EuroPython 2018 - Talk - 2018-07-27 - Smarkets] [Edinburgh, UK] By Jeethu Rao The cPython’s startup speed generally quite fast compared to other similar dynamic language interpreters. Despite this, the interpreter’s startup time increases linearly with the number and size of imported python modules. Although interpreter startup speed isn't a significant concern in long running servers, it does matter for the command line and other frequently launched applications. One of the oldest tricks in the book, when it comes to performance optimizations is to perform frequent and expensive operations fewer times and reuse results from previous invocations. We noticed that the overhead of reading and un-marshalling .pyc files at startup can be eliminated if we could directly embed code objects and their associated object graph from .pyc files into the data segment of the cPython binary. This technique is quite similar to the approach taken by image based languages like Smalltalk in the past. Implementing this for cPython is made simpler because marshaled code objects in .pyc files contain a subset of the types of objects that marshal format supports. With this approach, loading a module included in the python binary is as cheap as dereferencing a pointer, albeit at the cost of increased binary size. This talk will discuss the approach taken to implement the aforementioned idea for Python 3.6 and the challenges faced in implementing it. It will also talk about benchmark results from the improvements and possible future directions for this work. Although this talk delves into cPython internals, no prior experience with cPython internals is required to follow along. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M56S	1676	2d	hd	false	https://i.ytimg.com/vi/KRqv2Bm1J18/maxresdefault.jpg		665	14	2	0	1
189	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	O2lXnayJ-tQ	2018-09-06T11:35:40Z	2018-09-06 11:35:40	Petr Viktorin - Bytecodes and stacks: A look at CPython’s compiler and its execution model	Bytecodes and stacks: A look at CPython’s compiler and its execution model [EuroPython 2018 - Talk - 2018-07-27 - Smarkets] [Edinburgh, UK] By Petr Viktorin So, you wrote some Python code. What needs to happen before it starts running? And once it's running, how does Python keep track of what it's doing? I'll talk about CPython's tokenization, parsing, bytecode and its serialization and cache, the stack-based virtual machine, line number tables, and code, frame and function objects. Don't worry if you've never heard of these concepts. While even experts should learn something new, the talk is aimed at anyone who's worked on a Python project or two. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M36S	1836	2d	hd	false	https://i.ytimg.com/vi/O2lXnayJ-tQ/maxresdefault.jpg		362	6	0	0	0
190	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SbeLVSyO9_E	2018-09-06T11:35:40Z	2018-09-06 11:35:40	Kevin Lemagnen - Walking the Random Forest and boosting the trees	Walking the Random Forest and boosting the trees [EuroPython 2018 - Talk - 2018-07-27 - Fintry [PyData]] [Edinburgh, UK] By Kevin Lemagnen Deep Learning is all the rage, but ensemble models are still in the game. With libraries such as the recent and performant LightGBM, the Kaggle superstar XGboost or the classic Random Forest from scikit-learn, ensembles models are a must-have in a data scientist’s toolbox. They’ve been proven to provide good performance on a wide range of problems, and are usually simpler to tune and interpret. This talk focuses on two of the most popular tree-based ensemble models. You will learn about Random Forest and Gradient Boosting, relying respectively on bagging and boosting. This talk will attempt to build a bridge between the theory of ensemble models and their implementation in Python. Notebook: https://github.com/klemag/europython2018_walking_the_random_forest License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT24M10S	1450	2d	hd	false	https://i.ytimg.com/vi/SbeLVSyO9_E/maxresdefault.jpg		449	5	1	0	0
191	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UXSr1OL5JKo	2018-09-06T11:35:40Z	2018-09-06 11:35:40	Ian Ozsvald - Citizen Science with Python	Citizen Science with Python [EuroPython 2018 - Keynote - 2018-07-27 - Smarkets] [Edinburgh, UK] By Ian Ozsvald You could make a difference in the world with a little science and Python. We'll look at several data-driven humanitarian and healthcare projects developed using Python and, all going well, run some audience experiments. By the end of the talk I hope you'll be looking to run your own experiments with the scientific Python stack. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M39S	2739	2d	hd	false	https://i.ytimg.com/vi/UXSr1OL5JKo/maxresdefault.jpg		582	7	1	0	0
192	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bDvgZ_Yn_FM	2018-09-06T11:35:40Z	2018-09-06 11:35:40	Douglas Finch - Air Quality & Python: Developing Online Analysis Tools	Air Quality & Python: Developing Online Analysis Tools [EuroPython 2018 - Talk - 2018-07-27 - Fintry [PyData]] [Edinburgh, UK] By Douglas Finch Poor surface air quality has a range of implications for human health and the economy. Without concerted mitigation efforts, trends in urbanisation and aspirations for progressive economic growth will result in poorer levels of air quality. Analysing and interpreting the incoming data streams from heterogeneous air quality measurement stations is critical for tackling the problem and for developing early warning systems. I am using Python to develop a set of online analysis tools (ukatmos.org) to enable the public to quickly and easily plot air quality data in many ways, effectively freeing up information that is already publicly available but in awkward formats and often involves development of code. We anticipate these tools will also support data science classes at school, and can speed up scientific research by minimizing effort in repeating analyses. This talk will cover how the tools integrate numerous Python libraries (e.g. Pandas and NumPy), the Django web framework, the Plot.ly tools for creating interactive graphs, and SQL to address the large data volumes. Developing these Python tools in an adaptive and scalable way allows it to grow as more data become available, e.g. satellite observations. Adaptability also includes evolving user requirements. This project will also be developed into a Python library allowing the user to easily use the online analysis tools from an offline Python environment. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M32S	1712	2d	hd	false	https://i.ytimg.com/vi/bDvgZ_Yn_FM/maxresdefault.jpg		1427	25	1	0	1
193	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	t8-Y7Kivuu0	2018-09-06T11:35:40Z	2018-09-06 11:35:40	Philip Jones - Quart a asyncio alternative to Flask	Quart a asyncio alternative to Flask [EuroPython 2018 - Talk - 2018-07-27 - Smarkets] [Edinburgh, UK] By Philip Jones Flask is a great web mirco-framework, that is best utilised with event-loop concurrency. Sadly with Flask the event-loop framework can't be asyncio, although some extensions (Flask-Aiohttp) have tried. Quart is the solution as it shares the Flask API and is based on asyncio. In addition Quart goes beyond Flask adding HTTP/2 and websockets. This talk will outline why event-loop concurrency is a good choice for web servers, why asyncio is a good choice and then give an overview of Quart, demonstrating features that go beyond the Flask framework. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M	1680	2d	hd	false	https://i.ytimg.com/vi/t8-Y7Kivuu0/maxresdefault.jpg		5383	110	2	0	4
194	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	M8lASUaogbA	2018-09-06T11:35:39Z	2018-09-06 11:35:39	Alex Willmer - Rehabilitating Pickle	Rehabilitating Pickle [EuroPython 2018 - Talk - 2018-07-27 - Smarkets] [Edinburgh, UK] By Alex Willmer Pickle is a compact serialisation protocol for Python objects. It could be a convenient way for Python programs and distributed systems to communicate. Unfortunately pickle is widely considered to be unsafe, and it has lead to several vulnerabilities over the years. As the Python manual warns The pickle module is not secure against erroneous or maliciously constructed data. Never unpickle data received from an untrusted or unauthenticated source. Does this have to be the case? Can we use Pickle safely? This talk will be a deep dive into what an attacker can do with a maliciously constructed pickles. I’ll show what defences you can implement against the common attacks, especially those that gain arbitrary code execution. I will present new research into other attacks, and mitigations. Finally I will review a few less known alternatives to pickle. This talk will expand on a https://www.youtube.com/watch?v=5omAT9sqguE&amp;list=PLWsDEQH0HiPZUhtqGczfDnNdiJMhWpmWd&amp;index=9&amp;t=13m10s PyLondinium 2018 lightning talk License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M7S	1807	2d	hd	false	https://i.ytimg.com/vi/M8lASUaogbA/maxresdefault.jpg		856	9	1	0	2
195	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	KUvB1hqF2OA	2018-09-06T11:34:25Z	2018-09-06 11:34:25	Vincent Warmerdam, Bas Harenslak - Winning card games with 1000+ CPUs	Winning card games with 1000+ CPUs [EuroPython 2018 - Talk - 2018-07-27 - Fintry [PyData]] [Edinburgh, UK] By vincent warmerdam, Bas Harenslak Vincent was playing a card game against his girlfriend and he kept loosing. So he wanted to train a bot to play on his behalf. This is our story. We’re using AWS Lambda to get better at a card game named SushiGO. We make a small genetic algorithm in Python that uses AWS Lambda as a backend. The talk consists of these parts: Quick Explanation of the rules of the SushiGo Card Game Translation of real life to an algorithm Explain why this problem needs a lot of CPU Explain why AWS Lambda fits the simulation use-case How to quickly hack Concurrency in Python How to deploy lambda very quickly with chalice Experimentation Results This talk will discuss an algorithm that we’ve tried to improve in three ways: Applying simple maths to make the search algorithm better Throwing lots (lots!) of CPU’s against the problem by leveraging AWS Lambda and python concurrency We will conclude by discussing whether or not AWS Lambda is suitable for a gridsearch/grid simulation (hint, it’s not meant for this task, but it actually kind of works very well). License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT41M35S	2495	2d	hd	false	https://i.ytimg.com/vi/KUvB1hqF2OA/maxresdefault.jpg		460	7	0	0	1
196	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LxoKPGvMXf0	2018-09-06T11:34:25Z	2018-09-06 11:34:25	Alec MacQueen - Python and GraphQL	Python and GraphQL [EuroPython 2018 - Talk - 2018-07-27 - Lammermuir] [Edinburgh, UK] By Alec MacQueen GraphQL query language is gaining popularity and seeing more adoption. This is mainly due to the efficiency with which consumers can get their data, the ease with which you can document and explore your API and the powerful tooling that has been built around the query language. This talk is for novices and experts of GraphQL alike and aims to cover the basics of the query language, how to implement it using Flask and SQLAlchemy and to take a deeper dive into how Python’s type-hinting can be used to generate your GraphQL schema. I’ll also be talking about some of the tooling that can be used to provide consumers and developers working on your API with a great development experience. Next I'll cover some ways you can use these tools to empower your development process and get you developing 'API First'. To get the most out of this talk you should have a general understanding of APIs, Python frameworks and Python ORMs. However, my aim is to make it as accessible as possible for developers of all experience levels. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M3S	1863	2d	hd	false	https://i.ytimg.com/vi/LxoKPGvMXf0/maxresdefault.jpg		1506	25	0	0	1
197	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Ru2T4fu3bGQ	2018-09-06T11:34:25Z	2018-09-06 11:34:25	Robert Smallshire - Domain Driven Design Patterns in Python	Domain-Driven Design Patterns in Python [EuroPython 2018 - Talk - 2018-07-27 - Kilsyth] [Edinburgh, UK] By Robert Smallshire Domain-Driven Design (DDD) is an approach to software development that emphasises high-fidelity modelling of the problem domain, and which uses a software implementation of the domain model as a foundation for system design. This approach helps organize and minimize the essential complexity of your software. DDD has been used with success within the traditional enterprise programming ecosystems of Java and .NET, but has seen only limited adoption in the Python community. In this talk we introduce Python programmers to the core tactical patterns of DDD and show how they can be realised in idiomatic Python, freeing the most valuable parts of your system – the domain model – from onerous dependencies on particular databases or application frameworks. In this talk we share what we've learned from applying DDD in Python to large projects. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT1H1M15S	75	2d	hd	false	https://i.ytimg.com/vi/Ru2T4fu3bGQ/maxresdefault.jpg		8160	209	3	0	5
198	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZBpwdKezv1E	2018-09-06T11:34:25Z	2018-09-06 11:34:25	Pietro Mascolo - Good features beat algorithms	Good features beat algorithms [EuroPython 2018 - Talk - 2018-07-27 - PyCharm [PyData]] [Edinburgh, UK] By Pietro Mascolo In Machine Learning and Data Science in general, understanding the data is paramount. This understanding can come from many different sources and techniques: domain expertise, exploratory analysis, SMEs, some specific Machine Learning techniques, and feature engineering. As a matter of fact, most Machine Learning and Statistical analysis strongly depends on how the data is prepared, thus making feature engineering very important for any serious Machine Learning enterprise. "Feature engineering is the process of transforming raw data into features that better represent the underlying problem to the predictive models, resulting in improved model accuracy on unseen data." In this talk we will discuss what feature engineering and feature selection are; how to select important features in a real-world dataset and how to develop a simple, but powerful ensemble to measure feature importance and perform feature selection. Familiarity with intermediate concepts of the Python programming language is required to follow the implementation steps. General knowledge of the basic concepts of Machine Learning and data cleaning will be useful, but not strictly necessary, to follow the discussion on feature selection and feature engineering. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT35M48S	2148	2d	hd	false	https://i.ytimg.com/vi/ZBpwdKezv1E/maxresdefault.jpg		252	4	0	0	0
199	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	azbOfFipzws	2018-09-06T11:34:25Z	2018-09-06 11:34:25	Stefan Baerisch - The Boring Python Office Talk Automate Powerpoint, Excel, and PDF with Python	The Boring Python Office Talk - Automate Powerpoint, Excel, and PDF with Python [EuroPython 2018 - Talk - 2018-07-27 - Moorfoot] [Edinburgh, UK] By Stefan Baerisch We will have a quick tour of the many ways Python gives us to handle DOCX, XLSX, PPTX, and PDF and automate some boring office tasks. Many things are more interesting than office file formats like DOCX, XLSX, PPTX, and PDF. Still, while working with office formats does not seem to be the most fun, it is useful. But we can do better than just useful. With the Python and some great libraries, it is possible to have Python do much of the work you would have to do otherwise: Create and modify PDF files. Create Powerpoints presentations from scripts. Create Excel files, from simple tables to charts and reports. Combine information in Word documents. In this talk, we will have a look at a usual working day for Bob and Ann, two fictional office works. Both Bob and Ann work office jobs, but while Bob does all of his work by hand, but Ann knows Python. We will look at different tasks that Bob wants to do, such as preparing an Excel report, building a Powerpoint presentation, or rearranging a PDF. Then, we will look how Ann use Python and some exciting libraries to automate these task. During the talk, we will use Bob and Ann to consider different task related to office file formats. We will then look at the Python libraries that are available. Then, using this library, we will see how an otherwise boring task can be automated. The goal of the task is to showcase the libraries to Python offers to work with standard office formats and provide you with a starting point for your own office automation. After this talk, you will know how to automate at least some of your daily office tasks. You may also be bored because Python is doing so much of your work for you. If you know basic Python programming, you will be right at home. There will be some use of Pandas, but it is not required. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M21S	1701	2d	hd	false	https://i.ytimg.com/vi/azbOfFipzws/maxresdefault.jpg		15902	263	5	0	6
200	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	b4I6qWTtXWs	2018-09-06T11:34:25Z	2018-09-06 11:34:25	Pavlin Gergov - How async and await ended up in Python	How async and await ended up in Python [EuroPython 2018 - Talk - 2018-07-27 - Moorfoot] [Edinburgh, UK] By Pavlin Gergov We're going to talk about regular functions, iterables, iterators, function execution and yield - generator functions. We will send values and play with generators a bit. A quick look at asyncio will be followed by async and await, what a coroutine is and how to write async code with Python. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M4S	1744	2d	hd	false	https://i.ytimg.com/vi/b4I6qWTtXWs/maxresdefault.jpg		261	5	0	0	0
201	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	btqFjNDdTlE	2018-09-06T11:34:25Z	2018-09-06 11:34:25	Alex Grönholm - Automating testing and deployment with Github and Travis	Automating testing and deployment with Github and Travis [EuroPython 2018 - Talk - 2018-07-27 - Kilsyth] [Edinburgh, UK] By Alex Grönholm Maintaining an open source project can be a drag. Especially when you have dozens of them. Besides being tedious , making a new release can be a very error prone process. Maybe you forgot to run the full test suite, forgot to update the release version or tag the release on VCS or maybe you bungled up the upload to PyPI. Fortunately there are things you can do to eliminate entire categories of human errors in the release process – by automating them. This talk uses a trivial project as an example to present a release pipeline, from packaging and testing to deployment, that only requires you to push a git tag to your Github repository. Automation then takes care of the rest and you end up with a new release on PyPI (yay!). This talk is mostly useful for open source developers using Github to house their projects, as it heavily leans on Travis, its continuous integration provider . You also need to be at least somewhat familiar with Python packaging and testing in order to follow along. Familiarity with common tools like pytest and tox helps but is not strictly required. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M22S	2662	2d	hd	false	https://i.ytimg.com/vi/btqFjNDdTlE/maxresdefault.jpg		465	5	1	0	1
202	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cDhcmjCa7Pc	2018-09-06T11:34:25Z	2018-09-06 11:34:25	Marco Bonzanini - Lies, damned lies, and statistics	Lies, damned lies, and statistics [EuroPython 2018 - Talk - 2018-07-27 - PyCharm [PyData]] [Edinburgh, UK] By Marco Bonzanini Statistics show that eating ice cream causes death by drowning. If this sounds baffling, this talk will help you to understand correlation, bias, statistical significance and other statistical techniques that are commonly (mis)used to support an argument that leads, by accident or on purpose, to drawing the wrong conclusions. The casual observer is exposed to the use of statistics and probability in everyday life, but it is extremely easy to fall victim of a statistical fallacy, even for professional users. The purpose of this talk is to help the audience understand how to recognise and avoid these fallacies, by combining an introduction to statistics with examples of lies and damned lies, in a way that is approachable for beginners. Agenda: Correlation and causation Simpson's Paradox Sampling bias Data visualisation gone wild Statistical significance (and Data dredging a.k.a. p-hacking) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M41S	1661	2d	hd	false	https://i.ytimg.com/vi/cDhcmjCa7Pc/maxresdefault.jpg		515	10	0	0	0
203	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dZ4ETY9Mzws	2018-09-06T11:34:25Z	2018-09-06 11:34:25	Sven Hendrik Haase - Rust and Python - Oxidize Your Snake	Rust and Python - Oxidize Your Snake [EuroPython 2018 - Talk - 2018-07-27 - Lammermuir] [Edinburgh, UK] By Sven-Hendrik Haase Rust is a safe and modern systems programming language that is easily able to call and be called from Python. As such, it is a prime candidate for replacing C for writing Python modules that have to be fast or that have to interact with other native code. Rust is extremely fast and makes it very hard to get concurrency wrong. Many ways of making Python call into lower level have appeared over the years such as CFFI, ctypes, boost.python, cython, SWIG. All of them are cumbersome in their own ways. PyO3 is a Rust library that makes it easy and simple to write native Python modules with minimal glue code and no crazy tooling required. It even works cross-platform without problems. The talk shows some sample code of PyO3-based modules and compares it with the code of the alternatives as well as the alternative's cross-platform support and tooling. The goal is for the audience to be informed about a new safe and modern way of writing native Python modules. The audience doesn't need any prerequisites except for a healthy interest in native code and Python modules. C knowledge is optional. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M37S	1837	2d	hd	false	https://i.ytimg.com/vi/dZ4ETY9Mzws/maxresdefault.jpg		761	26	1	0	1
204	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pEL1THG6ysY	2018-09-06T11:34:25Z	2018-09-06 11:34:25	Andy Fundinger - A Taxonomy of Decorators: A E	A Taxonomy of Decorators: A-E [EuroPython 2018 - Talk - 2018-07-27 - Moorfoot] [Edinburgh, UK] By Andy Fundinger This talk will briefly go over the various decorator syntaxes before breaking up the common usages of decorators into 5 categories. Effectively, these are design patterns for decorators. The usages to be considered are: A - Argument Changing Decorators -- Decorators that change a function's arguments, including changing its signature B - Binding Decorators -- Decorators that implement the Descriptor Protocol, such as the builtins: @property, @classmethod, and @staticmethod C - Control Flow Decorators -- Decorators that change when or whether the function will be called, such as @retry or @lrucache D - Descriptive Decorators -- Decorators that do not change the function, but create a reference to it elsewhere, like pytest.mark and flask.app.route E - Execution Decorators -- Decorators that retrieve source code and/or AST and alter it. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M19S	1759	2d	hd	false	https://i.ytimg.com/vi/pEL1THG6ysY/maxresdefault.jpg		324	3	0	0	2
205	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pRtpXzS2Weo	2018-09-06T11:34:25Z	2018-09-06 11:34:25	Ben Nuttall - Programming paradigms for physical computing and IoT	Programming paradigms for physical computing and IoT [EuroPython 2018 - Talk - 2018-07-27 - Lammermuir] [Edinburgh, UK] By Ben Nuttall A look at the GPIO Zero library for Raspberry Pi yields the blueprint for a Pythonic API for programming the behaviour of interconnected devices. GPIO Zero provides a multi-paradigm programming interface to GPIO devices: - procedural (polling) - procedural (blocking) - event-driven (callbacks) - declarative Start with simple scripts to control LEDs and buttons on a breadboard, learn to prototype ideas and move on to declaring interaction between more advanced devices in the home and beyond. These options for device programming, along with the extensibility of the library, provide the means to program complex behaviour using simple Pythonic code. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT40M54S	2454	2d	hd	false	https://i.ytimg.com/vi/pRtpXzS2Weo/maxresdefault.jpg		265	4	1	0	0
206	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3pokUifUyWM	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Raphael Pierzina - The Challenges of Maintaining a Popular Open Source Project	The Challenges of Maintaining a Popular Open-Source Project [EuroPython 2018 - Talk - 2018-07-27 - Kilsyth] [Edinburgh, UK] By Raphael Pierzina In this talk, I will give an insight into what it means to maintain a popular project for me personally, what it involves and what we as a community can do to help out and finally why I think it's an important discussion to have. Cookiecutter is a command-line utility that creates projects from templates. It is free and open-source software distributed under the terms of a permissive BSD-3 license. With around 180 individual contributors, more than 1000 public templates on GitHub alone, and multiple talks at conferences, it is fair to say that there is a small community around it. But who are the people behind the project and what is it that they are doing? It's been three years since I was granted the commit bit by the core team. I have learned a lot about FOSS communities and also about myself. At times I struggle with balancing my day job as a full-time Software Engineer and maintaining Cookiecutter and other FOSS projects in my spare time. By now I'm OK with not responding to issues immediately and closing pull requests. However it took me quite a while to get to this point. Maintaining FOSS projects can be incredibly rewarding and fun, but it can also be quite frustrating. It involves so much more than writing code or merging PRs, and yet sometimes it feels like that's what most people think. The goal of this talk is to start a conversation around this topic and hear what other EuroPython attendees think about it and their challenges as contributors or maintainers. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT41M	2460	2d	hd	false	https://i.ytimg.com/vi/3pokUifUyWM/maxresdefault.jpg		251	5	1	0	0
207	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Cm_7LARu_5w	2018-09-06T11:34:24Z	2018-09-06 11:34:24	EuroPython 2018 - Closing	Closing Session [EuroPython 2018 - - 2018-07-27 - Smarkets] [Edinburgh, UK] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT9M32S	572	2d	hd	false	https://i.ytimg.com/vi/Cm_7LARu_5w/maxresdefault.jpg		111	1	0	0	0
208	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HB1ngQ7j1FA	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Rivo Laks - Creating Solid APIs	Creating Solid APIs [EuroPython 2018 - Talk - 2018-07-27 - Moorfoot] [Edinburgh, UK] By Rivo Laks Increasingly, our apps are used not by humans but by other apps - via their APIs. Thus it is increasingly important that your APIs are well-designed and easy to consume for other developers. Adding a few API endpoints to your application for internal consumption is easy. Creating APIs that other developers will love to use is a much harder problem. You'll need to think about solving variety of topics such as versioning, authentication, response structure, documentation and more. There are existing good practices for each of them, but often developers who haven't done a lot of API work aren't familiar with them. My talk will show how to find reasonable solutions for those problems. I will talk about importance and intricacies of good documentation and why auto-generating it from your code is useful. I'll show how to make use of familiarity by using standards such as JSON API and show benefits brought by its standardized response structure that makes lives of 3rd-party developers easier. Authentication will be discussed, including introduction to OAuth2. I'll talk about when OAuth2 is a good choice and when not, as well as dig into some trickier parts of it. We'll then move on to versioning and how you can change your API without breaking all existing apps. Finally we'll wrap it all up by looking at some major APIs that are using the same principles. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT43M31S	2611	2d	hd	false	https://i.ytimg.com/vi/HB1ngQ7j1FA/maxresdefault.jpg		347	4	0	0	0
209	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IZmlkoOO8Mg	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Neil Gall - System testing with Pytest, Docker, and Flask	System testing with Pytest, Docker, and Flask [EuroPython 2018 - Talk - 2018-07-27 - Moorfoot] [Edinburgh, UK] By Neil Gall The composability of fixtures in pytest is an improvement over traditional xUnit setup/teardown, reducing the incentive to commit testing crimes such as multi-stage and stepwise tests. This is great out of the box for unit tests, but I'm going to show how to combine the power of pytest fixtures with Docker to build high-level integration tests for microservices or other complex systems with multiple components. I'll then build on that to show how to embed mock web services written with Flask right into the test code. With a sample Java application that makes use of some external resources to offer a data processing service I'll first quick an overview of Pytest, Docker, and Flask. Then I'll mix some pre-built code with live test coding to demonstrate how to build high-level system tests which spin up the application and its dependencies in Docker. I'll then mock one of the external dependencies using Flask, allowing the test to control and verify interaction between the system components. Finally I'll show how to wrap the Flask application in a WSGI middleware that lets the test inspect interaction with the mocked service. From a learning and development point of view, building your own is better than re-using someone else's code so I'll show how the support code for these features is relatively simple and how the audience can build it themselves to exactly meet their own needs. And I'll do it all with a sense of fun, a joke or two and maybe a little storytelling. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT33M48S	2028	2d	hd	false	https://i.ytimg.com/vi/IZmlkoOO8Mg/maxresdefault.jpg		5662	65	5	0	2
210	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OHaxQZPKURg	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Victor Stinner - Python 3: ten years later	Python 3: ten years later [EuroPython 2018 - Talk - 2018-07-27 - Lammermuir] [Edinburgh, UK] By Victor Stinner Draft of the talk: Growing populary of the Python programming language Defacto language in the scientific world, replacing other closed source and more specialized but limited language Favorite programming language used as the first language to learn programming Port Python 2 code to Python 3 Port Python 2 code to Python 3 No: "Add support for Python 3", don't loose Python 2 support Port Python 3 code to Python 2 Python changes to make the transition smoother: PEP 414: u"syntax" reintroduced in Python 3.3 PEP 461: bytes % args, Python 3.5 More "Py3k" warnings added to Python 2.7.x Linters like flake8 detect some issues six, futures, modernize, 2to6, etc. Analysis of the transition Good: At Pycon US 2014, Guido van Rossum announced that the Python 2.7 support was extended from 2015 to 2020 to give more time to companies to port their applications to Python 3. Bad: 2to3: "drop Python2 support at once", don't work when you have dependencies. If done again, would it be different? Yes, obviously. Python 4 will be different than Python 3: no more "break the world" release, but a "regular deprecation period" release, as any other release. Break things, one by one :-) Bugs that won't be fixed in Python 2 anymore Some bugs cannot be fixed without breaking the backward compatibility Unicode Support Python 2 I/O stack bugs: rely on libc stdio.h Security: hash DoS, enabled by default in Python 3.3, Python 3.4 now uses SipHash subprocess is not thread-safe in Python 2. Python 2 subprocess has many race conditions: fixed in Python 3 with a C implementation which has less or no race condition. Handling signals while forking in complex. threading.RLock is not "signal safe" in Python 2 Python 2 requires polling to wait for a lock or for I/O. Python 3 uses native threading API with timeout and has asyncio. Python 3 uses a monotonic clock to not crash on system clock update (ex: DST change). Python 3 has a better GIL. Python 2 inherits file descriptors on fork+exec by default. Python 3 don't: PEP 446. Functions can fail with OSError(EINTR) when interrupted by a signal, need to be very careful everywhere. SIGCHLD when a child process completes, SIGWINCH when using ncurses. Python 3.5 restarts the interrupted system call for you. Performance Python 3.6 is now faster than Python 2.7 https://speed.python.org/ Evolutions of the Python language Python 3.5 PEP 492: async/await "keywords" for asyncio. (Really keywords in Python 3.7.) PEP 461: bytes % args and bytearray % args PEP 465, a new matrix multiplication operator: a @ b. PEP 448: Generalized unpacking: head, *tail = list mylist = [1, 2, **other_list] mydict = {"key": "value", **other_dict} Python 3.6 PEP 515: million = 1_000_000 name = "World"; print(f"Hello {name}!") PEP 526, syntax for variable annotations. PEP 525, asynchronous generators. PEP 530: asynchronous comprehensions. Bury Python 2? "Python 3 only" https://pythonclock.org/ http://www.python3statement.org/ Fedora 23, Ubuntu 17.10: no python2 (/usr/bin/python) in the base system 2017, April: IPython 6.0 2017, December: Django 2 License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M57S	2697	2d	hd	false	https://i.ytimg.com/vi/OHaxQZPKURg/maxresdefault.jpg		346	5	3	0	0
211	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	REWgzcIzSAA	2018-09-06T11:34:24Z	2018-09-06 11:34:24	David Liu - Addressing multithreading and multiprocessing in transparent and Pythonic ways	Addressing multithreading and multiprocessing in transparent and Pythonic ways [EuroPython 2018 - Talk - 2018-07-27 - PyCharm [PyData]] [Edinburgh, UK] By David Liu With the increase in computing power, harnessing and controlling one’s code out of the single-threaded realm becomes an ever-increasing problem, coupled with the desire to stay in the Python layer. With the recent tools and frameworks that have been published, escaping the GIL cleanly is much easier than before, allow one’s Python code to effectively utilize multi-core and many core architectures in the most Pythonic ways possible. In this talk, learn about how to utilize static multiprocessing for process pinning, and effectively balancing thread pools with a monkey-patched import of threading modules. Overview: Introduction to multithreading and multiprocessing in Python History of multithreading+multiprocessing in Python, classic frameworks Problems that can occur (oversubscription, nested parallelism issues, process hopping, pool resource on shared machines) Python accessing bigger hardware over the last few years (28+ cores, etc) When to stay in the GIL, and when to escape it The advantages and safety of the GIL Python-level exiting of the GIL; analysis of when to return to single-threaded, and when threading is a deceivingly bad idea Accountability of frameworks that natively exit the GIL The new multithreading and multiprocessing libraries and techniques static multiprocessing module (smp) (and monkey patching of multiprocessing) thread pool control with command line calls of Python ( python -m tbb -p 8) Putting it all together Examples of using static multiprocessing on a large machine to stop oversubscription Example of pseudo-daemon process on 4-core machine by processor pinning Thread pool control on a simple NumPy example Summary - Best practices for using above methods to control multithreading+multiprocessing What needs to be done in the space (frameworks and things that need to be exposed) Problems that still exist in the area Q&amp;A License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT42M32S	2552	2d	hd	false	https://i.ytimg.com/vi/REWgzcIzSAA/maxresdefault.jpg		661	6	0	0	0
212	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UHF4AG5se1o	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Emmanuelle Delescolle - A tale of refactoring	A tale of refactoring [EuroPython 2018 - Talk - 2018-07-27 - Lammermuir] [Edinburgh, UK] By Emmanuelle Delescolle A couple years ago I was approached by a client to help them improve the performance and maintainability of their code. That code was filled with very long functions, some of them with very similar code and the project was really hard to understand as a whole. My first reflex was to refactor this code code to make it more understandable. In my opinion, it did fit part of my assignment as understandable code is easier to maintain but it was also very helpful later in letting me make small changes with full knowledge of what was going to be affected by those changes. Large methods and functions is something that creeps into our code whether we plan for it or not. This talk is about one way to deal with it. This talk will be based on code provided by the GildedRose Refcatoring Kata: https://github.com/emilybache/GildedRose-Refactoring-Kata Prerequisites: - Basic knowledge of Python - Basic knowledge of OOP Goals: - Demonstrate one approach for refactoring code - Show how to leverage Python's dynamic nature to make code simpler License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT52M10S	3130	2d	hd	false	https://i.ytimg.com/vi/UHF4AG5se1o/maxresdefault.jpg		249	0	0	0	0
213	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Yq3wTWkoaYY	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Chase Stevens - Exploring the Python AST Ecosystem	Exploring the Python AST Ecosystem [EuroPython 2018 - Talk - 2018-07-27 - Moorfoot] [Edinburgh, UK] By Chase Stevens Materials are available at https://github.com/hchasestevens/europython-2018 This session will introduce attendees to Python's rich ecosystem of abstract syntax tree tooling and libraries, with an emphasis on practical applications in static analysis and metaprogramming. Attendees should be fully comfortable with Python syntax and semantics, but familiarity with the ast module itself will not be necessary. The talk will begin with a conceptual overview of ASTs, including a brief look at Python's built-in introspection capabilities. It will introduce tools for AST visualization (astor, showast, python-ast-explorer), creation (asttools, meta), and transformation to source code (codegen). How the AST can be used for static analysis will be covered; this will include discussion of Python's built-in facilities (NodeVisitor) as well as of the 3rd party tools astsearch, astpath, and bellybutton. The talk will demonstrate the advantages and limits of these tools in comparison to other static analysis tooling (pylint, mypy); particular attention will be paid to how these tools can be incorporated into attendees' workflows and existing codebases and projects. Tooling for Python AST manipulation and metaprogramming will be the final topic covered, focusing on the use of the NodeTransformer built-in. The talk will cover practical applications and examples of metaprogramming, such as metaprogramming for DSLS (pony, xpyth), runtime code manipulation (patterns, yield-from), and others (e.g. assertion rewriting in pytest). While the talk will touch only briefly on each of the applications discussed, by the end of the session attendees should have a firm grasp of the kinds of problems the AST can be used to solve, what existing AST tooling can accomplish, and what resources are available for the development of their own AST tools. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT47M7S	2827	2d	hd	false	https://i.ytimg.com/vi/Yq3wTWkoaYY/maxresdefault.jpg		2745	69	2	0	8
214	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZM1RBCfLu20	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Lauris Jullien - Productionizing your ML code seamlessly	Productionizing your ML code seamlessly [EuroPython 2018 - Talk - 2018-07-27 - PyCharm [PyData]] [Edinburgh, UK] By Lauris Jullien Data science and Machine Learning are hot topics right now for Software Engineers and beyond. And there are a lot of python tools that allow you to hack together a notebook to quickly get insight on your data, or train a model to predict, or classify. Or you might have inherited some data wrangling and modeling {Jupyter/Zeppelin} notebook code from someone else, like the resident data scientist. The code works on test data, when you run the cells in the right order (skipping cell 22), and you believe that the insight gained from this work would be a valuable game changer. But now how do you take this experimental code into production, and keep it up-to-date with a regular retraining schedule? And what do you need to do after that, to ensure that it remains reliable and brings value in the long term? These will be the questions this talk will answer, focusing on 2 main themes: 1. What does running an ML model in production involve? 2. How to improve your development workflow to make the path to production easier? This talk will draw examples from real projects at Yelp, like migrating a pandas/sklearn classification project into production with pyspark, while aiming to give advice that is not dependent on specific frameworks, or tools, and is useful for listeners from all backgrounds. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M23S	1763	2d	hd	false	https://i.ytimg.com/vi/ZM1RBCfLu20/maxresdefault.jpg		259	2	0	0	0
215	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_gG79-pZXEo	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Marc Andre Lemburg - EuroPython 2019: Help us build the next edition!	EuroPython 2019: Help us build the next edition! [EuroPython 2018 - EuroPython session - 2018-07-27 - Kilsyth] [Edinburgh, UK] By Marc-Andre Lemburg We need help with organizing and running EuroPython 2018. In this session, we will explain how the EuroPython workgroup model works and where you could help. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT16M42S	1002	2d	hd	false	https://i.ytimg.com/vi/_gG79-pZXEo/maxresdefault.jpg		152	0	0	0	0
216	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bQAn8dJFXN8	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Marc Andre Lemburg - EPS General Assembly 2018	EPS General Assembly 2018 [EuroPython 2018 - EuroPython session - 2018-07-27 - Kilsyth] [Edinburgh, UK] By Marc-Andre Lemburg This is where the EuroPython Society (EPS) board gives its reports, resolutions are passed and the EPS members can vote in a new EPS board. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT1H2M37S	157	2d	hd	false	https://i.ytimg.com/vi/bQAn8dJFXN8/maxresdefault.jpg		28	0	0	0	0
217	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dQqu4t_SE_k	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Sarah Diot Girard - Trust me, I'm a Data Scientist - ethics for builders of data based applications	Trust me, I'm a Data Scientist - ethics for builders of data-based applications [EuroPython 2018 - Talk - 2018-07-27 - PyCharm [PyData]] [Edinburgh, UK] By Sarah Diot-Girard Data Science is gonna save the world, right? Or is it? Machine Learning epic fails are being largely commented. It's easy to convince ourselves that they are due to the inconsiderate misuse of Data Science. But is it really so? Is it possible that innocuous choices lead an honnest team to a disaster? During the course of this talk, we will build together an (imaginary) application: a disruptive AI-based smart virtual assistant, pledging to help high-schoolers with their university choice. We will see how unintended biaises may creep in at every step, even with the best of intentions. We will explore different topics, such as algorithmic fairness, model interpretability and the handling of minority classes. Through this practical example, this talk will present a review of major ethical pitfalls identified in the Machine Learning community along with suggestions on how to avoid them. This talk is intended for beginner to intermediate Data Scientists, and people working with Data Scientists, even without specific technical knowledge. Slides : https://sdgjlbl.github.io/Presentations/Data%20Science%20and%20Ethics/presentation.html#/ License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT25M4S	1504	2d	hd	false	https://i.ytimg.com/vi/dQqu4t_SE_k/maxresdefault.jpg		170	0	0	0	0
218	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iRPPHg7sGrs	2018-09-06T11:34:24Z	2018-09-06 11:34:24	EuroPython 2018 - Lightning talks on Friday, July 27	Lightning talks [EuroPython 2018 - - 2018-07-27 - Smarkets] [Edinburgh, UK] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT51M35S	3095	2d	hd	false	https://i.ytimg.com/vi/iRPPHg7sGrs/maxresdefault.jpg		188	0	1	0	0
219	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	mWv34KOt_Vg	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Matteo Guzzo - Easy interactive data applications with Dash	Easy interactive data applications with Dash [EuroPython 2018 - Talk - 2018-07-27 - PyCharm [PyData]] [Edinburgh, UK] By Matteo Guzzo Plotly Dash is a Python framework for building interactive dashboards and web data applications, based on Flask, React.js, and Plotly. It allows a python-only approach to something that previously required knowledge of Javascript, heavily reducing the overhead required to create a web application. I'll show how easy it is to set up a small interactive web app using data from the Twitch API and to expand it at will, using only Python. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT22M36S	1356	2d	hd	false	https://i.ytimg.com/vi/mWv34KOt_Vg/maxresdefault.jpg		380	6	0	0	0
220	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pSgLazQQdmY	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Naomi Ceder - Python Software Foundation Session	Python Software Foundation Session [EuroPython 2018 - Talk - 2018-07-27 - Kilsyth] [Edinburgh, UK] By Naomi Ceder The Python Software Foundation (PSF) is the organization behind Python itself. It holds the IP rights, runs PyCon US and tries to help the Python community world-wide to run events, user groups, workshops or Python related programming projects by giving out grants. This year, we’re again having a PSF Members meeting at EuroPython, where the PSF reports on its activities, new plans and organizational changes. The meeting is open to everyone, so if you want to learn more about the PSF activities, please join in. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M38S	1658	2d	hd	false	https://i.ytimg.com/vi/pSgLazQQdmY/maxresdefault.jpg		289	3	0	0	0
221	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	uif5GnLqjZo	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Keith Harrison - Creating a Culture of Software Craftsmanship	Creating a Culture of Software Craftsmanship [EuroPython 2018 - Talk - 2018-07-27 - Moorfoot] [Edinburgh, UK] By Keith Harrison This time it’ll be different. It’s a green field project and you’ve learned from your mistakes. You’re not going to make the same ones again. Fast forward several months and you’re in a mess. A change in one place causes bugs in a completely different place. Adding a simple feature means making changes all over your application. Progress is getting slower and slower. You’re lost in complexity. Why does this keep happening and what can we do about it? This talk will try to answer those questions. I’ll show how complex software really is, define the different types of complexity found in software, explain the issues complexity causes and discuss different techniques we can use to manage it. This talk is suitable for anyone who has worked or will work on a software development project. No development experience is required. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M45S	1665	2d	hd	false	https://i.ytimg.com/vi/uif5GnLqjZo/maxresdefault.jpg		862	10	0	0	0
222	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	w02D0rJzAyM	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Paul Keating - Writing good error messages	Writing good error messages [EuroPython 2018 - Talk - 2018-07-27 - Lammermuir] [Edinburgh, UK] By Paul Keating Anyone who has ever conducted an elementary programming course, or even answered a question on StackOverflow, will know that reading error messages is a skill that beginners have to learn. It is less widely appreciated that writing good error messages is also a skill that must be learnt. This talk is in two parts. The first covers the commonest error message gaffes: • Insufficiently explicit messages. • Issuing the same message for two different conditions. • Suppressing the stack trace. • Polluting the stack trace. The second part describes a way to ensure usable, actionable error messages, even when the writer of the message is not a professional coder. This was developed for an environment where superusers code up most of the dozens of data validation rules and the accompanying messages, and the application in which Python is embedded suppresses the stack trace. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT32M41S	1961	2d	hd	false	https://i.ytimg.com/vi/w02D0rJzAyM/maxresdefault.jpg		329	5	0	0	0
223	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yiiItJYnYEs	2018-09-06T11:34:24Z	2018-09-06 11:34:24	Martin Christen - Processing Geodata using Python and Open Source Modules	Processing Geodata using Python and Open Source Modules [EuroPython 2018 - Talk - 2018-07-27 - PyCharm [PyData]] [Edinburgh, UK] By Martin Christen The need for processing small-scale to large-scale spatial data is huge. In this talk, it is shown how to analyze, manipulate and visualize geospatial data by using Python and various open source modules. The following modules will be covered: Shapely: Manipulation and analysis of geometric objects Fiona - The pythonic way to handle vector data rasterio - The pythonic way to handle raster data pyproj - transforming spatial reference systems Vector File Formats (Shapefiles, GeoJSON, KML, GeoPackage) Geospatial analysis with GeoPandas Creating maps using Folium License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M49S	2689	2d	hd	false	https://i.ytimg.com/vi/yiiItJYnYEs/maxresdefault.jpg		1618	37	2	0	0
224	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qx7cumg6EEE	2018-08-30T21:22:37Z	2018-08-30 21:22:37	James Saryerwinnie - Debugging Your Code with Data Visualization	Debugging Your Code with Data Visualization [EuroPython 2018 - Talk - 2018-07-26 - Fintry [PyData]] [Edinburgh, UK] By James Saryerwinnie Let's face it. Sometimes our code just isn't working how we expect it to work. When this happens, we fall back to our trusty tools to help us debug: pdb, the logging module, or even simple print statements. But sometimes that just isn't enough, we still can't figure out why our code is broken. We need something more. There are a number of fantastic libraries in python for creating data visualizations. These libraries are commonly used for analyzing and visualizing large sets of data, but don't see as much usage when it comes to helping us write and debug our code. What if we could combine the two? What if we could leverage data visualization tools to understand what our program is doing? Sometimes, by seeing a visual representation of what our code is doing, it becomes much easier to understand why our code is not working. We don't need to create publication quality graphs and charts, we just need to generate quick, one-off visualizations to understand what our code is doing. What we want is the "data visualization" equivalent to print() statements. To help illustrate this point, I will walk through some of the hardest bugs I've had to track down while working on projects such as the AWS CLI and boto3, the AWS SDK for Python. For each bug, I'll show you how I was able to leverage data visualization techniques to troubleshoot and fix these bugs. Come learn how to debug more efficiently by leveraging data visualization. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M12S	1812	2d	hd	false	https://i.ytimg.com/vi/qx7cumg6EEE/maxresdefault.jpg		566	15	1	0	0
225	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1xysL9Bk8m8	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Mario Corchero - Mocks, dummies, stubs & spies	Mocks, fakes, dummies, stubs and spies: Successfully isolating the snake [EuroPython 2018 - Talk - 2018-07-26 - Kilsyth] [Edinburgh, UK] By Mario Corchero Ever wonder what mocks, fakes, dummies stubs or spies are? Or what the differences are between them and when one should be used instead of another? We will take a deep look into these concepts, what they mean and examples on how to use/create them in Python. In this talk, we will quickly explore the reasons for using mock and how it works, quickly jumping into the different concepts of testing doubles and how they can be used in Python. The talk will include as part of the examples from some features in mock coming in Python 3.7 that might change how usual mocking is performed. The talk builds on the writings of Gerard Meszaros and Martin Fowler about testing doubles, focusing on how to apply them to Python. This session, which will review test isolation concepts and the unittest.mock module, is structured in a way that both beginners and intermediate developers will learn from it. A basic knowledge of testing is recommended. Intermediate developers will leave the room with a clear understanding of the tools - further than just using simple mocks - to successfully fake dependencies. Multiple “not so well known” features of unittest.mock will be presented so we can shape those objects to behave functionally different. Unittest.mock is an extremely useful library which is commonly underused, this talk aims to bring clarity into stubbing in general and into medium/advanced mock features to ease and remove pain when users work with it. Outline: • Intro (1’) • Why doubles are important (1’) • Main qualities of a double (2’) • Overview of unittest.mock (5') • Testing doubles (15’) o Doubles (1’) o Stubs (2’) o Spies (3’) o Mocks (5’) o Fakes (2’) • Wrap up, conclusion and pointers (2') • Q&amp;A (Expected 5’) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT25M26S	1526	2d	hd	false	https://i.ytimg.com/vi/1xysL9Bk8m8/maxresdefault.jpg		777	7	3	0	0
226	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	395r-jzj8_k	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Vinicius Pacheco - Understanding and Applying CQRS	Understanding and Applying CQRS [EuroPython 2018 - Talk - 2018-07-26 - Smarkets] [Edinburgh, UK] By Vinicius Pacheco Creating scalable applications has a number of complex variables and one of them is to work with scalability and performance in the database layer. Command Query Responsibility Segregation (CQRS) is a design pattern that helps produce more performance and resilience in applications where data access is intense. In this talk, we will understand when to use and the problems that CQRS solves. We will also apply CQRS in a Python application using the Nameko framework. The outline talk is: ○ (4 minutes) - Present a real problem of a web application, when creating new instances is not a solution, because the database receives an overwrite of writing and unfeasible to read the data, collapsing the application. ○ (6 minutes) - Present the CQRS pattern conceptually and how this design pattern solves this type of problem using the structure of Command Stack and Query Stack ○ (3 minutes) - Show Nameko as an interesting tool to apply the CQRS. It will demonstrate the use of HTTP, RPC and the possibility of applying pub/sub. ○ (6 minutes) - Create (live code) the Command Stack layer using Nameko on a Postgresql database. ○ (5 minutes) - Create (live code) the Query Stack layer using Nameko over a MongoDB database. ○ (3 minutes) - Explain common myths and mistakes about CQRS (3 minutes) - Q &amp; A Session License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT47M44S	2864	2d	hd	false	https://i.ytimg.com/vi/395r-jzj8_k/maxresdefault.jpg		758	26	0	0	0
227	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3JYDT8lap5U	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Alejandro Saucedo - Industrial Machine Learning Pipelines with Python & Airflow	Industrial Machine Learning Pipelines with Python & Airflow [EuroPython 2018 - Talk - 2018-07-26 - Fintry [PyData]] [Edinburgh, UK] By Alejandro Saucedo Industrial Machine Learning This talk will provide key insights on the learnings I have obtained throughout my career building &amp; deploying machine learning systems in critical environments across several sectors. I will provide a deep dive on how to build scalable and distributed machine learning data pipelines using Airflow with a Celery backend. I will also compare Airflow with other technologies available out there and how it differentiates, such as Luigi, Chronos, Pinball, etc. If you attend the talk, you will obtain an understanding on the solid fundamentals of Airflow, together with its caveats and walk-arounds for more complex use-cases. As we proceed with the examples, I will cover the challenges that you will run into when scaling Machine Learning systems, and how Airflow can be used to address these using a manager-worker-queue architecture for distributed processing with Celery. By the end of this talk you will have the knowledge required to build your own industry-ready machine learning pipelines to process data at scale, and I will provide further reading resources so people are able to implement the knowledge obtained almost right away. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M50S	1670	2d	hd	false	https://i.ytimg.com/vi/3JYDT8lap5U/maxresdefault.jpg		985	10	2	0	0
228	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7U9hdxRu5DM	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Žan Anderle - JavaScript for Python Developers	JavaScript for Python Developers [EuroPython 2018 - Talk - 2018-07-26 - Kilsyth] [Edinburgh, UK] By Žan Anderle Having a hard time keeping track of where the modern JavaScript is going? Are you familiar only with jQuery and you want to know more? Or maybe you’re not familiar with JavaScript at all and want to learn it but you don’t know where to start? Then this talk is for you! You’ll learn about modern JavaScript from a perspective of a Python developer. By the end of the talk you’ll know everything you need to know about the language, its ecosystem, and different tools and frameworks. You’ll be able to start using JavaScript more confidently and be familiar with different tools that are at your disposal. We’ll go over all the things I wish I'd known when I first got started with JavaScript.: Basics of the language (types, operators, data structures, functions, modules, etc.) and how they are similar to or different from Python. Overview of the commonly used development and build tools. Overview of the popular frontend frameworks. A look into the newest features and Typescript. How to get started and make sense of everything with so much going on. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M37S	2677	2d	hd	false	https://i.ytimg.com/vi/7U9hdxRu5DM/maxresdefault.jpg		1868	40	1	0	1
229	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8r4wNvbAYUQ	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Hynek Schlawack - How to Write Deployment friendly Applications	How to Write Deployment-friendly Applications [EuroPython 2018 - Talk - 2018-07-26 - Smarkets] [Edinburgh, UK] By Hynek Schlawack The DevOps movement gave us many ways to put Python applications into production. But should your application care? Should it need to know whether it’s running on your notebook, on a server, in a Docker container, or in some cloud platform as a service? It should not, because environment-agnostic applications are easier to test, easier to deploy, easier to handle, and easier to scale. But how can you practically structure and configure your applications to make them indifferent to the environment they run in? How do secrets fit into the picture? And where do you put that log file? By the end of this talk you’ll know the tools and techniques that enable you to write such Python applications and you’ll be ready for the next big change. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M19S	2719	2d	hd	false	https://i.ytimg.com/vi/8r4wNvbAYUQ/maxresdefault.jpg		504	12	0	0	0
230	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	CWShNYqATkY	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Heidi Thorpe - May the Fuzz be with you	May the Fuzz be with you [EuroPython 2018 - Talk - 2018-07-26 - Fintry [PyData]] [Edinburgh, UK] By Heidi Thorpe This talk will explore how Long short-term memory (LSTM) recurrent neural networks combined with Python can use Artificial Intelligence to provide invalid, unexpected, or random data as inputs for testing software and finding network security vulnerabilities. The technique of machine generated test inputs is an established testing approach and is sometimes referred to as fuzzing. I will take this idea further by presenting how various types of machine learning can provide novel outlier test cases to harden software and networks in a way that is superior to using only randomness. Instead, I will discuss how to train neural networks to produce better fuzzing data.This is a natural progression from my work with machine learning and image processing using support vector machines (SVM) and Generative Adversarial Networks (GAN) which I have applied to this new domain of software testing. This a beginner level talk aimed at all software developers and testers with a goal to giving attendees a basic understanding of fuzz testing. Timing of presentation 1 Introduction 0-5 minutes 2 What is a neural fuzzing 5-10 minutes 3 How does fuzzing work 10-15 minutes 4 Steps to train a deep neural network 15-20 minutes 5 Implementing a basic LSTM neural network for security testing 20-25 minutes 6 Conclusion and Questions 25-30 minutes License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT24M48S	1488	2d	hd	false	https://i.ytimg.com/vi/CWShNYqATkY/maxresdefault.jpg		166	1	0	0	0
231	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	CoIMfOeREdY	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Jose Manuel Ortega - Microservices and Serverless in Python projects	Microservices and Serverless in Python projects [EuroPython 2018 - Talk - 2018-07-26 - Moorfoot] [Edinburgh, UK] By Jose Manuel Ortega Monoliths, microservices and now Serverless. Function as a Service (FaaS) platforms give us new ways to attack old problems. The possibility of executing functions as a service allows designing scalable and highly parallel applications, but on the other hand, this kind of applications require a particular programming style. For example, bundling dependencies and managing state is not trivial. However, there are plenty of tools and frameworks to help you code serverless applications with Python, and once you get started it is not complicated. In this talk we will mention the advantages of Serverless and we will focus on the situations in which we can introduce it into our Python projects. We will use AWS Lambda for the examples. These could be the main talking points: Introducing Serverless and Function as a Service (FaaS) in Python projects Advantages of Microservices and Serverless AWS Lambda functions with chalice Testing AWS lambda with docker License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M9S	2649	2d	hd	false	https://i.ytimg.com/vi/CoIMfOeREdY/maxresdefault.jpg		671	9	0	0	0
232	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SFqna5ilqig	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Bernat Gabor - Standardize Testing in Python	Standardize Testing in Python [EuroPython 2018 - Talk - 2018-07-26 - Kilsyth] [Edinburgh, UK] By Bernat Gabor In this talk, Bernat will introduce tox, an open source tool with the bold vision of standardizing testing. From a CIs point of view, testing contains much more than just unit and/or integration tests; other things like code style checks, packaging, testing under various versions of Python, and checking that documentation still generates, are just as important. Things quickly start to spiral out of control once you add into the mix that there are many tools and ways to accomplish each of these tasks. In this talk, we will learn how tox tries to abstract away all this complexity, how to easily run CI tests on your local machine, and how one can use this tool inside your CI frameworks to ensure high quality and easily maintainable packages. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT40M3S	2403	2d	hd	false	https://i.ytimg.com/vi/SFqna5ilqig/maxresdefault.jpg		1190	18	0	0	0
233	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Z_2eRy8XBRQ	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Aaron Bassett - Hello to the World in 8 Web Frameworks micro, batteries included & async	Hello to the World in 8 Web Frameworks (micro, batteries included & async) [EuroPython 2018 - Talk - 2018-07-26 - Lammermuir] [Edinburgh, UK] By Aaron Bassett Join us for a Phileas Fogg inspired whirlwind tour of eight Python web frameworks. "Had he programmed? It was likely, for no one seemed to know web frameworks more familiarly; there was no framework so obscure that he did not appear to have an intimate acquaintance with it. He must have developed in everything, at least in the spirit." We'll start with the current crop of microframeworks, showing how to achieve the same task in each, before progressing to "Batteries included" and the more specialised async frameworks. For developers who perhaps have only used a single framework, this talk gives them an opportunity to get out and explore the world (of web frameworks) and broaden their horizons, with plenty of Jules Verne inspired fun along the way. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT43M10S	2590	2d	hd	false	https://i.ytimg.com/vi/Z_2eRy8XBRQ/maxresdefault.jpg		308	2	0	0	0
234	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bHYw0LY9yWE	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Martin Angelov - Proper Django Testing	Proper Django Testing [EuroPython 2018 - Talk - 2018-07-26 - Lammermuir] [Edinburgh, UK] By Martin Angelov I'm currently working in a Django project, We have a lot of tests (~ 2000) and a fair amount of code coverage currently. The system and the requirements of the client grows everyday (like in every other project these days). I've convinced that the effort we put in making each of these tests pays off daily. Speaking with other Django and Python developers I've noticed that people often "overengineer" their unit tests and they usually tend to break their principles. In this presentation I will talk mainly about unit tests. - what packages we use and how and when to use them (properly). We will take a look on how we structure our projects and how this structure actually helps us write proper unit tests. I will start with the very basic tests and continue with the mocking technique. In the end I'm going to refer to other testing methods (integration, E2E, validation testing, visual regression, etc.). The goal of this talk is to make people better in testing and to show them how these skills will fasten the development process and help them maintain their project and it's quality. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT25M20S	1520	2d	hd	false	https://i.ytimg.com/vi/bHYw0LY9yWE/maxresdefault.jpg		460	13	0	0	0
235	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eJsu-7hFXyA	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Guillaume Gelin - PEP 557* versus the world	PEP 557* versus the world [EuroPython 2018 - Talk - 2018-07-26 - Moorfoot] [Edinburgh, UK] By Guillaume Gelin Python 3.7 will ship with a new module called dataclasses, which has been defined in PEP 557. What is this module? What are the problems that PEP 557 authors try to solve? What was the chosen design, and why? How does it compare against the tools that already exist? This talk will deeply cover dataclasses, but also attrs box, thingy and others. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M21S	1821	2d	hd	false	https://i.ytimg.com/vi/eJsu-7hFXyA/maxresdefault.jpg		554	8	1	0	1
236	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	glvXlcpmVQo	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Dougal Matthews - 10 years of EuroPython and the Python community	10 years of EuroPython and the Python community [EuroPython 2018 - Talk - 2018-07-26 - Smarkets] [Edinburgh, UK] By Dougal Matthews This talk will take you on a journey from Birmingham to Edinburgh via Florence, Berlin, Bilbao and Rimini. The last 10 years of EuroPython. This will be a trip down memory lane where we look at how the language, community and conference have evolved with some personal anecdotes along the way. This will be in part a retrospective, where we will look at what we have done well and where we can do better. Finally, we will look at some aspirations and ideas for the coming years. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT23M3S	1383	2d	hd	false	https://i.ytimg.com/vi/glvXlcpmVQo/maxresdefault.jpg		59	0	0	0	0
237	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kXd1sIbdM8w	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Naomi Ceder - Iteration Inside Out Python's Iteration Protocol	Iteration Inside Out - Python's Iteration Protocol [EuroPython 2018 - Talk - 2018-07-26 - Moorfoot] [Edinburgh, UK] By Naomi Ceder Using for loops and list comprehensions in Python is basic and quite common, right? But how does iteration in Python actually work "under the hood"? The words "iterator" and "iterable" each occur over 500 times in the Python documentation, but what does an iterator actually do, as opposed to an iterable? And how do they do it? Learn the details as we turn the iteration protocol inside out, with live coded demonstrations along the way. This talk will start from the way Python iterates of over a sequence, in comparison with iterating by index, like C. The key point of iterating over a sequence is that something needs to track which item in the sequence is next, which is something that Python's iteration protocol manages. The iterable section will demonstrate creating a simple object that returns items by index (e.g., a fibonacci series), showing that getitem is really all you need for an iterable, since an iterator is created for such objects when iterated upon. BUT, this doesn't answer the question of how Python keeps track of which item is next. The iterator section answers that question by converting the iterable just created to an iterator - adding iter and next methods and showing how the iterator saves state and essentially drives the iteration protocol. Having an accurate understanding of iteration protocol will help developing Pythonistas reason better about both iterating over existing objects and creating their own iterables and iterators. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M53S	1913	2d	hd	false	https://i.ytimg.com/vi/kXd1sIbdM8w/maxresdefault.jpg		469	8	1	0	1
238	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pWnETtscNS0	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Stephan Jaensch - Type annotations with larger codebases	Type annotations with larger codebases [EuroPython 2018 - Talk - 2018-07-26 - Kilsyth] [Edinburgh, UK] By Stephan Jaensch You've heard about type annotations, you know they help reduce bugs and improve documentation especially for large codebases, and you've attended an introductory talk or read a tutorial about using them. But how do you get started using them with your big, existing codebase? How do you make sure your colleagues will be annotating new code they write - or existing code they're changing? And how do you get around some of the issues you might run into when using the still-beta type checker mypy on your codebase? This talk will start where the typical introductory Python type annotation talks end and discuss the real-world challenges when starting to annotate types with an existing codebase of tens or hundreds of thousands of lines of code. I'll walk you through best practices learned from doing just that at Yelp, telling you about some of the roadblocks we hit (and how we got past them). We'll also take a look at: - how you can get the most out of type annotations even with non-annotated third-party libraries - how to deal with code patterns that currently don't always work well with annotations - when the only way to get proper type checking is through refactoring your code. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M9S	1809	2d	hd	false	https://i.ytimg.com/vi/pWnETtscNS0/maxresdefault.jpg		168	3	0	0	0
239	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qDyxmgWkjvI	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Ivaylo Donchev - Django queries optimization	Django queries optimization [EuroPython 2018 - Talk - 2018-07-26 - Kilsyth] [Edinburgh, UK] By Ivaylo Donchev Collecting data from multiple Models is a common flow in Django development. In most of the cases prefetch_related and select_related do all of the job for optimizing the queries. When the models structure become complicated enough and we've put our logic for collecting these items in models' properties we suddenly cannot use prefetch_related or select_related anymore. Our View 's queries count depends on selected items count with high complexity. The problem is in the selection logic: we've implemented an algorithm which calculates something and we cannot prefetch or select all of the objects. So this talk's purpose is: To show how to use Django ORM to move the selection logic, the calculations, the aggregations over group of objects from our python code to our database and moving all of the logic for this in one place - the queryset and test it easily. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M19S	1879	2d	hd	false	https://i.ytimg.com/vi/qDyxmgWkjvI/maxresdefault.jpg		2815	47	7	0	4
240	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vIkpCOY-yGs	2018-08-30T21:22:36Z	2018-08-30 21:22:36	Mark Smith - More Than You Ever Wanted To Know About Python Functions	More Than You Ever Wanted To Know About Python Functions [EuroPython 2018 - Talk - 2018-07-26 - Smarkets] [Edinburgh, UK] By Mark Smith What exactly are functions? Let's talk about functions, methods, callables and closures - what they are, what you can give them, what they can give you, what you can do with them ... and what's inside. You probably think you already know everything about functions, but you probably don't! Input &amp; Output: How do you get things in and out of functions? I'll cover parameters and the myriad of ways they can be specified, provided and accessed - including helpful hints to avoid common mistakes! I'll cover return values, briefly, along with variable scopes and exceptions. Closures: What are they, how do they work and how they can affect memory usage. Methods: How does a method differ from a function, when are they made, how do they work and how to access the function inside every method. __magic__:Make your own callables from any object! Introspection: Using modern Python techniques, what can you find out about a function, and what can you do with that information? Bytecode: What happens if you open up a function and look at its insides? Can you change it and put it back together again? (Spoiler: Yes, you can.) By the end of this talk, I guarantee* you'll know more about callables than when you walked in, along with techniques both practical and so extreme your colleagues will never let you merge them to master. (*This guarantee is legally non-binding and cannot be redeemed in any way.) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M42S	1842	2d	hd	false	https://i.ytimg.com/vi/vIkpCOY-yGs/maxresdefault.jpg		483	5	0	0	1
241	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	z8rYW1UiHNc	2018-08-30T21:22:36Z	2018-08-30 21:22:36	EuroPython 2018 - Lightning talks on Thursday, July 26	Lightning talks [EuroPython 2018 - - 2018-07-26 - Smarkets] [Edinburgh, UK] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT39M19S	2359	2d	hd	false	https://i.ytimg.com/vi/z8rYW1UiHNc/maxresdefault.jpg		132	0	1	0	0
242	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	18nZ5xMeGno	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Jukka Lehtosalo - Getting Started with Mypy and Type Checking	Getting Started with Mypy and Type Checking [EuroPython 2018 - Talk - 2018-07-26 - Moorfoot] [Edinburgh, UK] By Jukka Lehtosalo Ever wondered if you should try type checking in your Python project, or what it takes to get started with mypy? I will show how to introduce type checking the easy way, one step at a time. Dropbox was an early adopter of type checking and mypy, and we've been gradually adding type annotations to our large production codebases since 2016. Engineers love how type annotations improve the clarity of code, and how mypy can surface hard-to-find bugs. We've learned a lot in the process of annotating millions of lines of code, and in this talk you'll learn battle-tested approaches for adding type checking to an existing codebase. I expect no previous experience with mypy. You'll benefit the most if you've worked on a project with multiple developers. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M58S	1858	2d	hd	false	https://i.ytimg.com/vi/18nZ5xMeGno/maxresdefault.jpg		1706	29	1	0	0
243	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1lJDZx6f6tY	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Lynn Root - asyncio in Practice: We Did It Wrong	asyncio in Practice: We Did It Wrong [EuroPython 2018 - Talk - 2018-07-26 - Lammermuir] [Edinburgh, UK] By Lynn Root This talk is aimed at those that have at least intermediate experience in Python and have played around with asynchronous Python using asyncio or other libraries. I want the audience to learn from my mistakes! For instance, how easy it is to get into “callback hell” (and how to avoid/get out of it), how to screw up thread safety and deadlock yourself, and making code async but not actually concurrent. I'll talk through some anti-patterns and best practices that I learned the hard way. This includes proper concurrency, calling coroutines from synchronous code, working with threads and threadsafety, properly shutting down an async programs, and hidden "gotchas". License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M51S	1791	2d	hd	false	https://i.ytimg.com/vi/1lJDZx6f6tY/maxresdefault.jpg		1711	32	2	0	3
244	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3zWHdyrGlDc	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Sarah Bird - The Web is Terrifying! Using the PyData stack to spy on the spies	The Web is Terrifying! Using the PyData stack to spy on the spies. [EuroPython 2018 - Talk - 2018-07-26 - PyCharm [PyData]] [Edinburgh, UK] By Sarah Bird We all know the internet can be a scary place. In this talk I’ll focus on two ways I’ve found it positively terrifying. First, digging into tracking technologies, I have learned about the breadth and depth of ways our online activity is monitored, stored, and repackaged. Second, when starting out to learn a new skill, the tidal wave of information available online can be overwhelming. Using the PyData stack to explore and visualize different data sources, including a new dataset from Mozilla, we’ll examine some of the many types of online tracking. My goal is to leave the audience with: 1) A sense of the breadth of tools in the PyData toolbox that can be applied to a real-world analysis 2) An understanding of a few methods of online tracking so they can be more informed internet citizens In particular, now that the EU’s General Data Protection Regulation (GDPR) has come into force, we can explore the data in light of EU citizens’ new rights, and the new responsibilities of companies worldwide. Along the way, I’ll also talk about becoming a software engineer, then a builder of data science tools, and my new journey into data science. Being self-taught can be, lonely, scary, and full of embarrassing pitfalls. I’ll share some stories about my learning journey, and the people and resources that have supported me. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M47S	1847	2d	hd	false	https://i.ytimg.com/vi/3zWHdyrGlDc/maxresdefault.jpg		539	15	0	0	0
245	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4xpeJYWvbuU	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Stefan Behnel - Cython to speed up your Python code	Cython to speed up your Python code [EuroPython 2018 - Talk - 2018-07-26 - Moorfoot] [Edinburgh, UK] By Stefan Behnel Cython is not only a very fast and comfortable way to talk to native code and libraries, it is also a widely used tool for speeding up Python code. The Cython compiler translates Python code to C or C++ code, and applies many static optimisations that make Python code run visibly faster than in the interpreter. But even better, it supports static type annotations that allow direct use of C/C++ data types and functions, which the compiler uses to convert and optimise the code into fast, native C. The tight integration of all three languages, Python, C and C++, makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code. This talk by a core developer introduces the Cython compiler by interactive code examples, and shows how you can use it to speed up your Python code. You will learn how you can profile a Python module and use Cython to compile and optimise it into a fast binary extension module. All of that, without losing the ability to run it through common development tools like static analysers or coverage test tools. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT46M17S	2777	2d	hd	false	https://i.ytimg.com/vi/4xpeJYWvbuU/maxresdefault.jpg		3139	37	4	0	2
246	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6L3ZVLtSeo8	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Nina Zakharenko - Code Review Skills for Pythonistas	Code Review Skills for Pythonistas [EuroPython 2018 - Talk - 2018-07-26 - Lammermuir] [Edinburgh, UK] By Nina Zakharenko As teams and projects grow, code review becomes increasingly important to support the maintainability of complex codebases. In this talk, I'll cover guidelines for writing consistent python code beyond pep8, how to look out for common python gotchas, and what python tools are available to automate various parts of the review process. Most importantly, I'll cover the human aspect of code reviews - how we can be better at approaching reviews with empathy and understanding from the perspective of both a reviewer and a submitter. Following these successful code review practices will lead to happier teams and healthier code bases. This talk is useful for python developers with any amount of experience. No prerequisite knowledge is necessary. - For those who are just starting out, it will be a great general overview. - Intermediate developers may not know about the wide variety of tooling that's available. - Advanced developers will learn techniques for performing code reviews with empathy. This talk will enable you to have better code reviews on your teams at work, and a better approach to code reviews in open source projects. You'll leave with 3 main takeaways: 1. Code Reviews are most effective when conducted with empathy. If you do reviews with growth and learning in mind, they become tools for sharing knowledge instead of an opportunity to bruise egos or show off esoteric knowledge. 2. Python has powerful tooling available for code reviews such as pep8 as a style guide, pylint as a linter, coverage.py to identify test coverage, and vulture to identify dead code. 3. That python style guides beyond pep8 have clear benefits in terms of producing more consistent code that's easier to review and easier to maintain. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT40M20S	2420	2d	hd	false	https://i.ytimg.com/vi/6L3ZVLtSeo8/maxresdefault.jpg		1792	52	0	0	0
247	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6oQuQ5coSQ0	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Anton Caceres - Python and Web Sockets	Python and Web Sockets [EuroPython 2018 - Talk - 2018-07-26 - Lammermuir] [Edinburgh, UK] By Anton Caceres Modern web-apps require bi-directional communication, reacting not only to user actions but also to server events. This can be achieved elegantly using Web Sockets, a protocol standardized by W3C to be a default tool for full-duplex connections on the Web. Although most web-frameworks do not support Web Socket integration out of the box, Python has multiple options available making it a piece of cake. This talk showcases integrating Web Sockets in Python web-apps, focusing on situations that can make good use of it and presenting implementations with most popular frameworks: Tornado and Django. We will explore a similar style but different underlying technologies of both, and finish with a live demo. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT32M3S	1923	2d	hd	false	https://i.ytimg.com/vi/6oQuQ5coSQ0/maxresdefault.jpg		706	14	0	0	0
248	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6rCFwjV0J-4	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Alexys Jacob - The rise of Python in the data communities	The rise of Python in the data communities [EuroPython 2018 - Talk - 2018-07-26 - Fintry [PyData]] [Edinburgh, UK] By Alexys Jacob A retrospective and prospective of Python's adoption in the data-driven industries and how it has and should influence its ecosystem and communities. Thanks to its versatility, Python's usage and adoption has changed a lot over the last decade to go beyond the very act of software programming. From Developers to SysOps, closely followed by Scientists and Data analysts, Python has spread to become a common tongue for a wide range of people. We will start by looking at how this increased adoption impacted Python ecosystem and is still shaping it today. While this talk is not walk through all the Python technologies around data, some of them will be outlined so you will hear words like Numpy, Pandas or Jupyter. Then we will try to project ourselves in the future and by highlighting the pitfalls Python has to overcome to keep up with its pace and mature in its ability to scale! Draft of the agenda The rise and collusion of science and engineering and their influence on Python From DevOps to DataOps, the shape and breakthroughs of Python's ecosystem Prospect of challenges and pitfalls in the massive data era License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT40M19S	2419	2d	hd	false	https://i.ytimg.com/vi/6rCFwjV0J-4/maxresdefault.jpg		302	1	0	0	0
249	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	74AsJ7RET20	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Ines Montani - How to Ignore Most Startup Advice and Build a Decent Software Business	How to Ignore Most Startup Advice and Build a Decent Software Business [EuroPython 2018 - Keynote - 2018-07-26 - Smarkets] [Edinburgh, UK] By Ines Montani It's a great time to be a software developer. Platforms are steadily becoming more mature, useful tools are released almost daily and things that seemed hopelessly futuristic only a few years ago are suddenly commercially viable. Despite this, the software world is awash with bullshit. The success of the largest technology companies has led to a very skewed set of lessons. This narrow focus is amplified by the venture capital industry and the fact that nobody really knows what's going to happen next. The good news is, none of this actually matters. The basics of creating something useful and selling it for money remain the same. In this talk, I'm not going to give you "one weird trick" or tell you to ~* just follow your dreams *~. But I'll share some of the things we've learned from building a successful software company around commercial developer tools and our open-source library spaCy. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT41M48S	2508	2d	hd	false	https://i.ytimg.com/vi/74AsJ7RET20/maxresdefault.jpg		8158	236	1	0	7
250	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7LahjY_poio	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Francisco Javier Aceituno Lapido - Developing in a black hole: vim, tmux, httpie and jq	Developing in a black hole: vim, tmux, httpie and jq [EuroPython 2018 - Talk - 2018-07-26 - Moorfoot] [Edinburgh, UK] By Francisco Javier Aceituno Lapido "Productivity depends on the knowledge you have of the tools used." Do you feel that the development tools you use are heavy? Do you think that they make you less productive? Do you want to have maximum productivity without lifting your hands from the keyboard? If so, this talk is for you. In this talk, I will show what are the tools I use every day in software development at OnTruck and how you can integrate the text editor, vim the terminal multiplexer, tmux the HTTP client, httpie and the json processor, jq to get a very productive development environment, all running on a simple terminal. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M21S	1881	2d	hd	false	https://i.ytimg.com/vi/7LahjY_poio/maxresdefault.jpg		1089	23	2	0	2
251	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7qLNrcYkQiY	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Steve Barnes - Why develop a CLI Command Line Interface first?	Why develop a CLI (Command Line Interface) first? [EuroPython 2018 - Talk - 2018-07-26 - Lammermuir] [Edinburgh, UK] By Steve Barnes One of the core concepts of Application Development, (not just in python), is the separation between the Business Logic and the User Interface. However there is a strong temptation to start with the user interface and add the business logic to it some methodologies emphasize this with the process of prototyping the (G)UI first. The danger is that your business logic code can get too entangled with the UI and a change of platform or framework becomes almost impossible. This presentation will show how to maintain a clear separation between the Business Logic and the User Interface by starting with a command line interface using argparse and growing a GUI on top. We will cover: - Why maintain the seperation - Using argparse - Adding a GUI layer with wxPython - Automating the GUI generation - Adding a web interface - Testing advantages of this approach - Scripting advantages - Some packaging models. Slides and Samples all uploaded to https://github.com/GadgetSteve/EP2018_Talk License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT25M12S	1512	2d	hd	false	https://i.ytimg.com/vi/7qLNrcYkQiY/maxresdefault.jpg		368	3	1	0	0
252	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9QXACKrJ-1k	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Mika Boström, Alexander Schmolck - Marge: A bot for better Git'ing	Marge: A bot for better Git'ing [EuroPython 2018 - Talk - 2018-07-26 - Smarkets] [Edinburgh, UK] By Mika Boström, Alexander Schmolck Over the past decade, development workflows across industries have converged towards Continuous Integration (CI) with pull requests (PR). Automated testing and artifact generation is useful, but the logic is often flawed: test are run against the source branch, and side effects from successful merges are not accounted for. Marge-bot improves this workflow by allowing to test the PR against the target branch while providing a host of other conveniences. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M56S	1736	2d	hd	false	https://i.ytimg.com/vi/9QXACKrJ-1k/maxresdefault.jpg		224	4	0	0	0
253	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	EVP_xLILirs	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Konstantin Ignatov - Succinct data structures for python	Succinct data structures for python [EuroPython 2018 - Talk - 2018-07-26 - Fintry [PyData]] [Edinburgh, UK] By Konstantin Ignatov This is a presentation of and call for participation in development and testing of Python bindings to Succinct Data Structure Library. From Wikipedia: Succinct data structures can represent an object (such as a bitvector or a tree) in space close to the information-theoretic lower bound of the object while supporting operations of the original object efficiently. The theoretical time complexity of an operation performed on the classical data structure and the equivalent succinct data structure are (most of the time) identical. Currently bindings are provided for: Mutable bit-compressed vectors Immutable compressed integer vectors Immutable compressed bit (boolean) vectors Rank and select operations on bitvectors Wavelet trees Comressed suffix arrays Original library: https://github.com/simongog/sdsl-lite Most of examples from SDSL cheat sheet and SDSL tutorial are implemented. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT25M20S	1520	2d	hd	false	https://i.ytimg.com/vi/EVP_xLILirs/maxresdefault.jpg		479	10	0	0	0
254	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FfIH-baHJj8	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Marc Andre Lemburg - How to make money using Python - Unused potential in the Enterprise World	How to make money using Python - Unused potential in the Enterprise World [EuroPython 2018 - Talk - 2018-07-26 - Smarkets] [Edinburgh, UK] By Marc-Andre Lemburg Python has gained quite some traction in the web development world and more recently as the goto language for anything that has to do with data science. However, it's use in the enterprise world of applications is rather limited. Based on the author's many years experience in working in enterprise environments, the talk will demonstrate areas in the business application space where Python has significant advantages over other languages, but which are currently dominated by applications written in Java, C++ or C#. There are huge opportunities out there for companies to excel at and use the Python advantage to their benefit. If you are looking for a lead idea to kick start your Python business (and you have the resources to invest into marketing), this talk is for you. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M45S	1845	2d	hd	false	https://i.ytimg.com/vi/FfIH-baHJj8/maxresdefault.jpg		769	2	0	0	0
255	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JN6RAaufFzU	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Pascal van Kooten - When to use Machine Learning: Tips, Tricks and Warnings	When to use Machine Learning: Tips, Tricks and Warnings [EuroPython 2018 - Talk - 2018-07-26 - Fintry [PyData]] [Edinburgh, UK] By Pascal van Kooten Artificial Intelligence, and machine learning in particular, is one of the hottest topics in tech/business. I will explain the core of machine learning, and the main goal of this talk will be to help you judge the success whenever someone yells "I know! let's solve this using machine learning!". I will also provide tips and tricks on how to increase the success of such projects. The second part of the talk will be about 2 open-source python projects I've created, as well as a project I'm working on regarding the trading of cryptocurrency... and their relation to machine learning. Specifically, the challenges and findings in making these cases work will be explored. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT39M22S	2362	2d	hd	false	https://i.ytimg.com/vi/JN6RAaufFzU/maxresdefault.jpg		471	12	1	0	0
256	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LvlUBxi_JEg	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Thomas Aglassinger - Introduction to sentiment analysis with spaCy 1	Introduction to sentiment analysis with spaCy [EuroPython 2018 - Talk - 2018-07-26 - PyCharm [PyData]] [Edinburgh, UK] By Thomas Aglassinger Sentiment analysis aims at extracting opinions from texts written in natural language, typically reviews or comments on social sites and forums. SpaCy already provides mechanisms for dealing with natural languages in general but does not offer means for sentiment analysis. This talk gives a short introduction to sentiment analysis in general and shows how to extract topics and ratings by utilizing spaCy's basic tools and extending them with a lexicon based approach and simple Python code to consolidate sentiments spread over multiple words. Topic covered are: What is sentiment analysis? Levels of sentiment detection Representing opinions Splitting texts in sentences and words. Finding the base word (lemma) Extending spaCy's pipeline and tokens Matching words to topics and ratings Combining multiple words to a rating Code examples are introduced and explained using a Jupyter notebook that can be used as basis for your own analysis. As additional twist the analyzed texts are not in English but German to show that this approach can be used for multiple languages. No knowledge of German is required though because translations of the short examples sentences are provided. Author's note: This is an extended version of a talk I gave at the PyDays Vienna 2018. The original slides and Jupyter notebook are available at https://github.com/roskakori/talks/tree/master/pydays/analyzingnaturallanguagefeedbackusing_python. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT40M55S	2455	2d	hd	false	https://i.ytimg.com/vi/LvlUBxi_JEg/maxresdefault.jpg		1325	16	2	0	1
257	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	VQkFhrXvRbw	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Mark Shannon - Is your code tainted? Finding security vulnerabilities using taint tracking	Is your code tainted? Finding security vulnerabilities using taint-tracking. [EuroPython 2018 - Talk - 2018-07-26 - Kilsyth] [Edinburgh, UK] By Mark Shannon "Taint tracking" is a technique used in code analysis to find security vulnerabilities and other problems. Any data that comes from an untrusted source, for example a HTTP request, is treated as "tainted". If that "tainted" data is able to reach a vulnerable part of your code, then you have a problem. Sophisticated code analysis tools can track this data, and reveal potential security problems. Examples of the sort of problem that can be found include cross-site scripting (XSS), code injection, SQL injection and others. In this talk I will show how taint tracking analysis works in practice, introducing the concepts of source, sink and sanitizer. I will then demonstrate using taint tracking to find a XSS vulnerability in a django app. (We will chose a project that is designed to teach django security, where the vulnerability is deliberate.) I will also explain how thinking in terms of "taint" can help you write safer code, even without access to code analysis. During this talk I will use the code analysis tools on lgtm.com to demonstrate the analysis. lgtm.com is free to use for open-source projects. A paid version is available. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M6S	1626	2d	hd	false	https://i.ytimg.com/vi/VQkFhrXvRbw/maxresdefault.jpg		1044	11	5	0	0
258	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Vn_Zv8M_fNY	2018-08-30T21:22:35Z	2018-08-30 21:22:35	EuroPython 2018 - Recruiting Session	Recruiting Session [reserved] [EuroPython 2018 - Talk - 2018-07-26 - Lammermuir] [Edinburgh, UK] By Tobey Announced Recruiting Session [reserved] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M18S	2718	2d	hd	false	https://i.ytimg.com/vi/Vn_Zv8M_fNY/maxresdefault.jpg		35	0	0	0	0
259	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YMmio0JHy_Y	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Windel Bouwman - A Python implementation in Rust?	A Python implementation in Rust? [EuroPython 2018 - Talk - 2018-07-26 - Kilsyth] [Edinburgh, UK] By Windel Bouwman Rust is a fairly new programming language aimed as a competitor of C. There are already attempts to write extension modules in rust and load them into CPython. A whole new approach would be to re-implement the Python language in rust. This is what the rspython project is about: implementing a python interpreter in rust. Rust already has many features such as vectors, hashmaps and strings as unicode. There also exist already modules for regular expressions and dealing with files, so a lot can be re-used in this area. During this talk we will dive into rust and python and the design of the rspython. We will present some challenges and opportunities. Also we will show the current state of this project in a demo. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M9S	1749	2d	hd	false	https://i.ytimg.com/vi/YMmio0JHy_Y/maxresdefault.jpg		876	19	0	0	0
260	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YljaTn-CAP0	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Alisa Dammer - Data is not flat	Data is not flat [EuroPython 2018 - Talk - 2018-07-26 - PyCharm [PyData]] [Edinburgh, UK] By Alisa Dammer Feature engineering and model training often comes hand in hand. Some tasks have an overwhelming amount of high dimensional data, some tasks have little data or very low-dimension data. This talk targets the latter problem: what can be done with the data itself to significantly improve the model performance and when manual feature engineering does make sense. A sample case of Classification problem with NN will be presented The goal of the talk is to remind about something every person working with the data thinks and probably uses. Slides, Jupyter notebook with the example, test and train sets, NN configuration file are available on: https://github.com/Alisa-lisa/conferences License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M44S	1904	2d	hd	false	https://i.ytimg.com/vi/YljaTn-CAP0/maxresdefault.jpg		277	7	0	0	0
261	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZlTTUxu6D4M	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Kamila Stepniowska - How can you use Open Source materials to learn Python & data science?	How can you use Open Source materials to learn Python & data science? [EuroPython 2018 - Talk - 2018-07-26 - PyCharm [PyData]] [Edinburgh, UK] By Kamila Stepniowska Python is very often recommended as the language of choice in a programming education. I can see at least two cases when it's a thing: - introduction to programming - regardless an age and any previous educational experience, - data science - it's just a standard... and actually both - you can teach a future data scientists starting by teaching Python. During this talk, I would like to briefly present you what Open Source Python educational materials do we have there and how those are and can be used to teach Python and data science. PyLadies, Django Girls, Django Carrots, Python Software Foundation creates many very available materials. From the data science side, you have Open Source materials created by kaggle, Minerva, Github repos, and many other organizations and individuals. During this talk you will learn: - where to find an Open Source Python and data science tutorials and educational materials - how does the Python community can support your learning process - why learning data science with Python is a good idea. I'm also interested in learning your educational experience with an Open Source materials and Python community supporting your learning experience. If you would like to share a link or your educational story, please feel free to send me an email on kamila@stepniowski.com. If I will find it interesting for the audience and if you will give me your permission to share it, I might use it in the talk. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT42M39S	2559	2d	hd	false	https://i.ytimg.com/vi/ZlTTUxu6D4M/maxresdefault.jpg		246	0	1	0	0
262	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_uNgNhdIB7U	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Alexander Hendorf - Deep Learning with PyTorch for Fun and Profit	Deep Learning with PyTorch for Fun and Profit [EuroPython 2018 - Talk - 2018-07-26 - Fintry [PyData]] [Edinburgh, UK] By Alexander Hendorf There are all these great blog posts about Deep Learning describing all that awesome stuff. - Is it all that easy? Let's check! We'll look into: style transfer (making a picture look like painting), speech generation (like Siri or Alexa) and text generation (writing a story). In this talk I'll describe the whole journey: A fun ride from the idea to the very end including all the struggles, failures and successes. Steps, we'll cover: The data challenge: get the data ready Have it run on your Mac with PyTorch and an eGPU Creating a character-level language models with an Recurrent Neural Network Creating a text generator Creating artwork License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M5S	2705	2d	hd	false	https://i.ytimg.com/vi/_uNgNhdIB7U/maxresdefault.jpg		1174	13	2	0	1
263	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	aqIvec4MMHY	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Roberto Polli - Interoperability Rules for an European API Ecosystem: do we still need SOAP?	Interoperability Rules for an European API Ecosystem: do we still need SOAP? [EuroPython 2018 - Talk - 2018-07-26 - Smarkets] [Edinburgh, UK] By Roberto Polli Intro Italy is introducing a new API Ecosystem because the complexity of the old SOAP-based protocol was now a barrier for the creation of newer services. This talk presents the Digital Transformation Team ongoing work on an interoperability framework based on (REST) API, including: the scheme standardization based on EU standards, ontologies and RFC an availability strategy based on a distributed circuit-breaker and throttling patterns a contract-first (API-first) approach to REST services via a href="https://www.openapis.org/"OpenAPI spec Challenges when you can replace SOAP Headers with the HTTP semantics introduced in RFC 7230-7238 strategies for a non-repudiation system based on HTTP (eg. DOSETA, JWS, ..) the path towards an European interoperable API Ecosystem Prerequisites basic knowledge of SOAP, REST and the HTTP protocol general web service issues, DDOS, availability and metrics License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT42M2S	2522	2d	hd	false	https://i.ytimg.com/vi/aqIvec4MMHY/maxresdefault.jpg		130	11	0	0	1
264	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	oGRIGdsz7bM	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Anna Veronika Dorogush - CatBoost - the new generation of Gradient Boosting	CatBoost - the new generation of Gradient Boosting [EuroPython 2018 - Talk - 2018-07-26 - PyCharm [PyData]] [Edinburgh, UK] By Anna Veronika Dorogush Gradient boosting is a powerful machine-learning technique that achieves state-of-the-art results in a variety of practical tasks. For a number of years, it has remained the primary method for learning problems with heterogeneous features, noisy data, and complex dependencies: web search, recommendation systems, weather forecasting, and many others. CatBoost (http://catboost.yandex) is a new open-source gradient boosting library, that outperforms existing publicly available implementations of gradient boosting in terms of quality. It has a set of addional advantages. CatBoost is able to incorporate categorical features in your data (like music genre, URL, search query, etc.) in predictive models with no additional preprocessing. For more details on our approach please refer to our NIPS 2017 ML Systems Workshop paper (http://learningsys.org/nips17/assets/papers/paper_11.pdf). CatBoost inference is 20-60 times faster then in other open-source gradient boosting libraries, which makes it possible to use CatBoost for latency-critical tasks. CatBoost has the fastest GPU and multi GPU training implementations of all the openly available gradient boosting libraries. CatBoost requires no hyperparameter tunning in order to get a model with good quality. CatBoost is highly scalable and can be efficiently trained using hundreds of machines The talk will cover a broad description of gradient boosting and its areas of usage and the differences between CatBoost and other gradient boosting libraries. We will also briefly explain the details of the proprietary algorithm that leads to a boost in quality. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT42M4S	2524	2d	hd	false	https://i.ytimg.com/vi/oGRIGdsz7bM/maxresdefault.jpg		4858	99	0	0	6
265	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	roKm54yG8Lo	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Keystone Sponsor Talk - Why Python is at the heart of Smarkets	Why Python is at the heart of Smarkets [EuroPython 2018 - - 2018-07-26 - Smarkets] [Edinburgh, UK] Smarkets is heavily invested in Python and this is why we've decided to be the Keystone sponsor of EuroPython 2018! In this talk, we'll tell you more about what we do at Smarkets, why we think we're a unique place to work, the interesting things we're doing at the Conference and of course how we use Python every day. We'll also tell you about some of our current challenges in upgrading from 3.6 to 3.7, evaluating asyncio in production and what we've learned from type hinting over the past two years. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT12M	720	2d	hd	false	https://i.ytimg.com/vi/roKm54yG8Lo/maxresdefault.jpg		151	2	1	0	0
266	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	scum5a_mqBc	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Nicole Harris - PyPI: Past, Present and Future	PyPI: Past, Present and Future [EuroPython 2018 - Talk - 2018-07-26 - Smarkets] [Edinburgh, UK] By Nicole Harris The Python Package Index (PyPI) is the principal repository of software packages for the Python programming language. In May 2018, PyPI served 12.3 billion HTTP requests, with 1.4 million people visiting pypi.org via their web browser. The Python community depends on PyPI for the ongoing functioning of the entire Python ecosystem. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M44S	1784	2d	hd	false	https://i.ytimg.com/vi/scum5a_mqBc/maxresdefault.jpg		566	3	1	0	0
267	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vrtTAeBLElw	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Matthew Honnibal - Building new NLP solutions with spaCy and Prodigy	Building new NLP solutions with spaCy and Prodigy [EuroPython 2018 - Talk - 2018-07-26 - PyCharm [PyData]] [Edinburgh, UK] By Matthew Honnibal Commercial machine learning projects are currently like start-ups: many projects fail, but some are extremely successful, justifying the total investment. While some people will tell you to "embrace failure", I say failure sucks --- so what can we do to fight it? In this talk, I will discuss how to address some of the most likely causes of failure for new Natural Language Processing (NLP) projects. My main recommendation is to take an iterative approach: don't assume you know what your pipeline should look like, let alone your annotation schemes or model architectures. I will also discuss a few tips for figuring out what's likely to work, along with a few common mistakes. To keep the advice well-grounded, I will refer specifically to our open-source library spaCy, and our commercial annotation tool Prodigy. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M26S	1646	2d	hd	false	https://i.ytimg.com/vi/vrtTAeBLElw/maxresdefault.jpg		915	16	2	0	0
268	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yG3ZdxBb1oo	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Radoslav Georgiev - Django structure for scale and longevity	Django structure for scale and longevity [EuroPython 2018 - Talk - 2018-07-26 - Moorfoot] [Edinburgh, UK] By Radoslav Georgiev Django structure for scale and longevity Why Django is great. But as we add new features, as our dev team grows &amp; the software needs to be stable on production, things can get quite messy. We are going to look at some common patterns, derived from experience, on how to structure your Django project for scale and longevity. What Main topics are: Django service layer or where should business logic live? Using Django Rest Framework in a clean &amp; repeatable way &amp; combining it with the service layer. Testing everything that matters, without repeating ourselves in different tests. We are going to talk about when to rely on existing abstraction so it's actually helpful &amp; when to avoid existing abstraction, and code things ourselves. The examples showed in this talk are derived from working with Django in the last 5 years on projects with: Daily production usage &amp; production deploys. Dozens of apps. Hundreds of models &amp; APIs. Tens of integrations working simultaneously. Teams of 5 to 10 people. Who Key takeaways from the talk: Increased productivity when developing with Django. Deeper understanding of the software development process with Django. Demo project with everything mentioned in it. The talk is great for all levels of Django knowledge - from beginners to advanced users &amp; teams. How The main way of getting the point across is going to be by showing regular code, talking how it can get messy &amp; then following up with examples of improving that code. Hopefully this talk will start a lot of discussion afterwards. Breakdown of the talk: Django service layer Fat models or fat views? Where do I put my business logic? What is a service &amp; what goes into a service? What is a selector &amp; what goes into a selector? General Django structure How many apps should I have? Structuring your code so youр team can be more productive and have less conflicts. Common modules &amp; utilities. Doing APIs with Django Rest Framework Splitting APIs in 2 groups - "giving data" and "taking data" Using a lot of generics for "give data" When do to selectors? Using no generics for "take data" (APIView + Services) Handling errors from services Inlining serializers &amp; avoiding serializers reuse A neat inline_serializer util Introducing general error formatting for your API Testing all of that - what should be &amp; not be tested? License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M27S	2727	2d	hd	false	https://i.ytimg.com/vi/yG3ZdxBb1oo/maxresdefault.jpg		9053	343	5	0	12
269	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yUuxJygQvpI	2018-08-30T21:22:35Z	2018-08-30 21:22:35	Obiamaka Agbaneje - Building a Naive Bayes Text Classifier with scikit learn	Building a Naive Bayes Text Classifier with scikit-learn [EuroPython 2018 - Talk - 2018-07-26 - PyCharm [PyData]] [Edinburgh, UK] By Obiamaka Agbaneje Machine learning algorithms used in the classification of text are Support Vector Machines, k Nearest Neighbors but the most popular algorithm to implement is Naive Bayes because of its simplicity based on Bayes Theorem. The Naive Bayes classifier is able to memorise the relationships between the training attributes and the outcome and predicts by multiplying the conditional probabilities of the attributes with the assumption that they are independent of the outcome. It is popularly used in classifying data sets that have a large number of features that are sparse or nearly independent such as text documents. In this talk, I will describe how to build a model using the Naive Bayes algorithm with the scikit-learn library using the spam/ham youtube comment dataset from the UCI repository. Preprocessing techniques such as Text normalisation and Feature extraction will be also be discussed. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M44S	1784	2d	hd	false	https://i.ytimg.com/vi/yUuxJygQvpI/maxresdefault.jpg		759	10	2	0	1
270	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ReXxO_azV-w	2018-08-22T20:16:22Z	2018-08-22 20:16:22	Yury Selivanov - Asyncio in Python 3 7 and 3 8	Asyncio in Python 3.7 and 3.8. [EuroPython 2018 - Talk - 2018-07-25 - Moorfoot] [Edinburgh, UK] By Yury Selivanov The talk is aimed to give attendees a clear picture of new asyncio features in Python 3.7 and give an idea of what to expect in Python 3.8. As a CPython core developer and the lead asyncio maintainer I believe I have a unique perspective to share with EuroPython guests. Python 3.7 boasts a number of new amazing features: sendfile start TLS new high performance buffered protocols context-local state via PEP 567 asyncio.run &amp; create_task &amp; other usability improvements many performance improvements The first part of the talk will be focusing on new APIs to explain them and give ideas how they can be used in production. The second part of the talk will be focused on what to expect to see in asyncio in Python 3.8: new performance tracking &amp; profiling API supervisors &amp; cancel scopes new timeouts API a completely new way of writing asyncio applications Some of these ideas are borrowed from Trio and Curio (two other popular async/await Python frameworks), many are borrowed from languages like Erlang and Scala. One thing I can say for certain is that 3.8 will be the biggest and most interesting asyncio release ever! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT43M47S	2627	2d	hd	false	https://i.ytimg.com/vi/ReXxO_azV-w/maxresdefault.jpg		9753	169	5	0	10
271	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	b6AcYxIxXMA	2018-08-22T20:16:22Z	2018-08-22 20:16:22	Hayley Denbraver - Recursion, Fractals, and the Python Turtle Module	Recursion, Fractals, and the Python Turtle Module [EuroPython 2018 - Talk - 2018-07-25 - Smarkets] [Edinburgh, UK] By Hayley Denbraver To understand recursion you must first understand recursion. Alternatively, you could come to a talk that will demonstrate the basics of recursion, using fractals drawn by the python turtle module! What are fractals? Fractals are psychedelic designs that appear basically the same regardless of scale. They also appear all over nature–consider how a tree trunk and branches is similar in structure to branches and twigs or how a wave is made of mini waves. Best of all, fractals can be constructed using recursive functions. What is the turtle module? It is part of the standard python library that can be used to draw amazing things and is commonly used as a tool for learning to code. Come for the recursion, stay for the amazing fractals, and leave knowing that no turtles were harmed in the making of this talk. This talk is suitable for all python enthusiasts. Those who love mathematics will love this talk. Advanced developers will learn more about a tool that can be used to teach people to code. There is something for everyone. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT18M56S	1136	2d	hd	false	https://i.ytimg.com/vi/b6AcYxIxXMA/maxresdefault.jpg		1066	20	2	0	0
272	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	d9voTkxk2lA	2018-08-22T20:16:22Z	2018-08-22 20:16:22	Michele Simionato - Python in scientific computing: what works and what doesn't	Python in scientific computing: what works and what doesn't [EuroPython 2018 - Talk - 2018-07-25 - Fintry [PyData]] [Edinburgh, UK] By Michele Simionato There is no want of technologies for doing scientific calculations in Python. In this talk I will share some hard-learned knowledge about what works and what doesn't with the libraries we are using at GEM (the Global Earthquake Model foundation). I will show how the following libraries fare with respect to our main concerns of performance, simplicity, reliability and portability and I will talk about several library bugs we found and had to work around. I will also talk about some libraries that we do not use (such as cython, numba, dask, pytables, ...) and the reason why we do not use them. Hopefully this will be useful to people using or planning to use a similar software stack. My slides are here: https://gitpitch.com/micheles/papers/europython2018 License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT37M40S	2260	2d	hd	false	https://i.ytimg.com/vi/d9voTkxk2lA/maxresdefault.jpg		468	6	1	0	1
273	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	h5tmNkyNAKs	2018-08-22T20:16:22Z	2018-08-22 20:16:22	Becky Smith - Python 2 is dead! Drag your old code into the modern age	Python 2 is dead! Drag your old code into the modern age. [EuroPython 2018 - Talk - 2018-07-25 - Smarkets] [Edinburgh, UK] By Becky Smith The clock is ticking on Python 2.7, with support to be dropped in January 2020. With major dependencies such as Django, NumPy and pandas moving to Python 3 only, the time has come for even big established codebases to consider upgrading. Many organisations are still postponing for various reasons; we will attempt to demonstrate that with a bit of planning and perseverance, and the assistance of some handy tools, we can embrace the future! This session will provide a first-hand perspective on how we upgraded a large (~65,000 lines of python code) 8-year-old Django project with multiple external dependencies from Python 2.7 to Python 3.6. We will briefly discuss the benefits of upgrading to Python 3, and architectural considerations. The session will primarily focus on the practicalities of upgrading the code itself. We will not try to provide a single “best” solution for upgrading to Python 3, but rather will introduce some of the available tools, provide an insight into how we used them, and their advantages and disadvantages from our experience. We will discuss preparatory steps and approaches, strategies for dealing with external dependencies, and “gotchas” that we encountered during the process. The aim of this session is to provide an example of how a Python 3 upgrade on an established commercial product can be successfully completed, and to furnish audience members with a set of tools and strategies to help them with their own projects. Prerequisites: basic knowledge of Python. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M16S	1756	2d	hd	false	https://i.ytimg.com/vi/h5tmNkyNAKs/maxresdefault.jpg		588	12	1	0	0
274	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jNt37Sj4ebM	2018-08-22T20:16:22Z	2018-08-22 20:16:22	Isabel Lopez - ETL pipeline to achieve reliability at scale	ETL pipeline to achieve reliability at scale [EuroPython 2018 - Talk - 2018-07-25 - Fintry [PyData]] [Edinburgh, UK] By Isabel Lopez In an online betting exchange, thousands of money related transactions are generated per minute. This data flow transforms a common and, in general, tedious task such as accounting into an interesting big data engineering problem. At Smarkets, accounting reports serve two main purposes: housekeeping of our financial operations and documentation for the relevant regulation authorities. In both cases, reliability and accuracy are crucial in the final result. The fact that these reports are generated daily, the need to cope with failure when retrieving data from previous days, and the fast growing transaction volume obsoleted the original accounting system and required a new pipeline that could scale. This talk presents the ETL pipeline designed to meet the constraints highlighted above, and explains the motivations behind the tech stack chosen for the job, which includes Python3, Luigi and Spark among others. These topics will be covered by describing the main technical problems solved with our design: - Fault tolerance and reliability, i.e ability to identify faulty steps and only rerun those instead of the whole pipeline. - Fast input/output. - Fast computations. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT24M58S	1498	2d	hd	false	https://i.ytimg.com/vi/jNt37Sj4ebM/maxresdefault.jpg		852	4	2	0	2
275	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xOyJiN3yGfU	2018-08-22T20:16:22Z	2018-08-22 20:16:22	David Beazley - Die Threads	Die Threads [EuroPython 2018 - Keynote - 2018-07-25 - Smarkets] [Edinburgh, UK] By David Beazley In the brave new world of async, threads are now a thing of the past. Or are they not? License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT49M38S	2978	2d	hd	false	https://i.ytimg.com/vi/xOyJiN3yGfU/maxresdefault.jpg		11220	221	2	0	16
276	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7c-2I3vYkhw	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Nicola Iarocci - My Story with Python and Open Source	My Story with Python and Open Source [EuroPython 2018 - Talk - 2018-07-25 - Kilsyth] [Edinburgh, UK] By Nicola Iarocci This is the story of how I (and with me, my company) went from lonely, introvert, C# developer to open-source Python author and maintainer, speaker, trainer, consultant, and all-around community junkie. With some luck, in the process, you will also hear a few hints on how to become a good open source contributor and have a chance to ponder on the pros and cons (yes there are cons too) of going full monty with open source. We will also look at what changed in my company as we slowly switched from closed, in-house eco-systems to the open source field. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M34S	2734	2d	hd	false	https://i.ytimg.com/vi/7c-2I3vYkhw/maxresdefault.jpg		278	0	0	0	0
277	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8YH9u29_3dQ	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Dimiter Naydenov - All You Need is Pandas: Unexpected Success Stories	All You Need is Pandas: Unexpected Success Stories [EuroPython 2018 - Talk - 2018-07-25 - Fintry [PyData]] [Edinburgh, UK] By Dimiter Naydenov Learning to use the awesome Pandas toolkit helped me immensely in lots of ways. Finding novel, efficient solutions to complex day-to-day problems with Pandas not only saves time, but can be fun and rewarding experience. In this talk I'll present use cases I had to solve, but the "traditional" approach proved tough and/or otherwise frustrating implement nicely. Since I was just starting to learn Pandas, decided to try an alternative solution with it. What I learned changed the way I think about data processing with Python, and it only got better since! The use cases deals with extracting pen strokes from handwritten SVG samples, and recomposing them into reusable letters and numbers. When you need to compare each stroke to all others, often more than once, resulted in inefficient, slow, and hard to maintain code. Even a naive Pandas approach with loops helped to reduce both the memory footprint, and improve the performance considerably! Improving the implementation further, vectorizing inner loops, and taking advantage of multi-index operations, I managed to get the same results, using less memory and a lot faster (by orders of magnitude). License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT22M33S	1353	2d	hd	false	https://i.ytimg.com/vi/8YH9u29_3dQ/maxresdefault.jpg		1071	9	2	0	0
278	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DDHF_OpQxMI	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Christian Heimes - SSLError, now what?	SSLError, now what? [EuroPython 2018 - Talk - 2018-07-25 - Smarkets] [Edinburgh, UK] By Christian Heimes TLS/SSL is the most important and widely-used protocol for secure and encrypted communication, e.g. HTTPS. It offers more than just encryption. TLS also ensures data integrity and strong authentication with X.509 certificates. But it provides merely a false sense of security, if you use it wrong. Have you ever encountered ssl.SSLError: [SSL: CERTIFICATE em VERIFY/ em FAILED], while connecting to a server, but you didn’t understand what is going on? Are you running production code without TLS/SSL protection or with certificate validation disabled, because you couldn’t figure out how to make it work correctly? I’ll give you the rundown of the basic cryptographic building blocks, protocol handshake, inner structure of certificates, and PKI. You’ll learn about the best practices, debugging tools and tips how to diagnose TLS/SSL and how to deal with certificates. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M16S	2656	2d	hd	false	https://i.ytimg.com/vi/DDHF_OpQxMI/maxresdefault.jpg		302	3	0	0	0
279	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DK4SwlyWm-k	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Emmanuel Leblond - Trio: A pythonic way to do async programming	Trio: A pythonic way to do async programming [EuroPython 2018 - Talk - 2018-07-25 - Lammermuir] [Edinburgh, UK] By Emmanuel Leblond Concurrent programs are super useful: think of web apps juggling lots of simultaneous downloads and websocket connections, chat bots tracking multiple concurrent conversations, or web spiders fetching pages in parallel. But writing concurrent programs is complicated, intimidating to newcomers, and often challenging even for experts. Does it have to be? Python is famous for being simple and straightforward; can Python make concurrent programming simple and straightforward too? Trio is an attempt to address this question by the positive ! By taking advantage of new Python 3 features (async/await keywords, async loops and context managers etc.) while dropping legacy concepts that older asynchronous frameworks has to maintain, Trio defines a new set of primitives that make it dramatically easier to write correct concurrent programs. In this talk, we will describe those primitives, and demonstrate how to use them to implement a basic algorithm for speeding up TCP connections. Compared to the best previous Python implementation, our version turns out to be easier to understand, more correct, and dramatically shorter. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M45S	1785	2d	hd	false	https://i.ytimg.com/vi/DK4SwlyWm-k/maxresdefault.jpg		1004	11	0	0	0
280	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FCKrfWXBPE4	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Romain Dorgueil - Using Bonobo, Airflow and Grafana to visualize your business	Using Bonobo, Airflow and Grafana to visualize your business [EuroPython 2018 - Talk - 2018-07-25 - PyCharm [PyData]] [Edinburgh, UK] By Romain Dorgueil Zero-to-one hands-on introduction to building a business dashboard using Bonobo ETL, Airflow, and a bit of Grafana (because graphs are cool). There is no need of prior knowledge about any of those tools. After a short introduction about the tools, we'll go through the following topics, using the real data of a small SaaS software: One can expect to be able to build a similar system at the end of the talk in a few days (of course, the implementation is only a small part of this process, data is what really matters). «Metrics you watch tend to improve over time» License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M21S	2721	2d	hd	false	https://i.ytimg.com/vi/FCKrfWXBPE4/maxresdefault.jpg		711	5	1	0	0
281	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	H8uVgtVv44Y	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Noam Elfanbaum - Let’s Build a Python Profiler in 25 LOC	Let’s Build a Python Profiler in 25 LOC [EuroPython 2018 - Talk - 2018-07-25 - Lammermuir] [Edinburgh, UK] By Noam Elfanbaum A profile is a set of statistics that describes how often and for how long various parts of the program executed. Most profilers run inside your Python process. If you’re inside a Python program you generally have pretty easy access to its stack, hence we can gather information about time spent in each level. In this talk we'll build a Python profiler from scratch and so learn about the dynamic nature of Python and how do well-known profilers such as cProfile. We'll also learn the difference between a tracing and a sampling profiler and which one to use in what circumstance. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M4S	1624	2d	hd	false	https://i.ytimg.com/vi/H8uVgtVv44Y/maxresdefault.jpg		354	11	0	0	0
282	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JIM1alCVZQ4	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Owen Campbell - Leadership of Technical Teams	Leadership of Technical Teams [EuroPython 2018 - Talk - 2018-07-25 - Moorfoot] [Edinburgh, UK] By Owen Campbell Over the years, I've led, and been a member of, numerous technical teams on a wide variety of projects. Based on that experience, this talk will describe my personal observations on the role of the leader in that sort of team. The talk will be in 5 sections: Introduction - A bit about my background so you can judge whether to bother staying for the rest. Authority - Where it comes from and the challenges you might face depending on the answer. Priorities - What should you be focussing upon? Style - There are many leadership styles, but what's yours and what's appropriate for technical teams? Process - What's your role in defining and managing process? There is no prior knowledge or experience required whatsoever. The talk is aimed equally at anyone considering a leadership role for the first time or who has been doing so for many years. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT34M37S	2077	2d	hd	false	https://i.ytimg.com/vi/JIM1alCVZQ4/maxresdefault.jpg		399	8	1	0	0
283	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JbZZlpEY3iA	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Jiri Benes - Reliability in distributed systems	Reliability in distributed systems [EuroPython 2018 - Talk - 2018-07-25 - Smarkets] [Edinburgh, UK] By Jiri Benes Is your system stable? Do you know what happens if any of your system's dependency will start failing? Do you even know what exactly each part of your system does or did any time in the past? Or how fast you will identify root of the problem in case your system goes down at 2am? The talk focuses on distributed systems (microservices, APIs that communicate with databases, memory, third party services, etc.), monitoring, their failures and recovery in order to help you answer yourself questions above. First part aims on importance of monitoring such systems on several levels - monitoring of hardware, application monitoring, monitoring from outside of the systems, detecting malfunctions based on anomalies within system's data flows. Second part presents several standard techniques for preventing system failure in case of outage of dependency and technique how to recover from inconsistent state after outage. Content of presentation is helpful and interesting for beginners and intermediates. Senior developers and developers working on reliable distributed systems should bear in mind content of this presentation and master shown techniques. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT42M6S	2526	2d	hd	false	https://i.ytimg.com/vi/JbZZlpEY3iA/maxresdefault.jpg		624	7	0	0	0
284	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QB59ZibEOZ0	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Anastasiia Tymoshchuk - How to develop your project from an idea to architecture design in 50 minute	How to develop your project from an idea to architecture design in 50 minutes [EuroPython 2018 - Talk - 2018-07-25 - Kilsyth] [Edinburgh, UK] By Anastasiia Tymoshchuk Have you ever asked yourself: - how and where to start developing a new project from the scratch, - how to choose main components of a new software or how to develop a new feature, - how to decide whether your project needs refactoring, - how to avoid repeating the same issues? This talk will answer all these questions. You will learn: - how to develop the idea from scratch, - how to use principles of Object Oriented Analysis and Design, - how to show amazing architecture design. You will get better understanding where and how to start, analyze and decouple the system, create a clean, clear and extendable architecture. My slides are here: https://atymo.me/projects/presentations/FromIdeaToDesign/ License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT33M25S	2005	2d	hd	false	https://i.ytimg.com/vi/QB59ZibEOZ0/maxresdefault.jpg		628	4	2	0	1
285	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	RJ5kRaBCV78	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Craig Kerstiens - Postgres at any scale	Postgres at any scale [EuroPython 2018 - Talk - 2018-07-25 - Lammermuir] [Edinburgh, UK] By Craig Kerstiens We’ll start with the basics you need to know as an app developer about interacting with your database, then dig into how you can start to analyze performance. We’ll look at things you need to know for a small application, then the things you should be cautious of as you start to layer in other items you need to be aware of for performance including: Cache hit ratio Index hit ratio Proper use of indexes Bloat Efficient joins Sharding License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT46M28S	2788	2d	hd	false	https://i.ytimg.com/vi/RJ5kRaBCV78/maxresdefault.jpg		555	13	0	0	0
286	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fcPzcooWrIY	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Peter Hoffmann - Using Pandas and Dask to work with large columnar datasets in Apache Parquet	Using Pandas and Dask to work with large columnar datasets in Apache Parquet [EuroPython 2018 - Talk - 2018-07-25 - Fintry [PyData]] [Edinburgh, UK] By Peter Hoffmann Apache Parquet Data Format Apache Parquet is a binary, efficient columnar data format. It uses various techniques to store data in a CPU and I/O efficient way like row groups, compression for pages in column chunks or dictionary encoding for columns. Index hints and statistics to quickly skip over chunks of irrelevant data enable efficient queries on large amount of data. Apache Parquet with Pandas &amp; Dask Apache Parquet files can be read into Pandas DataFrames with the two libraries fastparquet and Apache Arrow. While Pandas is mostly used to work with data that fits into memory, Apache Dask allows us to work with data larger then memory and even larger than local disk space. Data can be split up into partitions and stored in cloud object storage systems like Amazon S3 or Azure Storage. Using Metadata from the partiton filenames, parquet column statistics and dictonary filtering allows faster performance for selective queries without reading all data. This talk will show how use partitioning, row group skipping and general data layout to speed up queries on large amount of data. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT38M33S	2313	2d	hd	false	https://i.ytimg.com/vi/fcPzcooWrIY/maxresdefault.jpg		2213	33	0	0	2
287	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ih2reTLOzWI	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Elisabetta Bergamini - Bad hotel again? Find your perfect match!	Bad hotel again? Find your perfect match! [EuroPython 2018 - Talk - 2018-07-25 - PyCharm [PyData]] [Edinburgh, UK] By Elisabetta Bergamini For most travellers, online reviews play a major role when it comes to choosing which hotel to stay in. But can we actually trust a hotel review? And if yes, how can we select which are the most meaningful and interesting for us among the billions available in platforms such as Booking.com, Tripadvisor, Facebook (just to mention a few)? For 10 years now, at TrustYou we have built processes that analyze terabytes of hotel reviews at a global scale, and strive to understand what people complain about or like in the hotels worldwide. Dealing with a huge amount of reviews written in tens of different languages - each having its own subtle shades of meanings - is the challenge we work on everyday. In this talk, we will show what goes on behind the scenes of the TrustYou Metareview and dive into the technologies and the algorithms that allow us to provide travellers with all the information they need to find the perfect hotel. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M34S	1774	2d	hd	false	https://i.ytimg.com/vi/ih2reTLOzWI/maxresdefault.jpg		223	1	1	0	0
288	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jR-i5RS0Hy0	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Franziska Schropp - How do I get the job I want?	How do I get the job I want? [EuroPython 2018 - Talk - 2018-07-25 - PyCharm [PyData]] [Edinburgh, UK] By Franziska Schropp Engineers are rare, jobs are plenty, so far so good. But what if I don’t just want any job that pays the bills, but the job that will push my career and that I actually enjoy doing every day? If your answer to why you’d like to join company XY is: “Work from home and make good money”, you should not be surprised to not be taken into the next round. But what would be a good answer to that question? What should I say when asked where I see myself in 5 years? There are a lot of subtle aspects to succeeding and failing in the application process, from your initial cover letter to the on site visit meeting the team. As a tech recruiter, I’d like to share with you the best and (sometimes quite entertaining) worst practices in the application process in order to help you get the job you want! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M1S	1861	2d	hd	false	https://i.ytimg.com/vi/jR-i5RS0Hy0/maxresdefault.jpg		291	3	1	0	0
289	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tEOGJ_h0Lx0	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Doug Hellmann - reno - A New Way to Manage Release Notes	reno: A New Way to Manage Release Notes [EuroPython 2018 - Talk - 2018-07-25 - Moorfoot] [Edinburgh, UK] By Doug Hellmann reno is a tool for managing release notes in projects that support multiple branches of development, and releases, simultaneously. It solves the problem of managing release notes within patches that fix bugs, and makes it easier to cherry-pick changes between branches (allowing backports or forward ports). This talk will cover the requirements, and constraints, that led us to design and build reno. I will also show how to use it to create notes and publish them in your packages and via Sphinx-based documentation. Then I will talk about the impact reno, and the release notes publishing automation, had on our project and release processes. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M49S	1789	2d	hd	false	https://i.ytimg.com/vi/tEOGJ_h0Lx0/maxresdefault.jpg		1380	7	0	0	0
290	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	u6ZbF4apABk	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Antonio Verardi, Flavien Raynaud - How to write Rust instead of C, and get away with it yes, it's a	How to write Rust instead of C, and get away with it (yes, it's a Python talk) [EuroPython 2018 - Talk - 2018-07-25 - Lammermuir] [Edinburgh, UK] By Antonio Verardi, Flavien Raynaud Have you ever tried optimizing a super-slow Python application and thought: “Oh! I wish I could just write this bit it in Rust”? Well, turns out you can! We will show you how Rust is a better alternative than C to make your programs lightning fast, and how to get away with it; without your users even noticing. As Infrastructure Engineers at Yelp, the challenge we face everyday is: scale. Yelp is mostly a Python shop and while this is great for development velocity, our work often revolves around making Python applications run faster. Until now, we have been using different techniques: faster interpreters, or, more often, C code. Given its safety guarantees, performance and promise of better tooling than C, we decided we had to give Rust a try. The initial results helped reinforce that there was a lot of opportunity for Rust to play an important role in our production code. Yelp heavily relies on the Apache Avro (https://avro.apache.org/) serialization format for its internal infrastructure. During the talk, we will show how we implemented an Avro serialization/deserialization library in Rust, how we were able to call it from Python (and in theory from any other language) with very little code, using tools such as cbindgen (https://github.com/eqrion/cbindgen/), CFFI (https://cffi.readthedocs.io/en/latest/) and Milksnake (https://github.com/getsentry/milksnake/). This talk would outline how easy it is to write performant code in a language like Rust and call it from Python applications without users even realizing it, making this a great solution for production services. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT42M9S	2529	2d	hd	false	https://i.ytimg.com/vi/u6ZbF4apABk/maxresdefault.jpg		4680	32	7	0	1
291	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	zM3cMTcmmk0	2018-08-22T20:16:21Z	2018-08-22 20:16:21	Hrafn Eiriksson - Asyncio in production	Asyncio in production [EuroPython 2018 - Talk - 2018-07-25 - Lammermuir] [Edinburgh, UK] By Hrafn Eiriksson Much has been written about asynchronous programming in Python, especially after the introduction of asyncio into the standard library of the language. We've all seen the benchmarks that tell us how asyncio-powered web servers massively outperform their non-asyncio counterparts for trivial routes and we've seen the articles that tell us how to make the move from flask to aiohttp and why we should. Despite all of this, the question remains: How is it to use asyncio in a production setting? What are the pain points of migrating a large application to use asyncio? How does the performance of this real-world application differ after the migration? Is it still just unicorns and fairy tales? The goal of this talk is to address these questions. If you are curious about taking the step from asyncio-dabbling to creating actual mission critical software systems in asyncio; this is the talk for you! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M43S	1783	2d	hd	false	https://i.ytimg.com/vi/zM3cMTcmmk0/maxresdefault.jpg		823	20	1	0	1
292	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-8ljgLLlyZw	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Yenny Cheung - Washing away code smells	Washing away code smells [EuroPython 2018 - Talk - 2018-07-25 - Kilsyth] [Edinburgh, UK] By Yenny Cheung Does your code smell? Have a weird fragrance? It turns out code smells are a real thing and an amazing conceptualization of suboptimal design. This talk helps you identify code smells in Python. It also shows you how to wash them away by the technique of refactoring. You will learn the art of writing Pythonic, clean and maintainable code. Code smells refer to the symptoms of problematic code design. Identifying different types of code smells is the first step to successful refactoring. I will talk through some classic examples: Unnecessary long and complex code Using mutable data structures Uncommunicative naming Coupled code Knowing what to refactor, I will share a few learnings that lead to good quality code: The boy scout rule: always leave the code cleaner than you found it Pythonic data structures: Enum, Namedtuple The art of naming DRY and the separation of concerns principle I will also share tips on using refactoring at your company, which includes convincing your product manager, looking out for code smells during code reviews, and employing automatic tools. The speaker has previously presented on Talk Python To Me Podcast: https://talkpython.fm/episodes/show/150/technical-lessons-learned-from-pythonic-refactoring, and at PyCon.DE: https://www.youtube.com/watch?v=Yq9-b2JKUyU. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M41S	1901	2d	hd	false	https://i.ytimg.com/vi/-8ljgLLlyZw/maxresdefault.jpg		604	10	0	0	0
293	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-S2sVhZ92PU	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Eulalia Veny - Recipe for text analysis in social media	Recipe for text analysis in social media: [EuroPython 2018 - Talk - 2018-07-25 - PyCharm [PyData]] [Edinburgh, UK] By Eulalia Veny The analysis of text data in social media is gaining more and more importance every day. The need for companies to know what people think and want is key to invest money in providing customers what they want. The first approach to text analysis was mainly statistical, but adding linguistic information has been proven to work well for improving the results. One of the problems that you need to address when analyzing social media is time. People are constantly exchanging information, users write comments every day about what they think of a product, what they do or the places they visit. It is difficult to keep track of everything that happens. Moreover, information is sometimes expressed in short sentences, keywords, or isolated ideas, such as in Tweets. Language is usually unstructured because it is composed of isolated ideas, or without context. I will talk about the problem of text analysis in social media. I will also explain briefly Naïve Bayes classifiers, and how you can easily take advantage of them to analyse sentiment in social media, and I will use an example to show how linguistic information can help improve the results. I will also evaluate the pros and cons of supervised vs unsupervised learning. Finally, I will introduce opinion lexicons, both dictionary based and corpus-based, and how lexicons can be used in semi-supervised learning and supervised learning. If I have time left, I will explain about other use cases of text analysis. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M28S	1828	2d	hd	false	https://i.ytimg.com/vi/-S2sVhZ92PU/maxresdefault.jpg		206	2	0	0	0
294	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1AqW9-E6VCM	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Łukasz Kąkol - Pythonic code vs performance	Pythonic code vs. performance [EuroPython 2018 - Talk - 2018-07-25 - Moorfoot] [Edinburgh, UK] By Łukasz Kąkol Idiomatic Python is beautiful. If you’re new to Python, this talk is for you because I’m going to reveal the charm of python in front of you. I’ll present how boilerplate code can be replaced with idiomatic python. If you’re experienced python developer, this talk is also for you because I’ll compare the performance of the idiomatic code, both from CPU and memory point of view. Some of these results may surprise you. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M38S	2678	2d	hd	false	https://i.ytimg.com/vi/1AqW9-E6VCM/maxresdefault.jpg		629	8	3	0	0
295	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9s0AUlyIbUU	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Marco Buttu - White Mars living far away from any form of life	White Mars: living far away from any form of life [EuroPython 2018 - Keynote - 2018-07-25 - Smarkets] [Edinburgh, UK] By Marco Buttu Concordia Station is a French/Italian facility located inside Antarctica, in a plateau called Dome-C, in the middle of nowhere. A dark and cold place: no Sun from May to August, temperatures around -80 Celsius degress, no life. Here I am living and performing scientific research with other 12 collegues from Italy, France and Austria. We are the most isolated people on Earth, more than the austronauts in the International Space Station. There is no way to move from Concordia until November, and no one can come. It is like to live in another planet, and that is why the European Space Agency is interested in making bio-medical research on us, in order to better understand how the human body behaves in a such extraterrestrial environment. We will introduce our studies, describe this place and our life here, and of course also speak about Python. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT47M54S	2874	2d	hd	false	https://i.ytimg.com/vi/9s0AUlyIbUU/maxresdefault.jpg		266	2	0	0	0
296	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	G_OFsgPhtB0	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Raniere Silva, Tania Sanchez Monroy - A Jupyter Enhancement Proposal Story	A Jupyter Enhancement Proposal Story [EuroPython 2018 - Talk - 2018-07-25 - Fintry [PyData]] [Edinburgh, UK] By Raniere Silva, Tania Sanchez Monroy Python users should be familiar with the concept of Python Enhancement Proposals (PEPs), the way that the Python language evolves over time. In a similar fashion, the Jupyter project has Jupyter Enhancement Proposals (JEPs). This talk with cover the proposer first-hand experience when submiting JEP 23 - Add Template as Metatada enhancement proposal from it's beginning, during EuroPython 2017, up to its current status. We will, in addition, present efforts made as part of the OpenDreamKit project to perform Jupyter notebooks conversions using custom metadata, templates, and exporters, in a programmatic way. Outline 0:00 - 0:05 Who are we? We are impostors! 0:05 - 0:10 Our previous experience with Jupyter Notebook. We will talk about the time that Software Carpentry used Jupyter Notebook for their lesson creation and OpenDreamKit Jupyter notebook programmatic notebooks conversion. 0:10 - 0:15 You are not alone. We will talk how the idea for the Jupyter Enhancement Proposals (JEPs) borned at EuroPython 2017 Help Desk 0:15 - 0:20 Writing our first Jupyter Enhancement Proposals. We will cover our steps to create the pull request required by the Jupyter Project. 0:20 - 0:25 What is the current status of the Jupyter Enhancement Proposals? We will cover any progress from the time of this talk proposal submission and the date of it presentation. 0:25 - 0:30 Time for questions License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT21M27S	1287	2d	hd	false	https://i.ytimg.com/vi/G_OFsgPhtB0/maxresdefault.jpg		118	3	0	0	0
297	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Hy0W8tBpZu4	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Andrey Vlasovskikh - What makes coding for MicroPython different?	What makes coding for MicroPython different? [EuroPython 2018 - Talk - 2018-07-25 - Lammermuir] [Edinburgh, UK] By Andrey Vlasovskikh A microcontroller unit is a CPU, memory modules, and I/O devices on a single chip. There are tens of billions of microcontrollers in world: they are everywhere from watches to cars. Developers program them mostly in C, since their tiny hardware resources make it very hard to use higher-level langauges such as Python. In 2014 the MicroPython project was started with the goal of making it possible to program microcontrollers in Python. Was it hard to make Python work on a device with only 16 KB of RAM? Is MicroPython a Python dialect or is it a different language? I'll start with the most important optimizations and the key differences in the language implementation to give you an idea of what MicroPython really is. Most of us are not contributors to MicroPython though and it's much more important for us to understand how Python coding for microcontrollers is different from, say, web development or scripting. What do you need to learn in order to program your mictrocontroller-based IoT devices? I'll talk about several traits of Python coding for microcontrollers that make it different, but exciting to learn. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M9S	1629	2d	hd	false	https://i.ytimg.com/vi/Hy0W8tBpZu4/maxresdefault.jpg		658	18	0	0	0
298	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	I1cG1FRjFOQ	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Dan Taylor - From Zero to Azure with Python, Docker containers, and Visual Studio Code	From Zero to Azure with Python, Docker containers, and Visual Studio Code [EuroPython 2018 - Talk - 2018-07-25 - Kilsyth] [Edinburgh, UK] By Dan Taylor In this session we will walk through creating a Python web app with Docker and deploying it to Microsoft Azure using the free, cross-platform, and open-source Visual Studio Code. We will also show using hosted Jupyter notebooks in Azure Notebooks to analyze data, and storing data in CosmosDB using the Azure SDK for Python. If you're excited about Python and want to learn more about the capabilities of Azure, then this session is for you. We will cover all of the basics, no experience with Azure, containers, cloud computing, or Visual Studio Code necessary! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M16S	1816	2d	hd	false	https://i.ytimg.com/vi/I1cG1FRjFOQ/maxresdefault.jpg		2947	44	0	0	0
299	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ItcMqTR7Cds	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Florian Wilhelm - Bridging the Gap: from Data Science to Production	Bridging the Gap: from Data Science to Production [EuroPython 2018 - Talk - 2018-07-25 - PyCharm [PyData]] [Edinburgh, UK] By Florian Wilhelm A recent but quite common observation in industry is that although there is an overall high adoption of data science, many companies struggle to get it into production. Huge teams of well-payed data scientists often present one fancy model after the other to their managers but their proof of concepts never manifest into something business relevant. The frustration grows on both sides, managers and data scientists. In my talk I elaborate on the many reasons why data science to production is such a hard nut to crack. I start with a taxonomy of data use cases in order to easier assess technical requirements. Based thereon, my focus lies on overcoming the two-language-problem which is Python/R loved by data scientists vs. the enterprise-established Java/Scala. From my project experiences I present three different solutions, namely 1) migrating to a single language, 2) reimplementation and 3) usage of a framework. The advantages and disadvantages of each approach is presented and general advices based on the introduced taxonomy is given. Additionally, my talk also addresses organisational as well as problems in quality assurance and deployment. Best practices and further references are presented on a high-level in order to cover all facets of data science to production. With my talk I hope to convey the message that breakdowns on the road from data science to production are rather the rule than the exception, so you are not alone. At the end of my talk, you will have a better understanding of why your team and you are struggling and what to do about it. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT49M31S	2971	2d	hd	false	https://i.ytimg.com/vi/ItcMqTR7Cds/maxresdefault.jpg		629	10	0	0	0
300	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JNGNuiXLAcY	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Daniele Procida - The naïve programmer	The naïve programmer [EuroPython 2018 - Talk - 2018-07-25 - Kilsyth] [Edinburgh, UK] By Daniele Procida Since Picasso encountered Henri Rousseau over a century ago, modern art has been acutely aware of the value of the contributions that the naïve artist can make. Art negotiates the relationship between sophistication and naïvety with care and intelligence. What does our programming culture make of the naïve programmer? What can programming gain or learn from this encounter? The naïve programmer is simply an unsophisticated programmer. Nobody is born sophisticated. Even the most sophisticated programmers were once naïve programmers. What's more, the adoption of programming simply as a tool to solve immediate problems, by ever more people without any formal training, means that the number of naïve programmers will become greater, not less. Are we ready for this? This talk will explore the relationship, illuminating it with examples from the world of painting, art and music, and will offer some lessons that our own industry and culture should be ready to learn from. (This talk will already have been presented as a keynote at DjangoCon Europe 2018) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT43M56S	2636	2d	hd	false	https://i.ytimg.com/vi/JNGNuiXLAcY/maxresdefault.jpg		747	10	1	0	0
301	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JiikQ6Hg-Ac	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Anastasiia Tymoshchuk - Python Decorators: Gift or Poison?	Python Decorators: Gift or Poison? [EuroPython 2018 - Talk - 2018-07-25 - Kilsyth] [Edinburgh, UK] By Anastasiia Tymoshchuk Why would you ever need to use decorators in Python? Have you ever had the task when you need to use one function in few places and you really wanted to avoid of code duplicating? For example to add some logging into functions or timers, etc. Decorators in Python are super powerful with these tasks, but at the same time they are super complicated, sometimes even magical. When I started learning Python, Decorators were really like a magic: how to use them, how are they working, lots of questions. The goal is to make the things easier and clear to answer a question: to use or not to use Decorators in your project. What’s in the Talk: - Functions nature in Python - Magic of a Decorator - Basics - When to use Decorators - Examples - Even more Python magic My slides are here: https://atymo.me/projects/presentations/GiftOrPoison/ Code examples: https://github.com/atymoshchuk/python_tutorials License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M50S	1670	2d	hd	false	https://i.ytimg.com/vi/JiikQ6Hg-Ac/maxresdefault.jpg		522	2	3	0	1
302	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	KF6lU_fm_Bg	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Peter Babics - Python, Docker, Kubernetes, and beyond ?	Python, Docker, Kubernetes, and beyond ? [EuroPython 2018 - Talk - 2018-07-25 - Moorfoot] [Edinburgh, UK] By Peter Babics Have you ever tried to manage deployment of multiple python applications through various linux distributions ? If so, you must have heard of Docker and maybe also Kubernetes. Distributing python applications using docker is simple and allows to create static packages containing everything required for them to run. Also it allows to freeze everything, packages, available libraries, files on filesystem. In my speech I would like to tell you about our brief journey, of moving our trading platform from standalone application directly on host system, through deploying it in docker and latter moving it to kubernetes. I will explain our struggles with implementing stable and fast CI using Gitlab CI and Docker, image (package) storage and cleanup of old images and finally I will tell you how we are deploying our platform to kubernetes, with nothing more than yaml-s and templating. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M5S	1805	2d	hd	false	https://i.ytimg.com/vi/KF6lU_fm_Bg/maxresdefault.jpg		1065	8	1	0	0
303	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LoRq9yGeBWY	2018-08-22T20:16:20Z	2018-08-22 20:16:20	EuroPython 2018 - Opening Session	Opening session [EuroPython 2018 - - 2018-07-25 - Smarkets] [Edinburgh, UK] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT13M20S	800	2d	hd	false			5081	12	1	0	0
304	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NRAqIjXaZvw	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Cheuk Ting Ho - Fuzzy Matching Smart Way of Finding Similar Names Using Fuzzywuzzy	Fuzzy Matching - Smart Way of Finding Similar Names Using Fuzzywuzzy [EuroPython 2018 - Talk - 2018-07-25 - PyCharm [PyData]] [Edinburgh, UK] By Cheuk Ting Ho Matching strings should be one of the first natural language processing problem that human encounter since we start use computer to handle data. Unlike numerical value which has an exact logic to compare them, it is very hard to say how alike two strings are for a computer. One may compare them character by character and have an idea of how many characters in the pair of stings are the same. Unfortunately in most application we need computer to perceive strings like we do and therefore we have to use fuzzy matching. Fuzzy matching on names is never straight forward though, the definition of how “difference” of two names are really depends case by case. For example with restaurant names, matching of words like “cafe” “bar” and “restaurant” are consider less valuable then matching of some other less common words. Also, do we consider company names that matches partly (like “Happy Unicorn company” and Happy Unicorn co.”) are the same? In the first half of the talk Levenshtein Distance, a measure of the similarity between two strings, will be explained. Different functions in Fuzzywuzzy like “partial em ratio” and “token/em sort_ratio” will also be explored and compared for difference. It is very important to understand our tool and choose the right one for our task. Then in the second half, we will start tackling the example problem: matching company names, we will show that besides using Fuzzywuzzy, we have to also handle problem like finding and avoid matching of common words and speeding up the matching process by grouping the names. By combining all tricks and techniques that we demonstrate, we will also evaluate how efficient this method is and the advantage of using this method. This talk is for people in all level of Python experience who would like to learn a trick or two and would like to be able to solve similar problems in the future. Theory of how the library works will be explained and It is easy to be pick up even for beginners. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M49S	1789	2d	hd	false	https://i.ytimg.com/vi/NRAqIjXaZvw/maxresdefault.jpg		2514	21	2	0	2
305	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NoTQLb0oN-4	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Antonia Mey - How is python used in biomolecular sciences?	How is python used in biomolecular sciences? [EuroPython 2018 - Talk - 2018-07-25 - Fintry [PyData]] [Edinburgh, UK] By Antonia Mey In the last ten years scientists working on computational problems involving proteins and other small molecules have largely moved to using python when developing simulation and data analysis tools allowing for a fast prototyping and development of new ideas. One big challenge is dealing with the compatibility of different tools and using these to create very complex adaptive, yet robust workflows in order to be able to guide cutting edge experiments e.g. predicting how well a small drug like molecule can bind to a protein that could serve as a target for a new drug. The talk will give a gentle introduction to what kind of python related tools are available in the field of computational molecular biology, how they are used, and what kind of complex workflows scientist have to solve. I will then introduce BioSimSpace an open source python library and flagship project of the CCPBioSim consortium in the UK, which provides a common API to avoid having to learn many individual tools facing compatibility and dependency challenges allowing scientists to focus on the scientific question at hand and not solving programming challenges. BioSimSpace allows fast and interoperable building of workflow components (nodes) for bimolecular problems, which can easily be used on a variety of different computational resources. In particular I will introduce the cloud facilities available for fast prototyping using a Jupyter notebook interface. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M43S	1843	2d	hd	false	https://i.ytimg.com/vi/NoTQLb0oN-4/maxresdefault.jpg		402	3	0	0	0
306	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OwzcvCx4FbY	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Nick Radcliffe - Quantum Computing a Very Gentle Glimpse into a Possible Future	Quantum Computing: a Very Gentle Glimpse into a Possible Future [EuroPython 2018 - Talk - 2018-07-25 - Smarkets] [Edinburgh, UK] By Nick Radcliffe This talk will aim to demystify quantum computing and will assume no prior knowledge. The speaker, while having studied Quantum Field Theory many years ago, has only relatively recently started learning properly about Quantum Computing, and is going to try to take advantage of the fact that the ideas are relatively new to him to explain the key concepts simply, to an audience (probably) consisting mostly of non-experts in quantum computing. Key questions I will try to cover are likely to include * What is quantum mechanics anyway? * What are quantum computers? Are they real? And are they really faster/more powerful than classical computers? * What is a qubit (the quantum computing analogue of a bit) * What problems are likely to be solved well by quantum computers? * How do you program a quantum computer? * How do you get results out of a quantum computer? What kind of results are they anyway? Do you have to visit other universes to get them? * Can you get access to quantum computers online and use Python to program them (kind-of!) * Will quantum computers break all encryption? * What are Shor's and Grover's algorithms and (just possibly) how do they work? * What are the challenges with building practical quantum computers? * What is the Python story with Quantum Computing? License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M	1680	2d	hd	false	https://i.ytimg.com/vi/OwzcvCx4FbY/maxresdefault.jpg		418	8	0	0	0
307	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bSdBG7hToOg	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Anmol Krishan Sachdeva - Understanding and Implementing Recurrent Neural Networks using Python	Understanding and Implementing Recurrent Neural Networks using Python [EuroPython 2018 - Talk - 2018-07-25 - PyCharm [PyData]] [Edinburgh, UK] By Anmol Krishan Sachdeva Recurrent Neural Networks (RNNs) have become famous over time due to their property of retaining internal memory. These neural nets are widely used in recognizing patterns in sequences of data, like numerical timer series data, images, handwritten text, spoken words, genome sequences, and much more. Since these nets possess memory, there is a certain analogy that we can make to the human brain in order to learn how RNNs work. RNNs can be thought of as a network of neurons with feedback connections, unlike feedforward connections which exist in other types of Artificial Neural Networks. The flow of talk will be as follows: - Self Introduction - Introduction to Deep Learning - Artificial Neural Networks (ANNs) - Diving DEEP into Recurrent Neural Networks (RNNs) - Comparing Feedforward Networks with Feedback Networks - Quick walkthrough: Implementing RNNs using Python (Keras) - Understanding Backpropagation Through Time (BPTT) and Vanishing Gradient Problem - Towards more sophisticated RNNs: Gated Recurrent Units (GRUs)/Long Short-Term Memory (LSTMs) - End of talk - Questions and Answers Session License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT39M39S	2379	2d	hd	false	https://i.ytimg.com/vi/bSdBG7hToOg/maxresdefault.jpg		258	6	0	0	0
308	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hgPH19nBlrk	2018-08-22T20:16:20Z	2018-08-22 20:16:20	EuroPython 2018 - Lightning talks on Wednesday, July 25	Lightning talks [EuroPython 2018 - - 2018-07-25 - Smarkets] [Edinburgh, UK] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M59S	1859	2d	hd	false	https://i.ytimg.com/vi/hgPH19nBlrk/maxresdefault.jpg		343	4	1	0	0
309	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	oo0Nq44d1yQ	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Ed Singleton - Autism in development	Autism in development [EuroPython 2018 - Talk - 2018-07-25 - Moorfoot] [Edinburgh, UK] By Ed Singleton Autism is a condition that correlates with engineering. Many people in the industry are diagnosed autistic, undiagnosed autistic, or near autistic. There are many lessons that can be learned from how to deal with autistic people that are very useful in our industry. These lessons are often also useful when dealing with non-autistic people. There are many lessons on how to deal with your own autism that are useful to undiagnosed autistic people and near autistic people. We will cover the basics of autism, and related conditions. We will cover simple tricks that can make discussions and changes easier in workplaces ("10 Simple tricks to make your autistic colleagues shout less!"). We will also cover techniques you can use for dealing with your own autistic tendencies ("100 coping mechanisms to pretend that you are normal!"). I am a late diagnosis autistic person myself, and will discuss the difference between knowing and not knowing that you are autistic. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M47S	1667	2d	hd	false	https://i.ytimg.com/vi/oo0Nq44d1yQ/maxresdefault.jpg		306	10	0	0	0
310	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qH0eeh-4XE8	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Ronan Lamy - Adventures in compatibility emulating CPython's C API in PyPy	Adventures in compatibility: emulating CPython's C API in PyPy [EuroPython 2018 - Talk - 2018-07-25 - Smarkets] [Edinburgh, UK] By Ronan Lamy PyPy is a fast and compliant implementation of Python. In other words, it's an interpreter for the Python language that can act as a full replacement for the reference interpreter, CPython. It's optimised to enable efficient just-in-time compilation of Python code to machine code, and has releases matching versions 2.7, 3.5 and soon(ish) 3.6. The PyPy project also developed cffi as a clean and efficient way of interfacing with C code. However, many libraries in the Python ecosystem are implemented as C extensions, which target CPython's C API. Many others use Cython, which builds C extensions under the hood. Therefore, PyPy needs an emulation layer for the C API. This emulation needs to bridge the differences between the implementation languages and the object models of CPython and PyPy. The solution is called cpyext. It's implemented in a mixture of RPython and C, with most of the API functions and macros implemented in RPython. cpyext exposes PyObjects to the extension code that appear similar to CPython objects (as long as extension writers stay within the fuzzily defined boundaries of the public API) but are merely 'shadows' of the real PyPy objects. After a brief presentation of PyPy, its goals, and its current statuts and roadmap, this talk will dive into the vexed topic of its handling of C extensions. By the end of it, the audience should understand the operating principles of cpyext and have a clearer understanding of what happens when you install and run numpy, for instance, on top of PyPy. Some basic familiarity with CPython internals and how C extensions are made will be assumed. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M58S	1798	2d	hd	false	https://i.ytimg.com/vi/qH0eeh-4XE8/maxresdefault.jpg		525	6	1	0	0
311	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rZpZU8LHPco	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Guillem Duran - Hacking Reinforcement Learning	Hacking Reinforcement Learning [EuroPython 2018 - Talk - 2018-07-25 - Fintry [PyData]] [Edinburgh, UK] By Guillem Duran Creating huge datasets of top performing examples for Reinforcement Learning (RL) has always been tricky, but if we allow ourselves to cheat a bit it can be done very easily. During this talk, I will present a new family of algorithms that allow to efficiently generate very high quality samples for any known RL environment. This new generation of planning algorithms achieves a performance which is several orders of magnitude higher than any other existing alternative, while offering linear time complexity and good scalability. This talk will be a practical example of how we can use new tools for hacking any reinforcement learning environment, and make it generate superhuman level games. Hacking RL, as any other hacking process will be divided in four phases: During information gathering, I will briefly explain what are the main ideas behind Reinforcement Learning. I will also talk about how our theory (FractalAI) came to be, and what are the fundamental concepts behind it. We will find an attack vector against the environment API, and explain how it can be exploited. I will explain the fundamental concepts needed to build a new generation of exploits, that will allow us to have complete control over the data the environment produces. This is the time to test the new exploits and to show a proof of concept. We will exploit the attack vector to gain access to the environment. Using only a laptop I will show how it is possible to sample data which surpasses human performance way faster than real time. Once we have gained control of the environment, we will measure how well the exploits work, and how well the techniques presented can generalize to other types of environments. I want the talk to be as simple and fast as possible, with a lot of graphical examples, videos, and a Jupyter notebook. The Q&amp;A session is the time to apply some social engineering to get me to talk about the details that you find more interesting. I have prepared additional material covering the most common questions and concerns, but feel free to ask whatever you want, I love challenging questions ;) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT43M27S	2607	2d	hd	false	https://i.ytimg.com/vi/rZpZU8LHPco/maxresdefault.jpg		1128	22	1	0	4
312	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	u2kKxmb9BWs	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Almar Klein - Let’s embrace WebAssembly!	Let’s embrace WebAssembly! [EuroPython 2018 - Talk - 2018-07-25 - Lammermuir] [Edinburgh, UK] By Almar Klein WebAssembly (WASM) is an open, low level binary format designed to be compact and run at native speed, while being memory-safe. WASM is primarily intended to run code in browsers, but its by no means limited to this. This makes it an interesting intermediate language (IR); code that compiles to WASM will (in the future) run basically anywhere. In short: WASM is coming and its great! Unsurprisingly, WASM is being embraced by many communities, such as C++, Rust, Lua, and .NET. Sadly, there does not seem to be a lot of enthusiasm from the Python community yet… Perhaps this is because Python is interpreted and can therefore not (easily) use WASM as a compilation target. It should be possible to compile a Python interpreter (like CPython or Pypy) to WASM and thereby run Python code in a browser. But the result would be pretty heavy-weight, so it would arguably not be a very practical. Within the PPCI project (a pure Python compiler infrastructure) tooling has been developed to load, inspect, compile and even run WASM modules. This allows combining WASM and Python in new ways. In this talk we discuss two approaches by which the Python community might embrace WASM. Firstly, various projects already exist that compile Python functions to other languages (e.g. Numba, PScript), and we have type annotations. If Python functions would be compiled to WASM, the resulting code would run in any WASM runtime (e.g. the browser). This will be demonstrated with an example, for which the resulting code can be run either in a browser or inside Python itself. In either case, it’s pretty darn fast. Secondly, rather than em using /em WASM, it might be interesting for Python to function as a platform to em run /em and em bind /em WASM modules. Two of Python’s greater strengths are its rich ecosystem and its ability to glue things together. Let’s build on that! Imagine creating an application that consists of multiple WASM modules, perhaps compiled from different languages, and binding these together into a single Python app. This will be demonstrated with a game, which is written in Rust, compiled to WASM, and running inside a Python process. The WASM module consumes a drawing API, which is in this case provided by Python, and Python feeds the WASM module with user input. I hope that this talk inspires other Pythonistas to think about the advantages that WASM can bring to our ecosystem, and also about the role that Python can play in the growing WASM ecosystem. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M28S	1828	2d	hd	false	https://i.ytimg.com/vi/u2kKxmb9BWs/maxresdefault.jpg		3649	97	2	0	3
313	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	uSp0-TkGx3c	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Stephane Wirtel - What's new in Python 3 7	What's new in Python 3.7 [EuroPython 2018 - Talk - 2018-07-25 - Smarkets] [Edinburgh, UK] By Stephane Wirtel Scheduled for release in mid-June before the conference, Python 3.7 is shaping up to be a feature-packed release! This talk will cover all the new features of Python 3.7, including the Data Classes and the Context Variables for the asynchronous programming with asyncio. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M24S	1764	2d	hd	false	https://i.ytimg.com/vi/uSp0-TkGx3c/maxresdefault.jpg		1874	26	1	0	1
314	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ugeulM2gjvY	2018-08-22T20:16:20Z	2018-08-22 20:16:20	Steve Dower - Python on Windows is Okay, Actually	Python on Windows is Okay, Actually [EuroPython 2018 - Talk - 2018-07-25 - Moorfoot] [Edinburgh, UK] By Steve Dower Packages that won't install, encodings that don't work, installers that ask too many questions, and having to own a PC are all great reasons to just ignore Windows. Or they would be, if they were true. Despite community perception, more than half of Python usage still happens on Windows, including web development, system administration, and data science, just like on Linux and Mac. And for the most part, Python works the same regardless of what operating system you happen to be using. Still, many library developers will unnecessarily exclude half of their potential audience by not even attempting to be compatible. This session will walk through the things to be aware of when creating cross-platform libraries. From simple things like using pathlib rather than bytestrings, through to all the ways you can get builds and tests running on Windows for free, by the end of this session you will have a checklist of easy tasks for your project that will really enable the whole Python world to benefit from your work. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M40S	1720	2d	hd	false	https://i.ytimg.com/vi/ugeulM2gjvY/maxresdefault.jpg		601	11	0	0	2
315	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7uSjCp1wOrw	2018-07-27T18:49:48Z	2018-07-27 18:49:48	Live Stream - Friday, 27 July 2018 - Smarkets - Pentland Auditorium - EuroPython 2018		28	Science & Technology	PT9H53M33S	3213	2d	hd	false			1678	18	0	0	1
316	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6Wurg6JbL3E	2018-07-27T16:38:28Z	2018-07-27 16:38:28	Live Stream - Friday, 27 July 2018 - Fintry [PyData] - Fintry Auditorium - EuroPython 2018		28	Science & Technology	PT6H12M38S	758	2d	hd	false			449	1	0	0	0
317	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SDiLvJ_h0zA	2018-07-27T16:30:02Z	2018-07-27 16:30:02	Live Stream - Friday, 27 July 2018 - Lammermuir Auditorium - EuroPython 2018		28	Science & Technology	PT6H7M18S	438	2d	hd	false			350	5	0	0	0
318	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4Wr31kp6Hgg	2018-07-27T16:24:26Z	2018-07-27 16:24:26	Live Stream - Friday, 27 July 2018 - Moorfoot Auditorium - EuroPython 2018		28	Science & Technology	PT6H6M36S	396	2d	hd	false			570	4	0	0	0
319	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SnlIqq-7XKU	2018-07-27T16:22:57Z	2018-07-27 16:22:57	Live Stream - Friday, 27 July 2018 - Kilsyth Auditorium - EuroPython 2018		28	Science & Technology	PT6H2M37S	157	2d	hd	false			302	3	0	0	0
320	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	x5tcYO-SVnc	2018-07-27T16:19:14Z	2018-07-27 16:19:14	Live Stream - Friday, 27 July 2018 - PyCharm [PyData] - Sidlaw Auditorium - EuroPython 2018		28	Science & Technology	PT6H2M50S	170	2d	hd	false			579	3	0	0	0
321	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Rps9lHflkCg	2018-07-26T18:51:46Z	2018-07-26 18:51:46	Live Stream - Thursday, 26 July 2018 - Smarkets - Pentland Auditorium - EuroPython 2018		28	Science & Technology	PT9H42M7S	2527	2d	hd	false			2012	28	1	0	0
322	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8E0VDH_UKuA	2018-07-26T17:15:52Z	2018-07-26 17:15:52	Live Stream - Thursday, 26 July 2018 - Lammermuir Auditorium - EuroPython 2018		28	Science & Technology	PT6H10M46S	646	2d	hd	false			651	2	0	0	0
323	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Uw717sejn5c	2018-07-26T17:14:42Z	2018-07-26 17:14:42	Live Stream - Thursday, 26 July 2018 - Moorfoot Auditorium - EuroPython 2018		28	Science & Technology	PT6H21M34S	1294	2d	hd	false			659	5	0	0	0
324	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tG22jrVFKpM	2018-07-26T17:14:18Z	2018-07-26 17:14:18	Live Stream - Thursday, 26 July 2018 - PyCharm [PyData] - Sidlaw Auditorium - EuroPython 2018		28	Science & Technology	PT6H18M22S	1102	2d	hd	false			534	4	0	0	0
325	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nDY82RGU2Xk	2018-07-26T17:13:24Z	2018-07-26 17:13:24	Live Stream - Thursday, 26 July 2018 - Fintry [PyData] - Fintry Auditorium - EuroPython 2018		28	Science & Technology	PT6H14M23S	863	2d	hd	false			474	3	0	0	0
326	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QNUjpdpAOac	2018-07-26T17:11:06Z	2018-07-26 17:11:06	Live Stream - Thursday, 26 July 2018 - Kilsyth Auditorium - EuroPython 2018		28	Science & Technology	PT6H14M59S	899	2d	hd	false			559	10	0	0	1
327	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sm5HcO8vuIQ	2018-07-26T08:02:44Z	2018-07-26 08:02:44	EuroPython 2018 - Thank you, Guido	Hi Guido, here's a message from the EuroPython 2018 Attendees for you ... all the best from all of us! #EuroPython #Python #GuidoVanRossum	28	Science & Technology	PT46S	46	2d	hd	false	https://i.ytimg.com/vi/sm5HcO8vuIQ/maxresdefault.jpg		735	19	0	0	1
328	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FsvmT2Ir7B8	2018-07-25T18:53:07Z	2018-07-25 18:53:07	Live Stream - Wednesday, 25 July 2018 - Smarkets - Pentland Auditorium - EuroPython 2018		28	Science & Technology	PT9H20M36S	1236	2d	hd	false			3528	40	3	0	3
329	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qRqDgJLM568	2018-07-25T16:44:55Z	2018-07-25 16:44:55	Live Stream - Wednesday, 25 July 2018 - Lammermuir Auditorium - EuroPython 2018		28	Science & Technology	PT6H7M27S	447	2d	hd	false			812	7	1	0	2
330	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XRKPOtbU6UE	2018-07-25T16:36:58Z	2018-07-25 16:36:58	Live Stream - Wednesday, 25 July 2018 - PyCharm [PyData] - Sidlaw Auditorium - EuroPython 2018		28	Science & Technology	PT6H11M14S	674	2d	hd	false			858	5	1	0	0
331	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dj23vLcdr4w	2018-07-25T16:36:29Z	2018-07-25 16:36:29	Live Stream - Wednesday, 25 July 2018 - Fintry [PyData] - Fintry Auditorium - EuroPython 2018		28	Science & Technology	PT6H9M10S	550	2d	hd	false			769	11	4	0	0
332	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9YCWftNyzjU	2018-07-25T16:26:17Z	2018-07-25 16:26:17	Live Stream - Wednesday, 25 July 2018 - Kilsyth Auditorium - EuroPython 2018		28	Science & Technology	PT6H19M12S	1152	2d	hd	false			589	3	0	0	1
333	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	w-XECcIWnlQ	2018-07-25T16:23:59Z	2018-07-25 16:23:59	Live Stream - Wednesday, 25 July 2018 - Moorfoot Auditorium - EuroPython 2018		28	Science & Technology	PT6H20M5S	1205	2d	hd	false			938	14	2	0	0
334	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nfi0hX-F8Zo	2017-10-28T13:12:03Z	2017-10-28 13:12:03	Angela Branaes - Building a full-stack web application with Python, NPM, Webpack and React	"Building a full-stack web application with Python, NPM, Webpack and React [EuroPython 2017 - Talk - 2017-07-10 - Anfiteatro 1] [Rimini, Italy] Creating full-stack applications with Python, NodeJS and React can seem daunting at first. Having made many variations of these, I will show you the ropes, so you too can discover that it is in fact easy to get going. In this talk you will learn to create a full-stack web application in Python, with a Nodejs and React front-end. I will provide you with an easy-to- follow walkthrough of the process, and you’ll exit this talk feeling confident that you can now create your own full-stack web application. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M49S	1909	2d	hd	false	https://i.ytimg.com/vi/nfi0hX-F8Zo/maxresdefault.jpg		8732	135	9	0	12
335	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sAvOZlbh9mQ	2017-10-28T13:12:03Z	2017-10-28 13:12:03	Elizaveta Shashkova - Debugging in Python 3.6: Better, Faster, Stronger	"Debugging in Python 3.6: Better, Faster, Stronger [EuroPython 2017 - Talk - 2017-07-10 - Anfiteatro 1] [Rimini, Italy] Python 3.6 was released in December of 2016 and it has a lot of new cool features. Some of them are quite easy for using: a developer can read, for example, about f-strings and they can start using them in their programs as soon as possible. But sometimes features are not so evident, and a new frame evaluation API is one of them. The new frame evaluation API was introduced to CPython in PEP 523 and it allows to specify a per-interpreter function pointer to handle the evaluation of frames. It might not be evident how to use this new feature in everyday life, but it’s quite easy to understand how to build a fast debugger based on it. In this talk we are going to explain how standard way of debugging in Python works and how a new frame evaluation API may be useful for creating the fast debugger. Also we will consider why such fast debugging was not possible in the previous versions of Python. If someone hasn’t made a final decision to move to Python 3.6 this talk will provide some new reasons to do it. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M7S	1687	2d	hd	false	https://i.ytimg.com/vi/sAvOZlbh9mQ/maxresdefault.jpg		1343	30	2	0	0
336	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Iku1zZFRogc	2017-10-28T13:12:02Z	2017-10-28 13:12:02	Enrico Carbognani - A robotic platform for natural and effective human-robot interaction	"A robotic platform for natural and effective human-robot interaction [EuroPython 2017 - Talk - 2017-07-14 - Anfiteatro 1] [Rimini, Italy] This talk deals with the usage of artificial intelligent techniques in humanoid robotics. The focus is on human–robot interaction with the goal of building a robotic platform which embodiments are able to interact in natural and effective way with humans through speech, gestures, and facial expressions. The system is fully implemented in Python and based on the Robotic Operating System (ROS). The talk will describe the hardware and software configuration of our currently NAO based humanoid platform. The strategy has been to use available high level Python libraries for spoken language processing, sentiment analysis, vision, interfacing with Artificial Intelligence applications in order to provide current edge technologies performances. The overall system architecture is based on finite state machines nodes interacting via the ROS communication layer. The main fields of applications that the platform is targeting are: - Entertainment - Education - Field robotics - Home and companion robotics - Hospitality - Robot Assisted Therapy (RAT) We will present the latest status of the platform together with a NAO based demo. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M12S	2712	2d	hd	false	https://i.ytimg.com/vi/Iku1zZFRogc/maxresdefault.jpg		234	4	0	0	1
337	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	S7uUEwICDcc	2017-10-28T13:12:02Z	2017-10-28 13:12:02	Thomas Kluyver - Jupyter notebooks for teaching and learning	"Jupyter notebooks for teaching and learning [EuroPython 2017 - Talk - 2017-07-10 - Anfiteatro 1] [Rimini, Italy] The Jupyter Notebook (formerly IPython Notebook) has been used to support learning in different scenarios, including taught courses, self-directed learning and reference material such as software documentation. People have used it to learn how to program, and to learn about diverse subjects where computer code is important to human understanding. The aim of this talk is to dive into where and how notebooks can be used most effectively for education. I will first describe notebook-based learning material created by a variety of people for different purposes, deliberately taking a broad definition of ‘education’, along with my own experiences using notebooks to teach Software Carpentry sessions and conference tutorials. I’ll pull out both strengths and limitations of notebooks as an educational tool to explore how they can be used most effectively. In the second part of the talk, I’ll talk about several extra software tools which can make the notebook more valuable in educational settings, including Jupyterhub, with which a teacher can provide notebook servers for a group of students, nbgrader, which allows notebooks to be used as assignments, and cite2c, which can insert academic citations into notebooks. I’ll also touch on commercial offerings integrating the notebook, such as SageMathCloud. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT34M54S	2094	2d	hd	false	https://i.ytimg.com/vi/S7uUEwICDcc/maxresdefault.jpg		2223	20	3	0	0
338	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sU_elBu36J4	2017-10-28T13:12:02Z	2017-10-28 13:12:02	Justin Mayer - Replacing passwords with multiple factors: email, OTP, and hardware keys	"Replacing passwords with multiple factors: email, OTP, and hardware keys [EuroPython 2017 - Talk - 2017-07-10 - Anfiteatro 1] [Rimini, Italy] Passwords have formed the cornerstone of I.T. system authentication for decades, but recent high-profile breaches have underscored the risks of password-based authentication systems. The good news is that we can replace passwords with other factors: email-based authentication one-time passwords (OTP) hardware keys (Yubikeys/U2F, etc.) These factors can be used independently or in conjunction with one another to provide vastly greater security than the traditional username-plus-password combination. Attendees of this talk will walk away with a detailed understanding of: why the traditional username-plus-password combination is failing us why email-based authentication provides no less security overview of one-time passwords and TOTP how to store/retrieve OTP codes, including password manager support state of hardware keys in general, and FIDO U2F standard in particular Attendees will learn how to implement these multi-factor authentication methods in their own Python-based web applications, with primary focus on methods for integrating email-based authentication, one-time passwords, and U2F hardware keys into Django-based projects. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT48M28S	2908	2d	hd	false	https://i.ytimg.com/vi/sU_elBu36J4/maxresdefault.jpg		421	9	1	0	2
339	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9Ys4gCUtTh8	2017-10-28T13:07:05Z	2017-10-28 13:07:05	Radoslav Georgiev - Practical Debugging - Tips, Tricks and Ways to think	"Practical Debugging - Tips, Tricks and Ways to think [EuroPython 2017 - Talk - 2017-07-14 - Arengo] [Rimini, Italy] When we write code, oftentimes things are not working as expected. We followed the tutorial and yet we got an error. We introduce a new feature but something else broke. Having to deal with bugs is inevitable. Trying to ""debug"" what happened or what caused the problem can be really frustrating and timewasting. The aim of this talk is go give ways to think &amp; steps to take when we are faced with the process of debugging. The language for the examples is going to be Python &amp; the tools used - from the python ecosystem. The talk will be practical, with a lot of real-world examples. The goal is to cover the following scenarios by showing different ways to approch the problem: You followed a tutorial but it's not working. What to do? You introduce new feature but things broke somewhere else in the project. What to do? You are using a popular 3rd party library but something breaks. What to do? A bug occurs and you have no idea what or who caused it. What to do? You can't fix or find the bug. What now? You want to generalize your debugging skills. How to do that? We will be talking about critical changes, binary search, problem isolation, interactive debuggers, printing, testing, greping and other interesting things. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT40M25S	2425	2d	hd	false	https://i.ytimg.com/vi/9Ys4gCUtTh8/maxresdefault.jpg		425	16	2	0	0
340	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Fy611BorGTc	2017-10-28T13:07:05Z	2017-10-28 13:07:05	Nicolle Cysneiros - Graph Databases: Talking about your Data Relationships with Python	"Graph Databases: Talking about your Data Relationships with Python [EuroPython 2017 - Talk - 2017-07-14 - PyCharm Room] [Rimini, Italy] Have you ever considered how many relationships you have in your virtual life? Every friend or page liked on Facebook, each connection in LinkedIn or Twitter account followed is a new relationship not only between two people, but also between their data. In Brazil only, we have 160 millions Facebook users. How can we represent and manipulate all these relationships? Graph Databases are storage systems that use graph structure (nodes and edges) to represent and store data in a semantic way. This talk will begin approaching the challenge in representing relationships in Relational Databases and introducing a more friendly solution using graph. The definition of Graph Database, its pros and cons and some available tools (Neo4J, OrientDB and TitanDB) will be shown during the presentation, as well as how these tools can be integrated with Python. Outline: Relationships Relationships in Relational Databases Graph Definition Graph approach to represent relationships Graph Databases Definition Advantages Neo4J Usage Examples Integration with Python Comparison between Graph Databases Comparison between Neo4J and Relational Database Applications License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT47M26S	2846	2d	hd	false	https://i.ytimg.com/vi/Fy611BorGTc/maxresdefault.jpg		773	9	2	0	1
341	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IUmMj87Hwoc	2017-10-28T13:07:05Z	2017-10-28 13:07:05	EuroPython 2017 - Closing Session	Closing Session [EuroPython 2017 - - 2017-07-14 - Anfiteatro 2] [Rimini, Italy] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT20M21S	1221	2d	hd	false	https://i.ytimg.com/vi/IUmMj87Hwoc/maxresdefault.jpg		102	0	0	0	0
342	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	O-kFijWlO28	2017-10-28T13:07:05Z	2017-10-28 13:07:05	Emma Gordon - Python Bee	"Python Bee [EuroPython 2017 - Interactive session - 2017-07-14 - PythonAnywhere Room] [Rimini, Italy] Thought up in 2009 by a group of MIT students who entered the Python bee into a competition for “bad ideas”, a Python bee is like a spelling bee for programmers. Instead of spelling words, participants are given functions to write and must spell them out loud - one character at a time, without looking at the code that they're writing! Players must spell valid Python and every character counts, including symbols and whitespace. And the twist for the second round (credit for this one goes to dropboxblogs): You're now allowed to look at the code, but... you must now team up with other programmers, entering alternate characters without being allowed to communicate via any other means. In order for everyone to be able to have a go, we'll split up into small groups to play - for those that want to be competitive, we'll use a scoring system so that we can still declare an overall champion. You're very welcome to come along just to have fun though! TL;DR - a fun hour of slightly ridiculous programming games :) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT1H52S	52	2d	hd	false	https://i.ytimg.com/vi/O-kFijWlO28/maxresdefault.jpg		227	1	0	0	0
343	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PKbNOivGJbQ	2017-10-28T13:07:05Z	2017-10-28 13:07:05	Magdalena Rother - Writing Awesome PyPI packages in Python	"Writing Awesome PyPI packages in Python [EuroPython 2017 - Talk - 2017-07-14 - PyCharm Room] [Rimini, Italy] One of the strengths of the Python programming language is the huge base of Open Source libraries. The PyPI (Python Package Index) repository provides currently 105,917 packages, many of them developed actively by contributors. This talk is a tour through various tools and practices, which help to keep your package in a good state for your users and make it easier for other developers to contribute. One can find these practices in projects of different size, such as Django (24,244 commits, 1,397 contributors) Pandas (15,005 commits, 754 contributors) and Faker (20 commits, 3 contributors). Some things to consider when creating your own package: using a Makefile for automatic testing, coverage analysis and environment setup. structuring your .gitignore file. using pyenv and .python-version for Python version management. using tox to ascertain that code is working in different environments. squashing different configuration files to a single setup.cfg file. using EditorConfig and .editorconfig to automatically set project coding standards in the editor. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT24M44S	1484	2d	hd	false	https://i.ytimg.com/vi/PKbNOivGJbQ/maxresdefault.jpg		312	3	0	0	0
344	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	U8JO7QUxvyQ	2017-10-28T13:07:05Z	2017-10-28 13:07:05	Wilhelm Van Der Walt - Lessons learnt building a medical chatbot in Python	"Lessons learnt building a medical chatbot in Python [EuroPython 2017 - Talk - 2017-07-14 - Anfiteatro 2] [Rimini, Italy] ""To put an accessible and affordable health service in the hands of every person on earth."" Thats our mission at babylon. Leveraging the powers of AI, python and micro services we took a step towards that vision by building a medical chatbot that we shipped in November last year. In this talk I would like to share with you all the things we learnt in the process. This talk is our story. Its a story that starts with an idea and meanders through the dark and dangerous land of things like Graph databases, machine learning and async programming in python. The story is far from over, but we have come to a point where we would like to reflect and share with the community all that we have learnt. More specifically I will cover: - Architecture decisions we made and why we made them - lessons learnt doing async in python at scale - testing chatbots - clinical governance and safety (literally 2 sentences, I promise) - The drawbacks of REST - Why I am glad we did most of it in Python And then of course some time for questions at the end :) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M15S	2655	2d	hd	false	https://i.ytimg.com/vi/U8JO7QUxvyQ/maxresdefault.jpg		880	10	0	0	0
345	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Zkn_knMZAlo	2017-10-28T13:07:05Z	2017-10-28 13:07:05	Maximilian Scholz - Linespots: Predicting Bugs in your Code	"Linespots: Predicting Bugs in your Code [EuroPython 2017 - Talk - 2017-07-14 - Arengo] [Rimini, Italy] In times of increased awareness of technical debts, reviewing and auditing code becomes more important. The main problem with code review is the amount of time that is being spent searching the needle in the haystack. You just don’t know what you are looking for and where to find it. One possible solution to the problem to the idea of bug prediction. If we could somehow know where bugs are in our code, focusing reviewing efforts on that area should, in theory, increase the effectiveness of our review. More bugs should be uncovered while less time is spent reviewing. This is what Linespots tries to offer. It is an algorithm developed during my thesis that analyses a project’s history and calculates a probability value for each line of code in the project, representing the likeliness of a bug existing in that line. Using the probabilities, reviewers can focus on the areas that are at a higher risk of containing bugs and spend less time on robust code. The research done so far showed, that by analyzing 0.5% lines of code with the highest risk values in a project, an average of 50% of the bugs fixed in the next 150 commits were correctly predicted by Linespots. This is an improvement by factor 10 compared to Bugspots, an algorithm developed at Google, which Linespots is based upon. Outline: Basics and functionality of Linespots Research results Pros and cons of Linespots Results of a case study License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT25M56S	1556	2d	hd	false	https://i.ytimg.com/vi/Zkn_knMZAlo/maxresdefault.jpg		224	3	1	0	0
346	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lEaUVGi1iKk	2017-10-28T13:07:05Z	2017-10-28 13:07:05	Marwan Al-Sabbagh - Executing scripts in a few milliseconds with MicroPython	"Executing scripts in a few milliseconds with MicroPython [EuroPython 2017 - Talk - 2017-07-14 - Arengo] [Rimini, Italy] Command execution time can become important in a number of applications. Commands executed in command-line completion need to execute in less then 100ms or users will perceive a delay. In Shell scripting one might want to execute commands repeatedly in a for loop and fast execution times makes this more feasible. Python is a very powerful language but has a much slower startup time compared to other interpreted languages like Perl, Lua and Bash. It can take up to 10 times longer to startup then some of these other languages. MicroPython was written as a lean implementation of Python 3 with a small subset of the standard library mainly intended to run on microcontrollers. But it happily runs on Unix systems with excellent startup performance, making it an ideal candidate for implementing certain time sensitive commands. This talk will: Explain when achieving fast execution times matters and when it doesn’t. Present two different approaches to measuring command execution time, one simple and the other more detailed and accurate. Compare execution times of a simple set of scripts that add two numbers in an number of different interpreted languages (micropython, python3, awk, perl, lua, bash). Present an example use case of MicroPython on Unix. Bash completion for pip install that completes the names of available packages live from a remote pypi mirror. Demonstrate the auto completion script with pip on a local pypi mirror. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT33M37S	2017	2d	hd	false	https://i.ytimg.com/vi/lEaUVGi1iKk/maxresdefault.jpg		1349	33	0	0	4
347	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nJi2KKvD-PU	2017-10-28T13:07:05Z	2017-10-28 13:07:05	Ben Nuttall - Physical computing with Raspberry Pi and Python	"Physical computing with Raspberry Pi and Python [EuroPython 2017 - Talk - 2017-07-14 - PythonAnywhere Room] [Rimini, Italy] The Raspberry Pi Foundation is working to put the power of digital making in the hands of people all over the world, and is well known for its series of small, cheap single board computers. The Raspberry Pi runs a well supported Linux distro based on Debian, which ships with a variety of programming tools and educational software. Python is the main supported language on the platform, used in many educational resources, and many Python libraries exist for making the most of the Pi platform with other devices. I will cover: Raspberry Pi Foundation mission Raspberry Pi hardware specs Raspbian desktop GPIO pins GPIO Zero (Python library) Picamera Astro Pi (ESA space mission) &amp; Sense HAT More HATs Pi projects Raspberry Pi community License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT46M28S	2788	2d	hd	false	https://i.ytimg.com/vi/nJi2KKvD-PU/maxresdefault.jpg		1021	17	0	0	2
348	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qTHkNkgFJeg	2017-10-28T13:07:05Z	2017-10-28 13:07:05	Fergal Walsh - Rethinking how we build HTTP APIs	"Rethinking how we build HTTP APIs [EuroPython 2017 - Talk - 2017-07-14 - PyCharm Room] [Rimini, Italy] Rethinking how we build HTTP APIs The Python universe is overflowing with web frameworks, from full featured batteries included frameworks like Django to micro frameworks like Bottle or Flask. They each have their own specific features but in the end they are all very similar in their core functionality of processing requests and generating responses. In this talk I will discuss why I felt the need to create yet another framework, a pico framework, that specifically focuses on the task of building HTTP based APIs for the web. Pico, as it is aptly called, doesn't do templating, ORM, custom routing, authentication, validation, caching, or a million other things. Instead it helps you write clean APIs using simple functions and modules with minimal boilerplate. Pico is both opinionated and flexible in equal measures so you can focus on what matters; your API logic. Pico helps you to write code that that is simple to get started, trivial to test, and easy to maintain as your project grows. APIs built with Pico are self describing so client code can automatically/dynamically be created. Pico includes both a Python &amp; Javascript client but it is also very simple to interact with your API with plain old cURL/Requests/jQuery/etc. It is just a HTTP API after all. Having recently released Pico 2.0, this talk will outline the evolution of this framework over the past 7 years and discuss some lessons learnt along the way about building HTTP APIs and frameworks. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT40M39S	2439	2d	hd	false	https://i.ytimg.com/vi/qTHkNkgFJeg/maxresdefault.jpg		469	8	0	0	0
349	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xgyGcOKsFgY	2017-10-28T13:07:05Z	2017-10-28 13:07:05	Antonio Del Mastro - Space weather monitoring for a virtual reality simulation	"Space weather monitoring for a virtual reality simulation of a Martian settlment [EuroPython 2017 - Talk - 2017-07-14 - PyCharm Room] [Rimini, Italy] High-energy particles accelerated by the Sun during Coronal Mass Ejections (CME) are a major concern for a manned mission to Mars. On Earth surface, these particles are shielded by the Earth magnetic field. In space and on the Martian surface, where such shielding is absent or much weaker, CME pose a radiation hazard to the health of astronauts. The development of tools to understand and forecast the interplanetary space weather is a requirement for future manned space missions in order to properly protect the astronauts from the radiation environment. A variety of methods are currently developed by the scientific community and a number of public tools for space weather monitoring and forecast is already available online. We present a Python-based tool which takes advantage of two publicly accessible space weather web portals. Our software combines the forecast of CME and a real-time propagation model of energetic particles throughout the inner Solar System and the Martian atmosphere. It consistently recovers real-time relevant information and provides with days-to-hours forecasts for the radiation dose astronauts on Mars would be exposed to. The system raises an alert signal when the radiation dose exceeds the security levels defined by the main space agencies adopted as a reference. Our tool is meant to be integrated in a virtual reality simulation of a human settlement on the surface of Mars (Mars City Project www.mars-city.org). Prerequisite: Intermediate knowledge. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT24M3S	1443	2d	hd	false	https://i.ytimg.com/vi/xgyGcOKsFgY/maxresdefault.jpg		376	2	0	0	0
350	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	za46X_TRjwc	2017-10-28T13:07:05Z	2017-10-28 13:07:05	Mark Shannon - Finding bugs for free: The magic of static analysis.	"Finding bugs for free: The magic of static analysis. [EuroPython 2017 - Talk - 2017-07-14 - Arengo] [Rimini, Italy] Overview Static analysis is a powerful technique for improving the quality of software. It allows you to find bugs in your Python code without any the need for any annotations. At lgtm.com we provide state-of-the-art static analysis for a number of languages including Python. Our Python analysis can find bugs without the annoyance of many false positives. We have already found bugs in the standard library, requests, numpy and many others. In this talk I will briefly describe what static analysis is, how it can be useful to you, and then give an overview of the techniques we use. Intended Audience This talk is aimed at all Python developers, although I expect that those who have used pyflakes, pep8, pylint or mypy in the past will find it the most accessible. I hope that this talk will inspire developers to start using static analysis tools (hopefully ours) and to produce better code as a result. I will assume that the audience knows Python well, but knows little or nothing about static analysis. (lgtm.com is a commercial project that is free to use for open-source software) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT40M20S	2420	2d	hd	false	https://i.ytimg.com/vi/za46X_TRjwc/maxresdefault.jpg		585	4	0	0	0
351	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	02BnRq8H1rM	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Alejandro Solano - Introduction to TensorFlow	"Introduction to TensorFlow [EuroPython 2017 - Talk - 2017-07-14 - Anfiteatro 1] [Rimini, Italy] Deep learning is at its peak, with scholars and startups releasing new amazing applications every other week, and TensorFlow is the main tool to work with it. However, Tensorflow it's not an easy-access library for beginners in the field. In this talk, we will cover the explanation of core concepts of deep learning and TensorFlow totally from scratch, using simple examples and friendly visualizations. The talk will go through the next topics: • Why deep learning and what is it? • The main tool for deep learning: TensorFlow • Installation of TensorFlow • Core concepts of TensorFlow: Graph and Session • Hello world! • Step by step example: learning how to sum • Core concepts of Deep Learning: Neural network • Core concepts of Deep Learning: Loss function and Gradient descent By the end of this talk, the hope is that you will have gained the basic concepts involving deep learning and that you could build and run your own neural networks using TensorFlow. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT26M37S	1597	2d	hd	false	https://i.ytimg.com/vi/02BnRq8H1rM/maxresdefault.jpg		503	11	2	0	0
352	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7e_dmcKKQAM	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Uzi Halaby Senerman - Pandas - not just for data scientists	"Pandas - not just for data scientists [EuroPython 2017 - Talk - 2017-07-14 - Anfiteatro 1] [Rimini, Italy] This is not a tutorial. It's an attempt to expose non data scientists experienced pythonistas to the powerful pandas library. Most of python developers don't use pandas (either because they never heard of it, felt that it's a too steep learning curve or never thought that it will be useful for them). I intend to talk about python performance limitations and show how pandas can be used to overcome some of these limitations. The talk will be accompanied by a live Jupiter Notebook session that will demonstrate a typical use of pandas. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT32M23S	1943	2d	hd	false	https://i.ytimg.com/vi/7e_dmcKKQAM/maxresdefault.jpg		435	6	0	0	1
353	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ChTeBV9spkQ	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Anders Lehmann - Modelling pollution from traffic, using Smartphone data and Python	"Modelling pollution from traffic, using Smartphone data and Python [EuroPython 2017 - Talk - 2017-07-14 - Anfiteatro 1] [Rimini, Italy] The talk presents results from my PhD project on models for transportation related pollution. Pollution from personal transport in Cities is a big and growing problem. By monitoring the flow, and congestion in the transport system two goals can be achieved. First, the adherence to agreed limit values (or breaking said limits) can be followed and used to decrease health effects of local pollution hotspots. Secondly, monitoring of the total emission of climate forcing gases from transportation, is important for designing climate mitigation actions. Python is used in combination with other tools to convert sensor data from smartphones, into pollution concentrations in urban settings. To mitigate the lack of complete data coverage, the missing data is simulated by a traffic model, to locate congestion and model the traffic related pollution concentration. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT33M19S	1999	2d	hd	false	https://i.ytimg.com/vi/ChTeBV9spkQ/maxresdefault.jpg		598	7	0	0	0
354	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	EYdHwSUckJA	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Abhishek Sharma - Pythonist view on Microservices & Containerization	"Pythonist view on Microservices & Containerization [EuroPython 2017 - Talk - 2017-07-14 - Arengo] [Rimini, Italy] Microservices architecture and containerization are words thrown around when we talk about designing systems that are loosely coupled, although it may sound like buzz words but these key concepts play a very important part in system as a whole. In this talk, we will cover how microservices can be implemented in python using available open source frameworks and how it can be deployed independently to scale and perform in production environment. I'll also share several use-cases where it is worth planning and developing system architecture considering microservices/containerization and will also discuss some trade-off of having such architecture. Outline: Overview of microservices Implementing microservices using Python Advantages of microservices over Monolithic / SoA architecture Overview of containerization How to containerize Python based services (Docker) Advantages of microservices/containerization over traditional deployment CI/CD Approach in microservices and containerization Usecases where to use microservices Trade-off of using microservices License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M41S	1781	2d	hd	false	https://i.ytimg.com/vi/EYdHwSUckJA/maxresdefault.jpg		178	4	1	0	0
355	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	L2BEIhfwZgg	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Daniele Procida, Aisha Bello - The Encounter: Python’s adventures in Africa	"The Encounter: Python’s adventures in Africa [EuroPython 2017 - Keynote - 2017-07-14 - Anfiteatro 2] [Rimini, Italy] A genuine encounter changes both parties. In this talk Daniele and Aisha will report on the dialogue opened up by recent PyCons and other Python events in Africa. They’ll discuss Python’s impact in countries including Namibia, Nigeria and Zimbabwe, and what open-source software means for Africa at large - and what the encounter means for Python too. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT56M49S	3409	2d	hd	false	https://i.ytimg.com/vi/L2BEIhfwZgg/maxresdefault.jpg		157	1	0	0	0
356	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	M3dmJBaYCAY	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Lightning Talks - 2017-07-14	Lightning Talks [EuroPython 2017 - - 2017-07-14 - Anfiteatro 2] [Rimini, Italy] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT58M41S	3521	2d	hd	false	https://i.ytimg.com/vi/M3dmJBaYCAY/maxresdefault.jpg		92	0	1	0	0
357	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NNmyVqhgs_M	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Mark Smith - Pythonic Refactoring: Protecting Your Users From Change	"Pythonic Refactoring: Protecting Your Users From Change [EuroPython 2017 - Talk - 2017-07-14 - PythonAnywhere Room] [Rimini, Italy] So you've released a library! Now you need to maintain it. You want to add features, restructure the code, fix bugs, and maybe improve the library's usability. Your users just want their code to carry on working. That's okay! This talk will cover techniques in both code and project management to allow you to keep your code moving forwards without breaking your users' code. It is aimed at developers with a little experience of writing libraries in Python, and will cover some intermediate subjects like function decorators and magic methods. Refactoring in Python is a mixed bag - on the one hand you have powerful tools like the @property decorator, __dunder__ methods, and even metaclasses. On the other hand, because Python code has no concept of private or protected like some other languages, it can be difficult to know what your public interface even is. I'll talk about how to identify your public interface, and make that clear to your users. I'll cover how to structure your tests so you know when you've broken your public interface. I'll discuss how to use some of Python's language features to trick your users into thinking your code hasn't changed at all (except for those brilliant new features you've just added!). And finally, I'll cover how you know it's time to break backwards compatibility and how to break it to your users. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M2S	1802	2d	hd	false	https://i.ytimg.com/vi/NNmyVqhgs_M/maxresdefault.jpg		314	5	0	0	0
358	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZSHL5rkFDQQ	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Simmi Mourya - Scientific computing using Cython: Best of both Worlds!	"Scientific computing using Cython: Best of both Worlds! [EuroPython 2017 - Talk - 2017-07-14 - Anfiteatro 2] [Rimini, Italy] Cython is not only an excellent and widely used tool to speed up computational Python code, it’s also a very smart way to talk to native code and libraries. The Cython compiler translates Python code to C or C++ code, and supports static type annotations to allow direct use of C/C++ data types and functions. You get the best of both worlds while working with Cython: Python like syntax with blazing fast C speed. This talk/tutorial by a Python/Cython developer introduces Cython programming language and leads the participants all the way from their first Python extension to an efficient integration with native C. Topics covered will be: 1. Using the Cython compiler to build a native extension module 2. Cython development from Jupyter notebook 3. Mixing Python with static C types in the Cython language 4. Calling into native code from Cython code (Brief introduction) 5. Wrap up: A brief case study Cyvlfeat: A Cython/Python wrapper for Computer Vision library, VLFeat. Participants are expected to have a good understanding of the Python language, some basic knowledge about C or C++. No deep C programming knowledge is required, nor is any prior knowledge needed about writing extension modules for the CPython runtime. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT35M19S	2119	2d	hd	false	https://i.ytimg.com/vi/ZSHL5rkFDQQ/maxresdefault.jpg		863	14	2	0	0
359	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dKEg7gMWFqo	2017-10-28T13:07:04Z	2017-10-28 13:07:04	H. Hain, S. Gramlich - From an old-school data managing company to data analytics with Python	"From an old-school data managing company to data analytics with Python [EuroPython 2017 - Talk - 2017-07-14 - Anfiteatro 2] [Rimini, Italy] Our mission is to manage a huge amount of communication and document data in large scale industry projects by providing web based project management systems. The increasing amount of communication creates the desire for a GPS helping us and our customers to navigate through the communication stream. Our R&amp;D projects are focusing on topics like clustering, event detection, and network analysis (Who knows who, domain experts). Traveling the wild side of NLP, Data Science, and Analytics, we stumbled across amazing Python tools supporting us in our goal to navigate the project communication and therefor supporting our clients in Project &amp; Risk Management avoiding wrong turns. We would like to share some of our approaches to answer our research topics and challenges: One of the challenges, amongst others, is to utilize and adapt up to date clustering algorithms for social stream data and to expose them as reentrant services. Another one is to tailor them for the current application domain, improving clustering precision by parametrization and other means. Furthermore the integration of a Python based analytics system into an existing JAVA based application environment and eco system is required. In addition, we would also like to share some of our ""traffic jams"" experienced during our travel starting as traditional Java/SQL focusing company that integrated Python into its development portfolio. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M10S	1810	2d	hd	false	https://i.ytimg.com/vi/dKEg7gMWFqo/maxresdefault.jpg		123	6	0	0	0
360	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dVmFKXm3b0c	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Oliver Braun - Python and Angular, a perfect match?	"Python and Angular, a perfect match? [EuroPython 2017 - Talk - 2017-07-14 - PyCharm Room] [Rimini, Italy] Python on mobile devices is still negligible mostly because of the GUI problems which arise. But Python on android devices is considered to be a solved problem since the module Python for Android is available. We have nowadays at least the possibility to develop for mobile devices with the GUI engine Kivy which is maybe the first choice for rapid prototyping on that platform. But as it comes to design work and mobile device look alike Kivy is still far behind the web development tools HTML/CSS. In our talk we present a conceptual work where we used Ionic - this is an mobile development framework based on Angular - to build the GUI part of an app and connected that to a Python back end. In our point of view our proposal is very general and will give Python a boost towards modern UX development and makes HTML/CSS/JavaScript a real option especially in combination with Angular. The main part of our solution that we show is the interoperation between JavaScript and Python such that asynchronous calls in both direction are possible. The advantage is to develop UX and back end code only once and use it literally on every platform where a Python interpreter and a browser runs. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M16S	1636	2d	hd	false	https://i.ytimg.com/vi/dVmFKXm3b0c/maxresdefault.jpg		4626	18	1	0	0
361	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eC56hwmFCG8	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Anna Ravenscroft - Overcoming Cognitive Bias	"Overcoming Cognitive Bias [EuroPython 2017 - Talk - 2017-07-14 - Anfiteatro 2] [Rimini, Italy] Starting with a brief description of how built-in mechanisms in our brains lead to cognitive bias, the talk will address how a variety of cognitive biases manifest in the Python and tech communities, and how to overcome them. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT41M41S	2501	2d	hd	false	https://i.ytimg.com/vi/eC56hwmFCG8/maxresdefault.jpg		226	7	2	0	2
362	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eV23M0Jtsbw	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Deep Kayal - Large-scale data extraction, structuring and matching using Python and Spark	"Large-scale data extraction, structuring and matching using Python and Spark [EuroPython 2017 - Talk - 2017-07-14 - Anfiteatro 1] [Rimini, Italy] Motivation - Matching data collections with the aim to augment and integrate the information for any available data point that lies in two or more of these collections, is a problem that nowadays arises often. Notable examples of such data points are scientific publications for which metadata and data are kept in various repositories, and users’ profiles, whose metadata and data exist in several social networks or platforms. In our case, collections were as follows: (1) A large dump of compressed data files on s3 containing archives in the form of zips, tars, bzips and gzips, which were expected to contain published papers in the form of xmls and pdfs, amongst other files, and (2) A large store of xmls in the form of xmls, some of which are to be matched to Collection 1. Problem Statement - The problems, then, are: (1) How to best unzip the compressed archives and extract the relevant files? (2) How to extract meta-information from the xml or pdf files? (3) How to match the meta-information from the two different collections? And all of these must be done in a big-data environment. Presentation – https://drive.google.com/open?id=1hA9J80446Qh7nd8PMYZibtIR1WjMkdLXfDgwUlts7JM The presentation will describe the solution process and the use of python and Spark in the large-scale unzipping and extraction of files from archives, and how metadata was then extracted from the files to perform the matches on. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M32S	1832	2d	hd	false	https://i.ytimg.com/vi/eV23M0Jtsbw/maxresdefault.jpg		707	6	2	0	0
363	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iasLRI30meA	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Hongjoo Lee - Deep Learning your Broadband Network @HOME	"Deep Learning your Broadband Network @HOME [EuroPython 2017 - Talk - 2017-07-14 - Anfiteatro 1] [Rimini, Italy] Most of us have broadband internet services at home. Sometimes it does not work well, and we visit speed test page and check internet speed for ourselves or call cable company to report the service failure. As a Python programmer, have you ever tried to automate the internet speed test on a regular basis? Have you ever thought about logging the data and analyzing the time series ? In this talk, we will go through the whole process of data mining and knowledge discovery. Firstly we write a script to run speed test periodically and log the metric. Then we parse the log data and convert them into a time series and visualize the data for a certain period. Next we conduct some data analysis; finding trends, forecasting, and detecting anomalous data. There will be several statistic or deep learning techniques used for the analysis; ARIMA (Autoregressive Integrated Moving Average), LSTM (Long Short Term Memory). The goal is to provide basic idea how to run speed test and collect metrics by automated script in Python. Also, I will provide high level concept of the methodologies for analyzing time series data. Also, I would like to motivate Python people to try this at home. This session is designed to be accessible to everyone, including anyone with no expertise in mathematics, computer science. Understandings of basic concepts of machine learning and some Python tools bringing such concepts into practice might be helpful, but not necessary for the audience. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT42M27S	2547	2d	hd	false	https://i.ytimg.com/vi/iasLRI30meA/maxresdefault.jpg		175	4	1	0	0
364	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jQedHfF1Jfw	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Ivan Smirnov - pybind11 - seamless operability between C++11 and Python	"pybind11 - seamless operability between C++11 and Python [EuroPython 2017 - Talk - 2017-07-14 - PythonAnywhere Room] [Rimini, Italy] https://github.com/pybind/pybind11 pybind11 is a lightweight header-only C++11 library that exposes C++ types to Python and vice versa and allows creating Python extension modules with minimum boilerplate by leveraging compile-time introspection and type inference. While this library's goals and some of the syntax may be considered similar to Boost.Python, it has a much smaller footprint, is entirely self-contained, and offers additional features like direct support for NumPy arrays. In this talk, we will look at how to write Python extension modules in C++ from scratch with pybind11, starting from simple bindings and building up to more complex examples that deal with iterators, STL data structures, NumPy types and Python callbacks. We will also touch upon some of the internal machinery of the library like the virtual call mechanism and reference counting. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT37M59S	2279	2d	hd	false	https://i.ytimg.com/vi/jQedHfF1Jfw/maxresdefault.jpg		4515	74	2	0	5
365	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	k8w_EMQQOiU	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Daniele Rapati - I don't like Mondays-what I learned about data engineering after 2 years on call	"I don't like Mondays-what I learned about data engineering after 2 years on call [EuroPython 2017 - Talk - 2017-07-14 - PythonAnywhere Room] [Rimini, Italy] The first weekend of October 2015 my company bought an advert during the first episode of ""Downton Abbey"" on Sunday evening. It was so successful that the website went down for half an hour. We wanted to look at the analytics and the data to estimate the impact. But they were having a very hard weekend too: the replica of the production database we used was unreachable and the only person who knew how to fix it was on a plane. Monday really was a memorable day This session is about sharing some life experience and best practices around Data Engineering. Attendants should have some previous understanding of data and tech in business. Attendants should leave with an understanding of on-call practices and with some quick win actions to take. What does it mean to be on call? How do you make sure that the phone rings as little as possible? Fixing versus Root Cause Analysis. Systems break at junctures. Especially if the juncture is with a third party. Why and when is it worth reacting to errors as soon as they happen? External Services. Increasing Business Trust. Allowing others to build on solid ground. How do you make sure the phone rings when it should? Alerting tools: emails, chat, specialised applications like PagerDuty, OpsGenie and Twilio Monitoring systems Monitoring data (Data Quality) as a continuous early warning system. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M4S	1684	2d	hd	false	https://i.ytimg.com/vi/k8w_EMQQOiU/maxresdefault.jpg		134	1	0	0	0
366	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kb2_No5tkgE	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Michele Simionato - Lessons learned in X years of parallel programming	"Lessons learned in X years of parallel programming [EuroPython 2017 - Talk - 2017-07-14 - Anfiteatro 2] [Rimini, Italy] There is a lot more to parallel programming in Python than multiprocessing.Pool().map. In this talk I will share some hard-learned knowledge gained in several years of parallel programming. Covered topics will include performance, ways to measure the performance, memory occupation, data transfer and ways to reduce the data transfer, how to debug parallel programs and useful libraries. I will give some practical examples, both in enterprise programming (importing CSV files in a database) and in scientific programming (numerical simulations). The initial part of the talk will be pedagogical, advocating the convenience of parallel programming in the small (i.e. in single machine environment); the second part will be more advanced and will touch a few things to know when writing parallel programs for medium-sized clusters. I will also briefly discuss the compatibility layer that we have developed at GEM to be independent from the underlying parallelization technology (multiprocessing, concurrent.futures, celery, ipyparallel, grid engine...). License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT34M20S	2060	2d	hd	false	https://i.ytimg.com/vi/kb2_No5tkgE/maxresdefault.jpg		281	2	2	0	1
367	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rVUhAZg16YY	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Alessandro Pisa - Plone: where is it today and where is it going	"Plone: where is it today and where is it going [EuroPython 2017 - Talk - 2017-07-14 - PyCharm Room] [Rimini, Italy] Plone CMS, first released in 2001, is now close to its 5.1 version. Did you know that the 2016 Olympics web site was built with Plone? Did you know that many huge organizations that care about data protection use Plone? There are good reason why Plone is such a successful Python project, but probably the most important is that Plone does take into account the security of your data very seriously. Nowadays, information and data play a crucial role, sometimes they are the more important asset of a company. They have to be in a digital form and accessible from every device, it is no surprise that they are exposed to a growing threat. During the talk I will review Plone built in security protection systems. In addition I will review some of its features, like the ability to create, without writing a line of code, custom content types, to change documents workflows, to organize your documents in a snap. I will also talk about the foreseen new features that will be soon in Plone and I will present Castle CMS and Quaive, some important projects built on top of Plone that are currently under the spotlight. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M4S	2704	2d	hd	false	https://i.ytimg.com/vi/rVUhAZg16YY/maxresdefault.jpg		1040	15	0	0	1
368	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sS7ACBXWOm0	2017-10-28T13:07:04Z	2017-10-28 13:07:04	Armin Rigo - PyPy meets Python 3 and Numpy	"PyPy meets Python 3 and Numpy [EuroPython 2017 - Talk - 2017-07-14 - Anfiteatro 2] [Rimini, Italy] PyPy is an alternative Python implementation whose JIT often gives seriously better performance than CPython. Now PyPy supports, in beta version, two major new application domains: Python 3.x, and Numpy and the rest of the scientific stack. These are each an important milestone for a subset of the Python community. Thanks to a grant by Mozilla, ""PyPy3"" now largely supports Python 3.5 with one or two extensions from Python 3.6. Full support should be very close. (Note that PyPy2 will not disappear, if only because PyPy itself is written in Python 2.7.) Numpy and the major packages of the scientific stack are now starting to work well with PyPy (PyPy2 mostly, but also PyPy3). This is thanks to progress in ""cpyext"" emulating the CPython C API, as well as fixes to the packages in collaboration with the upstream developers. We will also mention some more ""what's new in PyPy"" topics from the last couple of years. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M35S	1775	2d	hd	false	https://i.ytimg.com/vi/sS7ACBXWOm0/maxresdefault.jpg		2500	40	1	0	7
369	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0s6lmVbvoFo	2017-10-21T19:51:17Z	2017-10-21 19:51:17	Federico Marani - Feeding data to AWS Redshift with Airflow	"Feeding data to AWS Redshift with Airflow [EuroPython 2017 - Talk - 2017-07-13 - Anfiteatro 1] [Rimini, Italy] Airflow is a powerful system to schedule workflows and define them as a collection of interdependent scripts. It is the perfect companion to do extract/transform/load pipelines into data warehouses, such as Redshift. This talk will introduce some of the basis of Airflow and some of the concepts that are data pipeline specific, like backfills, retries, etc. Then there will be some examples on how to integrate this, along with some lessons learned there. At the end, there will be a part dedicated to Redshift, how to structure data there, how to do some basic transformation pre-loading, how to manage the schema using SQLAlchemy and Alembic. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT39M28S	2368	2d	hd	false	https://i.ytimg.com/vi/0s6lmVbvoFo/maxresdefault.jpg		2258	19	6	0	1
370	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JUErYqjf5Zw	2017-10-21T19:51:16Z	2017-10-21 19:51:16	Guillem Duran Ballester - Inside Airbnb: Visualizing data that includes geographic locations	"Inside Airbnb: Visualizing data that includes geographic locations [EuroPython 2017 - Talk - 2017-07-13 - Anfiteatro 1] [Rimini, Italy] This talk is about creating visualizations for data that includes geographical locations. We will be using data from InsideAirbnb.com to represent the current status of Airbnb listings in Mallorca. We will show practical examples of different visualizations of geographical data: First, we will start with how to use bokeh to overlay data on google maps. We will use examples to show how the GMapPlot interface works. We will briefly explain how to use it, and what are its limitations. Then, we will talk about plotting shapefiles with holoviews. Shapefiles are files that describe the shape of maps. We will explain how to deal with shapefiles. For instance, we will describe how we use shapefiles to group geographical data by regions. We will also briefly explain how holoviews works and how it can be used to display geographical data. Moreover, we will talk about using datashader and geoviews to visualize big data. First, we will briefly introduce datashader, bin based plotting and the datashader Pipeline. After that, we will show how to create plots with geoviews: how is the Interface, a few use cases and some examples. Finally, we will move to plotting big data on interactive maps. Eventually we will finish with dynamic maps for visualizing time series: we will explain how do we do it and show some examples of how to build an interactive dashboard for visualizing geographical data that varies over time. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT43M5S	2585	2d	hd	false	https://i.ytimg.com/vi/JUErYqjf5Zw/maxresdefault.jpg		785	10	2	0	0
371	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JsBfZ3N34i4	2017-10-21T19:51:16Z	2017-10-21 19:51:16	Omar Gutiérrez - Introduction to Nonparametric Bayesian Models	"Introduction to Nonparametric Bayesian Models [EuroPython 2017 - Talk - 2017-07-13 - Anfiteatro 1] [Rimini, Italy] When we use supervised machine learning techniques we need to specify the number of parameters that our model will need to represent the data (number of clusters, number of Gaussians, etc.). Somewhat, we are making our model inflexible. In this talk we will study the nonparametric models, in specific, Bayesian Nonparametric Models (BNP) whose main purpose is getting more flexible models since that in BNP the parameters can be automatically inferred by the model. The outline is the next: Parametric vs Nonparametric models A review on probability distributions Non-parametric Bayesian Methods Dirichlet Process Python (and R maybe) libraries for NPB Conclusions License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT26M34S	1594	2d	hd	false	https://i.ytimg.com/vi/JsBfZ3N34i4/maxresdefault.jpg		669	11	5	0	0
372	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IUJ34MguA8M	2017-10-21T19:50:43Z	2017-10-21 19:50:43	Maciej Gryka - Despicable machines: how computers can be assholes	"Despicable machines: how computers can be assholes [EuroPython 2017 - Talk - 2017-07-13 - Arengo] [Rimini, Italy] When working on a new ML solution to solve a given problem, do you think that you are simply using objective reality to infer a set of unbiased rules that will allow you to predict the future? Do you think that worrying about the morality of your work is something other people should do? If so, this talk is for you. In this brief time, I will try to convince you that you hold great power over how the future world will look like and that you should incorporate thinking about morality into the set of ML tools you use every day. We will take a short journey through several problems, which surfaced over the last few years, as ML and AI generally, became more widely used. We will look at bias present in training data, at some real-world consequences of not considering it (including one or two hair-raising stories) and cutting-edge research on how to counteract this. The outline of the talk is: - Intro the problem: ML algos can be biased! - Two concrete examples. - What's been done so far (i.e. techniques from recently-published papers). - What to do next: unanswered questions. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT35M39S	2139	2d	hd	false	https://i.ytimg.com/vi/IUJ34MguA8M/maxresdefault.jpg		175	3	4	0	0
373	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cUQcNi_obIc	2017-10-21T19:50:43Z	2017-10-21 19:50:43	Christian Heimes - Identity management, single sign-on and certificates with FreeIPA	"Identity management, single sign-on and certificates with FreeIPA [EuroPython 2017 - Talk - 2017-07-13 - PythonAnywhere Room] [Rimini, Italy] Authentication, authorization and public key infrastructure are complicated and hard to get right, yet crucial for every infrastructure. Manifold user databases in each application as well as ad-hoc self-signed TLS/SSL certificates don't scale and are hard to administrate. Users don't want to remember a password for each service, admins prefer a centralized PKI, and developers struggle with correct handling of password. FreeIPA is an Open Source, Python-based identity management solution. It is much more than a simple user database. FreeIPA combines multiple mature products under an easy-to-use installer, command line and web interface: 389-DS LDAP server, MIT Kerberos, Dogtag PKI certificate system, BIND DNS with DNSSEC, SSSD, certmonger and more. It provides identities for users, services and machines with single sign-on (optionally 2FA) and role or host based ACL. Keycloak and Ipsilon IdP can be integrated to offer OpenIDC or SAML. Mutual trust with Active Directory is possible, too. Installation of a FreeIPA server and integration with a WSGI application is much simpler than you might think. At the end of my talk you will know how to deploy a FreeIPA server with just one command, how to add replicas for redundancy, how to authenticate users and access user data like name, email and group membership without adding a single line of Kerberos or LDAP code to your application, and how to issue TLS certificates with auto-renewal and OCSP. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT42M6S	2526	2d	hd	false	https://i.ytimg.com/vi/cUQcNi_obIc/maxresdefault.jpg		4137	55	1	0	3
374	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0hrf83ZIKw0	2017-10-21T19:50:42Z	2017-10-21 19:50:42	Samuel Fuentes - Fast product development using Django Rest Framework. #lessonslearned	"Fast product development using Django Rest Framework. #lessonslearned [EuroPython 2017 - Talk - 2017-07-13 - PyCharm Room] [Rimini, Italy] A year ago we decided to use Django and, specifically, DRF as the cornerstone of our upcoming fast-iterating web platform. In this talk I discuss why and how the architecture has evolved, key decisions made and the lessons we learned along the way. I'll share the techniques we used for iterating quickly and how the technology supported (and shaped) them. In addition some quirks and DRF-specific tricks will be brought along the way. Expect a general talk about how Python (and specifically DRF) can be used as a based for quick product iterations, a discussion regarding how to build and evolve a platform to meet those needs and some DRF-specific tidbits. No previous knowledge is required but experience in web development will make the content more accessible. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT25M22S	1522	2d	hd	false	https://i.ytimg.com/vi/0hrf83ZIKw0/maxresdefault.jpg		540	10	0	0	0
375	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HUQTVbyGdHs	2017-10-21T19:50:42Z	2017-10-21 19:50:42	Antoine Fourmy - Network visualization and automation	"Network visualization and automation [EuroPython 2017 - Talk - 2017-07-13 - Arengo] [Rimini, Italy] Network automation and orchestration is the latest phase in the evolution of IP and optical networks. Over the last few years, network engineers have created a variety of libraries and softwares to help them with the management, configuration and automation of huge networks made of hundreds of thousands of network devices (e.g. routers, switches, antenna...). In this talk, I will introduce NetDim, a vendor-neutral software for network modeling and automation based on the standard Python library for GUI programming: tkinter. I will start the presentation with an introduction to network visualization, and show how tkinter can be used to implement graph drawing algorithms, as well as a full-on Geographic Information System (GIS), allowing one to place network devices on a world map at their GPS coordinates. I will then discuss the whys and wherefores of network automation, and show how to automatically generate and push scripts to a network device via SSH or Telnet. More details about NetDim on github https://github.com/mintoo/NetDim and on this website http://netdim.fr License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT35M7S	2107	2d	hd	false	https://i.ytimg.com/vi/HUQTVbyGdHs/maxresdefault.jpg		369	4	0	0	0
376	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rrekAv9Fml4	2017-10-21T19:50:42Z	2017-10-21 19:50:42	Paul O'Grady - An introduction to PyTorch & Autograd	"An introduction to PyTorch & Autograd [EuroPython 2017 - Talk - 2017-07-13 - Anfiteatro 2] [Rimini, Italy] PyTorch is an optimized tensor library for Deep Learning, and is a recent newcomer to the growing list of GPU programming frameworks available in Python. Like other frameworks it offers efficient tensor representations and is agnostic to the underlying hardware. However, unlike other frameworks it allows you to create ""define-by-run"" neural networks resulting in dynamic computation graphs, where every single iteration can be different---opening up a whole new world of possibilities. Central to all neural networks in PyTorch is the Autograd package, which performs Algorithmic Differentiation on the defined model and generates the required gradients at each iteration. In this talk I will present a gentle introduction to the PyTorch library and overview its main features using some simple examples, paying particular attention to the mechanics of the Autograd package. Keywords: GPU Processing, Algorithmic Differentiation, Deep Learning, Linear algebra. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M51S	1911	2d	hd	false	https://i.ytimg.com/vi/rrekAv9Fml4/maxresdefault.jpg		5820	67	4	0	8
377	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ytx_BBz1B-I	2017-10-21T19:50:42Z	2017-10-21 19:50:42	Masaya Ohgushi - How to apply deep learning for 3D object	"How to apply deep learning for 3D object [EuroPython 2017 - Talk - 2017-07-13 - Arengo] [Rimini, Italy] I talk about the ""How to achieve the 3D object recognition accuracy 80%(40 category) for 3month " Deep Learning is the good technique for image recognition and speech recognition. And it apply the other field. Many people try to apply the Deep Learning, but it is difficult to make a result. In my situation, I have enough knowledge about the 3D object and label data. I'll talk about the how to achieve the 80 % (40 category) In My approach 1: Getting the Information 1.1: How to choose the information 1.2: How to choose framework 2: Getting the Data 2.1: Public data 2.2: How to make the own data 3: Try small 3.1: Trying the small data set 3.2: Trying the train and predict 4: Deciding the direction focus 4.1: Choose what you can control 5: Prioritizing with high certainty 5.1: Pre-process 5.2: Improve the train speed 6: Increasing the challenge times 6.1: Using the GPU 6.2: CPU optimization 6.3: multi process 6.4: resource 7: Parameter Tuning 7.1: Improve Model Versatility or Improve Data Versatility 7.2: Model Tuning 7.2.1: RandomDropOut 7.2.2: LeakyRelu 7.3: Data Argumantion 8: Product 8.1: Minimum function 8.2: Using Docker I hope to people who want to apply Deep Learning for the 3D model License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT22M55S	1375	2d	hd	false	https://i.ytimg.com/vi/ytx_BBz1B-I/maxresdefault.jpg		145	4	1	0	0
378	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FF-dWjionCw	2017-10-21T19:50:41Z	2017-10-21 19:50:41	Rishabh Daal , IMD, Maths & Computing, IIT, Varanasi - Optimization using Flow Networks in NetworkX.	"Optimization using Flow Networks in NetworkX. [EuroPython 2017 - Talk - 2017-07-13 - Arengo] [Rimini, Italy] Prerequisite: Basic Programming. Goals: Introduction to NetworkX Library Using NetworkX for optimization Techniques using Network Flow. This talk can be divided into three major parts. Introduction to NetworkX Basic Introduction to Network Flow. The solution of (https://en.wikipedia.org/wiki/Max-flow_min-cut_theorem#Project_selection_problem) Project selection problem using Network Flow and NetworkX. 1. Introduction to NetworkX. What is NetwrokX? Creating a graph in NetworkX. Some awesome methods Algorithms available. Using with other libraries like Pandas. 2. Basic Introduction to Network Flow. Origin of Problem: Mincut of soviet union railway network. A quick explanation of Max-Flow and min-cut problem. Max-flow = min-cut How to reduce problems for Network Flow optimization? Model the problem for using NetworkX 3. Solution of Project selection Problem using NetworkX. Problem statement. How can we solve it using max flow / min-cut? Modeling in form of graph. Proof of correctness Representing the graph in NetworkX Finding answer in NetworkX License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT21M34S	1294	2d	hd	false	https://i.ytimg.com/vi/FF-dWjionCw/maxresdefault.jpg		178	2	0	0	0
379	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	b7ESi3zLL8k	2017-10-21T19:50:41Z	2017-10-21 19:50:41	Stephanie Mifsud - Optimizing queries for not so big data in PostgreSQL	"Optimizing queries for not so big data in PostgreSQL [EuroPython 2017 - Talk - 2017-07-13 - Arengo] [Rimini, Italy] Hotjar’s user recordings count above 400 million, with supporting tables containing 4.5 billion records. This 5TB data fits nicely into Postgres and doesn’t quite merit the full big data suite of tools. However, at the rate of 1000 recordings per minute, and overall request rate of 750K per minute, the penalty of inefficient queries and updates can quickly cause nasty performance spikes if not thought out well. This talk is about the challenges we faced at the lower end of big data: the good decisions which helped keep our application running and other lessons we had to learn the hard way Considerations for Database Design Design entities for the domain Balance normalization with performance Sharding later has big migration costs, consider designing for this early Speak to the database from your Web Application Why use ORMs and at which level of abstraction? Stored Procedures are fast, should we have more of those? Bringing data closer to the application Materialize Views Defer aggregations Application Level Caching Handling Operational Troubles Explain(analyze, buffers) is your friend Detect and manage Index Bloat Reduce Deadlocks Reducing Impact of Background Maintenance Jobs Keep impact on database low with cursors and streaming Plan data retention policies early, so cleaning can be an ongoing process License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M48S	1848	2d	hd	false	https://i.ytimg.com/vi/b7ESi3zLL8k/maxresdefault.jpg		312	7	0	0	0
380	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	mXpBuELtpro	2017-10-21T19:50:41Z	2017-10-21 19:50:41	Niklas Meinzer - When Django is too bloated - Specialized Web-Applications with Werkzeug	"When Django is too bloated - Specialized Web-Applications with Werkzeug [EuroPython 2017 - Talk - 2017-07-13 - PythonAnywhere Room] [Rimini, Italy] Did you ever think, Django and all the other “batteries included” frameworks are not flexible enough for your needs? Do you feel like they limit you in your creativity and design? Then this talk is for you! Werkzeug is a very lightweight HTTP/WSGI utility for Python. You might have actually used it before, since the popular framework Flask is based on it. Werkzeug handles the WSGI communication with the web server and parsing of HTTP packets for you, after that, you are left to do whatever you want. No pre-defined ORM, no request dispatching or template rendering. As a developer you are supported with a live debugger that runs in the browser and a great variety of testing tools making it easy to write fine grained unit tests for your application. As a developer at MPS - Medical Systems, I work with Werkzeug on a daily basis. One of our products is ChemoCompile, a chemo therapy planning, management and documentation tool used in hospitals in various European countries. It is a single-page web application written in Python (backend) and AngularJS (frontend). When we created it, we first prototyped it using Django, but soon realized, that we did not need most of the functionality that Django provides and many of our needs, like interfacing with hospital information systems, are too much out of the scope of a regular web applications. I will talk about, how we then discovered Werkzeug and built our own very customized stack on top of it and how you can do it too! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M9S	1749	2d	hd	false	https://i.ytimg.com/vi/mXpBuELtpro/maxresdefault.jpg		1002	11	1	0	2
381	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vM2Zoy4Sxhk	2017-10-21T19:50:41Z	2017-10-21 19:50:41	Andreas Dewes - Type Annotations in Python 3: Whats, whys & wows!	"Type Annotations in Python 3: Whats, whys & wows! [EuroPython 2017 - Talk - 2017-07-13 - Arengo] [Rimini, Italy] Python 3.5 introduced support for ""type hints"" (or annotations), which allows us to annotate our code with useful bits of information without affecting its runtime behavior. Type hints don't enforce a particular use case and can therefore be used for many purposes. In my talk, I will explain some of the use cases of type hints, and show how we can use them to e.g. make our code more secure or teach it new tricks. We will have a look at popular libraries that help us to use the power of type hints (e.g. mypy), but we will also see how we can build our own extensions on top of the type hint system. After the talk you should walk away with a solid (basic) understanding of type hints in Python and an idea of how they might be useful to you now or in the future. Typing and type hints in programming languages Short history and motivation of type hints in Python Basics of type hint syntax and semantics Use cases for type hints Type hints for code analysis: mypy and similar libraries Building new stuff with type hints in Python Summary, Outlook & Further Reading License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M12S	2712	2d	hd	false	https://i.ytimg.com/vi/vM2Zoy4Sxhk/maxresdefault.jpg		1597	23	1	0	0
382	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xx02-yiAvgA	2017-10-21T19:50:41Z	2017-10-21 19:50:41	Mansimar Kaur - Using Python and microservices to fuel WebPush at Mozilla	"Using Python and microservices to fuel WebPush at Mozilla [EuroPython 2017 - Talk - 2017-07-13 - Anfiteatro 2] [Rimini, Italy] This talk will focus on how python and microservices fuel webpush in the storage team of Mozilla . It will also act as a good introduction to webpush technology and how to integrate it into web apps. The talk will cover: How webpush works? The roles played by the various players involved (service workers and push servers and how they interact to bring about the webpush magic). The idea behind the service, WebPush Channels which is at the heart of webpush at Mozilla's storage team. How the service was developed will be covered in detail. How developers can use WebPush Channels to integrate web push in their web apps. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT18M6S	1086	2d	hd	false	https://i.ytimg.com/vi/xx02-yiAvgA/maxresdefault.jpg		753	16	3	0	0
383	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	zC2_hGYQuuk	2017-10-21T19:50:41Z	2017-10-21 19:50:41	Lightning Talks - 2017-07-13	"Lightning Talks [EuroPython 2017 - - 2017-07-13 - Anfiteatro 2] [Rimini, Italy] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT53M7S	3187	2d	hd	false	https://i.ytimg.com/vi/zC2_hGYQuuk/maxresdefault.jpg		163	1	2	0	0
384	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FxgLOY-YsTc	2017-10-21T19:50:40Z	2017-10-21 19:50:40	Stephan Jaensch - Fixture factories for faster end-to-end tests	"Fixture factories for faster end-to-end tests [EuroPython 2017 - Talk - 2017-07-13 - Anfiteatro 2] [Rimini, Italy] When developing and maintaining many different services, unit testing is not enough to make sure your code works in production. By now, many teams doing SOA (service-oriented architectures) have a set of end-to-end tests that cover critical workflows to make sure these work. For these tests, all of the utilized services need to have the proper test fixture data in their datastores. This often leads to developers having to deal with raw datastore data (like JSON or SQL) for these tests, making the authoring of those tests very slow, tedious, and error-prone. This talk is going to discuss several approaches we tried at Yelp to generating these fixture data in a quicker, developer-friendly and more correct way. The main part of the talk will be a deep-dive into what fixture factories are, how to implement them and how to integrate them with pytest, the leading Python testing framework. I'll show you several other benefits this approach has over writing raw fixture data and how this leads to more maintainable and easier to adapt code. We'll also explore how you can then run your tests in parallel, cutting down runtime drastically. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M35S	1895	2d	hd	false	https://i.ytimg.com/vi/FxgLOY-YsTc/maxresdefault.jpg		254	3	0	0	0
385	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	N7od6k2WZGo	2017-10-21T19:50:40Z	2017-10-21 19:50:40	Christian Trebing - Streaming: Why should I care?	"Streaming: Why should I care? [EuroPython 2017 - Talk - 2017-07-13 - Anfiteatro 2] [Rimini, Italy] You think, all that hype about streaming solutions does not affect you? I thought so also. But when playing around with that topic for some time, I realized that it sheds a different light on many topics I struggled with for some time. In this talk I want to share with you what I discovered when switching from a from a database centric view to stream oriented processing. Splitting your application in smaller services gets easier as you have more natural boundaries You have more options to run different data schema versions in different services (instead of one central db upgrade) More scaling possibilities Operations improvements For sure, streaming does not solve any problem, but much more than I thought before. And in python you have good support with many streaming clients. I will give some examples and comparisons for working with Kafka and Avro Schemas. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M28S	2728	2d	hd	false	https://i.ytimg.com/vi/N7od6k2WZGo/maxresdefault.jpg		143	1	0	0	0
386	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZKPMQ-Sfk8Y	2017-10-21T19:50:40Z	2017-10-21 19:50:40	Floris Bruynooghe - Cloud Native Python in Kubernetes	"Cloud Native Python in Kubernetes [EuroPython 2017 - Talk - 2017-07-13 - PyCharm Room] [Rimini, Italy] Serverside applications are more and more likely to need to run in dynamic cloud environments where they can automatically scale as required. One rightfully popular approach is to run the application as a Docker container inside a Kubernetes cluster, giving you a lot of operational benefits thanks to the Kubernetes folks. For the most part it is rather easy to make your Python application work inside a Docker container. But there are a number of common patterns one can follow to save time by delegating more things to the runtime environment. Furthermore you can start adding a few simple non-intrusive features to your application which will help improve the application live-cycle in the cluster, ensuring smooth hand-over when migrating the container to different nodes or scaling it up or down. This talk will quickly cover the basics of Kubernetes and will then start from a simple program and will discuss the steps to take to make it behave well in this environment. Starting with the basics steps you can rely on the runtime for, covering logging and all the way to supporting the service life-cycle, health checking and monitoring in a Kubernetes environment. You will see that building a cloud-native application is not very hard and something you can gradually introduce. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M33S	1833	2d	hd	false	https://i.ytimg.com/vi/ZKPMQ-Sfk8Y/maxresdefault.jpg		209	2	0	0	0
387	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	gzsBMFpmCpk	2017-10-21T19:50:40Z	2017-10-21 19:50:40	Tracy Osborn - The Different Roads We Take	"The Different Roads We Take [EuroPython 2017 - Keynote - 2017-07-13 - Anfiteatro 2] [Rimini, Italy] We've all taken different routes to get to where we are today, and we're not all currently on the same road going the same place. Tracy Osborn will talk about the idea of the ""Python engineer,"" her (long and full of bumps and potholes) journey to learning and teaching Python, and the harmful myths about learning programming and the paths available when you do so. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT52M41S	3161	2d	hd	false	https://i.ytimg.com/vi/gzsBMFpmCpk/maxresdefault.jpg		152	12	9	0	0
388	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Uh0-pZlvPxs	2017-10-21T19:50:39Z	2017-10-21 19:50:39	Julien Simon - AI on a Pi	"AI on a Pi [EuroPython 2017 - Talk - 2017-07-13 - Anfiteatro 1] [Rimini, Italy] In recent months, Artificial Intelligence has become the hottest topic in the IT industry. In this session, we’ll first explain how Deep Learning — a subset of AI — differs from traditional Machine Learning and how it can help you solve complex problems such as computer vision or natural language processing. Then, we’ll show you how to start writing Deep Learning applications in Python thanks to MXNet, a popular library for Deep Learning for both CPUs and GPUs. We'll also see how to use pre-trained models and we'll load one on a Raspberry Pi equipped with a camera. Finally, we’ll show random objects to the Pi…and listen to what it thinks the objects are, thanks to the text-to-speech capabilities of Amazon Polly. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT1H4M9S	249	2d	hd	false	https://i.ytimg.com/vi/Uh0-pZlvPxs/maxresdefault.jpg		2527	33	1	0	0
389	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XJf-f56JbFM	2017-10-21T19:50:39Z	2017-10-21 19:50:39	Michał Karzyński - Developing elegant workflows in Python code with Apache Airflow	"Developing elegant workflows in Python code with Apache Airflow [EuroPython 2017 - Talk - 2017-07-13 - Anfiteatro 1] [Rimini, Italy] Every time a new batch of data comes in, you start a set of tasks. Some tasks can run in parallel, some must run in a sequence, perhaps on a number of different machines. That's a workflow. Did you ever draw a block diagram of your workflow? Imagine you could bring that diagram to life and actually run it as it looks on the whiteboard. With Airflow you can just about do that. http://airflow.apache.org Apache Airflow is an open-source Python tool for orchestrating data processing pipelines. In each workflow tasks are arranged into a directed acyclic graph (DAG). Shape of this graph decides the overall logic of the workflow. A DAG can have many branches and you can decide which of them to follow and which to skip at execution time. This creates a resilient design because each task can be retried multiple times if an error occurs. Airflow can even be stopped entirely and running workflows will resume by restarting the last unfinished task. Logs for each task are stored separately and are easily accessible through a friendly web UI. In my talk I will go over basic Airflow concepts and through examples demonstrate how easy it is to define your own workflows in Python code. We'll also go over ways to extend Airflow by adding custom task operators, sensors and plugins. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M27S	1767	2d	hd	false	https://i.ytimg.com/vi/XJf-f56JbFM/maxresdefault.jpg		25668	320	5	0	4
390	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	s-yT5Is1G1A	2017-10-21T19:50:39Z	2017-10-21 19:50:39	Mikhail Korobov - Explaining behavior of Machine Learning models with eli5 library	"Explaining behavior of Machine Learning models with eli5 library [EuroPython 2017 - Talk - 2017-07-13 - Anfiteatro 2] [Rimini, Italy] ML estimators don't have to be black boxes. Interpretability has many benefits: it is easier to debug interpretable models, humans trust decisions of such models more. In this talk I’ll give an overview of ML models interpretation and debugging techniques. I’ll cover linear models, decision trees, tree ensembles, arbitrary classifiers using LIME algorithm. The talk focus is on explanation algorithms, because it is important to be aware of pitfalls and limitations of the explanation method to be able to interpret an explanation correctly. I’ll also show how to use these techniques in practice, to debug and explain behavior of estimators from Python ML libraries like scikit-learn and xgboost using open-source eli5 library: https://github.com/TeamHG-Memex/eli5 . Attendees will get both practical and theoretical understanding of these explanation methods. Target audience is ML practitioners who want to 1) get a better quality from their ML pipelines - understanding of why a wrong decision happens is often a first step to improve the quality of an ML solution; 2) explain ML model behavior to clients or stakeholders - inspectable ML pipelines are easier to “sell” to a client; humans trust such models more because they can check if an explanation is consistent with their domain knowledge or gut feeling, understand better shortcomings of the solution and make a more informed decision as a result. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M19S	1819	2d	hd	false	https://i.ytimg.com/vi/s-yT5Is1G1A/maxresdefault.jpg		2015	21	5	0	0
391	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xatJ9hPgYDk	2017-10-21T19:50:39Z	2017-10-21 19:50:39	Hugues Lerebours, Renaud Bauvin - Inspect (Or Gadget)	"Inspect (Or Gadget) [EuroPython 2017 - Talk - 2017-07-13 - Anfiteatro 2] [Rimini, Italy] Introspection is often seen as a bad coding practice and as such a gadget. Nevertheless, the Python Standard Library provides different tools (among them the 'inspect' library) to easily identify a generator, recover the source code of a function or get a function signature. We propose to spend 1/2 hour to dig into what introspection has to offer to developers, to see what tools are available, what you can get out of them and some useful use cases that we met in our practice at Criteo. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M39S	1779	2d	hd	false	https://i.ytimg.com/vi/xatJ9hPgYDk/maxresdefault.jpg		75	1	1	0	0
392	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tTv9r0QX494	2017-10-21T19:50:38Z	2017-10-21 19:50:38	Sahil Dua - How Booking.com serves Deep Learning model predictions	"How Booking.com serves Deep Learning model predictions [EuroPython 2017 - Talk - 2017-07-13 - Anfiteatro 1] [Rimini, Italy] With so many machine learning frameworks and libraries available, writing a model isn’t a bottleneck anymore while putting your models in production is still a challenge. In this talk, you will learn how we deploy the python deep learning models in production at Booking.com. Topics will include: Deep Learning model training in Docker containers Automated retraining of models Deployment of models using Kubernetes Serving model predictions in containerized environment Optimising serving predictions for latency and throughput License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M15S	1875	2d	hd	false	https://i.ytimg.com/vi/tTv9r0QX494/maxresdefault.jpg		449	4	0	0	0
393	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	f7yGOq2zyRs	2017-10-21T19:50:36Z	2017-10-21 19:50:36	Daniel Pope - Scripting across hosts with Chopsticks	"Scripting across hosts with Chopsticks [EuroPython 2017 - Talk - 2017-07-13 - PythonAnywhere Room] [Rimini, Italy] Chopsticks lets your import and run Python code on remote Unix hosts over SSH. It works with no code deployment and no preinstalled software other than Python and SSH. It has built-in support for running code on many hosts in parallel. Unlike Fabric or Ansible, Chopsticks not opinionated about the structure of the code you run, allowing it to be used for orchestration, auditing, diagnostics, monitoring probes, and more Also unlike these, Chopsticks is not wedded to SSH, so it can transparently work on Docker containers over pipes, local subprocesses - and in future, sudo? Daniel will demonstrate Chopsticks in action, walk through the API, and explain the three clever tricks that Chopsticks is built on. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT34M21S	2061	2d	hd	false	https://i.ytimg.com/vi/f7yGOq2zyRs/maxresdefault.jpg		118	0	0	0	0
394	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	AxGxaN0cOgo	2017-10-21T19:50:35Z	2017-10-21 19:50:35	Daniele Procida - Fighting the controls: tragedy and madness for programmers and pilots	"Fighting the controls: tragedy and madness for programmers and pilots [EuroPython 2017 - Talk - 2017-07-13 - PyCharm Room] [Rimini, Italy] Damn it, this can’t be happening! As programmers, we find ourselves time and again spiralling down into tighter loops of desperate troubleshooting, fighting the controls of our machinery and descending into what feels like a kind of madness. Later, when it’s all over, we realise that the clues we needed to recover the situation were staring us in the face all along, but we somehow couldn’t even see them. There’s a reason for this: the nature of debugging for programmers means that it quickly tips us into these states, and then very effectively keeps us there. In programming we have worked hard to improve some aspects of programmers’ work, creating methodologies, development frameworks, paradigms, practices and thinking deeply about how to solve the problems of producing good code. We have done very little work to improve the way we debug our code, The good news is that although programmers have not developed very adequate strategies or techniques for mitigating the risks that debugging draws us into, other industries, and in particular aviation, have. We can learn from their lessons without paying their price. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M32S	2672	2d	hd	false	https://i.ytimg.com/vi/AxGxaN0cOgo/maxresdefault.jpg		138	1	1	0	0
395	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iEKsAxUPDYY	2017-10-21T19:50:35Z	2017-10-21 19:50:35	Gonzalo Rafuls - Dockerized pytests	"Dockerized pytests [EuroPython 2017 - Talk - 2017-07-13 - PyCharm Room] [Rimini, Italy] When working with pytest and custom plugins things can get eery when trying to mimic your Jenkins environment for debugging your tests locally, specially across your team and their workspaces. In this talk will go through the challenges faced to containerize a wild pytest environment. Topics: Running Pytest on Jenkins jobs Pytest custom plugins Challenges for locally debugging/replicating a Jenkins job/pytest run Dockerizing pytest and it's dependencies License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M17S	1697	2d	hd	false	https://i.ytimg.com/vi/iEKsAxUPDYY/maxresdefault.jpg		539	3	0	0	0
396	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pe-UgvzQuAs	2017-10-21T19:50:34Z	2017-10-21 19:50:34	Alice Harpole, Raniere Silva, Mateusz Kuzak, Céline Boudier - Community teaching practices	"Community teaching practices [EuroPython 2017 - Panel - 2017-07-13 - PyCharm Room] [Rimini, Italy] In the last five years we saw many groups dedicated to teach people how to program but any volunteer that is going to start a new teaching group could have hundreds of questions related with concepts order, examples, exercises, libraries and text editor/IDE. Panellists will share their experience when teaching Python to newcomers from different backgrounds as part of their volunteer work for some organisations such as PyLadies, DjangoGirls, Code for Life, Software Carpentry, Data Carpentry, etc. Among the panellists we will have Mateusz Kuzak, from the Netherlands eScience Center and volunteer for Software Carpentry and Data Carpentry; Alice Harpole, from the University of Southampton; Celine Boudier, from Code for Life; Raniere Silva (as moderator), from the Software Sustainability Institute. All questions from the audience are welcomed. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT1H23M29S	1409	2d	hd	false	https://i.ytimg.com/vi/pe-UgvzQuAs/maxresdefault.jpg		132	1	0	0	1
397	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3QtAlB3NZII	2017-10-21T19:50:33Z	2017-10-21 19:50:33	Florian Wilhelm - Declarative Thinking and Programming	"Declarative Thinking and Programming [EuroPython 2017 - Talk - 2017-07-13 - PyCharm Room] [Rimini, Italy] Declarative Programming is a programming paradigm that focuses on describing what should be computed in a problem domain without describing how it should be done. The talk starts by explaining differences between a declarative and imperative approach with the help of examples from everyday life. Having established a clear notion of declarative programming as well as pointed out some advantages, we transfer these concepts to programming in general. For example, the usage of control flow statements like loops over-determine the order of computation which impedes scalable execution as well as it often violates the single level of abstraction principle. Following the theoretical part of the talk, some practical examples are given how declarative programming can be applied easily within Python. This comprises the advantages and disadvantages of using a configuration file, e.g. config.yaml, versus a Python configuration module, e.g. setup.py. Furthermore, the benefits of avoiding statements of control flow with the help of list and dictionary comprehensions as well as sets are demonstrated. The talk is concluded by a short, high-level excursion to a logistic programming language, namely PyDatalog in order to build the bridge between logistic and declarative programming. This is accomplished by showing how a mathematical crossword can be easily solved with the help of declarative and logistic programming. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M13S	1753	2d	hd	false	https://i.ytimg.com/vi/3QtAlB3NZII/maxresdefault.jpg		815	9	0	0	0
398	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bZ4WbPnNPCs	2017-10-21T19:50:33Z	2017-10-21 19:50:33	Andrey Syschikov - A journey into Git internals with Python	"A journey into Git internals with Python [EuroPython 2017 - Talk - 2017-07-13 - PythonAnywhere Room] [Rimini, Italy] Despite 12 years of history and wide popularity the workings of Git still remain largely a mystery for many. A lot of Git users operate it just by remembering a bunch of commands and repeating them in a correct order. I was one of them until I decided to dig deeper into how Git actually works and suddenly I understood that internally Git operates by rather simple principles and after you figure them out suddenly all those commands start to make sense. To look into the Git's internal structure you need a programming language to crunch the data and Python fit perfectly for this task. In this talk, I will dig into the internals of Git with Python, that will help you better understand how Git works. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M28S	2668	2d	hd	false	https://i.ytimg.com/vi/bZ4WbPnNPCs/maxresdefault.jpg		554	13	1	0	0
399	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5js_-pLGqwA	2017-10-21T19:50:32Z	2017-10-21 19:50:32	Paul Ross - A faster Python? You Have These Choices	"A faster Python? You Have These Choices [EuroPython 2017 - Talk - 2017-07-13 - Arengo] [Rimini, Italy] Python was never intended as a fast language but many modern uses of Python require high performance computing, particularly in data science. This talk explores your options for squeezing maximum performance out of critical Python code. This talk provides a succinct summary of the options you have: C extensions, Cython, CFFI, PyPy and many others. It also shows the trade-offs between execution performance and the cost of writing and maintaining code with each choice. Each option is also explored for maturity and ease of use for Python programmers. A real world programming problem is coded and benchmarked using each of these techniques. All the code used in the talk is available on GitHub. At the end of this talk you will be better place to decide on which technique to use to make your code run 100x faster. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT42M33S	2553	2d	hd	false	https://i.ytimg.com/vi/5js_-pLGqwA/maxresdefault.jpg		607	18	0	0	0
400	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Adz7MKT6ink	2017-10-21T19:50:32Z	2017-10-21 19:50:32	Marc-Andre Lemburg - EuroPython 2018: Help us build the next edition!	"EuroPython 2018: Help us build the next edition! [EuroPython 2017 - EuroPython session - 2017-07-13 - PythonAnywhere Room] [Rimini, Italy] We need help with organizing and running EuroPython 2018. In this session, we will explain how the EuroPython workgroup model works and where you could help. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT34M42S	2082	2d	hd	false	https://i.ytimg.com/vi/Adz7MKT6ink/maxresdefault.jpg		146	0	0	0	0
401	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	la3Py9Dh5XY	2017-10-21T19:50:31Z	2017-10-21 19:50:31	Marc-Andre Lemburg - EPS General Assembly 2017	"EPS General Assembly [EuroPython 2017 - EuroPython session - 2017-07-13 - PythonAnywhere Room] [Rimini, Italy] This is where the EuroPython Society (EPS) board gives its reports, resolutions are passed and the EPS members can vote in a new EPS board. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT59M17S	3557	2d	hd	false	https://i.ytimg.com/vi/la3Py9Dh5XY/maxresdefault.jpg		32	0	0	0	0
402	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5ExfLYdYzQE	2017-10-13T14:15:51Z	2017-10-13 14:15:51	Alisa Dammer - Baby steps in short-text classification with python	"Baby steps in short-text classification with python [EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 1] [Rimini, Italy] This talk aims to provide an information about where and how one could start using simple text-classification models. Additionally it will be shown how a python classificator can be incorporated into existing system. The presentation will be broken into 3 topics and a conclusion. First, the presentation provides an overview of how the problem was approached, what information was useful or not and how the technologies stack shown in the second part was decided on. Second part will concentrate on using Naive Bayesian model for text classification. How the model was trained, what difficulties were met and how they were solved. Additionally the talk will give a brief overview of other possible model choices (random forest, SVM). The third part will show how the model was deployed and used in the production. One architecture solution will be shown in details (REST calls between Java Client and Flask Server), while other possibilities will be mentioned briefly. As the conclusion the possible improvements for the model in use will be suggested as well as short example of supervised learning algorithm (CNN) and unsupervised classification algorithm (LDA) for the same purpose. Along with the examples the proc and cons will be named. Technologies mentioned and used: Flask, Green Unicorn vs uWSGI, NLTK, Sci-Kit, Python 3, Java 8, Jersey, Docker, Kubernetes License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M37S	1837	2d	hd	false	https://i.ytimg.com/vi/5ExfLYdYzQE/maxresdefault.jpg		994	11	2	0	1
403	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	G3h21DdDTjQ	2017-10-13T14:15:50Z	2017-10-13 14:15:50	Reimar Bauer - MSS - Software for planning research aircraft missions	"MSS - Software for planning research aircraft missions [EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 1] [Rimini, Italy] http://www.geosci-model-dev.net/5/55/2012/ Scientific aircraft research flights have to be planned beforehand. For that it is necessary to have model forecasts of relevant quantities such as meteorological parameters, chemical composition or particle information to guide the aircraft to the location of interest. Typically, many scientific instruments on board those aircrafts used to investigate e.g. the chemical composition of the air in order to get new insights often with the involvement of different science groups. For discussion of the possibilites of the research flights, the Mission Support System (MSS) was developed (http://mss.rtfd.io). This software helps to review a big amount of metereological and model data by viewing the forecasted parameters of interest along possible regions of a proposed flight path. Data and possible flight paths can be displayed on a hoizontal view (map projection) or on a vertical view (along the proposed flight path). Flight paths can be constructed and modified on these views. Exchange through a waypoint table is also possible. The talk gives a brief insight into the MSS software development current state. We are using the OWS interface standard. https://geopython.github.io/OWSLib/ MSS is a client/server application. The QT client interacts with a paste wsgi server. The software is available for all platforms on conda-forge. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M18S	1638	2d	hd	false	https://i.ytimg.com/vi/G3h21DdDTjQ/maxresdefault.jpg		164	2	2	0	0
404	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jufpfjjpgUU	2017-10-13T14:15:50Z	2017-10-13 14:15:50	Marc Garcia - A Gentle Introduction to Data Science	"A Gentle Introduction to Data Science [EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 1] [Rimini, Italy] This introductory talk, will cover the basics of datascience. From the incluence of artificial intelligence, and the quest to replicate a human mind, to a practical demo on how to build a hello world machine learning in Python. The talk will try to answer questions such as: What do we understand by data science? What do we know about the human mind, that can be an inspiration for our programs? Which problems can we solve with data science? What tools are available to do data science in Python? License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT32M8S	1928	2d	hd	false	https://i.ytimg.com/vi/jufpfjjpgUU/maxresdefault.jpg		361	5	1	0	1
405	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bGJ41J5b_90	2017-10-13T14:15:49Z	2017-10-13 14:15:49	Tim Großmann - Automating Instagram with Python and Selenium	"Automating Instagram with Python and Selenium [EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 1] [Rimini, Italy] In this talk about using Selenium and Python for social media automation you will get some insights into growing your own open source projects into tools that really get used and maintained by a community. You will get an idea of what pitfalls you have to face when working with something as fast changing as Instagram and how to best tackle this. You'll learn what the ""Page Object"" design pattern is, what it is useful for and why we use it. Of course we will also talk about OpenSource and why it's important. A lot of the talk will be based on my article on InstaPy published at the freeCodeCamp publication on Medium: https://medium.freecodecamp.com/my-open-source-instagram-bot-got-me-2-500-real-followers-for-5-in-server-costs-e40491358340 So, who is this talk suited for? If you're just starting out with python, are interested in automation or simply like to see a fun and interesting little open source project, I'd love to see you at my talk and hear your ideas and opinions about it. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M42S	1782	2d	hd	false	https://i.ytimg.com/vi/bGJ41J5b_90/maxresdefault.jpg		2092	38	1	0	1
406	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	AHHlohyHh2w	2017-10-13T14:15:48Z	2017-10-13 14:15:48	Jean-Sébastien Bevilacqua - Call a C API from Python becomes more enjoyable with CFFI	"Call a C API from Python becomes more enjoyable with CFFI [EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 2] [Rimini, Italy] Python is slow ! Python can’t access bare metal! You often hear theses assumptions? Theses limitations can be surpassed by Python extensions written in C. However, according to my personal experience, doing this by leveraging C may yield to several issues (e.g., memory management). C Foreign Function Interface for Python (a.k.a., CFFI) allows you to easily write Python extensions. One of the main aims of CFFI is to to wrap C libraries. Along the same lines, it may also be used for performance enhancement. By this call, I am firstly presenting CFFI and it’s two modes of utilization: API level and ABI level. Then I will share my own experience about wrapping shaderc library (https://github.com/google/shaderc) in six hours pyshaderc (https://github.com/realitix/pyshaderc). Next we are going to the next level, let’s wrap all the Vulkan API! Vulkan is the new 3D API and is not a piece of cake. To see the real advantage of CFFI, a side by side comparison between two Python modules is going to be presented: CVulkan is a Vulkan wrapper written fully in C, it’s a classic C extension for Python vulkan is its CFFI counterpart without any C written, only Python I have developed two versions of Vulkan wrapper (one in a pure C, and the second by leveraging CFFI) and I can assure you that CFFI is a a way better! Let’s code! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M21S	1881	2d	hd	false	https://i.ytimg.com/vi/AHHlohyHh2w/maxresdefault.jpg		285	9	0	0	1
407	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FtRbAePXUoI	2017-10-13T14:15:48Z	2017-10-13 14:15:48	Katharine Jarmul - If Ethics is not None	"If Ethics is not None [EuroPython 2017 - Keynote - 2017-07-12 - Anfiteatro 2] [Rimini, Italy] The history of computing, as it's often covered in textbooks or talks, remains primarily focused on a series of hardware advancements, architectures, operating systems and software. In this talk, we will instead explore the history of ethics in computing, touching on the early days of computers in warfare and science, leading up to ethical issues today such as Artificial Intelligence and privacy regulation. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT58M28S	3508	2d	hd	false	https://i.ytimg.com/vi/FtRbAePXUoI/maxresdefault.jpg		491	17	0	0	0
408	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-DcZvwbq27s	2017-10-13T14:15:47Z	2017-10-13 14:15:47	Emma Gordon - Writing code? Pfft... Evolve it instead!	"Writing code? Pfft... Evolve it instead! [EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 2] [Rimini, Italy] We're heading into a future of delivery drones, driverless cars and 3D-printed ""hoverboards"" ... With machines now able to perform many tasks better than humans, some people are going to be out of a job. But not software developers, right?! Could a computer generate the code you currently write for a living? In this talk, we'll take a look at one of the many biologically inspired approaches to AI - Genetic Algorithms, and how they can be used to generate code given a description of the function that that code should perform. Spoiler - you're probably not out of a job, yet... License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT20M56S	1256	2d	hd	false	https://i.ytimg.com/vi/-DcZvwbq27s/maxresdefault.jpg		208	5	4	0	0
409	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	857c3LE4eH4	2017-10-13T14:15:47Z	2017-10-13 14:15:47	Alessandro Amici - Fast Python! Coding competitions with CPython and PyPy	"Fast Python! Coding competitions with CPython and PyPy [EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 2] [Rimini, Italy] In a coding competition you want to solve problems ""fast""... why would you choose a ""slow"" interpreted language like Python? Because the ""slow"" Python wins competitions more often that most people think. We will show how coding competitions work, what are the resources and constraints that competitors need to take into account, and we will find out that, like very often in real life, the actual processing time is only a small term in the complex equation that describe a competition. The ""faster"" PyPy may help in gaining raw speed, but that is not the real advantage it gives you in a competition. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M57S	2697	2d	hd	false	https://i.ytimg.com/vi/857c3LE4eH4/maxresdefault.jpg		859	15	2	0	3
410	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SVxuUGjB8YU	2017-10-13T14:15:06Z	2017-10-13 14:15:06	Dmitry Trofimov - PyCharm tips and tricks	"PyCharm tips and tricks [EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 2] [Rimini, Italy] PyCharm, a Python IDE with its free and open-source community edition, in last several years has become a tool of choice for more and more Python developers. But not everybody uses its full power. Moreover, most only use a fraction of the functionality it provides. The reality is that an IDE is not just about a set of integrated tools, but an environment that understands the semantics of your project, of what you’re doing. It can leverage this to provide you with functionality that can make repetitive mundane tasks become frictionless, as well as give insight into potential problems. In this session, we will go through the most powerful features the IDE offers and whether you do web development or work with data using Python, you will benefit knowing how the IDE can leverage your programming skills. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT59M22S	3562	2d	hd	false	https://i.ytimg.com/vi/SVxuUGjB8YU/maxresdefault.jpg		3736	37	6	0	2
411	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NQfpHQII2cU	2017-10-13T14:15:05Z	2017-10-13 14:15:05	Antonio Cuni - The joy of PyPy JIT: abstractions for free	"The joy of PyPy JIT: abstractions for free [EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 2] [Rimini, Italy] The joy of PyPy JIT: abstractions for free The PyPy JIT is a powerful piece of technology which makes Python program running faster: in this talk, we will see how it helps us to write our programs better without sacrificing performance. One of the key to write complex software systems of good quality is to make a good usage of abstractions, to clearly separate the various layers and components. However, often each layer of abstraction adds some cost in terms of runtime performance, so we need to struggle finding the best trade-off between maintainability and speed. Because of the way it works, the PyPy JIT naturally removes the cost of most abstractions: we will look at real-life examples of how this is possible, showing what the JIT can and can't do. We will also show how this compares to other popular systems of optimizing Python code, such as Cython. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT58M40S	3520	2d	hd	false	https://i.ytimg.com/vi/NQfpHQII2cU/maxresdefault.jpg		896	11	0	0	1
412	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ecD0U06iVTs	2017-10-13T14:15:04Z	2017-10-13 14:15:04	Ville Säävuori - Pythonic JavaScript for Web Developers	"Pythonic JavaScript for Web Developers [EuroPython 2017 - Talk - 2017-07-12 - PythonAnywhere Room] [Rimini, Italy] Having a basic knowledge of JavaScript is obligatory for every Web developer in todays world. Most of us are familiar with the pain of having to write some simple hide/show logic and ajax queries with jQuery on a page that is mostly rendered server-side. Nowadays, however, there are lots of great JavaScript frameworks and build tools that not only make these things very easy to do The Right Way, but also make the whole process quite painless. I spent past year in a small startup writing only front-end code and evaluating different tools and best practises. Bringing these tools to old Django projects has been eye-opening. There are practically no documentation or code examples on how to integrate these things to Python backend projects, so it’s very hard to get started from scratch. In this talk we’ll go trough some of the tools, examples on how to get started, and also some coding guidelines on how to make JavaScript look and feel more sane and Pythonic. The current state of JavaScript frameworks is notoriously bad; there are more of them than blog engines written with Django. We’ll focus on Vue.js (https://vuejs.org) which is a lightweight, very easy to get started and yet powerful tool. We’ll also take a look at new end-to-end browser test tools and modern build tools that enable us to take full advantage of the huge NPM package universe (Cheeseshop for JS) and write modern ES2015/ES2016 JavaScript that has more powerful and cleaner syntax. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT36M24S	2184	2d	hd	false	https://i.ytimg.com/vi/ecD0U06iVTs/maxresdefault.jpg		248	3	2	0	1
413	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qq6eHivQOjI	2017-10-13T14:15:04Z	2017-10-13 14:15:04	A. Skrobov - How CPython parser works, and how to make it work better	"How CPython parser works, and how to make it work better [EuroPython 2017 - Talk - 2017-07-12 - PythonAnywhere Room] [Rimini, Italy] The part of CPython core that parses the Python source code is some very old and convoluted code: the time has proven its reliability, but few CPython hackers understand (or care) how it works, or even what exactly it does. There is, however, a good reason to care: for short-running scripts, the performance of CPython may easily be dominated by that of parsing the source code. The talk will describe the two parsers that are involved, it will explain how these two parsers build two different kinds of syntax trees, and then show how the structure of one of the trees can be amended to reduce its memory footprint threefold, with only minor changes necessary in its consumers. It will also suggest other, more invasive improvements, which can yield even better savings. The talk will assume fluency in C and a basic acquaintance with CPython core internals, and will give the attendees an introduction into hacking the parser, guiding their way through to the very tangible end result of reducing Python overall memory consumption by up to 30%, measured at standard micro-benchmarks. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M27S	1887	2d	hd	false	https://i.ytimg.com/vi/qq6eHivQOjI/maxresdefault.jpg		380	7	1	0	0
414	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JO0U8QbzSw8	2017-10-13T14:15:03Z	2017-10-13 14:15:03	Mihai Iachimovschi - Teach your (micro)services speak Protocol Buffers with gRPC.	"Teach your (micro)services speak Protocol Buffers with gRPC. [EuroPython 2017 - Talk - 2017-07-12 - PythonAnywhere Room] [Rimini, Italy] When it comes to microservices, there're a lot of things worth keeping in mind. Designing such fine-grained, loosely-coupled services requires paying lots of attention to various patterns and approaches to make them future-proof. A very important thing to consider, is the way those services will communicate with each-other in production. Usually the communication is done over the network using a technology-agnostic protocol. At the next level the service should provide an API for its friend services. Then, the data should be serialized without altering its meaning and transferred to the picked endpoint. Nowadays, exposing a REST API that operates with JSON over plain HTTP is a usual way to lay the grounds of communication for the services. It is easy to accomplish, but it has some drawbacks. First of all, JSON is a human readable format, and it’s not as other serialization approaches. Also, with JSON it’s not possible to natively enforce the schema, and evolving the API may be painful. This talk’s purpose is to describe in deep detail the benefits of protocol buffers, that offer us for free an easy way to define the API messages in the proto format, and then reuse them inside different services, without even being locked to use the same programming language for them. Moreover, with gRPC we can define the API’s endpoints easily in the same proto format. All these offer us a robust schema enforcement, compact binary serialization, and easy backward compatibility. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M9S	1629	2d	hd	false	https://i.ytimg.com/vi/JO0U8QbzSw8/maxresdefault.jpg		439	15	0	0	1
415	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	x08ehgfbp34	2017-10-13T14:15:02Z	2017-10-13 14:15:02	Kristi Progri, Jona Azizaj - How to build up a Python community and empower women	"How to build up a Python community and empower women [EuroPython 2017 - Talk - 2017-07-12 - PythonAnywhere Room] [Rimini, Italy] In 2012 not a lot of people were interested in Python in the relatively small city of Tirana, the capital of Albania. Even fewer girls were interested in Python. During (Jona Azizaj and me) our talk we will share the story of how we, a small but dedicated group of people, jump started the community in a small country like Albania and what other small cities and countries should avoid during their first steps in developing a Python community in similar conditions. Most important we will share tips and tricks on how to keep the Python spirit alive for a long time after the first enthusiastic steps, with the goal that our shared experience will help other communities to make the first steps or grow even further. Also nowadays we are witnessing that the number of girls involved in technical fields, especially development, is really low and we are going to present what as the influence on low participation of girls and the steps we should take to fix it. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT50M58S	3058	2d	hd	false	https://i.ytimg.com/vi/x08ehgfbp34/maxresdefault.jpg		109	3	2	0	1
416	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ufhK14CJpjM	2017-10-13T14:14:02Z	2017-10-13 14:14:02	Paolo Melchiorre - Full-Text Search in Django with PostgreSQL	"Full-Text Search in Django with PostgreSQL [EuroPython 2017 - Talk - 2017-07-12 - PythonAnywhere Room] [Rimini, Italy] After some experiences in the implementation of full-text search functionality with different system, we have decided to use PostgreSQL to implement full-text search functionality in our next project, a website to search for shows, venues, bands and festivals. In the past, I have worked in two different projects, a mobile platform to sell and buy used items and a sport videos sharing platform, where I used two of the most currently famous full-text search software (Elasticsearch or Solr) but I had some synchronization and management problems. After that, in my company, we searched for new Django support of full-text search PostgreSQL implementation and we decided to use it to avoid any problems that I had in the past. I’m going to start speaking about the full-text search in a general context and I want to show the problems I encountered implementing it in the past. Afterwards, I’m going to talk about the PostgreSQL functionality to implement the full-text search functionality and also present the django.contrib.potgres.search module, with step-by-step demonstrations of its functions with real world data. Finally, I’m going to show the way we use and test this functionality in our project and which functionality lacks us to have a complete implementation of full-text search in our project. At the end, I want to present my conclusions about our solution and I want to explore some new features that will be present in the next versions of Django and PostgreSQL. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT20M37S	1237	2d	hd	false	https://i.ytimg.com/vi/ufhK14CJpjM/maxresdefault.jpg		1687	26	2	0	9
417	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4V5ph6Hz9HQ	2017-10-13T14:14:01Z	2017-10-13 14:14:01	Max Tepkeev - How to make money with your Python Open-Source Project	"How to make money with your Python Open-Source Project [EuroPython 2017 - Talk - 2017-07-12 - PythonAnywhere Room] [Rimini, Italy] Developers create new open-source projects every day. As the project becomes popular they have to invest more and more time into it's development and of course at some point a question arises: ""How can I make some money with my project ?"" In this talk we will try to answer this question. We will talk about different models of making money, their pros and cons. We will concentrate on Python Open-Source projects mostly and try to answer the following questions: What to sell? Where to sell? How to distribute? How to license? After this talk you will have a clear understanding of how you can make money with your project. What your next steps should be and how you can get the actual profit while still continuing making your customers happy. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M11S	1631	2d	hd	false	https://i.ytimg.com/vi/4V5ph6Hz9HQ/maxresdefault.jpg		3238	48	3	0	1
418	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7BsfMMYvGaU	2017-10-13T14:14:01Z	2017-10-13 14:14:01	Anjana Vakil - Mary had a little lambda	"Mary had a little lambda [EuroPython 2017 - Talk - 2017-07-12 - Arengo] [Rimini, Italy] Mary had a little lambda, a function pure as snow. And for every program that Mary wrote, the lambda was all she needed to know. Python’s lambda, a tiny anonymous function, can be useful in a pinch when you’re feeling too lazy to type that extra d-e-f. But did you know that behind this little lambda is actually one of the most powerful &amp; elegant abstractions in the history of computer science? The lambda calculus, dating back to the work of lambda shepherd Alonzo Church in the 1930's, lets us represent our programs - all their logic and data - as pure, anonymous functions, using nothing but (a whole lot of) lambda. Let’s take it for a spin and see what we can create: booleans and conditionals, integers, arithmetical operators, data structures… you name it. With some determination, and a little squinting, we might even see lambda do the impossible: reconcile object-oriented and functional programming. You heard it right: lambda can do it all! Join me as we explore its astounding computational power, and walk away with a deeper respect and admiration for the almighty little lambda. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M21S	2661	2d	hd	false	https://i.ytimg.com/vi/7BsfMMYvGaU/maxresdefault.jpg		3347	74	3	0	4
419	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rEP-4Di3d-A	2017-10-13T14:14:00Z	2017-10-13 14:14:00	Romain Dorgueil - Simple ETL in python 3.5+ with Bonobo	"Simple ETL in python 3.5+ with Bonobo [EuroPython 2017 - Talk - 2017-07-12 - Arengo] [Rimini, Italy] Simple is better than complex, right? That’s true for data pipelines too. For more than 5 years, I hacked together extract-transform-load (ETL) processes in various different positions (ETL is just a fancy term for «bunch of things that take data somewhere and put it elsewhere, eventually transformed»). I did it as a founder, as a consultant, as a technical co-founder, for some side projects, and now in a big corp (to be continued…). In each case, I felt frustrated with the tools available, and in some serious cases, I had to hack things myself to get the job done. https://www.bonobo-project.org/ Bonobo is the repackaging of my past experiences for python 3.5+, and grasping the basics should not take more than the length of the presentation. Topics outline (subject to small changes) : • INTRO : State of the art / different tools for different needs. • Where does it come from. • Writing a data processor. • Running and monitoring data jobs. • OUTRO : The road ahead. • Q&A Bonobo is the glue you need to tie together regular functions in a transformation graph (think unix pipes). Execution strategies are abstracted so you can focus on the real operations. As a result, you can engineer simple and testable systems, using the same good computer development practices as you use in -insert your favorite field here-. Spoiler : there is no «big data» in this talk. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT43M20S	2600	2d	hd	false	https://i.ytimg.com/vi/rEP-4Di3d-A/maxresdefault.jpg		1144	11	1	0	1
420	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	y3hKSB-qYME	2017-10-13T14:14:00Z	2017-10-13 14:14:00	Marc-Andre Lemburg - Automatic Conference Scheduling with PuLP	"Automatic Conference Scheduling with PuLP [EuroPython 2017 - Talk - 2017-07-12 - Arengo] [Rimini, Italy] Linear programming is often regarded as very theoretical or even not known at all as a well-developed method of solving real world problems. The talk gives a short introduction to LP problems and presents an interesting use case for the Python linear programming problem solver PuLP: that of creating a conference schedule. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M10S	1870	2d	hd	false	https://i.ytimg.com/vi/y3hKSB-qYME/maxresdefault.jpg		343	4	0	0	0
421	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WjEVJ4x2SXE	2017-10-13T14:13:59Z	2017-10-13 14:13:59	Alexander Hendorf - Neat Analytics with Pandas Indexes	"Neat Analytics with Pandas Indexes [EuroPython 2017 - Talk - 2017-07-12 - Arengo] [Rimini, Italy] Pandas is the Swiss-Multipurpose Knife for Data Analysis in Python. In this talk we will look deeper into how to gain productivity utilising Pandas powerful indexing and make advanced analytics a piece of cake. We will cover: Pandas indexing recap Index Types Time-Series Index and resampling Pandas Multi-Indexing License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M54S	1734	2d	hd	false	https://i.ytimg.com/vi/WjEVJ4x2SXE/maxresdefault.jpg		253	0	2	0	0
422	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xFgFtk-0zsk	2017-10-13T14:13:58Z	2017-10-13 14:13:58	Martin Christen - Rendering complex 3D-Geodata using pyRT	"Rendering complex 3D-Geodata using pyRT [EuroPython 2017 - Talk - 2017-07-12 - Arengo] [Rimini, Italy] PyRT (pronounced ""pirate"") is a rather new open source project creating a ray tracer in pure Python and some optional CPU/GPU acceleration using bindings. Ray tracing is a technique for generating an image by tracing the path of light. PyRT was created to render large 3D City models. In this talk, the possibilities and experiences of ray tracing in Python using pyRT are shown. pyRT also runs in the Jupyter Notebook. Rendering complex 3D-Geodata, such as 3D-City models with an extremely high polygon count and a vast amount of textures at interactive framerates is still a very challenging task, especially on mobile devices. This talk presents an approach for processing, caching and serving massive geospatial data in a cloud-based environment for large scale, out-of-core, highly scalable 3D scene rendering in a web-based solution. PyRT is used for rendering large amounts of geospatial data. The approach for processing, rendering and caching 3D-City Models is shown. Screenshots: https://github.com/martinchristen/pyRT/raw/master/jupyter/img/sponza.png https://github.com/martinchristen/pyRT/blob/master/jupyter/img/Berlin_AO_small.PNG?raw=true License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M1S	1801	2d	hd	false	https://i.ytimg.com/vi/xFgFtk-0zsk/maxresdefault.jpg		231	1	1	0	0
423	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4JwpDGrMsJE	2017-10-13T14:09:21Z	2017-10-13 14:09:21	Pietro Battiston - How to use pandas the wrong way	"How to use pandas the wrong way [EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 1] [Rimini, Italy] UPDATE: slides and materials can be found at http://pietrobattiston.it/python:pycon#europython_rimini_july_2017 The pandas library represents a very efficient and convenient tool for data manipulation, but sometimes hides unexpected pitfalls which can arise in various and sometimes unintelligible ways. By briefly referring to some aspects of the implementation, I will review specific situations in which a change of approach can make code based on pandas more robust, or more performant. Some examples: inefficient indexing multiple dtypes and efficiency implicit type casting HDF5 storage overhead GroupBy.apply()... when you don't actually need it License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT43M45S	2625	2d	hd	false	https://i.ytimg.com/vi/4JwpDGrMsJE/maxresdefault.jpg		378	5	0	0	0
424	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yUl9g4YtNZo	2017-10-13T14:09:21Z	2017-10-13 14:09:21	Francesco Nazzaro - Facing the challenge of climate change with xarray and Dask	"Facing the challenge of climate change with xarray and Dask [EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 1] [Rimini, Italy] In the last years climate change has become one of the most important topic. For any period longer than a few days science is not able to provide comparable forecasts, but still a lot of useful information about future climate conditions can be gained on time scale of a few months to even several years. Climate forecast and climate projections data are quite complex to analyse and represent. The Python science ecosystem proves extremely effective as a platform to retrieve, analyse, process and present this type of data. The backbone of the platform is the n-dimensional array library xarray that provides the perfect mix between pandas data structures and dask performance and parallelization. Reliable climate forecasts and climate projections are now available from the Copernicus Climate Change Service, operated by ECMWF, that will become the central hub for European effort in study and mitigate climate change impacts. The service also provides access to an open cloud platform, the CDS Toolbox, that is based on the Python 3 xarray/dask/pandas stack. In this talk I will present how to retrieve, analyse, process and display climate data in a generic use case with xarray and with the Copernicus CDS Toolbox. slides: http://slides.com/francesconazzaro/europython-2017 License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT24M22S	1462	2d	hd	false	https://i.ytimg.com/vi/yUl9g4YtNZo/maxresdefault.jpg		494	4	1	0	0
425	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7oROuV-HjSQ	2017-10-13T14:09:20Z	2017-10-13 14:09:20	Giuseppe Di Bernardo - Big Data Analytics at the MPCDF: GPU Crystallography with Python	"Big Data Analytics at the MPCDF: GPU Crystallography with Python [EuroPython 2017 - Talk - 2017-07-12 - Anfiteatro 1] [Rimini, Italy] In close collaboration with scientists from MPG, the Max Planck Computing and Data Facility is engaged in the development and optimization of algorithms and applications for high performance computing, as well as in the design and implementation of solutions for data-intensive projects. Python is now used at MPCDF in the emerging area of “atom probe crystallography” (APT): a Fourier spectral analysis in 3D reciprocal space can be simulated in order to reveal both composition and crystallographic structure at the atomic scale of billions APT experimental data sets. The Python data ecosystem has proved to be well suited to this, as it has grown beyond the confines of single machines to embrace scalability. This talk aims to describe our approach to scaling across multiple GPUs, and the role of our visualization methods too. Our data workflow analysis relies on the GPU-accelerated Python software package called PyNX, an open source Python library which provides fast parallel computation scattering. The code is well suited for GPU computing, using both the pyCUDA and pyOpenCL libraries. Exploratory data analysis and performance tests are initially carried on through Jupyter notebooks and Python packages e.g., pandas, matplotlib, plotly. In production stage, interactive visualization is realized by using standard scientific tool, e.g. Paraview, an open-source 3D visualization program which e.g. requires Python modules to generate visualization components within VTK files. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M10S	1750	2d	hd	false	https://i.ytimg.com/vi/7oROuV-HjSQ/maxresdefault.jpg		222	4	1	0	0
426	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YWobIPRRnbU	2017-10-13T14:09:06Z	2017-10-13 14:09:06	Andreas Heider, Robert Wall - Taking the Hipster out of Streaming	"Taking the Hipster out of Streaming [EuroPython 2017 - Talk - 2017-07-12 - Arengo] [Rimini, Italy] Winton ingests data continually from the world's financial markets. We track millions of individual timeseries, with divergent formats, from disparate time zones, and whose frequencies vary from months to milliseconds. We go beyond simply reading and storing it - we stitch distinct and vast data sets together and subject them to intricate calculations in real-time. This talk will focus on the way we use Python to achieve these ends, and how we are creating tools to further commoditise streaming as a service. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M53S	1853	2d	hd	false	https://i.ytimg.com/vi/YWobIPRRnbU/maxresdefault.jpg		210	2	0	0	1
427	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wXgMgSnj7PM	2017-10-13T14:09:06Z	2017-10-13 14:09:06	Alexander Lourenco - Realtime Distributed Computing At Scale: Storm And Streamparse	"Realtime Distributed Computing At Scale (in pure Python!): Storm And Streamparse [EuroPython 2017 - Talk - 2017-07-12 - Arengo] [Rimini, Italy] Realtime distributed computing is tough, especially at scale: managing a large data pipeline is tough, and it’s even tougher to keep latency low and availability high when processing tens of thousands of items per second. Many people turn in despair to Java or Scala when it comes time to scale up, but we can do it in Python: Apache Storm is a distributed realtime computation system that can let you scale up- and no need to reach for a new language! This talk will walk the audience through the basics of Apache Storm and how it’s an elegant, useful solution to realtime distributed computing, as well as how streamparse can let you write your storm components in Python by writing some code and a basic storm topology in Python. We’ll also look at how Parsely uses Storm in production to handle billions of realtime events a month. If we have time, we’ll go a bit into how Storm has several advantages over other common Python computing data streaming solutions, like Spark’s microbatching. Goals: At the end of the talk, ideally you should be able to understand: What Apache Storm is, how it works generally, and what scenarios it’s useful for How streamparse can be used to write your Storm topologies How Storm + streamparse is used in an actual high-availability, low-latency production environment License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M31S	1771	2d	hd	false	https://i.ytimg.com/vi/wXgMgSnj7PM/maxresdefault.jpg		269	5	0	0	0
428	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3DJHefC6v28	2017-10-13T14:09:05Z	2017-10-13 14:09:05	Alice Harpole - Sustainable Scientific Software Development	"Sustainable Scientific Software Development [EuroPython 2017 - Talk - 2017-07-12 - PyCharm Room] [Rimini, Italy] In the experimental Sciences, new theories are developed by applying the Scientific method to produce results which are accurate, reproducible and reliable. This involves testing the experimental setup to show that it is working as designed and thoroughly documenting the progress of the experiment. Results will not be trusted unless the experiment has been carried out to a suitable standard. In computational Science, we should aim to apply the same principles. Results should only be trusted if the code that has produced it has undergone rigorous testing which demonstrates that it is working as intended, and any limitations of the code (e.g. numerical errors) are understood and quantified. The code should be well documented so that others can understand how it works and run it themselves to replicate results. Unfortunately, this can be quite challenging. By their very nature, scientific codes are built to investigate systems where the behaviour is to some extent unknown, so testing them can be quite difficult. They can be very complex, built over a number of years (or even decades!) with contributions from many people. However, even for the most complicated of codes there are a number of different tools we can use to build robust, reliable code. In this talk, I shall look at techniques and tools you can use to build more sustainable scientific code, including testing, continuous integration and documentation. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT33M35S	2015	2d	hd	false	https://i.ytimg.com/vi/3DJHefC6v28/maxresdefault.jpg		192	12	0	0	0
429	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LXI48d2gif0	2017-10-13T14:09:04Z	2017-10-13 14:09:04	Harald Armin Massa - PostgreSQL - The Database for Industry 4.0 and IOT	"PostgreSQL - The Database for Industry 4.0 and IOT [EuroPython 2017 - Talk - 2017-07-12 - PyCharm Room] [Rimini, Italy] Industry 4.0 - the current trend to make more use of data technology and analysis in manufactring. IOT - The Internet of Things, where many ""things"" currently just loosing their information will transfer and store them within central systems. There are aspects of those trends most do agree on: There will be orders of magnitude more data to store and analyze. More agents will need to connect and interact with databases. This talk will explore what makes PostgreSQL an excellent candidate to be the database for managing all that data. Strengths in development, culture and community, extensibility and robustnest will be presented. Selected features of current Version 9.6 and the soon-to-be-released PostgreSQL Version 10 will be discussed for their value in those trends. There will be an explanation of their technical realisation, and special pointers how to use those features from PostgreSQL. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M7S	2647	2d	hd	false	https://i.ytimg.com/vi/LXI48d2gif0/maxresdefault.jpg		342	4	0	0	0
430	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Rs7qccf-Ll0	2017-10-13T14:09:04Z	2017-10-13 14:09:04	David Liu - Infrastructure design patterns with Python, Buildbot, and Linux Containers	"Infrastructure design patterns with Python, Buildbot, and Linux Containers [EuroPython 2017 - Talk - 2017-07-12 - PyCharm Room] [Rimini, Italy] In today’s world of fast-paced development, infrastructure can get left behind quickly, leading to a potential increase in technical debt. Buildbot is normally known to be a continuous integration (CI) framework built in Python, but can be refashioned to solve infrastructure design patterns that arise in enterprise or production and deployment situations. Using Python and native Buildbot components paired with Linux Containers, patterns such as license management, resource allocation, load balancing, and enterprise application deployment can be architected quickly with room for expansion as one’s needs grow. Learn how to move past the CI mindset and construct infrastructure needs with Buildbot and popular Linux Containers such as Docker and ClearContainers. Attendees will learn the best known methods of configuring Buildbot in non-CI implementations, and how to utilize the framework components for future needs. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M37S	1657	2d	hd	false	https://i.ytimg.com/vi/Rs7qccf-Ll0/maxresdefault.jpg		1620	13	0	0	0
431	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	VWoyeq_ujJ4	2017-10-13T14:09:03Z	2017-10-13 14:09:03	Vinicius Pacheco - Green threads in Python	"Green threads in Python [EuroPython 2017 - Talk - 2017-07-12 - PyCharm Room] [Rimini, Italy] This talk is for general public with problems to scale. The good background for this talk is people with minimal knowledge about threads. After this talk I expect that the audience can be enable to understand multiprocessing, when use and which tools and methods are appropriate for each case. Understanding threads It's the first moment on the talk. Here I'll speak about the thread theory and what happen when we use threads on the OS Threads and multiprocess API I'll give simple examples about what python give us to use threads and multiprocessing perhaps with two APIs https://docs.python.org/3/library/threading.html https://docs.python.org/3.5/library/multiprocessing.html Understanding Green threads Here I'll speak about green threads theory and what happen when we use green threads on our OS Green thread Patterns and tools Here I'll show few examples with keep alive patterns, discuss about a few tools and show gevent and asyncio examples Parallelism x asynchronism I'll show the diference between parallelism and asynchronism discussing about the two theories Why, when and how It's is the last talk moment and I'll explain the how complex is work with multiprocess showing cases like queues consume and APIs consume License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT26M41S	1601	2d	hd	false	https://i.ytimg.com/vi/VWoyeq_ujJ4/maxresdefault.jpg		1980	46	7	0	4
432	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sQ9H2h-y_p4	2017-10-13T14:09:02Z	2017-10-13 14:09:02	Raphael Pierzina - Hi, my name is README! - A Look at Why Docs are So Important	"Hi, my name is README! - A Look at Why Docs are So Important [EuroPython 2017 - Talk - 2017-07-12 - PyCharm Room] [Rimini, Italy] When starting a new project, as developers we usually get right into hacking things, like tinkering with libs that we would like to learn or solving a particular problem as quickly a possible. Occasionally we also decide to publish the resulting package to PyPI, so that others can use our nifty code, submit a pull request and maybe even form a community around the project. If you're lucky someone might find it on the front-page of PyPI or the GitHub search or maybe even Hacker News or Reddit. What happens next is on you really. But what does that mean? Before jumping right to the command line and installing your package, those who are interested usually try to find out what problems the project is solving and how it can help them with their own. That's what your README file is for - it's most likely the first thing potential users read, that you control. A good README briefly and concisely explains what your software does, how it can be installed and what API it exposes. You also want to provide information on the requirements, the license it uses and how the project is managed. Who are you? How to get in touch to report problems and give feedback? Where can I find the Code of Conduct for this project? This talk is for everyone who is interested in working on open source projects and wants to know how documentation can help newcomers and more experienced users use your code and to encourage them to engage in the community. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT39M35S	2375	2d	hd	false	https://i.ytimg.com/vi/sQ9H2h-y_p4/maxresdefault.jpg		182	4	0	0	0
433	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sbIzdpQdaYs	2017-10-13T14:09:02Z	2017-10-13 14:09:02	Lee Sheng - Teeing up Python: Code Golf	"Teeing up Python: Code Golf [EuroPython 2017 - Talk - 2017-07-12 - PyCharm Room] [Rimini, Italy] Code golfing is an interesting heuristic dedicated to minimizing the overall length of code to produce the same functionality. The result doesn’t have to be incomprehensible, and in fact, we can make the code more Pythonic in the process! Concise code helps future readers of the code understand the intent without getting distracted by implementation errata. We’ll cover numerous features of Python which allow complex ideas to be expressed concisely without sacrificing readability. Broad subtopics: Why even bother? Default! The two sweetest words in the english language! The Joy of Tuples Comprehending Comprehensions Who’s afraid of Functional Programming? Ideas in Context Managers Slides: https://goo.gl/hGk7nX License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M23S	1643	2d	hd	false	https://i.ytimg.com/vi/sbIzdpQdaYs/maxresdefault.jpg		617	17	0	0	2
434	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	avUcnPzHxB4	2017-10-13T14:09:01Z	2017-10-13 14:09:01	Lightning Talks - 2017-07-12	"Lightning Talks [EuroPython 2017 - - 2017-07-12 - Anfiteatro 2] [Rimini, Italy] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT1H25M41S	1541	2d	hd	false	https://i.ytimg.com/vi/avUcnPzHxB4/maxresdefault.jpg		238	1	1	0	0
435	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FThx_Jk24Rc	2017-10-07T14:43:33Z	2017-10-07 14:43:33	Hynek Schlawack - Solid Snakes	"Solid Snakes [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 1] [Rimini, Italy] No matter whether you run a web app, search for gravitational waves, or maintain a backup script: being responsible for a piece of software or infrastructure means that you either get a pager right away, or that you get angry calls from people affected by outages. Being paged at 4am in everyday life is bad enough. Having to fix problems from hotel rooms while your travel buddies go for brunch is even worse. And while incidents can’t be prevented completely, there are ways to make your systems more reliable and minimize the need for (your!) manual intervention. This talk will help you to get calm nights and relaxing vacations by teaching you some of them. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M46S	2686	2d	hd	false	https://i.ytimg.com/vi/FThx_Jk24Rc/maxresdefault.jpg		268	4	1	0	0
436	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hnQKsxKjCUo	2017-10-07T14:43:31Z	2017-10-07 14:43:31	Sebastian Neubauer - There should be one obvious way to bring python into production	"There should be one obvious way to bring python into production [EuroPython 2017 - Talk - 2017-07-11 - PyCharm Room] [Rimini, Italy] The DevOps methodology is reality. That said, many developers have to deal with the process of bringing python applications into production. One aphorism of the Zen of Python states: ""There should be one-- and preferably only one --obvious way to do it."" While for the language itself and code being written with it, this advice is often strictly followed for good reasons. For the process of bringing python into production it is not. In the first part of this talk I will give an overview of the different steps in the delivery pipeline, from packaging to deployment and the various possible implementations for each of those steps that emerged over the last years. We will discuss docker, pex, wheels, debs, and tars. We will learn why fixed environments are crucial and why pip is not yet what it should be. We learn about the different runtime environments, from bare metal servers over ephemeral container clusters to “serverless” and what they impose on the deployment process and scratch on the surface of configuration management using tools like Ansible and orchestration frameworks like Kubernetes. We will also explore the world beyond python by looking into other languages ecosystems and learn how they addressed and solved this issue. After we understood the requirements and realized that there is not ""one obvious way to do it"", this talk is a call to action: Let us define and build the “one obvious way” of how we want to bring python into production! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M34S	1834	2d	hd	false	https://i.ytimg.com/vi/hnQKsxKjCUo/maxresdefault.jpg		508	4	2	0	1
437	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5BiqdDXtFfA	2017-10-07T14:43:30Z	2017-10-07 14:43:30	Mike Müller - Programming in Parallel with Threads	"Programming in Parallel with Threads [EuroPython 2017 - Talk - 2017-07-11 - PyCharm Room] [Rimini, Italy] Threads are typically not the way to take advantage of multiple CPUs for CPU-bound problems. The Global Interpreter Lock (GIL) allows the use of only one CPU at the time when using threads. However, the GIL is released for IO task The use case is a scientific simulation model that has to run 18,000 different simulations. The input data for these simulations need to be extracted from a common database, re-assembled and translated into several input files per simulation. After each simulation that is run with an external, standalone executable, the output data needs to be gathered and rearranged in a output database. The implementation scaled up to 50 threads. On a eight-core machine more than 90 % usage of all CPUs could be achieved, bringing the total run time down to about two hours from about 15 hours. Depending on the use case, threading can help to speedup a program and even take advantage of multiple CPUs. This talk presents such a use case. The approach can be translated to problems from other domains if the sub-tasks can be turned into IO tasks. Asynchronous programming could have been used here. However using a thread per task and using class that represents a task, is likely conceptually simpler for programmers not used to asynchronous programming. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT34M48S	2088	2d	hd	false	https://i.ytimg.com/vi/5BiqdDXtFfA/maxresdefault.jpg		410	9	0	0	1
438	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Xgy3OCEVuEA	2017-10-07T14:43:30Z	2017-10-07 14:43:30	Christoph Heer - How SAP is using Python to test its database SAP HANA	"How SAP is using Python to test its database SAP HANA [EuroPython 2017 - Talk - 2017-07-11 - PyCharm Room] [Rimini, Italy] SAP operates one of the largest test infrastructure to test its in-memory database SAP HANA. The infrastructure provides different services like continues integration, code coverage and code linting for a huge C++ project with Python test coding. These services are essential for the development teams and quality specialists. Without these services developing and shipping of new SAP HANA version wouldn’t be possible. In 2010, we started with a single Jenkins master with ten nodes. But to keep our testing time acceptable for the growing number of developers we had to scale up and that led to multiple different scaling challenges. The current test infrastructure is powered by more than thousand physical servers. Scaling of the infrastructure was only possible with custom optimizations like improved scheduling, expressive test configuration and robust tooling implemented in our favorite language Python. With the flexibility and power of Python it’s possible for developers to implement complex test scenarios to verify features and mitigate regressions. On infrastructure side, it has been easier to extend, optimize and adapt the infrastructure for new requirements like different CPU architectures and newer Operating systems versions. This talk provides insights and stories how we scaled and improved our test infrastructure and how new technologies like Linux Containers can improve automated testing and software quality assurance. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M35S	1775	2d	hd	false	https://i.ytimg.com/vi/Xgy3OCEVuEA/maxresdefault.jpg		2757	15	3	0	1
439	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yNXqXcbnVu8	2017-10-07T14:43:30Z	2017-10-07 14:43:30	Martin Christen, Roberto De Ioris, Tomislav Uzelac - Making Games with Python: Mission Impossible?	"Making Games with Python: Mission Impossible? [EuroPython 2017 - Panel - 2017-07-11 - Arengo] [Rimini, Italy] A discussion about making full-featured, commercial games in python, both 2D and 3D. Looking at state of the art approaches to using python in gaming, we will compare the alternatives: pygame (2D API), OpenGL (via pygame/pySDL2), Unreal Engine 4 and the Godot Engine (with further comparison to Unity 3D game engine). We will also look at other benefits of using python in the gaming context, such as integration with 3D modelling software, scripting the asset pipeline and GIS data integration. Finally, can (and should) python move beyond being the language of plugins and scripts, and become the main language for creating game development projects? License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT47M48S	2868	2d	hd	false	https://i.ytimg.com/vi/yNXqXcbnVu8/maxresdefault.jpg		365	8	1	0	0
440	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1vrUDDqMfR0	2017-10-07T14:43:29Z	2017-10-07 14:43:29	Amit Nabarro - Asynchronous I/O and the real-time web	"Asynchronous I/O and the real-time web [EuroPython 2017 - Talk - 2017-07-11 - Arengo] [Rimini, Italy] Building web applications is one of the most common uses of Python. With a plethora of different web frameworks aiming at varying audiences, it has become a rather simple and well-documented process to develop web applications and web services. So popular it has become that the WSGI specification is the industry standard protocol for developing web applications with Python. But the WSGI standard is lacking with two major limitations: It supports only the ‘traditional’ synchronous http request-response cycle thus creating a ‘glass ceiling’ with the amount of requests a single server can handle – often described as the C10K problem It does not provide an easy and efficient way of developing two-way communication between servers and clients. Often referred to as the real-time web this capability has become increasingly popular with modern web applications. Over the past decade multiple networking libraries have been developed to address these limitations. In this talk we will explore: What is an asynchronous web server and how it differs from other, WSGI-based web servers. What is concurrency and how it can help us achieve supreme performance and scalability in our web applications. We will survey noteworthy libraries which will help achieve true concurrency. How to develop real-time communication, using web sockets, with our Javascript application Concerns, limitations and pitfalls when developing asynchronous web applications. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M10S	1750	2d	hd	false	https://i.ytimg.com/vi/1vrUDDqMfR0/maxresdefault.jpg		581	14	0	0	1
441	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	D6kU7kJeX_s	2017-10-07T14:43:29Z	2017-10-07 14:43:29	Jan Willem Tulp - How to create inspiring data	"How to create inspiring data [EuroPython 2017 - Keynote - 2017-07-11 - Anfiteatro 2] [Rimini, Italy] Many times data visualizations need to communicate insights clearly and effectively. But sometimes the goals of a visualization go beyond that: they need to inspire and engage people. But how do you draw them in? What is the process behind creating a creative data visualization? During this talk, I will show some of my projects, and explain a little about the process behind it. Peter Hoffmann - Infrastructure as Python Code: Run your Services on Microsoft Azure "Infrastructure as Python Code: Run your Services on Microsoft Azure [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 1] [Rimini, Italy] Using Infrastructure-as-Code principles with configuration through machine processable definition files in combination with the adoption of cloud computing provides faster feedback cycles in development/testing and less risk in deployment to production. The Microsoft Azure Cloud (https://azure.microsoft.com/) allows different ways to provision, deploy and run your python service: The Azure Resource Manger Templates (https://azure.microsoft.com/en-us/resources/templates/) allows you to provision your application using a declarative template. With parameters, variables and Azure template functions, the same template can be used to deploy your application in different stages (dev, test, production) and environments for different customers. We open sourced the tropo library (https://pypi.python.org/pypi/tropo/) to create Azure Resource Templates from python. Azure SDK for Python (http://azure-sdk-for-python.readthedocs.io) for a low level access to manage resources in the Azure Cloud. An Azure Ansible Module (https://docs.ansible.com/ansible/guide_azure.html) based on the Azure SDK to automate software provisioning, configuration management, and application deployment in a single environment. Each of the alternatives has different strengths and drawbacks. Presenting our learnings from migrating our infrastructure into the Azrue Cloud will help to avoid common pitfalls and show deployment patterns that will ease the live of devops. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT48M9S	2889	2d	hd	false	https://i.ytimg.com/vi/D6kU7kJeX_s/maxresdefault.jpg		422	6	1	0	0
442	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	F62gvPaKr2U	2017-10-07T14:43:29Z	2017-10-07 14:43:29	Vita Smid - Feeding a real-time user interface	"Feeding a real-time user interface [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 2] [Rimini, Italy] Imagine you have some streaming computations running on a server. Client programs subscribe to real-time updates, so that they may visualise the computations for end users. How do you share this constantly changing server state with all connected clients? Sending an entire snapshot after each change is very inefficient, so you must implement some sort of incremental updates – diffs. But how do you generate these diffs on the server? And how do you represent them so the clients know how to apply them to update their own state? We have been working on these problems for a long time while building a stock trading platform in Python. I'd like to show you a couple of open source libraries that we developed for this purpose, and share our experience with tracking state and propagating it to user interfaces running in other processes. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT24M38S	1478	2d	hd	false	https://i.ytimg.com/vi/F62gvPaKr2U/maxresdefault.jpg		412	4	1	0	0
443	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	GXS-cR7opQY	2017-10-07T14:43:29Z	2017-10-07 14:43:29	Jonas Obrist - Why you might want to go async	"Why you might want to go async [EuroPython 2017 - Talk - 2017-07-11 - Arengo] [Rimini, Italy] Asynchronous programming is becoming a hot topic in the Python community, especially with the rise of popularity of Python 3 and the new asyncio library in its standard library. However, it can still be a confusing and mysterious concept. In this talk, I will explain what async programming is, how it works and how it could benefit you. My goal of this talk is that at the end of it, you have an idea about what we mean when we say asynchronous programming in Python and you know how and when to use it. In the first part of the talk, I will dive into what asynchronous programming is and what it isn't. Explaining the difference between IO bound code and CPU bound code. Then I will explain how this actually works in Python, explaining the idea of an event loop, coroutines and cooperative multitasking. Finally, I will talk about why this may be beneficial, what kind of applications can really benefit from this and provide some examples from my experience. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M47S	1727	2d	hd	false	https://i.ytimg.com/vi/GXS-cR7opQY/maxresdefault.jpg		697	22	0	0	0
444	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QIRyr6qvGrY	2017-10-07T14:43:29Z	2017-10-07 14:43:29	Anand Chitipothu - Writing Beautiful Code	"Writing Beautiful Code [EuroPython 2017 - Talk - 2017-07-11 - PyCharm Room] [Rimini, Italy] Writing code is hard. Writing beautiful code is even more so. How to write code that is pleasant to read, easy to understand and joy to maintain? Simple things like using right variable names, avoiding to much nesting, using white space and comments etc. makes a lot difference to readability of the code. Even though these things look very simple, even experienced programmers find it hard to put them in practice. In this talk, I’ll try summarise the age old wisdom of writing beautiful code and explain those ideas using practical examples written in Python. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT24M53S	1493	2d	hd	false	https://i.ytimg.com/vi/QIRyr6qvGrY/maxresdefault.jpg		1358	29	3	0	4
445	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TAuC086NNmo	2017-10-07T14:43:29Z	2017-10-07 14:43:29	Mariano Anaya - Discovering Descriptors	"Discovering Descriptors [EuroPython 2017 - Talk - 2017-07-11 - PythonAnywhere Room] [Rimini, Italy] Python is full of amazing (yet often overlooked) features, that can help us write better, cleaner, and more maintainable code. One of them is the descriptors interface. By means of descriptors, we can run code when accessing or setting properties of another object. This can have a lot of applications, and keeping descriptors in mind might come in handy when facing a hard problem. The goal of the talk is to explore descriptors, and how they can be written, as well as analysing some interesting examples in well-known libraries or projects in order to identify scenarios where descriptors are the Pythonic way to go. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT25M34S	1534	2d	hd	false	https://i.ytimg.com/vi/TAuC086NNmo/maxresdefault.jpg		322	3	5	0	1
446	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZFCAE8rxP7E	2017-10-07T14:43:29Z	2017-10-07 14:43:29	Juan Manuel Santos - You need more security in your application packaging	"You need more security in your application packaging [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 2] [Rimini, Italy] There are as many different ways to package an application as there are programming or scripting languages. No one tool or library is in itself better than another; however when security comes into the picture, there is definitely a pattern between ease of installation and how secure the delivered application is. As more work is put into packaging the application, more measures can be taken in order to ensure its integrity and prevent security issues. This talk will cover: - The roles involved in the lifecycle of an application, from the start of the development process until it reaches the end user and it is actually used. - The inherent problems in this subject, regarding installation and security, as well as how they are related. - The different ways of packaging an application in order to deliver it to an end user, focused on a Python perspective. After the talk, attendees will have a better grasp on which is the best way for them to package and deliver their application according to their environment and target audience. They will also learn about the upgrade path to switch from one delivery method to another, should they need or want to. For this talk, it is desired that attendees have some general systems knowledge. Even though the talk will be focused on Python applications, some knowledge of information security is desired. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT23M19S	1399	2d	hd	false	https://i.ytimg.com/vi/ZFCAE8rxP7E/maxresdefault.jpg		102	2	1	0	0
447	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hhBXr6CfKbE	2017-10-07T14:43:29Z	2017-10-07 14:43:29	Paweł Lewtak - Improve your developer's toolset	"Improve your developer's toolset [EuroPython 2017 - Talk - 2017-07-11 - PythonAnywhere Room] [Rimini, Italy] For Python development, we mainly focus on IDE, browser and sometimes a command line. I want to focus on command line tools which seem to be a bit forgotten these days. Let me show a few tools I'm using on daily basis and how they helped me become more productive. I'll prove it's possible to start up a new environment from scratch that feels like $HOME. Finally, I want to convince you how important it is to constantly challenge yourself and your tools, how useful is a custom toolbox tailored to you. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT24M57S	1497	2d	hd	false	https://i.ytimg.com/vi/hhBXr6CfKbE/maxresdefault.jpg		423	3	4	0	0
448	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	x_cY8jnpQZw	2017-10-07T14:43:29Z	2017-10-07 14:43:29	Giulio Calacoci - PostgreSQL and Python, a match made in heaven	"PostgreSQL and Python, a match made in heaven [EuroPython 2017 - Talk - 2017-07-11 - PyCharm Room] [Rimini, Italy] his talk is about a love story. The perfect love between PostgreSQL and Python. PostgreSQL is the default database choice for many Python developers, because it is robust, stable and open source. In 2ndQuadrant, we breathe PostgreSQL and we love python too, using it as much as possible for internal and external open source projects. We want to share our love for python and PostgreSQL and how they work together. So let us tell you a real love story! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT38M8S	2288	2d	hd	false	https://i.ytimg.com/vi/x_cY8jnpQZw/maxresdefault.jpg		416	4	1	0	0
449	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	G5OeYHCJuv0	2017-10-07T14:43:28Z	2017-10-07 14:43:28	Sebastian Buczyński - Why you don't need design patterns in Python?	"Why you don't need design patterns in Python? [EuroPython 2017 - Talk - 2017-07-11 - PyCharm Room] [Rimini, Italy] Exactly 23 years have passed since release of one of the biggest IT classics - ""Design Patterns: Elements of Reusable Object-Oriented Software"". Contents of the book had considerable influence on dominant programming languages of those days. However, design patterns were not glorified by everyone. Voices of rational critic appeared, pointing out that design patterns are just ways to compensate for missing languages features by tons of clumsy code. If one implements design patterns in Python by the book, they will get code that looks awkward, at best. This talk is to present Python's features that either simplifies or eliminates need for implementing design patterns. Even if you don't know what design patterns are - don't worry. You still may see some new interesting Python's features and their usage. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M3S	1623	2d	hd	false	https://i.ytimg.com/vi/G5OeYHCJuv0/maxresdefault.jpg		11466	152	16	0	17
450	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Mu-hWspzdxI	2017-10-07T14:43:28Z	2017-10-07 14:43:28	Piotr Dyba - CyberSecurity.bootcamp()	"CyberSecurity.bootcamp() [EuroPython 2017 - Talk - 2017-07-11 - Arengo] [Rimini, Italy] Cyber-security is a critical part of all distributed applications. By understanding and implementing proper security measures, you guard your own resources against malicious attackers as well as provide a secure environment for all relevant parties. The purpose of the talk is to show starting points on how to improve security in python applications by destroying a few servers during the presentation. It will provide the most important information and will cover: Threat modeling Common attack vectors on Python applications. Why python is not vulnerable to some kinds of attacks. Why is eval so dangerous? Improving server deployment and security management. Automated security testing. Pentesting. Who is a CISO and why is cyber-security awareness in the company so important nowadays. Basic knowledge of networking, python and REST is advised. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT44M22S	2662	2d	hd	false	https://i.ytimg.com/vi/Mu-hWspzdxI/maxresdefault.jpg		220	4	0	0	0
451	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UqRR1pG12ao	2017-10-07T14:43:28Z	2017-10-07 14:43:28	Céline Boudier - Inspiring all children, a journey: diversity and computing education	"Inspiring all children, a journey: diversity and computing education [EuroPython 2017 - Talk - 2017-07-11 - PythonAnywhere Room] [Rimini, Italy] Do you remember when you wrote your first line of code? Do you remember who inspired you to become who you are when you were a child? But also, what the challenges might have been? I remember when I was a little girl with a strong interest in a lot of things, including science, and what and who helped me pursue an education and a career in science and technology. However, my journey in the industry from France to the UK, from software engineer student to team lead, from language processing to robots to online coding games, made me understand there is still a lot of work to be done in terms of diversity. I will talk about my own experiences, what shaped my dreams and inspirations, the reality check, and the project I’m now working on Code For Life. Code For Life is an initiative started at Ocado Technology in 2014, in response to the UK putting computing in the primary school curriculum. It comprises a small full time team and also a large group of dedicated volunteers who focus on creating free, open source games, mostly web games developed with Django, to teach all children how to program. We are all dedicated to inspire all children and give them the tools and opportunities they deserve. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT58M22S	3502	2d	hd	false	https://i.ytimg.com/vi/UqRR1pG12ao/maxresdefault.jpg		169	4	1	0	0
452	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZKzCx4D5c3g	2017-10-07T14:43:28Z	2017-10-07 14:43:28	Michal Wysokinski - Running Python code in parallel and asynchronously	"Running Python code in parallel and asynchronously [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 2] [Rimini, Italy] My outline will be: 1) What does it mean to run code in parallel in Python? How does it differ from concurrency? Can they be applied at the some time? 2) GIL and why it complicates parallelism in Python (CPython), but only to some extent. 3) Difference between a thread and a process from the OS point of view. 4) When parallelism in Python is useful and when to avoid it. 5) Description of how to achieve parallel execution in CPython and how to do it properly. 6) Possible traps when using parallel programming in Python. 7) What happens if the code runs both in parallel and asynchronously? 8) Is it really beneficial? 9) How such execution can be achieved? As the outline shows I will focus on the parallel part as it is an important topic in our current time of multicore processors and multiprocessor systems. The topic has been discussed a lot of times but mainly from the scientific point of view, where it's been used for speeding up calulcations time. I will not go into these use cases (e.g. using MPI) but rather discuss it from web development point of view (e.g. multi worker applications). License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT43M29S	2609	2d	hd	false	https://i.ytimg.com/vi/ZKzCx4D5c3g/maxresdefault.jpg		875	17	0	0	3
453	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	saQsCY1MUBM	2017-10-07T14:43:28Z	2017-10-07 14:43:28	Alberto Berti - Get over the boundaries between client and server in web app development	"Get over the boundaries between client and server in web app development [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 2] [Rimini, Italy] The practice in the development of advanced web applications is to break it into two main areas where the effort on the server, with the typical WSGI environments, focuses on data access configuration whereas the application logic is delegated mostly to the client through the use of JavaScript frameworks. The reason for this separation into two roles lies in the need to use JavaScript on the browser and the fact that the communication channel (HTTP) and the way in which the application state is handled on the server side is still that thought to serve full web pages. In this talk I'll show a framework and an application where the line between the two worlds is blurred and where it is possible to think of the application in terms of unity, with the two components that cooperate equally and communicate without thinking in terms of URLs or HTTP verbs . This is made possible by the asynchronous/reactive management of the processing from the database driver to the user interaction, the use of websocket for communication and the use of Python (optional) for the development of the client part. Some technologies used are: PostgreSQL, the ""asyncpg"" driver, the ""aiohttp"" web server, Crossbar (http://crossbar.io) for the websocket comms, pkg ""metapensiero.sphinx.patchdb"" for schema upgrades, the package ""metapensiero.reactive"" and ""metapensiero.signal"" for the management of reactive event streams,the package ""Javascripthon"" for Py3 to ES6 JS transpiling. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M28S	1828	2d	hd	false	https://i.ytimg.com/vi/saQsCY1MUBM/maxresdefault.jpg		173	1	1	0	0
454	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	w3eCVRsY0Hw	2017-10-07T14:43:28Z	2017-10-07 14:43:28	Peter Hoffmann - Infrastructure as Python Code: Run your Services on Microsoft Azure	"Infrastructure as Python Code: Run your Services on Microsoft Azure [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 1] [Rimini, Italy] Using Infrastructure-as-Code principles with configuration through machine processable definition files in combination with the adoption of cloud computing provides faster feedback cycles in development/testing and less risk in deployment to production. The Microsoft Azure Cloud (https://azure.microsoft.com/) allows different ways to provision, deploy and run your python service: The Azure Resource Manger Templates (https://azure.microsoft.com/en-us/resources/templates/) allows you to provision your application using a declarative template. With parameters, variables and Azure template functions, the same template can be used to deploy your application in different stages (dev, test, production) and environments for different customers. We open sourced the tropo library (https://pypi.python.org/pypi/tropo/) to create Azure Resource Templates from python. Azure SDK for Python (http://azure-sdk-for-python.readthedocs.io) for a low level access to manage resources in the Azure Cloud. An Azure Ansible Module (https://docs.ansible.com/ansible/guide_azure.html) based on the Azure SDK to automate software provisioning, configuration management, and application deployment in a single environment. Each of the alternatives has different strengths and drawbacks. Presenting our learnings from migrating our infrastructure into the Azrue Cloud will help to avoid common pitfalls and show deployment patterns that will ease the live of devops. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M24S	1764	2d	hd	false	https://i.ytimg.com/vi/w3eCVRsY0Hw/maxresdefault.jpg		2502	12	2	0	1
455	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9y3zD1UxLZs	2017-10-07T14:43:27Z	2017-10-07 14:43:27	Patrick Arminio - Django and Graphql	"Django and Graphql [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 1] [Rimini, Italy] The web is constantly evolving, that is even more true with the frontend world. You don’t have anymore the traditional webapp, in fact you now have two apps, backend and frontend. But how do they communicate? Traditionally we have always created REST APIs, but now, there’s a new player. GraphQL! License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT20M55S	1255	2d	hd	false	https://i.ytimg.com/vi/9y3zD1UxLZs/maxresdefault.jpg		1582	22	2	0	0
456	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OYTtlEUSDBE	2017-10-07T14:43:27Z	2017-10-07 14:43:27	Takuro Wada - OpenAPI development with Python	"OpenAPI development with Python [EuroPython 2017 - Talk - 2017-07-11 - PythonAnywhere Room] [Rimini, Italy] Goal After this session, audiences will get - Basic knowledge of OpenAPI (Swagger) - Ecosystem of OpenAPI(Swagger) and tools related to Python and knowledge to make use of them in their own projects Audience (1) This talk is for: - Developers who are creating or using API services such as web applications, mobile applications and all other kinds of applications (2) Audience will be expected to have (prerequisite): - Basic knowledge of development with API (REST and others) - Basic knowledge of Python Outline Introduction (3min) Agenda of this talk Myself introduction OpenAPI(Swagger) introduction and basics (8min) What is OpenAPI and what is the relation with Swagger? (5min) Comparison with other frameworks for APIs (3min) api blueprint, json schema and .. OpenAPI ecosystem and tools (8min) OpenAPI(Swagger) core tools (4min) Swagger editor, Swagger codegen and Swagger UI OpenAPI tools related to Python (4min) Some tools for python api development with OpenAPI Actual case study with OpenAPI and Python (8min) Introduce our projects with OpenAPI, Python and other program (like Angular, Typescript and so on) and explain how swagger is well working in our company Recap and Conclusion (2min) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT26M15S	1575	2d	hd	false	https://i.ytimg.com/vi/OYTtlEUSDBE/maxresdefault.jpg		2579	18	1	0	0
457	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	VLlLIL5ZYLI	2017-10-07T14:43:27Z	2017-10-07 14:43:27	Antonio Verardi - Write more decorators (and fewer classes)	"Write more decorators (and fewer classes) [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 2] [Rimini, Italy] In the wake of famous talk “Stop Writing Classes” by Jack Diederich (https://www.youtube.com/watch?v=o9pEzgHorH0), I’d like to present a pattern that can be used to design clean and pythonic interfaces for programmers based on replacing single-method classes with decorated functions. This pattern is already used by some famous frameworks and libraries, like Pyramid (https://trypyramid.com/), but I believe it isn’t that well-known to many (even experienced) Python developers and is not as widely used as it deserves. I’ll show how this pattern can be employed to improve a programming interface which is used by an internal log processing framework at Yelp. This will demonstrate how a more functional approach, leveraging the power of Python decorators, can lead to simpler, more beautiful and easier to understand code. However, this talk doesn’t suggest giving up classes altogether, but making use of them only when they are truly useful. In fact, the use-case I’m going to analyze will combine classes, functions, and decorators to make the best out of these tools. Given that the presentation is going to be very code-oriented, the talk is intended for an audience of developers who are already familiar with most Python constructs, including decorators, even though the concept will be briefly introduced at the beginning of the talk. But, if you are one of these people, I promise you that the code will speak for itself. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT38M23S	2303	2d	hd	false	https://i.ytimg.com/vi/VLlLIL5ZYLI/maxresdefault.jpg		1817	25	4	0	0
458	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZXrdqq7nc1I	2017-10-07T14:43:27Z	2017-10-07 14:43:27	Anton Caceres - Using the right Async tool, present day	"Using the right Async tool, present day [EuroPython 2017 - Talk - 2017-07-11 - Arengo] [Rimini, Italy] Recent releases like AsyncIO and Django Channels gave a new push towards building real-time web-apps fast and easy. However, as similar tools exist in Python since 2000th, how should we balance between modern and time-proven? This talk includes but is not focused just on AsyncIO. It gives an overview of Async libraries in Python, and helps with choosing a right tool for various web tasks. It describes caveats of using Twisted, Tornado and AsyncIO including theory and live code, and concludes with a basic overview of Django Channels. Talk plan Why do we need Async Web (5 min) Existing libraries and frameworks: Twisted, Tornado, AsyncIO (15 min) Sample task, sample code, conclusions (10 min) (optional) what's about Django Channels? Q & A (5 min) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M7S	2707	2d	hd	false	https://i.ytimg.com/vi/ZXrdqq7nc1I/maxresdefault.jpg		391	8	0	0	0
459	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	33-0xdxp9-I	2017-10-07T14:43:26Z	2017-10-07 14:43:26	Kyle Knapp - Serverless Applications with Chalice	"Serverless Applications with Chalice [EuroPython 2017 - Talk - 2017-07-11 - PythonAnywhere Room] [Rimini, Italy] Serverless computing: it is the practice of building and running services and applications without having to worry about provisioning and managing servers. Serverless computing has been a popular topic the past couple years, and with respect to Python, there have been various different frameworks and tools released for developing and managing your Python serverless applications. This talk will focus on developing and managing your serverless applications with chalice (https://github.com/awslabs/chalice), a python serverless microframework for AWS. Discussion points for this talk will include, but not be limited to: • Overview of serverless applications • Best practices in writing a serverless application • Basic usage and core features of chalice • Writing complete, production-level applications using chalice • Managing and maintaining serverless applications using chalice tooling By the end of the talk, audience members should have a better understanding of serverless computing and how to use chalice to develop and maintain serverless applications. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M5S	2705	2d	hd	false	https://i.ytimg.com/vi/33-0xdxp9-I/maxresdefault.jpg		826	20	0	0	3
460	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	I9nXiJQnGsk	2017-10-07T14:43:26Z	2017-10-07 14:43:26	Leonardo Giordani - Abstract Base Classes: a smart use of metaclasses	"Abstract Base Classes: a smart use of metaclasses [EuroPython 2017 - Talk - 2017-07-11 - PythonAnywhere Room] [Rimini, Italy] This talk shows what Python Abstract Base Classes (ABCs) are and how they can be used to categorise objects and implement a virtual inheritance tree. The goal of the talk is to introduce programmers to the concept of ABCs, and to show that metaclasses are not a terribly complex topic, but something that can be used by normal programmers. The talk is divided in three different “levels of difficulty”, each of one going deeper in the technical aspects of the subject. Level 1: Polymorphism - Behaviours and delegation - Collections The first level is meant to give a quick overview of the collections package and some useful code snippets. Even beginners can benefit of the information given here. To complete this level you only need to know what a try/except block is. Level 2: Registering - Abstract Base Classes - Categories The second level shows what real and virtual inheritance are, explains what is the meaning of registering and defines Abstract Base Classes. To complete this level you need to know what class inheritance is (i.e. what class MyList(list) means). Level 3: Build your ABCs - Metaclasses - ABSs as interfaces The third level shows how to create your own ABCs, why metaclasses are involved and why they are not a difficult concept. I will then quickly review a possible use of metaclasses as interfaces. To complete this level you need to know how to instantiate a class, and the difference between class and instance. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M50S	1790	2d	hd	false	https://i.ytimg.com/vi/I9nXiJQnGsk/maxresdefault.jpg		6802	116	3	0	8
461	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	szclRga-hDk	2017-10-07T14:43:26Z	2017-10-07 14:43:26	Stephane Wirtel - Django: From a nightmare to a dream with Best Practices.	"Django: From a nightmare to a dream with Best Practices. [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 1] [Rimini, Italy] With the adventure in the source code of the site of EuroPython, we have detected that the code was difficult to maintain. With the members of the Web team, we have started to refactor the code with the best practices and good concept. Also, we will see some awesome libraries for the Django project. In brief, you have a legacy code and you want to improve it with best practices, then this talk is for you. You don't want to break it but you don't want to change it because you can break it at all times, we will show you how to improve an existing code with some tools and best practices, and your code can be deploy on Friday evening with no risk. From a nightmare to a dream. Keywords, TDD, Refactoring, Tests, BDD, Selenium, CI, and many more... License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT27M15S	1635	2d	hd	false	https://i.ytimg.com/vi/szclRga-hDk/maxresdefault.jpg		1029	8	2	0	0
462	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	AJZPSvD19mU	2017-10-07T14:43:25Z	2017-10-07 14:43:25	Nikola Đipanov - How Facebook uses Python to build (and operate) datacenters at scale	"How Facebook uses Python to build (and operate) datacenters at scale [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 1] [Rimini, Italy] With 4 datacenters on-line and more coming fast, building and operating datacenter buildings becomes a problem we need to solve at scale. At Facebook, Several teams of Production Engineers write the software that helps us do this efficiently, and we use Python... a lot. In this talk, I will go into some detail about only some of problems we try to solve to make sure our datacenters come online on time so that we can make sure you can connect with all your friends on Facebook, and keep them humming, as efficiently as possible. We'll go into some detail about the awesome Python infrastructure (some of it open source), that we use to build this software, and some of the engineering practices. This is a talk for you if you were wondering how to track each and every strand of fiber cabling within a datacenter, or make sure we find out that the cooling system isn't really doing it's thing before actual servers catch fire from serving you live videos. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT18M23S	1103	2d	hd	false	https://i.ytimg.com/vi/AJZPSvD19mU/maxresdefault.jpg		321	5	1	0	0
463	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	erINlrgygEk	2017-10-07T14:43:25Z	2017-10-07 14:43:25	Alexys Jacob - Leveraging consistent hashing in your python applications	"Leveraging consistent hashing in your python applications [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 2] [Rimini, Italy] While consistent hashing is largely known and adopted in the NoSQL database clusters to solve data distribution and data access reliability, it is less known and used by the typical developers. This talk will introduce you to consistent hashing and the problems it solves while going through a practical use case in a python application. We will start from its standalone design and scale it out to an optimized clustered version thanks to consistent hashing. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT43M30S	2610	2d	hd	false	https://i.ytimg.com/vi/erINlrgygEk/maxresdefault.jpg		288	2	1	0	0
464	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pprCOMmGnS0	2017-10-07T14:43:25Z	2017-10-07 14:43:25	Lynn Root - Tracing, Fast and Slow: Digging into & improving your web service’s performance	"Tracing, Fast and Slow: Digging into & improving your web service’s performance [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 1] [Rimini, Italy] Do you maintain a Rube Goldberg like service? https://s-media-cache-ak0.pinimg.com/564x/92/27/a6/9227a66f6028bd19d418c4fb3a55b379.jpg Perhaps it’s highly distributed? Or you recently walked onto a team with an unfamiliar codebase? Have you noticed your service responds slower than molasses? This talk will walk you through how to pinpoint bottlenecks, approaches and tools to make improvements, and make you seem like the hero! All in a day’s work. The talk will describe various types of tracing a web service, including black &amp; white box tracing, tracing distributed systems, as well as various tools and external services available to measure performance. I’ll also present a few different rabbit holes to dive into when trying to improve your service’s performance. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M57S	1797	2d	hd	false	https://i.ytimg.com/vi/pprCOMmGnS0/maxresdefault.jpg		169	3	1	0	0
465	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nT8k3ykGeJQ	2017-10-07T14:43:24Z	2017-10-07 14:43:24	Will Foster - Skynet your Infrastructure with QUADS	"Skynet your Infrastructure with QUADS [EuroPython 2017 - Talk - 2017-07-11 - Anfiteatro 1] [Rimini, Italy] The very small 2-person DevOps team within Red Hat Performance/Scale Engineering has developed a set of Open Source Python-based systems and network automation provisioning tools designed to end-to-end automate the provisioning of large-scale systems and network switches using tools like Foreman, Ansible, and other Open Source bits. QUADS – or “quick and dirty scheduler” allows a normally overburdened DevOps warrior to fully automate large swaths of systems and network devices based on a schedule, even set systems provisioning to fire off in the future so they can focus on important things like Netflix and popcorn or not reading your emails while your datacenter burns in an inferno of rapid, automated skynet provisioning. QUADS will also auto-generate up-to-date infrastructure documentation, track scheduling, systems assignments and more. In this talk we’ll show you how we’re using QUADS (backed by Foreman) to empower rapid, meaningful performance and scale testing of Red Hat products and technologies. While QUADS is a new project and under constant development, the design approach to handling large-scale systems provisioning as well as the current codebase is consumable for others interested in improving the efficiency and level of automation within their infrastructure. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT39M44S	2384	2d	hd	false	https://i.ytimg.com/vi/nT8k3ykGeJQ/maxresdefault.jpg		130	2	1	0	0
466	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XMcNFBKNWKg	2017-09-28T11:27:55Z	2017-09-28 11:27:55	Ki-Hwan Kim - GPU Acceleration of a Global Atmospheric Model using Python based Multi-platform	"GPU Acceleration of a Global Atmospheric Model using Python based Multi-platform [EuroPython 2017 - Talk - 2017-07-10 - PyCharm Room] [Rimini, Italy] A global atmospheric model play an important role in short-term weather forecasting and long-term climate prediction. The model requires enormous computing resources because the all atmospheric states must be calculated every time step (usually a tens of seconds to several minutes). However, since the most atmospheric models run only on CPU machines, they are not able to use the modern microprocessors with high performance and low power such as NVIDIA GPU and Intel MIC. It often costs a lot to convert codes from one machine to the other machine. Although it can be accelerated on GPU and MIC using OpenMP and OpenACC directives, it is not easy to achieve peak performance. I developed a new Python module named PyMIP (Python based Machine Independent Platform) to integrate C, Fortran, CUDA and OpenCL codes with a simple user interface. The main code includes configuration, flow control, IO and MPI parallel is written by Python. Only hotspots include huge number crunching code are written by compile language as C, Fortran, CUDA and OpenCL. The hotspot codes are compiled and imported using PyMIP in runtime. PyMIP enables that a user can switch machines with simple flag. I am developing a new global atmospheric model based on PyMIP to make it easy to utilize various modern microprocessors. In this presentation, I will introduce PyMIP and show the computational performance result in NVIDIA GPU of the dynamical core of the model developed based on PyMIP. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M39S	1719	2d	hd	false	https://i.ytimg.com/vi/XMcNFBKNWKg/maxresdefault.jpg		1060	9	1	0	0
467	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	aHt5-WCaJyA	2017-09-28T11:27:55Z	2017-09-28 11:27:55	Alessandro Molina - Kajiki, the fast and validated template engine you were looking for	"Kajiki, the fast and validated template engine you were looking for [EuroPython 2017 - Talk - 2017-07-10 - PyCharm Room] [Rimini, Italy] Being dissatisfied with some of the constraints and complex usage of Genshi, the TurboGears2 team started working on an alternative that could solve Genshi speed issues, complex inheritance system and be backward compatible with genshi templates. This is a talk about what lead to the creation of the Kajiki template engine and what's particular about it. The talk will cover: - Comparison on the major template engines available in python to showcase what's special in Kajiki (validated, xml based) what was special in Genshi (also lazy evaluated) - What's a validated template engine and why it's good to have one. - How Kajiki works, showcase kajiki syntax, it's performances and how to use it in any python project. - Why Kajiki is fast, code generation applied and how to write a code generation template engine like Kajiki and Jinja2 (showcase a simple 50 lines of code template engine that uses code generation). License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT25M55S	1555	2d	hd	false	https://i.ytimg.com/vi/aHt5-WCaJyA/maxresdefault.jpg		392	5	0	0	0
468	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xSbezLCJ87E	2017-09-28T11:27:55Z	2017-09-28 11:27:55	Jakub Wasielak - Python Packaging - current state and overview	"Python Packaging - current state and overview [EuroPython 2017 - Talk - 2017-07-10 - PythonAnywhere Room] [Rimini, Italy] Historically, Python packaging has been a source of significant pain for even the most devoted Python enthusiasts. I've found myself in the situation, where I did know the basic concepts behind the tools, but despite that only thing I could do was following tutorials. That was the time to change it and that's the reason this presentation was written. In this talk, I'll provide a quick overview of the current state of Python packaging tools. I'll mostly focus on setuptools, pip and wheels, putting an emphasis on their superiority over their precursors. I'll also list down the honorable mentions of tools worth knowing. Then I'll share examples of how you can use the features of the Setuptools library - those well known and those we use when pip-installing packages, but most of us can't name them. The point of this presentation is to explain how to use tools which are all there, just waiting to make developing, testing, and distributing our Python packages easier. Doesn't matter if you're a Python expert or a beginner - the knowledge covered by this presentation will be useful despite your level. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT38M59S	2339	2d	hd	false	https://i.ytimg.com/vi/xSbezLCJ87E/maxresdefault.jpg		632	12	0	0	0
469	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SK0BtxHROdg	2017-09-28T11:27:54Z	2017-09-28 11:27:54	Leblond Emmanuel - Bringing Python to Godot game engine	"Bringing Python to Godot game engine [EuroPython 2017 - Talk - 2017-07-10 - PyCharm Room] [Rimini, Italy] https://godotengine.org/ Godot is an advanced, feature-packed, multi-platform 2D and 3D open source game engine. The project has joined the Software Freedom Conservancy project and it growing community makes it hopes to become a real alternative to Unity&amp;GameMaker. This talk cover a year long journey of the port of Python as a scripting language for the engine, starting from a rant against Godot's Python-like proprietary language. We will have a look at Godot's internal architecture as is it itself a real interpreter with it garbage collector, dynamic typing, introspection and even builtin custom scripting language. All of this having to work next to our Python interpreter and communicate back and forth with it. Finally we will see the different approaches that have been tried to bind Python to Godot each with there own pros&amp;cons: Using Micropython interpreter instead of CPython Using PyBind11 to statically bind to Godot C++ API Using CFFI and rely on a 3rd party C API The audience should have some basic knowledge of C level computing (static vs dynamic language, compilation &amp; linking). License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M15S	1695	2d	hd	false	https://i.ytimg.com/vi/SK0BtxHROdg/maxresdefault.jpg		8206	140	1	0	7
470	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	VzOOZxuqSVk	2017-09-28T11:27:54Z	2017-09-28 11:27:54	Alex Martelli - Testing in Layers	"Testing in Layers [EuroPython 2017 - Talk - 2017-07-10 - PythonAnywhere Room] [Rimini, Italy] The role of automated testing at the heart of modern development and operations is a given. However, the traditional approach to testing, separating too-developer-focused unit testing and (often only semi-automated) end-to-end integration testing—is not optimal in the modern, fluid world of DevOps. Nothing short of full automation is suitable for continuous integration; any “testing” requiring humans has a drastically different place in the continuum of development and deployment and should best be called by a completely different name like quality assurance. Within the realm of fully automated testing, the best approach, just as for other kinds of software, is modular and layered. This talk highlights the proper design of components for testing purposes and explains how such a design lets you compose multiple, layered testing suites that span the gamut from fast, light-weight unit tests meant to run all the time during development, to full-fledged end-to-end tests of whole systems—and, crucially, the often-neglected intermediate layers, bridging the thoroughness of end-to-end tests with unit tests’ speed and ability to pinpoint the location of any problems that emerge, enabling rapid fixes of most such problems. The talk also discusses the use of modular, layered testing components to validate software refactoring, and (when deployed in a load-testing arrangement) identify and validate software (and architectural) optimizations. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M9S	2709	2d	hd	false	https://i.ytimg.com/vi/VzOOZxuqSVk/maxresdefault.jpg		752	11	0	0	1
471	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bYtA1WK7aLM	2017-09-28T11:27:54Z	2017-09-28 11:27:54	Adam Dangoor - But how do you know your mock is valid? Verified fakes of web services	"But how do you know your mock is valid? Verified fakes of web services [EuroPython 2017 - Talk - 2017-07-10 - Arengo] [Rimini, Italy] If your code calls a third party service then you may want to test that your code works but you don't want to call the service in your tests. It may be expensive, slow or impossible to call that service. For example, if you are making a Slack bot, you want to create tests which don't make calls across the network to Slack. One approach is to create a mock of that service. Our tests can now run quickly, cheaply and reliably. But if we copy the service incorrectly, or if the service changes, our tests will pass while our code does not work. Verified fakes solve this problem. You can write tests which confirm that your mock is an accurate representation of the service being mocked. Those tests can be a small subset of your test suite and they can be run periodically, to verify the validity of the many tests which use the mock. This talk will follow the example of VWS-Python, a verified fake for a proprietary web service. It will discuss the practicalities of creating such a fake and it will focus on the trade-offs, tooling and approaches involved. By the end of this talk the audience will understand how to tie together pytest, Travis CI, requests and Responses to create a verified fake. The talk is aimed at people who have an interest in writing correct software. It is assumed that the audience is familiar with basic testing techniques. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT32M57S	1977	2d	hd	false	https://i.ytimg.com/vi/bYtA1WK7aLM/maxresdefault.jpg		190	3	0	0	0
472	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_38csFR5Hrw	2017-09-28T11:27:53Z	2017-09-28 11:27:53	Roberto De Ioris - AAA Games with Unreal Engine 4 and Python	"AAA Games with Unreal Engine 4 and Python [EuroPython 2017 - Talk - 2017-07-10 - Anfiteatro 2] [Rimini, Italy] Unreal Engine is the game industry leading platform for developing AAA Videogames. Now you can script your gameplay logic, automate your development pipelines or test your productions with Python too. The UnrealEnginePython plugin aims at covering the whole feature set of Unreal Engine 4 and extending it with the huge modules library available in the Python world. The talk will briefly introduce the Unreal Engine platform and its capabilities as well as how it can be programmed without the python plugin (Blueprints and C++). The biggest part of the talk will focus on how the Unreal Engine 4 patterns are mapped to the python plugin, what is already working and what you can expect from future developments. No prior knowledge of game/graphics programming is required, and if you are in the movie or cartoon industry you can get interesting infos too License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT58M48S	3528	2d	hd	false	https://i.ytimg.com/vi/_38csFR5Hrw/maxresdefault.jpg		10287	186	4	0	14
473	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tZ3ZfBX61eE	2017-09-28T11:27:53Z	2017-09-28 11:27:53	Frankie Dintino - 2 + 2 = 5: Monkey-patching CPython with ctypes to conform to Party doctrine	"2 + 2 = 5: Monkey-patching CPython with ctypes to conform to Party doctrine [EuroPython 2017 - Talk - 2017-07-10 - PyCharm Room] [Rimini, Italy] A few weeks into your tenure as a software engineer at the Ministry of Truth you are assigned your first real feature request: write a context manager that can make “2 + 2” equal 5 at runtime. Your solution should be written only in Python (for maximum portability). Absurd? Perhaps, but you know better than to ask questions. You are no thought-criminal. In this talk I walk through the steps I took to modify the value of two plus two in CPython at runtime—using only Python and the ctypes module. What began for me as a silly and frivolous side project became an education in how the python data model works behind the scenes and how CPython compiles, optimizes, and executes python code. The goal of this talk is to provide an introduction to CPython internals while walking through the steps needed to monkeypatch integer addition to make “2 + 2” equal 5. The audience should come away with a better understanding of how python objects and types are represented in memory, how references are counted, and how python scripts are transformed into abstract syntax trees, compiled into code objects, and then executed by the CPython virtual stack machine. And because I’ve limited myself to using ctypes, these topics can be explored without familiarity with C as a prerequisite. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M26S	1826	2d	hd	false	https://i.ytimg.com/vi/tZ3ZfBX61eE/maxresdefault.jpg		261	2	0	0	0
474	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tgw2YvVLWnU	2017-09-28T11:27:53Z	2017-09-28 11:27:53	Nicola Iarocci - Python on Windows, Like a Boss	"Python on Windows, Like a Boss [EuroPython 2017 - Talk - 2017-07-10 - Arengo] [Rimini, Italy] Historically, Python coding on Windows has been kind of troublesome, but not anymore. Since a couple of years ago it is possible write awesome quality Python code with Visual Studio. This is good news for Python developers of all levels, because Visual Studio offers and incredible set of tools to enhance all the stages of product development: from managing virtual environments and handling package management, to writing and refactoring code, up to testing & debugging - all of that for free. In this talk I will demo how you can use Visual Studio to boost your Python development on Windows. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT45M24S	2724	2d	hd	false	https://i.ytimg.com/vi/tgw2YvVLWnU/maxresdefault.jpg		391	1	4	0	1
475	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0URILwS7-WI	2017-09-28T11:27:52Z	2017-09-28 11:27:52	Alejandro Castillo - Django Rest Framework, one year after: tips, tools, tricks and pitfalls.	"Django Rest Framework, one year after: tips, tools, tricks and pitfalls. [EuroPython 2017 - Talk - 2017-07-10 - Anfiteatro 2] [Rimini, Italy] One year ago we started OnTruck. Our CTO had previously had some success with DRF so after discussing it, we decided to give it a try. After a year building a quickly iterating startup on top of Django Rest Framework, we have reflected a lot on it. Even now, with a full year of development on top of it, we still periodically discuss going forward or dropping it. For the time being it still wins. So we think we have learned a lot about it. This talk is a walkthrough of the discoveries &amp; learnings we have made at OnTruck during that year. We will cover different aspects of the framework, what advantages it has given us and also what tradeoffs it has forced. We will discuss both how it relates to Django on the inside and how it relates with other systems outside. We will approach it both from a purely user perspective and also discuss some of its internals and the way we tweaked them to make it work for us. We will cover the pitfalls we have both avoided and fallen into. The tricks that have helped us keep our speed and sanity. The tools we have both used and discarded on the way. And finally the tips we would give ourselves if we were starting all over again after this year. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT21M44S	1304	2d	hd	false	https://i.ytimg.com/vi/0URILwS7-WI/maxresdefault.jpg		1076	9	1	0	0
476	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3BDoXY0y8FU	2017-09-28T11:27:52Z	2017-09-28 11:27:52	Radomir Dopieralski - MicroPython Workshop	"MicroPython Workshop [EuroPython 2017 - Interactive session - 2017-07-10 - Anfiteatro 2] [Rimini, Italy] We will program some ESP8266-based development boards, make them blink LEDs, move servos, display pictures, read sensors, react to buttons, and, more importantly, talk over HTTP and MQTT with servers. This is an excellent occasion to try your skills in building and programming small electronic devices. No experience with electronics is required, everything you need to know will be covered during the workshop. You will need to bring a laptop with a USB port. If it runs Windows, make sure to have some terminal emulator installed, such as PuTTy, CoolTerm or even HyperTerm. On Linux and OSX we will use Screen, so you don't need anything special. I only have about 20 kits for this, so the number of people that can take part is limited. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT18M39S	1119	2d	hd	false	https://i.ytimg.com/vi/3BDoXY0y8FU/maxresdefault.jpg		338	1	0	0	0
477	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9dd_nHuXBgw	2017-09-28T11:27:52Z	2017-09-28 11:27:52	Tim Babych - Front-end testing with Python	"Front-end testing with Python [EuroPython 2017 - Talk - 2017-07-10 - PyCharm Room] [Rimini, Italy] Web-developers use Python to develop web-applications, serving HTML or JSON content to user's browsers which render it. We test our applications to check that they serve content right and that they respond to HTTP requests in an expected way. However, this is not all that happens in a modern web application. There are lots of moving parts which are executed not on the server, but directly in user's browser, and they need to be tested too. The best way to check that our app works well in a browser is to test it in a browser, and Python gives you tools to do that conveniently. With a Selenium tool and Python package, you can control the browsers, making them open web pages and interacting with them. I will show how to install Selenium and needed drivers, and tell about best practices for writing Selenium tests, such as Page Object pattern Put browser interactions in the page object, not the test Put assertions in the test, not the page object Never use time.sleep() Always make pages wait for actions to complete Wait for JavaScript to load To test the visual look of your application there is a Needle tool, which lets you compare screenshots with baseline set, and highlight the differences. I will talk about how to incorporate that functionality into your tests. As browser testing can get quite slow, I will also show how to set up running them concurrently. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT31M51S	1911	2d	hd	false	https://i.ytimg.com/vi/9dd_nHuXBgw/maxresdefault.jpg		602	5	0	0	0
478	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	keTrMKCXG0Y	2017-09-28T11:27:52Z	2017-09-28 11:27:52	Lasse Schuirmann - From Fun to Business - How Open Source Changed my Life	"From Fun to Business - How Open Source Changed my Life [EuroPython 2017 - Talk - 2017-07-10 - PythonAnywhere Room] [Rimini, Italy] Coala (https://coala.io/) began as a fun project. We never believed there would be anything useful growing out of it - and yet it did. Contributors all over the world came to us and helped creating the community as it is. But how did all of this happen? What does this mean for the main contributors? How can we make a living of an open source project? This talk tells our story. What we did - good and bad things - so we can learn from it. From my personal open source contributions over founding an open source project to building a freelance agency and founding a startup. Participants will learn how they can grow an open source project, automate newcomer processes and gain insights into how they can start making a living of it, possibly founding a company eventually. There is no single recipe for this but we can - and should - exchange the tips and tricks we’ve gained with our ventures. This talk is for entrepreneurs, wanna-be-freelancers and future or past open source project founders. This talk is completely new and has not been presented at any conference yet although it overlaps with previous talks of mine which have received much positive feedback at previous regional PyCons. It will be tested at a local meetup to ensure proper timing. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT25M21S	1521	2d	hd	false	https://i.ytimg.com/vi/keTrMKCXG0Y/maxresdefault.jpg		493	8	0	0	0
479	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rEIt0D_ACy8	2017-09-28T11:27:52Z	2017-09-28 11:27:52	Maciej Polańczyk - Mock it right! A beginner’s guide to world of tests and mocks.	"Mock it right! A beginner’s guide to world of tests and mocks. [EuroPython 2017 - Talk - 2017-07-10 - Arengo] [Rimini, Italy] The main goal of this presentation is to make beginner audience familiar with mocks and patches but there is a chance that more experienced ones will also find something new for themselves. Presentation shows the common use cases when developing unit tests. I will say what are the best practices when working with mocks and patches and what kind of mistakes, done by many developers, may be avoided so the dragons will not come. During this presentation I will prepare mock-it-o drink as a prize. First, I will briefly introduce an audience with the topic of unit testing. Then I will show a simple code which will be tested during the presentation. It covers all common use cases of writing unit tests which are usage of mocks, patches and their side effects. In the end I will show a template of unit test which will be extended according to our needs. Next, I will say what is a mock, and what are the benefits of using it. Why it is better than any Dummy class implemented for purpose of unit tests and, what is the most important and sometimes forgotten by experienced developers, how to create the best mock, which involves using spec_set and spec to protect us from dragons when interface of mocked class changes. Last but not least part of my presentation will be dedicated to patches. I will explain when and how patches should be used (how to use side_effect, patch properties and environment variables). Finally, I will say how to avoid common mistakes when working with patches. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M18S	1698	2d	hd	false	https://i.ytimg.com/vi/rEIt0D_ACy8/maxresdefault.jpg		940	16	1	0	0
480	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sEO4DC8hm34	2017-09-28T11:27:52Z	2017-09-28 11:27:52	Jussi Pakkanen - Meson: compiling the world with Python	"Meson: compiling the world with Python [EuroPython 2017 - Talk - 2017-07-10 - Arengo] [Rimini, Italy] Compiling source code into libraries and executables has always been problematic, especially for cross platform projects. Typical problems in existing build systems include slow build times, undecipherable syntax, lack of support for cross compilation and so on. Some people choose to not use a build system at all but instead just write a one-off Makefile, which will usually work fine on their machine and nowhere else. All this makes software development slower than it needs to be. The Meson build system (http://mesonbuild.com) is a new build system designed from the ground up to provide a solution for these (and other) problems. It is implemented in Python 3 and provides a simple, non-Turing complete DSL for describing the build. The project provides built-in support for common tasks such as documentation generation, building Qt apps and Python extension modules. Meson is currently seeing a lot of uptake in the Free software world with big projects such as GStreamer, parts of GNOME, Wayland and even the X server either transitioning, or very strongly considering the transition to Meson. In this talk we go over the design of Meson, how to use it for new and existing projects and the benefits this brings, including faster compiles, less time wasted debugging the build system environment and easy access to modern software development tools and practices. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT40M1S	2401	2d	hd	false	https://i.ytimg.com/vi/sEO4DC8hm34/maxresdefault.jpg		1208	14	1	0	0
481	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	CoDbnoaaiu0	2017-09-28T11:27:51Z	2017-09-28 11:27:51	Miguel Grinberg - Python Microservices	"Python Microservices [EuroPython 2017 - Talk - 2017-07-10 - Anfiteatro 2] [Rimini, Italy] This talk is for Python web developers interested in learning what are the core ideas behind microservices, what problems they try to solve, and what are the viable options to implement them in Python, both from technical and teamwork point of views. Some of the topics that will be discussed include the role of APIs, the improvements microservices bring to application scalability, upgrades, and maintenance, and the challenges in breaking up a monolithic application. Attendees will leave the talk with a good idea of what microservices are, and how they help build better applications. As usual with my presentations, there will be actual code examples presented during the talk that I will also host on GitHub, for those interested in investigating further on their own. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT43M6S	2586	2d	hd	false	https://i.ytimg.com/vi/CoDbnoaaiu0/maxresdefault.jpg		5768	101	2	0	2
482	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LXRLr8pIJf0	2017-09-28T11:27:51Z	2017-09-28 11:27:51	Alan Christie - Building a real-time embedded audio sampling application with MicroPython	"Building a real-time embedded audio sampling application with MicroPython [EuroPython 2017 - Talk - 2017-07-10 - Arengo] [Rimini, Italy] While demonstrating the pyboard to a group of colleagues, a challenge was set to produce a practical demonstration of the device that would provide automatic and continuous voice recording and playback of short spoken phrases similar to that found in a number of talking toys. This talk covers the process of designing and testing the embedded real-time Python solution and includes the architecture, test methodologies and recordings as the stages progressed to the final source code. The talk concludes with a live demonstration of the final application. The solution uses MicroPython (an embedded implementation of Python 3), the pyboard and its AMP Audio skin. MicroPython is a lean implementation of Python 3 that is optimised to run in a very small footprint on micro-controllers and in constrained environments. It was created by the Australian programmer and physicist Damien George, after a successful Kickstarter backed campaign in 2013. The pyboard is the original reference hardware created to host MicroPython. It is a compact low-power board based on an ARM processor with a heap of approximately 100kBytes that can run at 168MHz. It has sufficient hardware services and real-time capabilities to control all kinds of electronic projects. The AMP Audio skin is a small additional module that attaches to the pyboard that adds a small power amplifier, speaker and a microphone with a pre-amp. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M26S	1706	2d	hd	false	https://i.ytimg.com/vi/LXRLr8pIJf0/maxresdefault.jpg		1867	23	1	0	3
483	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	o8bVslBUik8	2017-09-28T11:27:51Z	2017-09-28 11:27:51	Mario Corchero - Effortless Logging - Let the loggers work for you	"Effortless Logging - Let the loggers work for you [EuroPython 2017 - Talk - 2017-07-10 - PythonAnywhere Room] [Rimini, Italy] Logs are your best friends on those late nights when you try to troubleshoot that problem in production that was written by a friend of you who is on holidays at the moment. Logs are the main way to know what is happening at runtime with an running application but as we don’t realize how important they are until we actually need them it is usually an under appreciated part of our development process. This talks overviews the logging module of the standard library and demonstrates some basic best practices and techniques make the most out of our logging when we need it. After this talk you will be fully familiar not only on how to use the logging library but also how it is actually designed, how it works, how to extended further than the basic usage and some sample recipes and configurations for complex applications. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT25M51S	1551	2d	hd	false	https://i.ytimg.com/vi/o8bVslBUik8/maxresdefault.jpg		571	3	2	0	1
484	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DrQmYoZLGw8	2017-09-28T11:27:50Z	2017-09-28 11:27:50	Marco Montanari - Django, Django Rest Framework and Angular2: RAD on SaaS platforms	"Django, Django Rest Framework and Angular2: RAD on SaaS platforms [EuroPython 2017 - Talk - 2017-07-10 - Anfiteatro 1] [Rimini, Italy] Rapid Application Development has been a major topic for the desktop development world. Yet, desktop development has proven to be at the end of its timeline and the latest major environment is now the web in its many forms (from browser to Electron and similars). Django offers an amazing infrastructure and Django Rest Framework an amazing middleware to solve most of the problems. The RAD development on Angular2 is then enabled by a set of libraries developed at Modal Nodes for both front and backend that ease the development of the front end tools and front end interactions with both unauthenticated and authenticated systems via JWT and Djoser. Specifically, we will see the changes in the metadata that will enable better interactions and the usage of both the backend elements and the front-end ones in order to ease development. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT29M29S	1769	2d	hd	false	https://i.ytimg.com/vi/DrQmYoZLGw8/maxresdefault.jpg		793	3	5	0	0
485	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	G31yUYwvGgc	2017-09-28T11:27:50Z	2017-09-28 11:27:50	Shailen Sobhee - Python Profiling with Intel® VTune™ Amplifier	"Python Profiling with Intel® VTune™ Amplifier [EuroPython 2017 - Talk - 2017-07-10 - PythonAnywhere Room] [Rimini, Italy] Python has grown in both significance and popularity in the last years, especially in the field of high performance computing and machine learning. When it comes to performance, there are numerous ways of profiling and measuring code performance—with each analysis tool having its own strengths and weaknesses. In this talk, we will introduce a rich GUI application (Intel® VTune™ Amplifier) which can be used to analyze the runtime performance of one’s Python application, and fully understand where the performance bottlenecks are in one’s code. With this application, one may also analyze the call-stacks and get quick visual clues where one’s Python application is spending time or wasting CPU cycles. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT33M15S	1995	2d	hd	false	https://i.ytimg.com/vi/G31yUYwvGgc/maxresdefault.jpg		445	8	1	0	0
486	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wb0lk4e9DEg	2017-09-28T11:27:50Z	2017-09-28 11:27:50	Dougal Matthews - Async Web Apps with Sanic	Async Web Apps with Sanic [EuroPython 2017 - Talk - 2017-07-10 - Anfiteatro 1] [Rimini, Italy] This talk will introduce you to Sanic, the Python 3 web framework that supports async request handlers with a simple, Flask-like, API. We will start with a Sanic overview and compare it with other similar options before looking at the API and working through a basic app. Our goal here will be to get a feel for the Sanic API and demonstrate how it fits together. After this we will cover some of the more unique and interesting possibilities with Sanic, such as support for websockets and HTTP2. A web framework is often only as powerful as its ecosystem, so we will take a look at some of the popular Sanic extensions for databases, templating and testing. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT34M27S	2067	2d	hd	false	https://i.ytimg.com/vi/wb0lk4e9DEg/maxresdefault.jpg		4923	70	4	0	2
487	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BQGDXu9PS-E	2017-09-28T11:27:49Z	2017-09-28 11:27:49	Benno Luthiger - Bitcoin and Blockchain for Pythoneers	"Bitcoin and Blockchain for Pythoneers [EuroPython 2017 - Talk - 2017-07-10 - Anfiteatro 1] [Rimini, Italy] Why should a Python programmer be interested in Bitcoin and the Blockchain technology? Blockchain technology is one of the fastest moving part in the Fintech area. However, the Blockchain is not only the basis of crypto currencies. First of all it’s a decentralized registry that cannot be modified. This means that using a Blockchain, users can trust in the validity of a dataset without the need to establish a central authority. Thus, the Blockchain can be used to store records e.g. of land ownership or and other property rights in countries with weak or corrupt or otherwise incompetent authorities. Therefore, Python programmers with an understanding of this technology are especially well prepared to contribute in this area, because the agility inherent to Python makes it easy to program in a fast moving environment. The fact that various applications in the Bitcoin and Blockchain area are implemented in Python prove this notion. However, the reverse is also true: An understanding of the distributed ledger technology possibly enables you to solve problems in projects you encounter in the near future. In this talk, I will present the following topics: • The Blockchain architecture: nodes, transactions, headers. • The Bitcoin protocol and its proof of work (POW) • Smart contracts • Bitcoin alternatives: Proof-of-work (PoW) compared to Proof-of-stake (PoS) License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M47S	1727	2d	hd	false	https://i.ytimg.com/vi/BQGDXu9PS-E/maxresdefault.jpg		436	3	2	0	3
488	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MguKwkrp0tw	2017-09-28T11:27:08Z	2017-09-28 11:27:08	Alessandro Molina - Protocols and Practices enforcing in Python through bytecode and inspection	"Protocols and Practices enforcing in Python through bytecode and inspection [EuroPython 2017 - Talk - 2017-07-10 - PyCharm Room] [Rimini, Italy] Python is an interpreted development language with powerful introspection features, up to allow accesso to the byte code itself to see what the virtual machine is going to do. Reaching down to byte code or low level inspection is usually a very uncommon need and it's usually only involved in debugging or understanding the interpreter internals, but it can be a powerful tool to check that third parties code that (or the code we will write ourselves in the future) sticks to some protocols or best practices that are supposed to be in place. Most of the needs for this checks are usually performed at execution time or through techniques like metaclasses and monkeypatching of third parties code, but in some cases it would be possible to inadvertently skip those checks or work them around, while verifying the resulting byte code allows us to check what's really going to be executed and enforce the required constraints. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT41M32S	2492	2d	hd	false	https://i.ytimg.com/vi/MguKwkrp0tw/maxresdefault.jpg		457	4	1	0	0
489	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	F3yh-LgoaME	2017-09-28T11:27:07Z	2017-09-28 11:27:07	Kristian Rother - Best Practices for Debugging	"Best Practices for Debugging [EuroPython 2017 - Training session - 2017-07-10 - Sala del Tempio 2] [Rimini, Italy] Debugging is a daily activity of any programmer. Frequently, it is assumed that programmers can debug. However, programmers often have to deal with existing code that simply does not work. This tutorial attempts to change that by introducing concepts for debugging and corresponding programming techniques. In this tutorial, participants will learn strategies for systematically debugging Python programs. We will work through a series of examples, each with a different kind of bug and with increasing difficulty. The training will be interactive, combining one-person and group activities, to improve your debugging skills in an entertaining way. Contents: Syntax Error against Runtime exceptions Get file and directory names right Debugging with the scientific method Inspection of variables with print and introspection functions Using an interactive debugger Pros and cons of try.. except Delta debugging License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT24M26S	1466	2d	hd	false	https://i.ytimg.com/vi/F3yh-LgoaME/maxresdefault.jpg		1109	18	2	0	0
490	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HhKSgRvfF20	2017-09-28T11:27:07Z	2017-09-28 11:27:07	Rafał Nowicki - Python REST frameworks review	"Python REST frameworks review [EuroPython 2017 - Talk - 2017-07-10 - PyCharm Room] [Rimini, Italy] Number of libraries for building RESTful web applications is growing up. Selecting best framework becomes hard decision for web developers. During the presentation I will go through best libraries I can recommend for building RESTful web applications. Selection of libraries will be subjective, based on my experience with building microservices in Python. I will share code examples, weaknesses and strengths for each library. I hope everyone will find something that best suits his needs. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT28M19S	1699	2d	hd	false	https://i.ytimg.com/vi/HhKSgRvfF20/maxresdefault.jpg		673	8	4	0	0
491	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-SvmjCWBX10	2017-09-28T11:27:06Z	2017-09-28 11:27:06	Alexander Steffen - Testing microcontroller firmware with Python	"Testing microcontroller firmware with Python [EuroPython 2017 - Talk - 2017-07-10 - Arengo] [Rimini, Italy] Last year's talk (https://ep2016.europython.eu/conference/talks/writing-unit-tests-for-c-code-in-python) showed you how to use CFFI (https://cffi.readthedocs.io/) to write unit tests for C code in Python. This year we will take the concept one step further and create integration tests covering (almost) the whole firmware of a microcontroller, again leveraging the power of CFFI. But instead of running the firmware on the controller, it will be executed on the development machine (that is, a standard x86 architecture), allowing for much faster test execution, without requiring the target hardware. For this to work, all the hardware-dependent parts of the firmware code need to be replaced by Python code simulating the hardware functionality, so that all the firmware above this hardware abstraction layer can be executed unmodified. In addition, this allows to use advanced security testing tools like AddressSanitizer (https://github.com/google/sanitizers/wiki/AddressSanitizer) and american fuzzy lop (http://lcamtuf.coredump.cx/afl/) that would not be able to run directly on the microcontroller. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M53S	1853	2d	hd	false	https://i.ytimg.com/vi/-SvmjCWBX10/maxresdefault.jpg		3463	37	0	0	0
492	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kDoHrFLkahA	2017-09-28T11:27:06Z	2017-09-28 11:27:06	Yigit Guler - Understanding Celery & CeleryBeat	"Understanding Celery & CeleryBeat [EuroPython 2017 - Talk - 2017-07-10 - Arengo] [Rimini, Italy] Celery is a distributed task queue for Python. Although it is most popular in the web development ecosystem, it has a wide area of usage from system management to IoT devices. With Celery, transforming a function into a task is quite easy and can add great performance &amp; usability to the applications that we build. This talk aims to give attendants a general overview on Celery and its uses. We will walk through the core Celery architecture by introducing key components with the help of various real-world examples. This will also lead to an understanding of the task queue systems in general. Attendants will also gain knowledge about Celerybeat; a tool that focuses on scheduling tasks. We will be looking for the answers to the following questions: What is a distributed task queue? What are the main elements of Celery? When should we use Celery tasks? How do we use Celery Beat? Attendants should have a basic knowledge of Python, and a minor development experience. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT30M30S	1830	2d	hd	false	https://i.ytimg.com/vi/kDoHrFLkahA/maxresdefault.jpg		13201	201	7	0	4
493	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IeSu_odkI5I	2017-09-28T11:27:05Z	2017-09-28 11:27:05	Armin Ronacher - A Python for Future Generations	"A Python for Future Generations [EuroPython 2017 - Keynote - 2017-07-10 - Anfiteatro 2] [Rimini, Italy] A journey through the current Python interpreter, some of the effects of its leaky abstraction on the language design and how we could evolve the language to future proof it. Covers some practical and not so practical ideas based on experience in the JavaScript and Rust ecosystem. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT42M44S	2564	2d	hd	false	https://i.ytimg.com/vi/IeSu_odkI5I/maxresdefault.jpg		4826	81	2	0	3
494	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	AcoTSe6OjHU	2017-09-28T11:27:04Z	2017-09-28 11:27:04	Roberto Polli, Danilo Abbasciano - TCP / IP Animated	"TCP / IP Animated [EuroPython 2017 - Interactive session - 2017-07-10 - PythonAnywhere Room] [Rimini, Italy] This interactive game teaches is the follow-up of the Router Game by Roberto Polli, and teaches various TCP / IP protocols using paper and pen. Participants are divided in teams, simulating exchanges through various protocols (DNS, TCP, IP) Every player has an L3 role: a PC or mobile phone, a Router, a Load Balancer ... and must communicate with the others following the associate specification (eg. a TCP client may buffer frames, a Load Balancer re-encapsulates IP datagram, ... ) The team which is faster in exhanging messages wins. License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT1H5M48S	348	2d	hd	false	https://i.ytimg.com/vi/AcoTSe6OjHU/maxresdefault.jpg		1064	2	3	0	0
495	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yYSTopeoHyY	2017-09-28T11:27:04Z	2017-09-28 11:27:04	Opening Session - 2017-07-10	Welcome, benvenuto! [EuroPython 2017 - - 2017-07-10 - Anfiteatro 2] [Rimini, Italy] License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT13M46S	826	2d	hd	false	https://i.ytimg.com/vi/yYSTopeoHyY/maxresdefault.jpg		273	1	0	0	0
496	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OCHrzW-R3QI	2017-09-17T15:14:26Z	2017-09-17 15:14:26	EuroPython – The largest Python conference in Europe	This video was created for EuroPython 2017, July 9-16, 2017, in Rimini, Italy. In 2018, we met in Edinburgh, Scotland, UK, from July 23-29 2018. Brought to you by the EuroPython 2017 Team and the EuroPython Society. Enjoy, -- EuroPython 2017 Team https://ep2017.europython.eu/ http://www.europython-society.org/ License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/ Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/	28	Science & Technology	PT1M34S	94	2d	hd	false	https://i.ytimg.com/vi/OCHrzW-R3QI/maxresdefault.jpg		11017	36	1	0	0
497	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IZ5P12GASDQ	2017-07-14T15:13:40Z	2017-07-14 15:13:40	Friday, 14 July - Anfiteatro 2 EuroPython 2017		28	Science & Technology	PT7H12M41S	761	2d	hd	false			1718	10	0	0	3
498	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wyhAzM6TIrw	2017-07-14T15:13:30Z	2017-07-14 15:13:30	Friday, 14 July - PyCharm Room EuroPython 2017		28	Science & Technology	PT7H31M15S	1875	2d	hd	false			1260	14	0	0	0
499	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2Nl_BB9o-_c	2017-07-14T15:13:22Z	2017-07-14 15:13:22	Friday, 14 July - Arengo EuroPython 2017		28	Science & Technology	PT7H26M53S	1613	2d	hd	false			572	2	1	0	1
500	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ONCGQVwHD20	2017-07-14T15:11:02Z	2017-07-14 15:11:02	Friday, 14 July - Anfiteatro 1 EuroPython 2017		28	Science & Technology	PT7H5M13S	313	2d	hd	false			758	6	1	0	0
501	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4H5yNP19es8	2017-07-14T15:10:36Z	2017-07-14 15:10:36	Friday, 14 July - PythonAnywhere Room EuroPython 2017		28	Science & Technology	PT6H34M54S	2094	2d	hd	false			490	0	0	0	0
502	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0qWJDy0EeA0	2017-07-13T16:11:24Z	2017-07-13 16:11:24	Thursday, 13 July - PyCharm Room EuroPython 2017		28	Science & Technology	PT8H29M33S	1773	2d	hd	false			568	4	1	0	0
503	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Xv2zSC39kws	2017-07-13T16:10:25Z	2017-07-13 16:10:25	Thursday, 13 July - Arengo EuroPython 2017		28	Science & Technology	PT8H9M8S	548	2d	hd	false			950	7	0	0	1
504	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-gmwDSDMx0M	2017-07-13T16:04:13Z	2017-07-13 16:04:13	Thursday, 13 July - Anfiteatro 2 EuroPython 2017		28	Science & Technology	PT6H22M30S	1350	2d	hd	false			589	4	0	0	1
505	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QDibKJzS3NQ	2017-07-13T15:58:50Z	2017-07-13 15:58:50	Thursday, 13 July - Anfiteatro 1 EuroPython 2017		28	Science & Technology	PT6H24M26S	1466	2d	hd	false			721	11	1	0	0
506	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NCV1iOO9JFs	2017-07-13T15:39:08Z	2017-07-13 15:39:08	Thursday, 13 July - PythonAnywhere Room EuroPython 2017		28	Science & Technology	PT7H3M1S	181	2d	hd	false			444	4	1	0	0
507	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dyRDmcsTwhE	2017-07-12T16:13:13Z	2017-07-12 16:13:13	Wednesday, 12 July - PythonAnywhere Room EuroPython 2017		28	Science & Technology	PT7H52M16S	3136	2d	hd	false			729	5	1	0	0
508	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-OTwbnxrCSI	2017-07-12T16:10:40Z	2017-07-12 16:10:40	Wednesday, 12 July - Anfiteatro 1 EuroPython 2017		28	Science & Technology	PT7H35M29S	2129	2d	hd	false			634	4	0	0	0
509	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NlFuQT8tCGk	2017-07-12T16:05:50Z	2017-07-12 16:05:50	Wednesday, 12 July - PyCharm Room EuroPython 2017		28	Science & Technology	PT8H28M45S	1725	2d	hd	false			641	2	0	0	3
510	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	28FJOb5fXsw	2017-07-12T16:03:45Z	2017-07-12 16:03:45	Wednesday, 12 July - Anfiteatro 2 EuroPython 2017		28	Science & Technology	PT7H56M18S	3378	2d	hd	false			976	7	0	0	1
511	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6DhKrYQjUls	2017-07-12T15:42:15Z	2017-07-12 15:42:15	Wednesday, 12 July - Arengo EuroPython 2017		28	Science & Technology	PT7H58M54S	3534	2d	hd	false			867	6	0	0	1
512	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	M-D0wIusRQ4	2017-07-11T17:15:04Z	2017-07-11 17:15:04	Tuesday, 11 July - PyCharm Room EuroPython 2017		28	Science & Technology	PT8H5M48S	348	2d	hd	false			716	5	0	0	1
513	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0fMJqWLE6Iw	2017-07-11T15:49:08Z	2017-07-11 15:49:08	Tuesday, 11 July - PythonAnywhere Room EuroPython 2017		28	Science & Technology	PT7H29M21S	1761	2d	hd	false			1123	10	0	0	1
514	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vjzzkeaPyis	2017-07-11T15:46:54Z	2017-07-11 15:46:54	Tuesday, 11 July - Arengo EuroPython 2017		28	Science & Technology	PT7H42M1S	2521	2d	hd	false			537	7	0	0	1
515	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	E-HgQ0JKxHw	2017-07-11T15:39:22Z	2017-07-11 15:39:22	Tuesday, 11 July - Anfiteatro 2 EuroPython 2017		28	Science & Technology	PT7H49M9S	2949	2d	hd	false			1156	13	1	0	1
516	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-tKwhNH6cCA	2017-07-11T15:34:37Z	2017-07-11 15:34:37	Tuesday, 11 July - Anfiteatro 1 EuroPython 2017		28	Science & Technology	PT7H45M33S	2733	2d	hd	false			689	4	0	0	1
517	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	70GmnMg4kAA	2017-07-10T17:01:11Z	2017-07-10 17:01:11	Monday, 10 July - Arengo EuroPython 2017		28	Science & Technology	PT5H7M18S	438	2d	hd	false			613	2	2	0	2
518	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	h6MsqsJqnao	2017-07-10T17:00:29Z	2017-07-10 17:00:29	Monday, 10 July - Python PyCharm Room EuroPython 2017		28	Science & Technology	PT7H18M52S	1132	2d	hd	false			2040	28	0	0	4
519	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	29ebVD4Auf8	2017-07-10T16:59:54Z	2017-07-10 16:59:54	Monday, 10 July - Python Anywhere Room EuroPython 2017		28	Science & Technology	PT6H56M45S	3405	2d	hd	false			849	7	0	0	1
520	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xkcNoqHgNs8	2017-07-10T16:07:38Z	2017-07-10 16:07:38	Monday, 10 July - Anfiteatro 2 EuroPython 2017		28	Science & Technology	PT8H18M3S	1083	2d	hd	false			2106	14	0	0	1
521	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Zzt5Z_fZcW0	2017-07-10T15:56:58Z	2017-07-10 15:56:58	Monday, 10 July - Anfiteatro 1 EuroPython 2017		28	Science & Technology	PT7H44M8S	2648	2d	hd	false			2535	11	0	0	4
522	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ejUzVcvTLgI	2016-08-09T05:58:05Z	2016-08-09 05:58:05	Armin Rigo - CFFI: calling C from Python	Armin Rigo - CFFI: calling C from Python [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/cffi-calling-c-from-python) In this talk, we will see an intro to CFFI, an alternative to using the standard C API to extend Python. CFFI works on CPython and on PyPy. It is a possible solution to a problem that hits notably PyPy --- the CPython C API. The CPython C API was great and contributed to the present-day success of Python, together with tools built on top of it like Cython and SWIG. I will argue that it may be time to look beyond it, and present CFFI as such an example. ----- I will introduce CFFI, a way to call C libraries from Python. http://cffi.readthedocs.org/ CFFI was designed in 2012 to get away from Python's C extension modules, which require hand-written CPython-specific C code. CFFI is arguably simpler to use: you call C from Python directly, instead of going through an intermediate layer. It is not tied to CPython's internals, and works natively on two different Python implementations: CPython and PyPy. It could be ported to more implementations. It is also a big success, according to the download statistics. Some high-visibility projects like Cryptography have switched to it. Part of the motivation for developing CFFI is that it is a minimal layer that allows direct access to C from Python, with no fixed intermediate C API. It shares ideas from Cython, ctypes, and LuaJIT's ffi, but the non-dependence on any fixed C API is a central point. It is a possible solution to a problem that hits notably PyPy --- the CPython C API. The CPython C API was great and, we can argue, it contributed a lot to the present-day success of Python, together with tools built on top of it like Cython and SWIG. However, it may be time to look beyond it. This talk will thus present CFFI as such an example. This independence is what lets CFFI work equally well on CPython and on PyPy (and be very fast on the latter thanks to the JIT compiler).	28	Science & Technology	PT30M9S	1809	2d	hd	false	https://i.ytimg.com/vi/ejUzVcvTLgI/maxresdefault.jpg		2486	20	1	0	1
523	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ntuOIzxCshM	2016-08-07T08:17:13Z	2016-08-07 08:17:13	Gaël Varoquaux - Scientist meets web dev: how Python became the language of data	Gaël Varoquaux - Scientist meets web dev: how Python became the language of data [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/keynote-science-web-dev) Data science is a hot topic and Python has emerged as an ideal language for it. Its strength for data analysis come from the cultural mix between the scientific Python community, and more conventional software usage, such as web development or system administration. I'll show how and why Python is a easy and powerful tool for data science. ----- Python started as a scripting language, but now it is the new trend everywhere and in particular for data science, the latest rage of computing. It didn't get there by chance: tools and concepts built by nerdy scientists and geek sysadmins provide foundations for what is said to be the sexiest job: data scientist. In my talk I'll give a personal perspective, historical and technical, on the progress of the scientific Python ecosystem, from numerical physics to data mining. What made Python suitable for science; How could scipy grow to challenge commercial giants such as Matlab; Why the cultural gap between scientific Python and the broader Python community turned out to be a gold mine; How scikit-learn was born, what technical decisions enabled it to grow; And last but not least, how we are addressing a wider and wider public, lowering the bar and empowering people. The talk will discuss low-level technical aspects, such as how the Python world makes it easy to move large chunks of number across code. It will touch upon current exciting developments in scikit-learn and joblib. But it will also talk about softer topics, such as project dynamics or documentation, as software's success is determined by people.	28	Science & Technology	PT54M1S	3241	2d	hd	false	https://i.ytimg.com/vi/ntuOIzxCshM/maxresdefault.jpg		1463	22	2	0	2
524	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4EPun0eAgLc	2016-08-06T06:29:12Z	2016-08-06 06:29:12	Bargava Subramanian - Machine Learning: Power of Ensembles	Bargava Subramanian - Machine Learning: Power of Ensembles [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/machine-learning-power-of-ensembles) In Machine Learning, the power of combining many models have proven to successfully provide better results than single models. The primary goal of the talk is to answer the following questions: 1) Why and How ensembles produce better output? 2) When data scales, what's the impact? What are the trade-offs to consider? 3) Can ensemble models eliminate expert domain knowledge? ----- It is relatively easy to build a first-cut machine learning model. But what does it take to build a reasonably good model, or even a state- of-art model ? Ensemble models. They are our best friends. They help us exploit the power of computing. Ensemble methods aren't new. They form the basis for some extremely powerful machine learning algorithms like random forests and gradient boosting machines. The key point about ensemble is that consensus from diverse models are more reliable than a single source. This talk will cover how we can combine model outputs from various base models(logistic regression, support vector machines, decision trees, neural networks, etc) to create a stronger/better model output. This talk will cover various strategies to create ensemble models. Using third-party Python libraries along with scikit-learn, this talk will demonstrate the following ensemble methodologies: 1) Bagging 2) Boosting 3) Stacking Real-life examples from the enterprise world will be show-cased where ensemble models produced better results consistently when compared against single best-performing models. There will also be emphasis on the following: Feature engineering, model selection, importance of bias-variance and generalization. Creating better models is the critical component of building a good data science product. A preliminary version of the slides is available [here](https://speakerdeck.com/bargava/power-of-ensembles)	28	Science & Technology	PT16M49S	1009	2d	hd	false	https://i.ytimg.com/vi/4EPun0eAgLc/maxresdefault.jpg		1265	11	0	0	0
525	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	72IZ0b1e3P0	2016-08-06T06:29:12Z	2016-08-06 06:29:12	Geoff French - An Introduction to Deep Learning	Geoff French - An Introduction to Deep Learning [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/an-introduction-to-deep-learning) Deep learning: how it works, how to train a deep neural network, the theory behind deep learning, recent developments and applications. (length: 60 mins) ----- (length: 60 mins) In the last few years, deep neural networks have been used to generate state of the art results in image classification, segmentation and object detection. They have also successfully been used for speech recognition and textual analysis. In this talk, I will give an introduction to deep neural networks. I will cover how they work, how they are trained, and a little bit on how to get going. I will briefly discuss some of the recent exciting and amusing applications of deep learning. The talk will primarily focus on image processing. If you completely new to deep learning, please attend T. Rashid's talk 'A Gentle Introduction to Neural Networks (with Python)'. His talk is in the same room immediately before mine and his material is really good and will give you a good grounding in what I will present to you. :) You may also want to attend I' Lewis' talk 'Deep Learning with Python & TensorFlow' after Lunch in the PyCharm room to round it all off! :)	28	Science & Technology	PT1H1M48S	108	2d	hd	false	https://i.ytimg.com/vi/72IZ0b1e3P0/maxresdefault.jpg		934	11	1	0	0
526	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	b7oYqAlX_Bo	2016-08-06T06:29:12Z	2016-08-06 06:29:12	Tariq Rashid - A Gentle Introduction to Neural Networks (with Python)	Tariq Rashid - A Gentle Introduction to Neural Networks (with Python) [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/a-gentle-introduction-to-neural-networks-with-python) A gentle introduction to neural networks, and making your own with Python. This session is deliberately designed to be accessible to everyone, including anyone with no expertise in mathematics, computer science or Python. From this session you will have an intuitive understanding of what neural networks are and how they work. If you are more technically capable, you will see how you could make your own with Python and numpy. ----- Part 1 - Ideas: - the search for AI, hard problems for computers easy fro humans - learning from examples (simple classifier) - biologically inspired neurons and networks - training a neural network - the back propagation breakthrough - matrix ways of working (good for computers) Part 2 - Python: - Python is easy, and everywhere - Python notebooks - the MNIST data set - a very simple neural network class - focus on concise and efficient matrix calculations with bumpy - 97.5% accuracy recognising handwritten numbers - with just a few lines of code! Part 3 - Q&A	28	Science & Technology	PT45M4S	2704	2d	hd	false	https://i.ytimg.com/vi/b7oYqAlX_Bo/maxresdefault.jpg		7436	142	3	0	11
527	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4_xRFTDxPIg	2016-08-06T06:29:11Z	2016-08-06 06:29:11	Honza Král - Log all the things!	Honza Král - Log all the things! [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/log-all-the-things) Many times these logs are thrown away or just sit uselessly somewhere on disk. I would like to show you how you can make sense of all that data, how to collect and clean them, store them in a scalable fashion and, finally, explore and search across various systems. ----- Centralized logging (and the ELK stack) is proving itself to be a very useful tool in managing a production infrastructure. When combined with other data sources (application logging, business data, ...) it can provide even more insight. This talk is an introduction into the area with some overview of the motivation, tools and techniques that can prove useful. We will show how the open source ELK (Elasticsearch Logstash and Kibana) stack can be used to implement this. It is geared towards people familiar with the DevOps concept that are looking to improve their lives by introducing smarter tools.	28	Science & Technology	PT41M	2460	2d	hd	false	https://i.ytimg.com/vi/4_xRFTDxPIg/maxresdefault.jpg		480	4	0	0	0
528	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8TAJ9ytl9qE	2016-08-06T06:29:11Z	2016-08-06 06:29:11	Ralph Heinkel - The value of mindfulness and how it has arrived at Google	Ralph Heinkel - The value of mindfulness and how it has arrived at Google [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/the-value-of-mindfulness-and-how-it-has-arrived-at-google) Mindfulness has proven to be a foundational skill that started as a pure buddhist practice. Nowadays mindfulness serves as the core technique of several western programs ranging from curing stress- induced medical problems to curricula for teaching successful business leadership, such as the Search Inside Yourself program developed at Google. The aim of this seminar is to provide a practical experience of mindfulness with a short introduction to how it can be applied by digital workers. ----- Mindfulness has proven to be a foundational skill that started as a pure buddhist practice. Nowadays mindfulness serves as the core technique of several western programs ranging from curing stress- induced medical problems to curricula for teaching successful business leadership, such as the Search Inside Yourself (SIY) program developed at Google in 2002. Mind is the root of all things. Neuroscience shows that attention is a fundamental function of the mind. Being able to direct attention to the present moment - and keep it there while performing daily tasks - is a great tool to navigate through life and its challenges with more engagement, more happiness, and more resilience. Focusing attention in a relaxed way enables us to disconnect from the overall noise found in a high-speed environment and get things done without feeling too overwhelmed by them. But being effective is not only about checking off more tasks - it is about how we are in resonance with our environment, how we interact with others, and how we face the increasing complexity in our professional life. The aim of this seminar is to provide a practical experience of mindfulness with a short introduction to how it can be applied in a technology driven world as experience by digital workers.	28	Science & Technology	PT24M28S	1468	2d	hd	false	https://i.ytimg.com/vi/8TAJ9ytl9qE/maxresdefault.jpg		354	7	0	0	0
529	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	99hirARuiyY	2016-08-06T06:29:11Z	2016-08-06 06:29:11	Various speakers - Lightning Talks	Various speakers - Lightning Talks [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] Lightning talks, presented by Harald Massa - Vitalii Vokhmin - Deploying a Hobby App in Seconds - Jernej Makovsek - Selenium Components - David Terry - Model-Based Testing - Rafael - Considerations at Scale - Team Coala - Marketing by Programmers - Facundo Batista - Python Argentina - Ania Wszeborowska - PyCon PL - Anton Coceres - PyCon DE 2016 - Shai Efrati - The Krihelinator - Lars Claussen - Live Hydrological Modelling with 3Di - Leonardo Santagada - The XONSH Shell - Fabio Pliger - How to Scale Python for Excel Users	28	Science & Technology	PT51M56S	3116	2d	hd	false	https://i.ytimg.com/vi/99hirARuiyY/maxresdefault.jpg		374	1	1	0	0
530	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	M33s1Mb5bjo	2016-08-06T06:29:11Z	2016-08-06 06:29:11	Alessandro Amici - Test-driven code search and reuse coming to Python with pytest-nodev	Alessandro Amici - Test-driven code search and reuse coming to Python with pytest-nodev [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/test-driven-source-code-search-for-python-with-pytest-nodev) We will present the test-driven reuse (TDR) development strategy, a natural extension of test-driven development (TDD), and how to execute it with [pytest-nodev][1] a test-driven search engine for Python code. [1]: http://pytest-nodev.readthedocs.io/en/stable/quickstart.html Pytest-nodev and the other nodev tools that helps implement TDR for Python are rather new, in spite of that we will present several successful applications of the technique to more and more complex examples. ----- We will present the test-driven reuse (TDR) development strategy, a natural extension of test-driven development (TDD), and how to execute it with [pytest-nodev](http://pytest- nodev.readthedocs.io/en/stable/quickstart.html) an Open Source test- driven search engine for Python code. When developing new functionalities developers spend significant efforts searching for code to reuse, mainly via keyword-based searches, e.g. on StackOverflow and Google. Keyword-based search is effective in finding code that is explicitly designed and documented to be reused, e.g. libraries and frameworks, but typically fails to identify reusable functions and classes in the large corpus of auxiliary code of software projects. TDR aims to address the limits of keyword-based search with test- driven code search that focuses instead on code behaviour and semantics. Developing a new feature in TDR starts with the developer writing the tests that will validate candidate implementations of the desired functionality. Before writing any functional code the tests are run against all functions and classes of available projects. Any code passing the tests is presented to the developer as a candidate implementation for the target feature. [Pytest-nodev](https://github.com/nodev-io/pytest-nodev) and other nodev tools that help implement TDR for Python are newer than the JAVA counterparts, in spite of that we will present several applications of the technique to more and more complex examples.	28	Science & Technology	PT36M43S	2203	2d	hd	false	https://i.ytimg.com/vi/M33s1Mb5bjo/maxresdefault.jpg		192	4	1	0	0
531	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ScqJEuZK8_c	2016-08-06T06:29:11Z	2016-08-06 06:29:11	Fabio Pliger/Marc-André Lemburg - EuroPython 2016 Closing Session	Fabio Pliger/Marc-André Lemburg - Closing Session [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/closing-session) Closing Session	28	Science & Technology	PT20M18S	1218	2d	hd	false	https://i.ytimg.com/vi/ScqJEuZK8_c/maxresdefault.jpg		63	0	0	0	0
532	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iGMef0eRrdM	2016-08-06T06:29:11Z	2016-08-06 06:29:11	Olga Lyashevska - How can machine learning help to predict changes in size of Atlantic herring ?	Olga Lyashevska - How can machine learning help to predict changes in size of Atlantic herring ? [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/how-can-machine-learning-help-to-predict-changes-in-size-of-atlantic-herring) This talk is a case-study of how Python (Pandas, NumPy, SciKit-learn) can be implemented to identify the influence of the potential drivers of a decline in size of Atlantic herring populations using Gradient Boosting Regression Trees. ----- A decline in size and weight of Atlantic herring in the Celtic Sea has been observed since the mid-1980’s. The cause of the decline remains largely unexplained but is likely to be driven by the interactive effect of various endogenous and exogenous factors. The goal of this study is to interrogate a long time-series of biological data obtained from commercial fisheries from 1959 to 2012. We use gradient boosting regression trees to identify important variables underlying changes in growth from various potential drivers, such as: - Atlantic multidecadal oscillation; - sea surface temperature; - salinity; - wind; - zooplankton abundance; - fishing pressure. This learning algorithm allows to quantify the influence of the potential drivers of change with the test error lower when compared to other supervised learning techniques. The predictor variables importance spectrum (feature importance) helps to identify the underlying patterns and potential tipping points while resolving the external mechanisms underlying observed changes in size and weight of herring. This analysis is a useful case-study of how Python can be implemented in academia. The outputs of the analysis are of relevance to conservation efforts and sustainable fisheries management which promotes species resistance and resilience.	28	Science & Technology	PT21M40S	1300	2d	hd	false	https://i.ytimg.com/vi/iGMef0eRrdM/maxresdefault.jpg		446	2	0	0	0
533	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6WpK6YILjxA	2016-08-06T06:29:10Z	2016-08-06 06:29:10	Alexandre Savio - Nipy on functional brain MRI	Alexandre Savio - Nipy on functional brain MRI [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/nipy-on-functional-brain-mri) This is an introductory talk to modern brain image analysis tools. I will show how to use nipy tools to process one resting-state fMRI subject, perform intra-subject registration, ICA analysis to extract and visualize resting-state networks. If the time allows me I will introduce an anatomical brain atlas and how to perform non-linear registration to do atlas-based segmentation. ----- This is an introductory talk to modern brain image analysis tools. I will show how to use nipy tools to process one resting-state fMRI subject, perform intra-subject registration, ICA analysis to extract and visualize resting-state networks. If the time allows me I will introduce how to perform non-linear registration to to atlas-based segmentation. The outline of the talk: 1. Present the COBRE dataset and show its characteristics. 2. Use nibabel to open a NifTI file and see the matrix/volume parameters. 3. Use nilearn.plotting to show the anatomical image. 4. Use nipy to co-register the anatomical image to the fMRI image. 5. Use nilearn to perform CanICA and plot ICA spatial segmentations. If time allows: 7. Present a brain anatomical atlas and its template. 8. Present the tools needed for non-linear registration. 9. Show the result of an atlas-based segmentation result. 10. Use nilearn to calculate the resting-state functional connectivity matrix of the subject. 11. Plot it with Bokeh.	28	Science & Technology	PT39M23S	2363	2d	hd	false	https://i.ytimg.com/vi/6WpK6YILjxA/maxresdefault.jpg		651	7	0	0	0
534	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	RqOpw3YNKpc	2016-08-06T06:29:10Z	2016-08-06 06:29:10	Takuro Wada - 3D Modeling and Printing by Python	Takuro Wada - 3D Modeling and Printing by Python [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/3d-modeling-and-printing-by-python) Creating 3D model for 3D printing is pretty hard for non 3D CG designer or non 3D CAD engineer. But recently, so many 3D software (like Maya, Blender, Fusion360 and so on) provides Python API to manipulate 3D data in those software. So in this session, I will introduce Python API of Blender and Autodesk Fusion 360 and share some basic knowledge and tips when you use these API. I will also introduce my past projects with those APIs. ----- ### Abstract - Creating 3D model for 3D printing is pretty hard for **non 3D CG designer or non 3D CAD engineer**. - Recently, so many 3D software (like Maya, Blender, Fusion360 and so on) provides Python API to manipulate 3D data in those software. Once you learn these Python API, you can generate 3D model by Python and 3D print those generated model. - In this session, I will introduce Python API of some softwares and share some basic knowledges and tips when you use these API. I will also introduce my past projects with those APIs and my products. ![][1] ### Goal - Introduce 3D model generation and 3D printing with Python to audience ### After this session, you will - Acquire the basic knowledge of 3D data structure - Understand basic concepts of Python API provided by 3D softwares - Acquire knowledge to start your 3D model generation project by Python - Know past 3D model generation projects by Python ### Prerequisite - Basic knowledge of Python - Interests for 3D modeling and 3D printing by Python [1]: http://takuro.ws/img/euro_python.jpg	28	Science & Technology	PT27M43S	1663	2d	hd	false	https://i.ytimg.com/vi/RqOpw3YNKpc/maxresdefault.jpg		1550	21	0	0	0
535	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hhU8LOgy-QQ	2016-08-06T06:29:10Z	2016-08-06 06:29:10	Sophia Davis - Peeking into Python’s C API	Sophia Davis - Peeking into Python’s C API [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/peeking-into-pythons-c-api) Ever wondered how Python works under the hood? One way to learn about Python-the-C-program is by exploring the C API for writing Python bindings to native C libraries. In this talk, we will walk through a simple example of making a C library callable from Python code and vice versa. Along the way, we will encounter some essential features of Python: reference counting, memory management, and the inner- workings of objects and modules. ----- We all love Python. It’s so elegant and easy to use as a programming language that we forget about the giant, complicated C program executing our strings of white-space sensitive code. For many Python programmers, this side of Python is just a big black box. It works well, so thankfully we don’t *need* to go messing around inside... but what if you *want* to look into the inner workings of this powerful tool? One way to dive into the C-program-side of Python is by exploring the C API for writing Python bindings to native C libraries. In this talk I will explore the basics of this API as I recount my journey to make a simple C library callable from Python code, and allow C code to invoke objects defined in pure Python. Along the way, we will encounter some essential features of Python: reference counting, memory management, and the inner-workings of objects and modules.	28	Science & Technology	PT30M1S	1801	2d	hd	false	https://i.ytimg.com/vi/hhU8LOgy-QQ/maxresdefault.jpg		320	5	0	0	0
536	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	oCb7ji8IzPc	2016-08-06T06:29:10Z	2016-08-06 06:29:10	Patrick Mühlbauer - Split Up! Fighting the Monolith	Patrick Mühlbauer - Split Up! Fighting the Monolith [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/split-up-fighting-the-monolith) Having to deal with a monolith, an application which became far to big over the time, can be quite bothersome. On the other hand if you split it up and have to deal with lots of smaller components, you might end up in dependency hell. But not only the splitting of the monolith and the management of the dependencies afterwards can be a problem, but also the packaging of you python components itself. ----- Do you know this situation, where you and your team are facing this big monolith? An application which has grown far too big over the years. Every time when you make a change, you have to fear the code might break at a totally different place, because lots of things are closely intertwined. But what to do if you are at such a point? Maybe you start thinking about microservices but then questions like "Are they really the right thing for us?" and "How do we get there?" arise. In my talk I will show you how we are dealing with our monolith. A collection of multiple python packages without clear boundaries, forming the actual application - all living in a single monorepo. I will talk about how we split up the whole thing, making it more flexible for us and also easier to use individual components by other teams. All this, of course, comes with a price: You have to think more about the dependencies between you components. You have to think about how you can efficiently test everything, making sure your final application is still working correctly. Don't loosing yourself in dependency hell and packaging all components correctly becomes quite a challenge. This talk will: - show you bad patterns to avoid, so that you don't end up in the above situation in the first place - give you ideas what to consider when tackling your monolith - explain how to package your python components and how to mange your dependencies	28	Science & Technology	PT23M11S	1391	2d	hd	false	https://i.ytimg.com/vi/oCb7ji8IzPc/maxresdefault.jpg		189	0	1	0	0
537	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	uYKofUe0TnM	2016-08-06T06:29:10Z	2016-08-06 06:29:10	Michele Simionato - How to migrate from PostgreSQL to HDF5 and live happily ever after	Michele Simionato - How to migrate from PostgreSQL to HDF5 and live happily ever after [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/how-to-migrate-from-postgresql-to-hdf5-and-live-happily-ever-after) This talk is for people who have a lot of floating numbers inside PostgreSQL tables. I will bring as an example my personal experience with a scientific project that used PostgreSQL as storage for a rather complex set of composite multidimensional arrays and ran into all sorts of performances issues, both in reading and writing the data. I will explain how I solved all that by dropping the database in favor of an HDF5 file, while keeping the application running and the users happy. ----- This talk is for people who have a lot of floating numbers inside PostgreSQL tables and have problems with that. I will narrate my experience with a scientific project that used PostgreSQL as storage for a rather complex set of composite multidimensional arrays and ran into all sorts of performances issues, both in reading and writing the data. I will discuss the issues and the approach that was taken first to mitigate them (unsuccessfully) and then to remove them (successfully) by a complete rethinking of the underlying architecture and eventually the removal of the database. I will talk about the migration strategies that were employed in the transition period and how to live with a mixed environment of metadata in PostgreSQL and data in an HDF5 file. I will also talk about concurrency, since the underlying application is distributed and massively parallel, and still it uses the purely sequential version of HDF5. Questions from the audience are expected and welcome. The talk is of interest to a large public, since it is mostly about measuring things, monitoring and testing a legacy system, making sure that the changes do not break the previous behavior and keeping the users happy, while internally rewriting all of the original code. And doing that in a small enough number of years!	28	Science & Technology	PT39M21S	2361	2d	hd	false	https://i.ytimg.com/vi/uYKofUe0TnM/maxresdefault.jpg		704	5	0	0	0
538	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vlpeQJqzOfA	2016-08-06T06:29:10Z	2016-08-06 06:29:10	Björn Meier - NetworkX Visualization Powered by Bokeh	Björn Meier - NetworkX Visualization Powered by Bokeh [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/networkx-visualization-powered-by-bokeh) Visual data exploration, e.g. of social networks, can be ugly manual work. The talk will be an introduction for the combined usage of NetworkX and Bokeh in a Jupyter Notebook to show how easy interactive network visualization can be. ----- During some work with social network analysis my favoured tool to study the networks was NetworkX. It provides a wide set of features and algorithms for network analysis, all in Python. But the functionality to visualize networks is not very strong and not to mention the missing interactive manipulation. However during the exploration of data: exporting, feeding an extra tool for visualization and then manipulating data manually was a tedious workflow. As I also had the optional target of presenting networks in a browser, I improved this workflow by creating a Flask web application providing interfaces to my networks. On the browser side I created a javascript client based on D3.js. In retrospective the required programming effort in Python and also in Javascript was too much for such a task. And exactly this target, interactive visualization in a browser (and as bonus in a Jupyter Notebook), can be achieved quiet easy now with Bokeh. The talk will be a step by step introduction, starting with the basic visualization of a network using Bokeh, NetworkX and a Jupyter Notebook. Next, how to create interactions with your network which will be used to change a network structure, e.g. a leaving person. As we want to see directly the impact of these changes in a network I will finally show how to update networks and visualize directly how the importance of the remaining people changes. And all this can be achieved with Python and maybe a bit of Javascript. (There was no video for the first few minutes of this talk).	28	Science & Technology	PT23M14S	1394	2d	hd	false	https://i.ytimg.com/vi/vlpeQJqzOfA/maxresdefault.jpg		4715	29	1	0	1
539	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wtUIvPSIfiE	2016-08-06T06:29:10Z	2016-08-06 06:29:10	Ryan Lahfa - Free your papers, researchers!	Ryan Lahfa - Free your papers, researchers! [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/free-your-papers-researchers) Research is financed from public money and researchers publish papers. But, papers are often unavailable to everyone except if you pay money for it, which seems wrong! What can we do as developers? Well, we can help researchers to open their papers! ----- And of course, how do we do it? Python, of course! Dissemin is a website using the Django framework which aims to promote a global Open Access policy, it offers to researchers a way to deposit legally their papers inside of a repository (Zenodo for example). We will see how the researcher world works quickly, and what are the challenges of assisting researcher to make papers available to everyone!	28	Science & Technology	PT19M7S	1147	2d	hd	false	https://i.ytimg.com/vi/wtUIvPSIfiE/maxresdefault.jpg		453	8	0	0	0
540	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DTKlo8w6QIo	2016-08-06T06:29:09Z	2016-08-06 06:29:09	Tobias Oberstein - Scaling Microservices with Crossbar.io	Tobias Oberstein - Scaling Microservices with Crossbar.io [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/scaling-microservices-with-crossbario) Microservices offer an efficient way to only scale those parts of your application which are performance bottlenecks. We will demo and explain open source tech which allows the easy scaling out across distributed devices. The audience will be able to donate processor cycles from their devices to our demo application (and win a hardware prize). The demo uses [Crossbar.io][1], an open souce application router (written in Python), and all demo code is open source. [1]: http://crossbar.io ----- Microservices offer an efficient way to only scale parts of your applications which are hotspots. Instead of running multiple instances of a monolithic application, with all the complexity and operational run-time overhead that entails, you can scale only the functionality which is a bottleneck. Today that increasingly means scaling out, not up. We will go over open source technologies which allow the easy scaling out across distributed devices. A live demo will allow the audience to participate with its devices (including mobile phones) in an application. (There will be prizes for the donors.) The demo uses [Crossbar.io,][1] an open source router for the open [Web Application Messaging Protocol (WAMP) ][2] written in Python. WAMP supports routed Remote Procedure Calls, and Crossbar.io uses these to implement various load-balancing strategies across endpoints which register a particular procedure. WAMP has a first-class library for Python ([Autobahn|Python][3]), but is cross-language, with support for a total of 11 languages. This allows you to implement polyglot and heterogenos microservices applications, from Python to Node.js to C# right into the browser. Microservices can run anywhere, since the outgoing connections to the router which WAMP uses avoid NAT problems. All software used is open source, and all demo code is provided on GitHub under the MIT license. [1]: http://crossbar.io [2]: http://wamp-proto.org [3]: http://autobahn.ws/python	28	Science & Technology	PT42M13S	2533	2d	hd	false	https://i.ytimg.com/vi/DTKlo8w6QIo/maxresdefault.jpg		1760	24	0	0	0
541	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XIFJttWrz6k	2016-08-06T06:29:09Z	2016-08-06 06:29:09	Joaquin Berenguer - Server for IoT devices and Mobile devices using Wifi Network,	Joaquin Berenguer - Server for IoT devices and Mobile devices using Wifi Network, [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/server-for-iot-devices-and-mobile-devices-using-wifi-network) The server is developed in Python 3.4, using MySQL5.6 The mobile device application is developed using Kivy. The application in the IoT device is developed in C. The IoT device is a hardware device using ATSAMD21 from Atmel, and wifi is made using ESP8266. The security used is sha256, standard in Python. And the IoT device using the crypto device ATECC508A, that generate also sha256. ----- The server is developed in Python 3.4, the information is stored in a MySQL 5.6 database. All IoT devices, Mobile Devices and Windows or Linux Desktop are registered in the database. All type of messages that are understood by every type of device, is also registered. A map between which device could access which device is also stored in the database. With this info, any mobile registered could send a message to a device. The message arrives to the server that resend the message to the IoT device, receive the answer and resend to the Mobile device. The Mobile device and the IoT device, could be anywhere, as the server is public, have the registration of every device connected. The mobile device application is developed using Kivy. The application in the IoT device is developed in C. The IoT device is a hardware device using ATSAMD21 from Atmel, and wifi is made using ESP8266. The security used is sha256, standard in Python. And the IoT device using the crypto device ATECC508A, that generate also sha256. The server start a thread for every device connected, the communication between thread is made using queues. During the presentation, the server is going to be presented, and IoT device is shown, no demo is going to be made. A library to manage the database, is used for easy access to the database, and have database independence, also will be shown. Prerequites: Python 3.4, sha256, threading, queue, mysql.connector, relational database.	28	Science & Technology	PT18M41S	1121	2d	hd	false	https://i.ytimg.com/vi/XIFJttWrz6k/maxresdefault.jpg		363	2	0	0	0
542	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	d-ka10jngQQ	2016-08-06T06:29:09Z	2016-08-06 06:29:09	Michał Bultrowicz - TDD of Python microservices	Michał Bultrowicz - TDD of Python microservices [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/tdd-of-python-microservices) A framework-agnostic approach to creating Python microservices with a tests-first approach. I'll show how to utilize Docker and Swagger to create service and contract tests that run your service as an independent process, as if it was running in production, giving you and your team a higher degree of confidence when introducing changes. A little bit of a broader microservice, TDD and work management context will also be given. ----- These will be my ideas on how to help a microservice-based (HTTP) project by integrating testing into the development process (TDD). I'll approach the testing pyramid presented in Martin Fowler's "Microservice Testing" as well as the test variants in "Building Microservices" (O'Reilly) and I'll show a way of how they can be translated to real-life Python. The main focus will be on "service tests" (aka. out-of-process component tests) and contract tests. They both can be run relatively fast on a development machine and can give fast feedback to the developer, preventing many kinds of problems. Service tests run the whole application process without any internal modifications, but have to present the service with a fake "outside world". I'll show how to fake external HTTP services with Mountebank (similar to WireMock). Instead of faking other systems (like databases) we can quickly spin up the real deal as a Docker container from within the tests. Contract tests check if the contract (interface) of your service with the outside world is kept, so no external services should be broken by the changes you are introducing. It can also work the other way around, proving that your collaborators are keeping their part of the deal. In both cases, Swagger (a RESTful API description scheme) and a few clever tricks can be used for significant advantage.	28	Science & Technology	PT37M13S	2233	2d	hd	false	https://i.ytimg.com/vi/d-ka10jngQQ/maxresdefault.jpg		2166	19	2	0	0
543	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	v_F9CnpgOd8	2016-08-06T06:29:09Z	2016-08-06 06:29:09	Claudia Guirao Fernández - Python, Data & Rock'n'Roll	Claudia Guirao Fernández - Python, Data & Rock'n'Roll [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/python-data-rocknroll) Approach to topics, evolution, correlations through the lyrics of some of the greatests rock bands of all times. We will talk about the different phases of this personal project, in which I approach to a passion through a scientific method. This is a project that combine different techniques: - web crawling - NoSQL - Natural Language Processing - Data visualization ----- Have you ever wonder how David Bowie has evolved into the theme of his songs throughout their studio albums? Want to find out in what looks like Nirvana and Pink Floyd? Approach to topics, evolution, correlations through the lyrics of some of the greatests rock bands of all times. We will talk about the different phases of this personal project, in which I approach to a passion through a scientific method. This is a project that combine different techniques: - Web crawling - NoSQL - Natural Language Processing - Data visualization	28	Science & Technology	PT21M27S	1287	2d	hd	false	https://i.ytimg.com/vi/v_F9CnpgOd8/maxresdefault.jpg		221	1	0	0	0
544	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wG6u51uuXEA	2016-08-06T06:29:09Z	2016-08-06 06:29:09	Mike BRIGHT - Jupyter for everything else	Mike BRIGHT - Jupyter for everything else [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/jupyter-for-everything-else) Sure you can do a chunk of scientific exploration and stuff in Jupyter in your choice of language supplemented with visuals and that's already awesome ! But let's head off the beaten track a little to look at other uses, especially command-line. We'll look at some alternate uses of Jupyter ... ----- - Write command-line tutorials, cheat sheets in an easy to maintain format. - Perform visualization tasks for command-line tools - Write blog posts - Create interactive presentations (thanks Damian !) - Publish interactive books, articles and blog posts - HTML/js/css experimentation	28	Science & Technology	PT45M1S	2701	2d	hd	false	https://i.ytimg.com/vi/wG6u51uuXEA/maxresdefault.jpg		679	4	0	0	0
545	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yZuxcR8jxlw	2016-08-06T06:29:09Z	2016-08-06 06:29:09	Ian Lewis - Deep Learning with Python & TensorFlow	Ian Lewis - Deep Learning with Python & TensorFlow [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/deep-learning-with-python-tensorflow) Python has lots of scientific, data analysis, and machine learning libraries. But there are many problems when starting out on a machine learning project. Which library do you use? How do they compare to each other? How can you use a model that has been trained in your production app? In this talk I will discuss how you can use TensorFlow to create Deep Learning applications. I will discuss how it compares to other Python machine learning libraries, and how to deploy into production. ----- Python has lots of scientific, data analysis, and machine learning libraries. But there are many problems when starting out on a machine learning project. Which library do you use? How do they compare to each other? How can you use a model that has been trained in your production application? TensorFlow is a new Open-Source framework created at Google for building Deep Learning applications. Tensorflow allows you to construct easy to understand data flow graphs in Python which form a mathematical and logical pipeline. Creating data flow graphs allow easier visualization of complicated algorithms as well as running the training operations over multiple hardware GPUs in parallel. In this talk I will discuss how you can use TensorFlow to create Deep Learning applications. I will discuss how it compares to other Python machine learning libraries like Theano or Chainer. Finally, I will discuss how trained TensorFlow models could be deployed into a production system using TensorFlow Serve.	28	Science & Technology	PT1H18S	18	2d	hd	false			1821	16	0	0	1
546	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1OB0w4b_3l0	2016-08-06T06:29:08Z	2016-08-06 06:29:08	Hynek Schlawack - Get Instrumented!	Hynek Schlawack - Get Instrumented! [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/get-instrumented) To get real time insight into your running applications you need to instrument them and collect metrics: count events, measure times, expose numbers. Sadly this important aspect of development was a patchwork of half-integrated solutions for years. Prometheus changed that and this talk will walk you through instrumenting your apps and servers, building dashboards, and monitoring using metrics. ----- Metrics are highly superior to logging in regards of understanding the past, presence, and future of your applications and systems. They are cheap to gather (just increment a number!) but setting up a metrics system to collect and store them is a major task. You may have heard of statsd, Riemann, Graphite, InfluxDB, or OpenTSB. They all look promising but on a closer look it’s apparent that some of those solutions are straight-out flawed and others are hard to integrate with each other or even to get up and running. Then came Prometheus and gave us independence of UDP, no complex math in your application, multi-dimensional data by adding labels to values (no more server names in your metric names!), baked in monitoring capabilities, integration with many common systems, and official clients for all major programming languages. In short: a *unified* way to gather, process, and present metrics. This talk will: 1. explain why you want to collect metrics, 1. give an overview of the problems with existing solutions, 1. try to convince you that Prometheus may be what you’ve been waiting for, 1. teach how to impress your co-workers with beautiful graphs and intelligent monitoring by putting a fully instrumented Python application into production, 1. and finally give you pointers on how to migrate an existing metrics infrastructure to Prometheus *or* how to integrate Prometheus therein.	28	Science & Technology	PT41M28S	2488	2d	hd	false	https://i.ytimg.com/vi/1OB0w4b_3l0/maxresdefault.jpg		1072	11	0	0	1
547	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9Q8nEA_0ccg	2016-08-06T06:29:08Z	2016-08-06 06:29:08	Florian Wilhelm - Handling GPS Data with Python	Florian Wilhelm - Handling GPS Data with Python [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/handling-gps-data-with-python) If you have ever happened to need to deal with GPS data in Python you may have felt a bit lost. This talk presents libraries starting from basic reading and writing GPS tracks in the GPS Exchange Format to adding missing elevation information. Also visualisation of tracks on OpenStreetmap data with interactive plots in Jupyter notebooks is covered. Additionally common algorithms for GPS like Douglas-Peucker and Kalman filter are explained. ----- If you have ever happened to need to deal with GPS data in Python you may have felt a bit lost. There are many libraries at various states of maturity and scope. Finding a place to start and to actually work with the GPS data might not be as easy and obvious as you might expect from other Python domains. Inspired from my own experiences of dealing with GPS data in Python, I want to give an overview of some useful libraries. From basic reading and writing GPS tracks in the GPS Exchange Format with the help of gpxpy to adding missing elevation information with srtm.py. Additionally, I will cover mapping and visualising tracks on OpenStreetmap with mplleaflet that even supports interactive plots in a Jupyter notebook. Besides the tooling, I will also demonstrate and explain common algorithms like Douglas-Peucker to simplify a track and the famous Kalman filters for smoothing. For both algorithms I will give an intuition about how they work as well as their basic mathematical concepts. Especially the Kalman filter that is used for all kinds of sensor, not only GPS, has the reputation of being hard to understand. Still, its concept is really easy and quite comprehensible as I will also demonstrate by presenting an implementation in Python with the help of Numpy and Scipy. My presentation will make heavy use of the Jupyter notebook which is a wonderful tool perfectly suited for experimenting and learning.	28	Science & Technology	PT42M23S	2543	2d	hd	false	https://i.ytimg.com/vi/9Q8nEA_0ccg/maxresdefault.jpg		14845	235	5	0	7
548	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZpJxwpyJpq4	2016-08-06T06:29:08Z	2016-08-06 06:29:08	Elizaveta Shashkova - Monkey-patching: a magic trick or a powerful tool?	Elizaveta Shashkova - Monkey-patching: a magic trick or a powerful tool? [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/monkey-patching-a-magic-trick-or-a-powerful-tool) Monkey-patching is a dynamic modification of a class or a module at runtime. The Python gives developers a great opportunity to use monkey-patching almost everywhere. But should developers do it? Is it a magic trick or a powerful tool? In this talk we will try to give the answers to these questions and try to figure out pros and cons of using monkey- patching. ----- First of all we will learn what is monkey-patching in Python and consider some basic examples of using it. Of course, monkey-patching may cause some problems in the code. We will consider bad ways to use it and try to learn different types of problems monkey-patching may lead to. Despite of some bugs that may appear in a patched program, monkey- patching is used in a real life rather often. There are some reasons and motives to do it. We will consider the examples of using monkey- patching in real projects like `gevent`, in some other libraries and in testing. Also we will learn some monkey-patch tricks that helps to solve real-life problems in the Python debugger which is a part of the PyCharm and the PyDev. After that we will compare using of monkey-patching in Python to using it in an another dynamic language Ruby. Are there any differences between them? Is our reasoning correct for Ruby? Finally we will conclude all our thoughts and examples and try to give the answer to the question from title.	28	Science & Technology	PT22M18S	1338	2d	hd	false	https://i.ytimg.com/vi/ZpJxwpyJpq4/maxresdefault.jpg		3191	40	0	0	2
549	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	knL-c9WIru8	2016-08-06T06:29:08Z	2016-08-06 06:29:08	Anna Herlihy - Wrestling Python into LLVM Intermediate Representation	Anna Herlihy - Wrestling Python into LLVM Intermediate Representation [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/wrestling-python-into-llvm-intermediate-representation) The LLVM Project provides an intermediate representation (LLVM-IR) that can be compiled on many platforms. LLVM-IR is used by analytical frameworks to achieve language and platform independence. What if we could add Python to the long list of languages that can be translated to LLVM-IR? This talk will go through the steps of wrestling Python into LLVM-IR with a simple, static one-pass compiler. ----- What is LLVM-IR? The LLVM Compiler Infrastructure Project provides a transportable intermediate representation (LLVM-IR) that can be compiled and linked into multiple types of assembly code. What is great about LLVM-IR is that you can take any language and distill it into a form that can be run on many different machines. Once the code gets into IR it doesn’t matter what platform it was originally written on, and it doesn’t matter that Python can be slow. It doesn’t matter if you have weird CPUs - if they’re supported by LLVM it will run. What is Tupleware? TupleWare is an analytical framework built at Brown University that allows users to compile functions into distributed programs that are automatically deployed. TupleWare is unique because it uses LLVM-IR to be language and platform independent. What is PyLLVM? This is the heart of the talk. PyLLVM is a simple, easy to extend, one-pass static compiler that takes in the subset of Python most likely to be used by Tupleware. PyLLVM is based on an existing project called py2llvm that was abandoned around 2011. This talk will go through some basic compiler design and talk about how some LLVM-IR features make our lives easier, and some much harder. It will cover types, scoping, memory management, and other implementation details. To conclude, it will compare PyLLVM to Numba, a Python-to-LLVM compiler from Continuum Analytics and touch on what the future has in store for PyLLVM.	28	Science & Technology	PT25M48S	1548	2d	hd	false	https://i.ytimg.com/vi/knL-c9WIru8/maxresdefault.jpg		551	10	0	0	0
550	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qKPNubOwSJ0	2016-08-06T06:29:08Z	2016-08-06 06:29:08	John Sutherland - Iteration, iteration, iteration	John Sutherland - Iteration, iteration, iteration [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/iteration-iteration-iteration) There should be something for everyone in this whistle–stop tour of iteration in Python setting off from `for`–loops, and riding cross–country to multiplexing coroutines! See and hear the amazing sights and sounds of list comprehensions, and generators. Take in the amazing vistas from `itertools`, and be amazed at the magnificent `yield`! ----- We’ll take detours to higher–order functions, closures, and decorators. And cover the FP inspired builtins `map`, `filter`, and `reduce`, as well as the epitome of Pythonic programming, `enumerate`.	28	Science & Technology	PT25M16S	1516	2d	hd	false	https://i.ytimg.com/vi/qKPNubOwSJ0/maxresdefault.jpg		355	4	0	0	1
551	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LAxOj0mtq6I	2016-08-06T06:29:07Z	2016-08-06 06:29:07	Malwina Nowakowska - RESTful API - Best Practices.	Malwina Nowakowska - RESTful API - Best Practices. [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/restful-api-best-practises) It is important to understand from the beginning how model API should look like. Do not repeat your friends’ mistakes and make developers upset! There are some simple rules that can make your API cooler - clean, safe and efficient. Based on both bad and good examples of REST APIs (I had to deal with) we will learn about best practices. ----- Nowadays building and integrating with Representational State Transfer web services is a very common thing. It seems that creating RESTful API is trivial - nothing could be more wrong. In my previous projects I had to integrate with lots of APIs. Unfortunately only some of them were easy to work with. Most of the APIs did not follow the main rules of model API. It is really important to understand how model REST API should look like. To make developers happy we will learn best practices of creating REST API from the beginning. We will start with quick introduction what REST is, why principle of REST is so amazing, talk about identifires and explain some key terms. We will discuss about architectall constraints and properties. Mistakes and best practices are based on my experience of developing and maintaining the projects. After this talk you will be able to create model RESTful API developers will be happy to work with.	28	Science & Technology	PT23M21S	1401	2d	hd	false	https://i.ytimg.com/vi/LAxOj0mtq6I/maxresdefault.jpg		1338	9	3	0	1
552	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OTWs0wPHU-g	2016-08-06T06:29:07Z	2016-08-06 06:29:07	Michał Karzyński - Building beautiful RESTful APIs using Flask	Michał Karzyński - Building beautiful RESTful APIs using Flask [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/building-beautiful-restful-apis-using-flask-1) This talk demonstrates a technique for developing RESTful APIs using Flask and Flask-Restplus. These tools automate common API tasks such as: validating input, serializing output, routing requests to methods, and turning Python exceptions into HTTP responses. The final API comes with a Swagger interactive UI, which documents all endpoints and makes testing easy. The described tools tools provide just enough syntactic sugar to make your code readable, scalable and easy to maintain. ----- Modern software is powered by APIs. User facing apps may run in the browser or on mobile platforms, but they almost universally rely on data stored in the cloud. More often then not apps use a RESTful API to exchange data with the server. In my talk I will demonstrate a technique for developing RESTful APIs using the [Flask][1] micro-framework and [Flask-Restplus][2]. These powerful tools automate most common tasks associated with API development: validating input, serializing output, routing requests to methods, and turning Python exceptions into machine-readable HTTP responses. A Flask-Restplus API is fully documented by [Swagger][3] which lists all defined endpoints, their query parameters and the format of input and output JSON objects. Swagger generates an [interactive UI][4] for selecting options and easily testing queries. Flask and Flask-Restplus provide just enough syntactic sugar to make your code readable, scalable and easy to maintain. My presentation will give an overview of the features of Flask and Flask-Restplus; I will describe how easy it is to get started and discuss some best practices for building complex APIs using this approach. I will wrap up by briefly mentioning other components of the Flask ecosystem, which give this micro-framework power to match fully- loaded systems such as Django. [1]: http://flask.pocoo.org/ [2]: http://flask-restplus.readthedocs.org/en/latest/ [3]: http://swagger.io/ [4]: http://petstore.swagger.io/#/pet	28	Science & Technology	PT25M48S	1548	2d	hd	false	https://i.ytimg.com/vi/OTWs0wPHU-g/maxresdefault.jpg		45096	599	21	0	13
553	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jsjParCB7BU	2016-08-06T06:29:07Z	2016-08-06 06:29:07	Andrew Burrows - Testing the untestable: a beginner’s guide to mock objects	Andrew Burrows - Testing the untestable: a beginner’s guide to mock objects [EuroPython 2016] [22 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/testing-the-untestable-a-beginners-guide-to-mock-objects) In this session you will learn your way around Python 3’s unittest.mock package through examples. You’ll learn about the Mock class, sentinels and patching. You will see the benefits that mocks can bring and learn to avoid the pitfalls. Along the way I’ll fill you in on some of the bewildering terminology surrounding mocks such as “SUT”, “Stub”, “Double”, “Dummy” , “mockist” and more and I’ll give a brief plug for my own mockextras package that can enhance your mock experience. ----- Mock objects can be a powerful tool to write easy, reliable tests for the most difficult to test code. In this session you will learn your way around Python 3’s unittest.mock package starting at the simplest examples and working through progressively more problematic code. You’ll learn about the Mock class, sentinels and patching and how and when to use each of them. You will see the benefits that mocks can bring and learn to avoid the pitfalls. Along the way I’ll fill you in on some of the bewildering terminology surrounding mocks such as “SUT”, “Stub”, “Double”, “Dummy” , “mockist” and more and I’ll give a brief plug for my own mockextras package that can enhance your mock experience.	28	Science & Technology	PT25M	1500	2d	hd	false	https://i.ytimg.com/vi/jsjParCB7BU/maxresdefault.jpg		1703	18	0	0	4
554	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Dr1R4ZlVLxI	2016-08-05T19:34:34Z	2016-08-05 19:34:34	Facundo Batista - Entendiendo Unicode	Facundo Batista - Entendiendo Unicode [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/entendiendo-unicode) Charla que explica qué es Unicode y otros conceptos relacionados para poder usar esta tecnología ----- La charla muestra de forma teórica/práctica qué son Unicode, las planillas de códigos, los caracteres, y las codificaciones, entra en detalle en las distintas codificaciones, para saber cómo usarlas, ejemplifica las reglas de oro para utilizar Unicode en nuestros programa, y termina mostrando algunas funciones útiles para el manejo de esa tecnología.	28	Science & Technology	PT31M43S	1903	2d	hd	false	https://i.ytimg.com/vi/Dr1R4ZlVLxI/maxresdefault.jpg		544	13	0	0	0
555	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Rz7DsPcc34w	2016-08-05T19:34:34Z	2016-08-05 19:34:34	Alex Vinyals - Ingesting 35 million hotel images with python in the cloud.	Alex Vinyals - Ingesting 35 million hotel images with python in the cloud. [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/ingesting-35-million-hotel-images-with-python-in-the-cloud) This talk covers the distributed architecture that Skyscanner built to solve the data challenges involved in the generation of images of all hotels in the world. Putting together a distributed system in Python, based on queues, surfing on the AWS Cloud. ----- Our goal? To build an incremental image processing pipeline that discards poor quality and duplicated images, scaling the final images to several sizes to optimise for mobile devices. Among the challenges: 1. Ingest all the input images that partners provide us. 2. Detect and remove bad quality + duplicated images from reaching production. 3. Resize all the generated images to optimise for mobile devices. 4. Ensure the process scales and behaves in an incremental way. 5. Ensure the whole process fits in a time constrained window. Among the tools we used? Pillow, ImageHash, Kombu and Boto.	28	Science & Technology	PT21M13S	1273	2d	hd	false	https://i.ytimg.com/vi/Rz7DsPcc34w/maxresdefault.jpg		343	3	0	0	0
556	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	S05NuIlh7vo	2016-08-05T19:31:49Z	2016-08-05 19:31:49	Fernando Masanori Ashikaga/Paola Katherine Pacheco/Kátia Nakamura - import community	Fernando Masanori Ashikaga/Paola Katherine Pacheco/Kátia Nakamura - import community [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/import-community) One of the biggest differences, in the Python community, is its effort to improve diversity. The authors will share experiences on diversity obtained from ten different countries: Namibia, UK, Japan, Brazil, Italy, Argentina, Uruguay, Germany, Canada and Spain. There are other reports, that also we would like to share, which are only beautiful stories of how Python reaches the most distant people and places you may never have imagined. ----- One of the biggest differences, in the Python community, in relation to other communities, is its effort to improve diversity. There is even a Diversity Statement at PSF: "We have created this diversity statement because we believe that a diverse Python community is stronger and more vibrant. A diverse community where people treat each other with respect has more potential contributors and more sources for ideas." The authors will share experiences on diversity obtained from ten different countries: Namibia, UK, Japan, Brazil, Italy, Argentina, Uruguay, Germany, Canada and Spain. There are other reports that we also would like to share, which are only beautiful stories of how Python reaches the most distant people and places you may never have imagined.	28	Science & Technology	PT27M41S	1661	2d	hd	false	https://i.ytimg.com/vi/S05NuIlh7vo/maxresdefault.jpg		217	3	0	0	0
557	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7ADbOHW1dTA	2016-08-05T19:31:06Z	2016-08-05 19:31:06	Mariano Anaya - Clean code in Python	Mariano Anaya - Clean code in Python [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/clean-code-in-python) Introduction to the clean code principles applied to Python code. Let's honor the readable nature of the Python syntax so anyone can maintain our code: "readability counts". This talk introduces general concepts of code quality and how they apply for Python. We analyse technical debt, refactoring, and unit testing in the context of a project striving for a better code base. ----- Introduction to the clean code principles tailored for Python projects. The goal is to achieve better code quality and a more maintainable code base. Python has a nature of being clear, and easy to follow, so let's take advantage of it in our own code, in order to enforce the principle "readability counts" by writing pythonic code. This talk introduces general concepts of code quality for Python developers, analyzing technical debt, with examples on how to achieve a more legible, maintainable and clean code base, by refactoring, writing unit tests and having good coding guidelines for the project. If you are giving your first steps with Python, you will gain insight on best practices for writing good software from the start. If you are a experienced developer, the ideas should work as food for thought, helping with recommendations for code reviews, best practices, etc.	28	Science & Technology	PT21M44S	1304	2d	hd	false	https://i.ytimg.com/vi/7ADbOHW1dTA/maxresdefault.jpg		4957	77	8	0	2
558	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	EDpwvvU-sPY	2016-08-05T19:30:25Z	2016-08-05 19:30:25	Christie Wilson/Michael Tom-Wing - System Testing with pytest and docker-py	Christie Wilson/Michael Tom-Wing - System Testing with pytest and docker-py [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/system-testing-with-pytest-and-docker-py) System tests are an invaluable tool for verifying correctness of large scale online services. This talk will discuss best practices and tooling (pytest and docker-py) for writing maintainable system tests. Demonware has used System tests to verify online services for some of the biggest AAA video game launches as well as internal operational tools. Many folks who write software are familiar with unit testing, but far fewer with system testing. ----- System testing a microservice architecture is challenging. As we move away from monolithic architectures, system testing becomes more important but also more complicated. In the video game industry, if a game doesn’t work properly immediately after launch, it will heavily impact game success. We have found system testing to be an important tool for pre launch testing of game services and operational tools, to guarantee quality of these services at launch. We want to share with you best practices for system testing: when to write system tests, what to test and what not to, and common pitfalls to avoid. Using python’s pytest tool and docker-py for setting up services and their dependencies has made it easier than ever to write complex but maintainable system tests and we’ll share with you how we’ve made use of them. Developers (senior and junior) and ops folks can walk away from this talk with practical tips they can use to apply system testing to their software.	28	Science & Technology	PT29M43S	1783	2d	hd	false	https://i.ytimg.com/vi/EDpwvvU-sPY/maxresdefault.jpg		676	8	0	0	0
559	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9gcIiYf4-o0	2016-08-05T19:29:40Z	2016-08-05 19:29:40	Andreas Klostermann - Brainwaves for Hackers 3.0	Andreas Klostermann - Brainwaves for Hackers 3.0 [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/brainwaves-for-hackers-3) This talk is about using our **Python** skills to explore the **secrets of our brains**. Using the Neurosky Mindwave as a bluetooth connected EEG device, I'll talk about new experiments I have performed inside the Jupyter notebook, for example "Evoked Response Potentials" and more about "Neuro Feedback" training. ----- Electroencephalography **(EEG)** measures potential waves originating within the brain. Billions of brain cells fire inside your brain, each sending out a minuscule wave. The summed potential waves can be measured, even with quite cheap and **portable devices**. Being the third major version of this talk, I'll talk briefly about the Neurosky Mindwave and the Muse headset. I have also developed more interactive Jupyter experiments, which I'll demonstrate in the talk. For example **Evoked Response Potentials (ERP)** can be demonstrated with relatively simple means. Also I'll talk some more about experiments with **Neuro Feedback**.	28	Science & Technology	PT35M24S	2124	2d	hd	false	https://i.ytimg.com/vi/9gcIiYf4-o0/maxresdefault.jpg		290	2	0	0	0
560	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	GNPKBICTF2w	2016-08-05T19:07:44Z	2016-08-05 19:07:44	Anjana Vakil - Exploring Python Bytecode	Anjana Vakil - Exploring Python Bytecode [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/exploring-python-bytecode) Do you ever wonder how your Python code looks to the interpreter? What those `.pyc` files are? Why one program outperforms another, even if the code is similar? Then let’s dive into Python bytecode! Bytecode is the "intermediate language" that expresses your source code as machine instructions the interpreter can understand. In this talk we’ll see what role it plays in executing Python programs, learn to read it with the `dis` module, and analyze it to better understand a program’s performance. ----- Do you ever wonder what your simple, beautiful Python code looks like to the interpreter? Are you starting to get curious about those `.pyc` files that always pop up in your project, and you always ignore? Would you like to start investigating your Python code's performance, and learn why some programs you write run faster than others, even if the code looks more or less the same? Have you simply fallen so completely in love with Python that you're ready to peer deep inside its soul? If you, like me, answered "yes" to any of these questions, join me in an illuminating adventure into the world of Python bytecode! Bytecode is the "intermediate language" that expresses your Python source code as machine instructions the interpreter (specifically CPython, the "standard" interpreter) can understand. Together we'll investigate what that means, and what role bytecode plays in the execution of a Python program. We'll discover how we simple humans can read this machine language using the `dis` module, and inspect the bytecode for some simple programs. We'll learn the meaning of a few instructions that often appear in our bytecode, and we'll find out how to learn the rest. Finally, we'll use bytecode to understand why a piece of Python code runs faster if we put it inside of a function. When you go home, you'll be able to use bytecode to get a deeper understanding of your Python code and its performance. The adventure simply starts here; where it ends is up to you!	28	Science & Technology	PT22M37S	1357	2d	hd	false	https://i.ytimg.com/vi/GNPKBICTF2w/maxresdefault.jpg		14847	383	3	0	13
561	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	llN1L0TA9aU	2016-08-05T19:06:29Z	2016-08-05 19:06:29	L. Ozaeta - Endor, ipuinak kontatzen zituen Nao robota.	L. Ozaeta - Endor, ipuinak kontatzen zituen Nao robota. [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/endor-ipuinak-kontatzen-zituen-nao-robota) Aurkezpen honetan Nao robotaren Choreographe programazio ingurumenaren sarrera bat egiten da, pythonek errobotikan duen erabilpena erakutsiz. Aurkezpen guztia aurkezleak orain arte egindako lanean oinarritzen da. Lehenik eta behin, programa baten estruktura erakutsiko da. Ondoren, liburutegi bat nola gehitu erakutsiko da, liburutegiaren instalazioak ekar ditzakeen arazoak aztertuz. Azkenik, Naoaren gorputz jarreran zein diskurtsoaren naturaltasunean egindako aurrerapenak azalduko dira. ----- Honekin lortu nahi diren helburuak honako hauek dira: - Choreographeko proiektu baten estruktura ezagutzea. - Nao robot baten oinarrizko programa bat ikustea. - Chorepgraphek ematen dituen programazio blokeak eraldatzen jakitea, python erabiliz. - Choreographen eskaintzen diren tresnen bitartez, programan python liburutegi bat gehitzen ikastea. Aurkezpen hau ulertzeko ez dago eskakizunik. Python pixka bat dakien edonork (“hello world” bat egiten jakitearekin balio du) ulertzeko mailan emango da eta ez da konplexutasun tekniko handiko azalpenik emango. Printzipioz python ezagutzen ez duen edonor ere aurkezpen ia osoa ulertzeko gai izango da, programazio ingurumen bezala ez baita kodean gehiegi sartzen, pythonekin hasteko aukera ona izanez.	28	Science & Technology	PT30M10S	1810	2d	hd	false	https://i.ytimg.com/vi/llN1L0TA9aU/maxresdefault.jpg		92	0	0	0	0
562	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QWF3GNWV4_w	2016-08-05T19:00:31Z	2016-08-05 19:00:31	Stephan Jaensch - Building Service interfaces with OpenAPI / Swagger	Stephan Jaensch - Building Service interfaces with OpenAPI / Swagger [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/building-service-interfaces-using-OpenAPI) Ever wondered how to keep track of all of your services and their APIs? I'm going to explore how to build your Python services with OpenAPI/Swagger and how it helps you solve problems like communication between services, request and response validation, and documentation of your API. I'll also discuss some challenges you might face when running Swagger in production, gathered from over a year of heavy usage at Yelp. ----- Implementing a service-oriented architecture (SOA) is a proven way to split up large monolithic codebases and to scale development when your organization grows to hundreds or thousands of engineers. I'm going to explore how to build and document your services with OpenAPI (formerly known as Swagger). I’ll discuss the benefits, how to generate a beautiful HTML documentation for your API, and how you can effortlessly make calls to your services. In the second part of the talk I'll discuss and tell you how to overcome challenges you might face when running OpenAPI in production, gathered from over a year of heavy usage at Yelp for hundreds of services. The OpenAPI initiative is a cross-vendor consortium focused on creating, evolving and promoting a vendor neutral description format. As an open governance structure under the Linux Foundation, its members include Google, IBM, Atlassian and PayPal.	28	Science & Technology	PT43M12S	2592	2d	hd	false	https://i.ytimg.com/vi/QWF3GNWV4_w/maxresdefault.jpg		1096	8	0	0	0
563	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1c5IlIQhiqY	2016-08-05T18:59:06Z	2016-08-05 18:59:06	Jatsu Argarate - Buildout Django eta Fabric. Kasu praktikoa euskarazko tokiko hedabideetan	Jatsu Argarate - Buildout Django eta Fabric. Kasu praktikoa euskarazko tokiko hedabideetan [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/buildout-django-eta-fabric-kasu-praktikoa-euskarazko-tokiko-hedabideetan) Hainbat zerbitzaritan dauden eta plataforma bakar batean oinarrituta dagoen plataforma baten mantentzea Buildout Django Fabric eta erabiliz. Kasu praktikoa euskarazko tokiko hedabideak. ----- Hainbat bezerorentzako neurrira egindako edukiak kudeatzeko plataforma bat garatu dugu Django Frameworka erabiliz. Guztia kudeatzeko eta erabilitako bertsioak kontrolatzeko zc.buildout erabiltzen dugu, baina plataforma hazten doa eta iada dozena bat instalazio ditugu hainbat zerbitzaritan zehar banatuta. Plataformaren oinarria berbera denez, instalazio guztietan eguneraketak argitaratzeko buildout eta fabric-en oinarritutako sistema erabiltzen dugu. Hitzaldi honetan azalduko duguna.	28	Science & Technology	PT22M25S	1345	2d	hd	false	https://i.ytimg.com/vi/1c5IlIQhiqY/maxresdefault.jpg		100	2	0	0	0
564	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	275mrqsjhI8	2016-08-05T18:58:19Z	2016-08-05 18:58:19	Mikel Larreategi - EITB Nahieran: askatu bideoak API honen bidez	Mikel Larreategi - EITB Nahieran: askatu bideoak API honen bidez [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/eitb-nahieran-askatu-bideoak-api-honen-bidez) EITB Nahieran zerbitzuaren informazioa era erabilgarrian erakusteko APIaren nondik norakoak erakutsiko ditut hitzaldian. ----- Iaz Raspberry PI bat erosi nuen eta ez nekien zer egin berarekin... Aurten Kodi softwarea erabiliz media-center bihurtu dut Raspberrya. Kodirako 'tvalacarta' izeneko plugin bat zegoen berarekin EITB Nahieran ikusteko, baina ez zebilen. Saiatu nintzen EITB Nahieranen kodea funtzionarazten, eta asko kostata informazioa hiru era ezberdinetan ateratzea lortu nuen. Azkenean, funtzionamendua errazteko API bat prestatu dut EITB Nahieranen dagoen informazioa atzitzeko eta edozeinek erabili ahal dezan. [Aurkezpena][1] eta [aurkeztutako kodea][2] [1]: https://erral.github.io/eitbapi [2]: https://github.com/erral/eitbapi	28	Science & Technology	PT26M6S	1566	2d	hd	false	https://i.ytimg.com/vi/275mrqsjhI8/maxresdefault.jpg		127	1	0	0	0
565	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	EUepVkcgV18	2016-08-05T18:57:29Z	2016-08-05 18:57:29	Iker Martinez de Agirre Mendia - Datu bistaratze soluzioen garapena Smartcity proiektuetan	Iker Martinez de Agirre Mendia - Datu bistaratze soluzioen garapena Smartcity proiektuetan [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/datu-bistaratze-soluzioen-garapena-smartcity-proiektuetan-1) Laburbilduz, kontsumo energetikoaren datuak modu sinple eta argi batean bistaratzen dituen web orrialde bat sortu da Django erabiliz. ----- Mondragon Unibertsitateko inbestigazio taldea Smartcity-en aplikazio eta monitorizazioen inguruko proiektuetan lanean ari da, non herrialde ezberdinetako gune konkretuetan bizi diren pertsonen kontsumo energetikoa jaso eta aztertzen den. Proiektu hauetako bi CITyFiED eta ARROWHEAD dira. Kontsumo hori eta horren harira ondorioztatutako aholku energetikoak erabiltzailearengana heltzeko, bistaratze soluzio bat garatu da, web orrialde bat alegia. Erabiltzailean oinarritutako diseinua (User Centered Design) aplikatuz, gailu ezberdinetara moldatzen den (Responsive Web Design, Mobile-First) web bat sortu da, Django Web Framework tresnaren bitartez. REST API (Django Rest Framework) baten bidez, informazioa gordetzen den datu basea atzitzen da, kontsumoak eta beraien bilakaera bistaratze libreriak (D3.js) erabiliz irudikatuz. Horrez gain, Djangok eskaintzen dituen aukerak baliatuz, web orrialdea hizkuntza ezberdinetan bistaratu daiteke. Laburbilduz, kontsumo energetikoaren datuak modu sinple eta argi batean bistaratzen dituen web orrialde bat sortu da Django erabiliz."	28	Science & Technology	PT23M13S	1393	2d	hd	false	https://i.ytimg.com/vi/EUepVkcgV18/maxresdefault.jpg		54	1	0	0	0
566	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rTVDlBMaI7I	2016-08-05T18:55:44Z	2016-08-05 18:55:44	Peter Hoffmann - SQLAlchemy as the backbone of a Data Science company	Peter Hoffmann - SQLAlchemy as the backbone of a Data Science company [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/sqlalchemy-as-the-backbone-of-a-data-science-company) In times of NoSQL databases and Map Reduce Algorithms it's surprising how far you can scale the relational data model. At [Blue Yonder](http://blue- yonder.com) we use SQLAlchemy in all stages of our data science workflows and handle tenth of billions of records to feed our predictive algorithms. This talk will dive into SQLAlchemy beyond the Object Relational Mapping (ORM) parts and conentrate on the SQLAlchemy Core API, the Expression Language and Database Migrations with Alembic. ----- In times of NoSQL databases and Map Reduce Algorithms it's surprising how far you can scale the relational data model. At [Blue Yonder](http://blue- yonder.com) we use SQLAlchemy in all stages of our data science workflows and handle tenth of billions of records to feed our predictive algorithms. This talk will dive into SQLAlchemy beyond the Object Relational Mapping (ORM) parts and conentrate on the SQLAlchemy Core API and the Expression Language: - **Database Abstraction**: Statements are generated properly for different database vendor and type without you having to think about it. - **Security**: Database input is escaped and sanitized prior to beeing commited to the database. This prevents against common SQL injection attacks. - **Composability and Reuse**: Common building blocks of queries are expressed as SQLAlchemy selectables and can be reuesd in other queries. - **Testability**: SQLAlchemy allows you to perform functional tests against a database or mock out queries and connections. - **Reflection**: Reflection is a technique that allows you to generate a SQLAlchemy repesentation from an existing database. You can reflect tables, views, indexes, and foreign keys. As a result of the usage of SQLAlchemy in Blue Yonder, we have implemented and open sourced a SQLAlchemy dialect for the in memory, column-oriented database system [EXASolution](https://github.com/blue-yonder/sqlalchemy_exasol)	28	Science & Technology	PT30M44S	1844	2d	hd	false	https://i.ytimg.com/vi/rTVDlBMaI7I/maxresdefault.jpg		1622	22	4	0	0
567	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	u6PTaTDHUG4	2016-08-05T18:55:22Z	2016-08-05 18:55:22	Iwan Gulenko - How to make IT-recruiting suck less.	Iwan Gulenko - How to make IT-recruiting suck less. [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/coding-interviews-what-to-expect-and-how-to-prepare) I am a programmer and I am on a mission to make IT-recruiting suck less. This talk should be useful for both hiring managers and job-seekers. We will assess the status-quo of hiring engineers and talk about resumes, coding questions and tasks that firms make up to assess engineers. Also, we'll discuss salary negotiation best-practises from a candidate perspective. We end with a discussion on different "types" of programmers (http://blog.triplebyte.com/who-y-combinator-companies-want).	28	Science & Technology	PT53M11S	3191	2d	hd	false	https://i.ytimg.com/vi/u6PTaTDHUG4/maxresdefault.jpg		2774	21	9	0	1
568	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SCV5froaArg	2016-08-05T18:47:46Z	2016-08-05 18:47:46	Max Tepkeev - Do I need to switch to Go(lang) ?	Max Tepkeev - Do I need to switch to Go(lang) ? [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/do-i-need-to-switch-to-golang) Nowadays, there is a lot of buzz about Go. In this talk we'll learn the basics and most important concepts of the language, we'll further discuss differences and similarities in Go and Python and dive into the cool features of Go. Finally we'll talk about why popularity of Go is raising so fast and try to answer the most important question: Do I need to switch to Go ? ----- Nowadays, there is a lot of buzz about Go. It happened so that for the last 6 months I've been mostly programming Go, and frankly speaking I fell in love with this language. We'll first do a quick review of the language. Go doesn't have some language constructs, for example classes and exceptions and at first it may seem hard to write proper Go code, but in practice the language is so easy that I will try to teach you the basics and most important concepts of the language. We'll further discuss differences and similarities in Go and Python and dive into the cool features of Go. Finally we'll talk about why popularity of Go is raising so fast and try to answer the most important question: Do I need to switch to Go ?	28	Science & Technology	PT37M47S	2267	2d	hd	false	https://i.ytimg.com/vi/SCV5froaArg/maxresdefault.jpg		35338	194	42	0	23
569	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	evRKI0Y890Y	2016-08-05T18:32:38Z	2016-08-05 18:32:38	Scott Reeve - Keeping the Lights on with Python	Scott Reeve - Keeping the Lights on with Python [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/keeping-the-lights-on-with-python) We are using Python to help the National Grid in the UK to balance electricity production and usage. We do this by installing Python powered devices at customers sites that allow us to monitor and set control criteria to automatically turn on and off power consuming and producing devices when there is a mismatch between electricity supply and demand. In this talk we will be talking about how and why we have used Python, as well as where in our system we would like to use Python. ----- We are using Python to help the National Grid in the UK to balance electricity production and usage. We do this by installing Python powered devices at customers sites that allow us to monitor and set control criteria to automatically turn on and off power consuming and producing devices when there is a mismatch between electricity supply and demand. These devices talk to our Python powered cloud based system using the 3g network, giving us near real-time monitoring of our customers assets. Our entire infrastructure is written in Python, from our billing systems, data analytics systems and customer portal all the way through to our on site industrial system interfaces. In this talk we will be talking about how and why we have used Python, where we have had problems, as well as where in our system we would like to use Python and why we cannot. We will also be talking about what we are going to do next, moving our system from near real time monitoring to near real-time control, using Python for both system modelling and control. We will discuss how we are using Python to creating a system that monitors the balance between electricity supply and demand many times per second and is able to provide a corrective control based on the sum of the output of a dynamic set of our customer sites and the challenges that presents.	28	Science & Technology	PT18M52S	1132	2d	hd	false	https://i.ytimg.com/vi/evRKI0Y890Y/maxresdefault.jpg		187	1	0	0	0
570	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2rgfO3xa9D0	2016-08-05T18:32:02Z	2016-08-05 18:32:02	Francisco Igual - MiniBrew: Brewing beer with Python	Francisco Igual - MiniBrew: Brewing beer with Python [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/minibrew-brewing-beer-with-python) Dutch startup MiniBrew intends to disrupt the beer market by introducing an easy-to-use beer brewing machine controlled by a mobile app and communicating with a Python backend. Users want real-time insights in their brewing process, which presented some challenges in terms of architectural design. In this talk Elements Interactive's Chesco discusses best practices and pitfalls of the IoT architecture of MiniBrew by diving into message queues, protocol buffers and full- session logging. ----- The number one alcoholic drink in the world is undoubtedly beer. With the rise of craft beers, also homebrewing has become very popular in recent years, although it is still a complex and expensive hobby. Dutch startup MiniBrew intends to change that with their revolutionary beer brewing machine, which is controlled by a mobile app and communicates with a Python API backend. In this talk Chesco will share his ideas and experiences in utilizing Python in the backend architecture for the MiniBrew project he and his team are working on at MiniBrew's development partner Elements Interactive. As many IoT projects, the ingredients for MiniBrew are a device with a limited chipset and internet connection, a backend to store the data acting as the mastermind and a mobile app to allow end users to control the brewing process. The fact that we want users to know in real-time how their beer brewing process is doing presented some challenges which required us to come up with a competitive architecture that would both give real- time status updates and not saturate the server with continuous calls. Chesco discusses best practices and pitfalls in designing and developing IoT architecture by diving into the RabbitMQ message broker, the MQTT protocol and protocol buffers. He will focus on the REST API and CMS site written in Python, elaborating on high frequency data in the apps, scalability, full-session logging and overcoming common architectural challenges.	28	Science & Technology	PT30M14S	1814	2d	hd	false	https://i.ytimg.com/vi/2rgfO3xa9D0/maxresdefault.jpg		276	0	1	0	0
571	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	K6dFEAijY24	2016-08-05T18:29:59Z	2016-08-05 18:29:59	Elena Cuoco - Python in Gravitational Waves Research Communities	Elena Cuoco - Python in Gravitational Waves Research Communities [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/pyhton-in-gravitational-waves-research-communities) On February 11th 2016 Ligo-Virgo collaboration gave the announce of the discovery of Gravitational Waves, just 100 years after the Einstein’s paper on their prediction. A brief introdutcion to data analysis methods used in Gravitational Waves (GW) communities Python notebook describing how to analyze the GW event detected on 14 September 2015. ----- On February 11th 2016 Ligo-Virgo collaboration gave the announce of the discovery of Gravitational Waves, just 100 years after the Einstein’s paper on their prediction. After an introduction on Gravitational Waves, on Virgo Interferometric detector, I will go through the data analysis methods used in Gravitational Waves (GW) communities either for the detector characterization and data condition or for the signal detection pipelines, showing the use of python we make. As practical example I will introduce a python notebook describing the GW event detected on 14 September 2015 and I will show a few of signal processing techniques.	28	Science & Technology	PT44M33S	2673	2d	hd	false	https://i.ytimg.com/vi/K6dFEAijY24/maxresdefault.jpg		511	10	0	0	0
572	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eNRnDxZTZI0	2016-08-05T18:28:50Z	2016-08-05 18:28:50	Victoria Martinez de la Cruz - Build your first OpenStack application with OpenStack PythonSDK	Victoria Martinez de la Cruz - Build your first OpenStack application with OpenStack PythonSDK [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/build-your-first-openstack-application-with-openstack-pythonsdk) Join this talk to learn about the OpenStack Python SDK and how to deploy your web app step by step using different components in OpenStack. ----- How many times you heard about OpenStack and all the cool things it is being used for? Most of the use cases are big players that need to handle huge amounts of data and automate complex infrastructures. But what about actually using it, for you as a developer, to deploy a simple app? In my case, at least, that has not be an usual topic of discussion when talking about OpenStack. In this talk I'll introduce the OpenStack Python SDK, a project relatively new in the OpenStack ecosystem, and show you step by step how to deploy your own web app using different components in OpenStack.	28	Science & Technology	PT32M54S	1974	2d	hd	false	https://i.ytimg.com/vi/eNRnDxZTZI0/maxresdefault.jpg		418	6	0	0	1
573	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	op-L-1GwVYs	2016-08-05T18:28:11Z	2016-08-05 18:28:11	Moshe Goldstein/david dayan - Implementing Parallel Programming Design Patterns using EFL for Python	Moshe Goldstein/david dayan - Implementing Parallel Programming Design Patterns using EFL for Python [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/implementing-parallel-programming-design-patterns-using-efl-for-python) EFL (Embedded Flexible Language), a deterministic parallel programming tool, may be embedded in any host language. Two versions of the EFL pre-compiler for Python were implemented. One translates EFL blocks into Python's Multiprocessing code, and the other one into DTM/MPI4PY code. EFL implementations of Parallel Programming Design Patterns will be shown, generated parallel code compared, and differences discussed. Visit flexcomp.jct.ac.il for further information. ----- Multi-core CPUs are abundant and utilizing them effectively requires programmers to parallelize CPU-intensive code. To facilitate this, we have developed EFL (Embedded Flexible Language), a deterministic parallel programming tool. The parallel parts of a program are written as EFL-blocks, which are embedded into a sequential host language program. The sequential parts of the program are written in the host language, outside the EFL blocks. EFL may be embedded in any host language by writing an appropriate EFL pre-compiler. At the moment, we implemented two versions of the EFL pre-compiler. Both pre-compilers translate EFL blocks into parallel Python code - one of them generates parallel code based on Python's Multiprocessing module, and the other one generates parallel code based on the DTM/MPI4PY Python module. We will present the principles upon which EFL is built. We will show the implementation of Parallel Programming Design Patterns using EFL's parallel programming constructs (such as parallel assignments, parallel for-loops, etc.). Using our two EFL pre-compilers we will show their translation to Python parallel code according to the Multiprocessing module as well as the DTM/MPI4PY module. The differences between code versions produced by the EFL pre-compilers will be discussed. For further information about the EFL project and our Flexible Computation Research Laboratory, visit http://flexcomp.jct.ac.il	28	Science & Technology	PT40M25S	2425	2d	hd	false	https://i.ytimg.com/vi/op-L-1GwVYs/maxresdefault.jpg		209	1	0	0	0
574	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	q3549t2EalY	2016-08-05T18:27:28Z	2016-08-05 18:27:28	Pau Ruŀlan Ferragut - Pytest desde las trincheras	Pau Ruŀlan Ferragut - Pytest desde las trincheras [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/pytest-desde-las-trincheras) Todo programador tiene interés para que su software sea fiable y estable. Haremos una sencilla introducción a pytest con el caso de uso de un site internacional para el que generamos cientos de tests y redujimos drásticamente los errores en producción. Con este simple ejemplo demostraremos que no siempre necesitamos hacer TDD para disfrutar de las ventajas de un framework de testing. ----- Las metodologías de desarrollo que incorporan la escritura de pruebas desde el momento cero tienden a generar código más estable y fiable pero la realidad es que muchas veces no gozamos del privilegio ni del presupuesto para escribir tests para todas las características de nuestro producto. Pero si tenemos a nuestra disposición herramientas de testing que nos permitan eliminar los errores evitables como romper enlaces en la página de inicio nos quitaremos el miedo a hacer pases a producción y generaremos más valor al negocio. La charla no tiene pretensión de ser ni una introducción al test driven development ni de las complejidades de qué es un buen o mal test. El objetivo es animar a todo aquel que todavía pruebe sus proyectos manualmente a intentar algún grado de automatización. Para ello la estructura será una presentación de pytest, exponer algunos plugins altamente recomendados y centrarse en el caso de uso de una página con presencia en ocho países donde automatizamos un montón de comprovaciones simples que nos permitieron reducir los errores evitables.	28	Science & Technology	PT22M33S	1353	2d	hd	false	https://i.ytimg.com/vi/q3549t2EalY/maxresdefault.jpg		173	5	0	0	0
575	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	KMMHJch77dk	2016-08-05T18:26:58Z	2016-08-05 18:26:58	Cameron Macleod - Implementación de un Identificador de Sonido en Python	Cameron Macleod - Implementación de un Identificador de Sonido en Python [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/implementacion-de-un-identificador-de-sonido-en-python) El tema que nos ocupa es como implementar un identificador de sonido tipo Shazam usando técnicas DSP. Los puntos a seguir serán, implementación, retos y pasos adicionales. El proyecto que nos ocupa se encuentra todavía en proceso de desarrollo (el código [subido en GitHub][1]) y fue inspirado después la conferencia, [Over-the-Air Audio Identification][2] en FOSDEM 2016. [1]: https://github.com/notexactlyawe/abracadabra [2]: https://fosdem.org/2016/schedule/event/audio_identification/ ----- El tema que nos ocupa es como implementar un identificador de sonido tipo Shazam usando técnicas DSP con ayuda de unas fantásticas bibliotecas. Los puntos a seguir serán, implementación, retos y pasos adicionales. El proyecto que nos ocupa se encuentra todavía en proceso de desarrollo (el código [subido en GitHub][1]) y fue inspirado después la conferencia, [Over-the-Air Audio Identification][2] en FOSDEM 2016. La estructura básica del proyecto consiste en un clasificador y un reconocedor. El clasificador toma huellas del sonido y las procesa en una forma investigable para el reconocedor que usa estas huellas para la identificación y búsqueda de archivos almacenados con el fin de encontrar la semejanza mas probable. El reconocedor estará expuesto en un entorno API. La conferencia intentará introducir el área de DSP a la audiencia y los conceptos que están detrás aplicaciones como Shazam. Explicaré todos las nociones incluidas en una manera sencilla. [1]: https://github.com/notexactlyawe/abracadabra [2]: https://fosdem.org/2016/schedule/event/audio_identification/	28	Science & Technology	PT18M13S	1093	2d	hd	false	https://i.ytimg.com/vi/KMMHJch77dk/maxresdefault.jpg		207	7	0	0	0
576	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dquiH8c3WsQ	2016-08-05T18:26:25Z	2016-08-05 18:26:25	Jose Manuel Ortega - Hacking ético con herramientas Python	Jose Manuel Ortega - Hacking ético con herramientas Python [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/hacking-etico-con-herramientas-python) El objetivo de la charla sería mostrar las herramientas que disponemos dentro de la propia API de Python y librerías de terceros para desarrollar nuestras propias herramientas que permitan realizar pruebas de seguridad y de pentesting de las aplicaciones. ----- Python se ha convertido en el lenguaje más usado para desarrollar herramientas dentro del ámbito de la seguridad. Muchas de las herramientas que podemos encontrar hoy en día como escáner de puertos, análisis de vulnerabilidades, ataques por fuerza bruta y hacking de passwords, se han escrito en este lenguaje ,además de ofrecer un ecosistema de herramientas para realizar pruebas de seguridad y de pentesting de aplicaciones. Entre los puntos a tratar podríamos destacar: - **Introducir Python como lenguaje de desarrollo de herramientas de seguridad** - **Introducir librerías para obtener información de nuestro objetivo como Shodan,pygeocoder,pygeoip** - **Análisis y extracción de metadatos en Python en imágenes y documentos** - **Análisis de puertos con herramientas como python-nmap**	28	Science & Technology	PT38M21S	2301	2d	hd	false	https://i.ytimg.com/vi/dquiH8c3WsQ/maxresdefault.jpg		1978	32	2	0	4
577	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YI7hAboKLH8	2016-08-05T18:25:15Z	2016-08-05 18:25:15	Mai Giménez - Un vector por tu palabra	Mai Giménez - Un vector por tu palabra [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/un-vector-por-tu-palabra) El ecosistema científico de python es extraordinario y saca músculo con las últimas aportaciones de la comunidad científica. Revisaremos nuevas aproximaciones a la representación de texto. ¡Tus cadenas de texto merecen algo más que una mísera bolsa de palabras! Veremos cómo se aplica la representación distribuida (word embeddings) en un caso práctico de aprendizaje automático, y daremos consejos para hacer experimentos replicables y obtener datos significativos. ----- “Dime con quien andas y te diré cómo eres” Este dicho es una de las ideas más revolucionarias en PLN. Podemos saber muchas cosas de una palabra por su contexto. No es lo mismo un adorable gato que un gato mecánico, pero por el contexto diferenciamos esta palabra polisémica. Hasta ahora la mayor parte de los modelos representan una frase como una bolsa de palabras. Por ejemplo, si queremos representar este conjunto de frases: [“I love Python”, “I love NLP”, “Pyladies are cool”] tenemos un vocabulario de siete palabras: [“I”, “love”, “Python”, “NLP”, “Pyladies”, “are”, “cool”] esta representación crea un vector de tamaño del vocabulario para cada frase, y pone a 1 si la palabra aparece y a 0 en el caso contrario : [[1,1,1,0,0,0,0], [1,1,0,1,0,0,],[0,0,0,0,1,1,1]] ¡Pero,se pierde el contexto y los vectores pueden ser gigantes y con muchísimos 0s! Recientemente, hemos encontrado una forma mucho mejor de representar las palabras: La representación distribuida -word2vec, por ejemplo- En esta charla exploramos esta representación y cómo aplicarla en problemas de clasificación utilizando textos de redes sociales. Navegaremos por el rico ecosistema científico en python, veremos cómo crear gráficas significativas y hablaremos de la importancia de escribir experimentos bien diseñados, replicables y con código elegante y por supuesto de la importancia de difundir el conocimiento. Debemos inspirar a la siguiente generación de científicos y científicas ¡Seamos extraordinarios!	28	Science & Technology	PT35M41S	2141	2d	hd	false	https://i.ytimg.com/vi/YI7hAboKLH8/maxresdefault.jpg		669	16	2	0	1
578	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IYKuvBDBcP8	2016-08-05T18:23:51Z	2016-08-05 18:23:51	Roberto Polli - The Router Game	Roberto Polli - The Router Game [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/the-router-game) This interactive game teaches the basic of ip and ethernet protocol using just paper and pens, and become very popular with our interns and in our LUG meetings. Participants are divided in teams, simulating simple network infrastructures (eg. computers connected by an hub and a switch). ----- This interactive game teaches the basic of ip and ethernet protocol using just paper and pens, and become very popular with our interns and LUG meetings. Participants are divided in teams, simulating simple network infrastructures (eg. computers connected by an hub and a switch). Every player has a role: a PC or mobile phone, an HUB, a Switch, a Router, and must communicate with the others following the associate specification (eg. an hub should broadcast message to every neighbour, a switch should populate the mac address table, ...) The team which is faster in exchanging messages wins.	28	Science & Technology	PT49M20S	2960	2d	hd	false	https://i.ytimg.com/vi/IYKuvBDBcP8/maxresdefault.jpg		139	1	1	0	1
579	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UkkO3_GSR2g	2016-08-05T18:23:13Z	2016-08-05 18:23:13	Amber Brown - The Report Of Twisted’s Death	Amber Brown - The Report Of Twisted’s Death [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/the-report-of-twisteds-death) This talk will teach you how Twisted or Tornado supplement asyncio, how asyncio can/is integrated with these frameworks, and makes a case for the continued development of new and existing selector-loop based frameworks. It will also paint a picture of the future direction of Twisted, why the original plan of asyncio as a standard API has not come to complete fruition, and what can be done about it. ----- Historically, there has been no “standard way” of doing asynchronous I/O in Python. A variety of solutions, from using threads (WSGI), processes (multiprocessing), green threads (gevent), or selector loops (Tornado, Twisted) have all been used to similar degrees, but apart from the (now deprecated) standard library asyncore/asynchat, Python itself did not have a blessed option. PEP 3156, or “the asyncio PEP”, introduced in Python 3.4, provides this blessed option, choosing a standard selector loop approach (or “reactor”, in Twisted parlance). The role of asyncio may seem muddled in the eyes of developers new to asynchronous programming, or those that may not understand the technical details of asyncio nor the political environment in which it was created. This talk will teach you how Twisted or Tornado supplement asyncio, how asyncio can/is integrated with these frameworks, and makes a case for the continued development of new and existing selector-loop based frameworks. It will also paint a picture of the future direction of Twisted, why the original plan of asyncio as a standard API has not come to complete fruition, and what can be done about it.	28	Science & Technology	PT57M20S	3440	2d	hd	false	https://i.ytimg.com/vi/UkkO3_GSR2g/maxresdefault.jpg		639	5	1	0	0
580	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZbmPBey_6kk	2016-08-05T18:22:39Z	2016-08-05 18:22:39	Adrian Dziubek - Python Descriptors for Better Data Structures	Adrian Dziubek - Python Descriptors for Better Data Structures [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/python-descriptors-for-better-data-structures) Have you ever wondered how Django models work? I'll present a story of data structure transformation. I will talk about ideas from Django models that I used and how I rediscovered descriptor API. I will talk about printing, serializing, comparing data structures and some other examples, where descriptors excel at making declarative code easier to write. ----- I worked as a developer of a testing framework for a C++ server. The framework tested binary protocol implemented by the server. Most of the work involved testers preparing test cases. The data format was primitive structures -- hard to read and easy to break. Field order and all the data had to be entered manually. At the time, I have already seen the better world -- the models from Django. Have you ever wondered how those work? Step by step, I used the ideas from there to make the structures more friendly and on my way I rediscovered descriptors. I'll show in incremental steps, how: - used keyword arguments to lower signal to noise ratio, - order of definition for sorting the fields, - realized that `__call__` is used instead of assignment, - used `__setattribute__` as first step to extend primitive fields, - discovered that I'm actually reimplementing descriptors, and how it lead me to: - implement printing in a way that is friendly to regression testing, - use diff library for less code and better results, - implement more readable validation. I want to show how descriptors work in Python and how they enable declarative style of programming. By the end of the talk I want you to understand what is at the core of the magic behind field types used by object relational mappers like Django.	28	Science & Technology	PT24M25S	1465	2d	hd	false	https://i.ytimg.com/vi/ZbmPBey_6kk/maxresdefault.jpg		518	2	0	0	0
581	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	95ZYHH-Dhjw	2016-08-05T18:16:09Z	2016-08-05 18:16:09	Miguel Sánchez de León Peque - Developing a real-time automated trading platform with Python	Miguel Sánchez de León Peque - Developing a real-time automated trading platform with Python [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/developing-a-real-time-automated-trading-platform-with-python) Nowadays Python is the perfect environment for developing a real-time automated trading tool. In this talk we will discuss the development of: a general-purpose multiagent-system module using Pyro and ZeroMQ; a platform, based on it, for developing automated trading strategies using Numpy, Numba, Theano, etc.; and a GUI for visualizing real-time market data using PyQtGraph and Qt. ----- In OpenSistemas we have developed a general-purpose multi-agent system which is written in pure Python: *osBrain*. Agents communicate with each other using ZeroMQ, allowing the user to define different communication patterns based on their needs. Based on this multi-agent system, we have also developed a broker- independent platform for real-time automated trading: *osMarkets*. This platform implements specialized agents: - **Feeder** is an agent which receives real-time data from the broker. - **Router** is an agent which receives data from feeders. It manages the historical data and distributes updates to all the subscribed agents in the network. - **Brain** is the most common agent. It receives data from router or from other brains and processes them, sending the results to other brains or sending orders to be executed. Brains can make use of many useful packages avilable in the Python ecosystem: NumPy, SciPy, Numba, Theano... - **Trader** is an agent which is designed to interact with the broker, just as the feeder, but to execute market orders. ![system](http://i.imgur.com/A9vsWee.png) While it is still in its earliest stages, we are developing a tool for real-time visualization of trading strategies using PyQtGraph. This tool acts as an agent in the multi-agent system. ![chart](http://i.imgur.com/5XS7oBQ.png)	28	Science & Technology	PT41M17S	2477	2d	hd	false	https://i.ytimg.com/vi/95ZYHH-Dhjw/maxresdefault.jpg		795	13	1	0	0
582	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	klHMUGcDfvc	2016-08-05T18:15:00Z	2016-08-05 18:15:00	Dmitry Trofimov - Profiling the unprofilable	Dmitry Trofimov - Profiling the unprofilable [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/profiling-the-unprofilable) When a program is not fast enough, we call on the profiler to save us. But what happens when the program is hard to profile, like for instance the Python Debugger? In this talk we're going dive deep into Vmprof, a Python profiler, and see how it helps us find out why a debugger can be slow. Once we find the culprit, we'll use Cython to optimise things. ----- Profile is the main way to find slow parts of your application, and it's often the first approach to performance optimisation. While there are quite a few profilers, many of them have limitations. In this talk we're going to learn about the new statistical profiler for Python called Vmprof that is actively being developed by the PyPy team. We'll see how it is implemented and how to use it effectively. We will apply it to an open source project, the Pydev.Debugger, a popular debugger used in IDE's such as Pydev and PyCharm, and with the help of Cython which we'll also dig into, we'll work on optimising the issues we find. Whether it's a Python debugger, a Web Application or any other kind of Python development you're doing, you'll learn how to effectively profile and resolve many performance issues.	28	Science & Technology	PT36M23S	2183	2d	hd	false	https://i.ytimg.com/vi/klHMUGcDfvc/maxresdefault.jpg		247	2	0	0	0
583	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	osCJgs5UetU	2016-08-05T18:10:19Z	2016-08-05 18:10:19	Domen Kožar - What Python can learn from Haskell packaging	Domen Kožar - What Python can learn from Haskell packaging [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/what-python-can-learn-from-haskell-packaging) Haskell community has made lots of small important improvements to packaging in 2015. What can Python community learn from it and how are we different? ----- Haskell community has been living in "Cabal hell" for decades, but Stack tool and Nix language have been a great game changer for Haskell in 2015. Python packaging has evolved since they very beginning of distutils in 1999. We'll take a look what Haskell community has been doing in their playground and what they've done better or worse. The talk is inspired by Peter Simons talk given at Nix conference: [Peter Simons: Inside of the Nixpkgs Haskell Infrastructure][1] [1]: https://www.youtube.com/watch?v=TDnZsBxqeBM&list=PL_IxoDz1Nq2Y7mIxMZ28mVtjRbbnlVdmy&index=4 Outline: - Cabal (packaging) interesting features overview - Cabal file specification overview - Interesting Cabal features not seen in Python packaging - Lack of features (introduction into next section) - Cabal hell - Quick overview of Haskell community frustration over Cabal tooling - Stack tool overview - What problem Stack solves - How Stack works - Comparing Stack to pip requirements - Using Nix language to automate packaging - how packaging is automated for Haskell - how it could be done for Python	28	Science & Technology	PT33M11S	1991	2d	hd	false	https://i.ytimg.com/vi/osCJgs5UetU/maxresdefault.jpg		217	3	0	0	0
584	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vsxwopRbACU	2016-08-05T18:09:26Z	2016-08-05 18:09:26	Andrei Coman - Effectively test your webapp with Python and Selenium	Andrei Coman - Effectively test your webapp with Python and Selenium [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/effectively-test-your-webapp-with-python-and-selenium) We will explore the lessons learned on maintaining a Selenium test suite against a webapplication and how to leverage python tools to make this process easy and transparent. ----- How often do you run your Selenium test suite? How fast do you get a result from it? Would you like to answer with: "Whenever I feel like it" and "Well, about the time it takes me to finish a coffee" ? This talk will try to get you closer to these answers. We will have a look at the lessons learned and the challenges my team faced maintaining a Selenium test suite against a long-lived Django web application. We will go over the pros and cons of: - test design approaches - technologies we used (nose, py.test, LiveServerTestCase) - reporting tools	28	Science & Technology	PT20M3S	1203	2d	hd	false	https://i.ytimg.com/vi/vsxwopRbACU/maxresdefault.jpg		325	0	0	0	0
585	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	uPSRT_7WseM	2016-08-05T17:57:41Z	2016-08-05 17:57:41	Andrés Cidel - Create secure production environment using Docker	Andrés Cidel - Create secure production environment using Docker [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/create-secure-production-environment-using-docker) The purpose of this talk if pointing out that using Docker in production is perfectly valid, not just for develop and CI environments. ----- Docker is a relatively new technology platform that helps teams develop, deploy and scale applications with greater ease and speed. However, there are doubts about using Docker in production environments. One important reason is that containers don't provide the same security layer as hypervisors do. The purpose of this talk is pointing out that using Docker in production is perfectly valid, not just for develop and CI environments. We'll learn: - How Docker works. - Main risks. - How create and maintain secure images. - How defend containers. - How delimit security risks in containers. - Best practices for running containers.	28	Science & Technology	PT24M44S	1484	2d	hd	false	https://i.ytimg.com/vi/uPSRT_7WseM/maxresdefault.jpg		385	4	0	0	0
586	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	58yuMI6K6BE	2016-08-05T17:55:29Z	2016-08-05 17:55:29	Mircea Zetea - Managing technical debt	Mircea Zetea - Managing technical debt [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/managing-technical-debt) Technical debt lives among us regardless if we are in the services business or building products. We discuss about it, we try to fix it or live with it, but can we actually prevent it? My reason for discussing this openly is because once it is there you do not only deal with the technical debt itself but also with the interest you must pay. What qualifies as debt? What qualifies as interest? How do we manage it? Is it really unavoidable? ----- Technical debt lives among us regardless if we are in the services business or building products. We discuss about it, we try to fix it or live with it, but can we actually prevent it? My reason for discussing this openly is because once it is there you do not only deal with the technical debt itself but also with the interest you must pay. My reason for discussing this openly is because once it is there you do not only deal with the technical debt itself but also with the interest you must pay. Comparing the two, probably the highest cost that we see is with the interest. As our code base grows and our deadlines get tougher we tend to forget about the cost our project will have to pay for every functionality that we implement in a hurry, for which we “forget” about tests or for which we write in a comment “this needs to be refactored” or “this is a temporary solution. refactor later”. What qualifies as debt? What qualifies as interest? How do we manage it? At what levels in our projects can we see the debt and the interest? Is it really unavoidable?	28	Science & Technology	PT59M58S	3598	2d	hd	false	https://i.ytimg.com/vi/58yuMI6K6BE/maxresdefault.jpg		307	4	2	0	0
587	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1pndeS8FIS8	2016-08-05T17:54:26Z	2016-08-05 17:54:26	Angelo Failla - FBTFTP: Facebook's open source python3 framework for dynamic TFTP servers.	Angelo Failla - FBTFTP: Facebook's open source python3 framework for dynamic TFTP servers. [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/fbtftp-facebooks-python3-framework-for-tftp-servers) FBTFTP: facebook's opensource framework for creating dynamic TFTP servers in Python3. ----- TFTP was first standardized in '81 (same year I was born!) and one of its primary uses is in the early stage of network booting. TFTP is very simple to implement, and one of the reasons it is still in use is that its small footprint allows engineers to fit the code into very low resource, single board computers, system-on-a-chip implementations and mainboard chipsets, in the case of modern hardware. It is therefore a crucial protocol deployed in almost every data center environment. It is used, together with DHCP, to chain load Network Boot Programs (NBPs), like Grub2 and iPXE. They allow machines to bootstrap themselves and install operating systems off of the network, downloading kernels and initrds via HTTP and starting them up. At Facebook, we have been using the standard in.tftpd daemon for years, however, we started to reach its limitations. Limitations that were partially due to our scale and the way TFTP was deployed in our infrastructure, but also to the protocol specifications based on requirements from the 80's. To address those limitations we ended up writing our own framework for creating dynamic TFTP servers in Python3, and we decided to open source it. I will take you thru the framework and the features it offers. I'll discuss the specific problems that motivated us to create it. We will look at practical examples of how touse it, along with a little code, to build your own server that are tailored to your own infra needs.	28	Science & Technology	PT27M56S	1676	2d	hd	false	https://i.ytimg.com/vi/1pndeS8FIS8/maxresdefault.jpg		277	5	0	0	0
588	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5MaDhl01fpc	2016-08-05T17:53:45Z	2016-08-05 17:53:45	Thierry Carrez/Doug Hellmann - How OpenStack makes Python better (and vice-versa)	Thierry Carrez/Doug Hellmann - How OpenStack makes Python better (and vice-versa) [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/how-openstack-makes-python-better-and-vice-versa) OpenStack is an infrastructure stack mostly developed in Python. In this talk, Thierry Carrez and Doug Hellmann, both Python Software Foundation fellows and OpenStack Technical Committee members, will look at the symbiotic relationship between OpenStack and Python. ----- OpenStack is an open source stack that can be deployed on raw computing resources to privately or publicly present Infrastructure as a Service. It now consists of more than 4.5 million lines of code, 85% of which is Python. In this talk, Thierry Carrez and Doug Hellmann, both Python Software Foundation fellows and OpenStack Technical Committee members, will look at the symbiotic relationship between OpenStack and Python. We'll go back in history and explain why OpenStack originally picked Python as its main language 6 years ago, and explore what does Python bring to OpenStack. We'll dive into examples of OpenStack pushing Python libraries to their limits and exposing new bugs. We'll look into the massive cloud-based continuous integration system that OpenStack uses and explain how it exposes bugs in Python libraries in the minutes after they are published to PyPI. We'll look into Python libraries that were created by the OpenStack community and libraries that the OpenStack community took over. Finally we'll expose a few best practices that Python developers can follow to get the most of this symbiotic relationship.	28	Science & Technology	PT39M52S	2392	2d	hd	false	https://i.ytimg.com/vi/5MaDhl01fpc/maxresdefault.jpg		298	5	1	0	0
589	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hnp-bvizDOA	2016-08-05T17:51:57Z	2016-08-05 17:51:57	Guillem Duran - Interactive data Kung Fu with Shaolin	Guillem Duran - Interactive data Kung Fu with Shaolin [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/interactive-data-kung-fu-with-shaolin) “Notebooks come alive when interactive widgets are used”, but programming complex applications that rely entirely on widgets may end up being a painful and frustrating process. Shaolin is a new python project that aims to provide a framework for building interactive complex dashboards. ----- You can read in The Project Jupyter web page that “Notebooks come alive when interactive widgets are used”, but programming complex applications that rely entirely on widgets may end up being a painful and frustrating process. Shaolin is a new python project that aims to provide a framework for building interactive complex dashboards. Shaolin provides all the basic tools for building complex interactive data analysis applications using the pydata ecosystem. Arbitrary code can be embedded into a Dashboard -a class that works as a “black box” that allows to easily define a GUI based on the ipywidgets package- to process any data in any form and then let you interactively define how to plot it using automatically generated widgets. Hierarchical combinations of Dashboards can be arranged then to build more complex applications. The talk is divided in two sections. First one introduce the framework and its main features: - Custom syntax for defining widgets in a simplified way. - Dashboards: Syntax rules and capabilities. - Combining Dashboards to build complex applications. - Interactive plot creation. - Integration with pydata. Second section will show how this framework can be used to analyse real data using Dashboards without writing any code. I will show how to transform market data time series into graphs using pandas and networkx, then plot it interactively using bokeh and Vpython.	28	Science & Technology	PT30M58S	1858	2d	hd	false	https://i.ytimg.com/vi/hnp-bvizDOA/maxresdefault.jpg		317	2	0	0	0
590	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4ZIxcdREYVc	2016-08-05T17:48:58Z	2016-08-05 17:48:58	Víctor Terrón - Kung Fu al amanecer con itertools	Víctor Terrón - Kung Fu al amanecer con itertools [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/kung-fu-al-amanecer-con-itertools) El módulo itertools es una de las piedras angulares de la programación avanzada en Python. Esta charla proporciona consejos prácticos del álgebra de iteradores que pueden aplicarse de forma inmediata. Descubrir el módulo itertools supone arrancar el velo de nuestros ojos, y una vez usadas funciones como `repeat()`, `takewhile()`, `dropwhile()` o `product()` no hay marcha atrás — es imposible volver al mundo de los meros mortales donde las soluciones son más complejas y necesitan más memoria. ----- El módulo itertools es una de las piedras angulares de la programación avanzada en Python. Parte de la biblioteca estándar, nos ofrece un álgebra de iteradores que permite encadenar abstracciones de forma elegante, haciendo posibles soluciones sencillas a la par que más eficientes en su consumo de memoria. El objetivo de esta charla es el de, ante todo, proporcionar consejos y lecciones claras que puedan aplicarse de forma inmediata. Ilustrándolo con numerosos ejemplos, los asistentes abandonarán la charla habiendo asimilado como mínimo varios conceptos que mejorarán indiscutible e irremediablemente su código. El énfasis se hará en mostrar casos específicos en los que una solución tradicional puede ser mejorada una y otra vez con funciones del módulo itertools. Supongamos, por ejemplo, que queremos alternar indefinidamente entre dos valores: -1 y 1. El recién iniciado utilizaría una variable cuyo valor iría modificando a cada paso y el usuario medio quizás optaría por un generador infinito. Ambas soluciones dignas y honorables, pero que palidecen ante la maestría del artista marcial que que tan sólo necesita `itertools.cycle()`. Porque el módulo itertools es así: una vez caído el velo de nuestros ojos y descubiertas funciones como `repeat()`, `takewhile()`, `dropwhile()` o `product()`, no hay marcha atrás. En esta charla vamos a aprender a reconocer cuándo pueden ser usadas, proporcionándonos en una única línea lo que para los meros mortales supone mucho más trabajo.	28	Science & Technology	PT48M39S	2919	2d	hd	false	https://i.ytimg.com/vi/4ZIxcdREYVc/maxresdefault.jpg		960	20	0	0	1
591	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DKmNiwmyl6k	2016-08-05T14:40:25Z	2016-08-05 14:40:25	Anthon van der Neut - Beyond scraping	Anthon van der Neut - Beyond scraping [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/beyond-scraping-getting-data-from-dynamic-heavily-javascript-driven-websites) This talk show how a to create a simple, evolving, client server architecture combining zeromq, selenium and beautifulsoup, which allows you to scrape data even from variable dynamic sites like Sporcle and KhanAcademy. Once the page analysis has been implemented regular "downloads" can easily be deployed without cluttering your desktop, your headless server and/or anonymously. ----- Scraping static websites can be done with `urllib2` from the standard library, or with some slightly more sophisticated packages like `requests`. However as soon as JavaScript comes into play on the website you want to download information from, for things like logging in via openid or constructing the pages content, you almost always have to fall back to driving a real browser. For web sites with variable content this is can be time consuming and cumbersome process. This talk show how a to create a simple, evolving, client server architecture combining zeromq, selenium and beautifulsoup, which allows you to scrape data from sites like Sporcle, StackOverflow and KhanAcademy. Once the page analysis has been implemented regular "downloads" can easily be deployed without cluttering your desktop, your headless server and/or anonymously. The described client server setup allows you to restart your changed analysis program without having to redo all the previous steps of logging in and stepping through instructions to get back to the page where you got "stuck" earlier on. This often decreases the time between entering a possible fix in your HTML analysis code en testing it, down to less than a second from a few tens of seconds in case you have to restart a browser. Using such a setup you have time to focus on writing robust code instead of code that breaks with every little change the sites designers make.	28	Science & Technology	PT41M40S	2500	2d	hd	false	https://i.ytimg.com/vi/DKmNiwmyl6k/maxresdefault.jpg		407	10	0	0	0
592	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	E5wGfSWbJoc	2016-08-04T20:25:05Z	2016-08-04 20:25:05	Ralph de Wargny - High Performance Python on Intel Many-Core Architecture	Ralph de Wargny - High Performance Python on Intel Many-Core Architecture [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/high-performance-python-on-intel-architecture) This talk will give an overview about the Intel® Distribution for Python which delivers high performance acceleration of Python code on Intel processors for scientific computing, data analytics, and machine learning. ----- In the first part of the talk, we'll look at the architecture of the latest Intel processors, including the brand new Intel Xeon Phi, also known as Knights Landing, a many-core processor, which was just released end of June 2016. In the second part, we will see which tools and libraries are available from Intel Software to enable high performance Python code on multi-core and many-core processors.	28	Science & Technology	PT24M13S	1453	2d	hd	false	https://i.ytimg.com/vi/E5wGfSWbJoc/maxresdefault.jpg		746	6	0	0	1
593	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vitEXiOuiEk	2016-08-04T18:52:29Z	2016-08-04 18:52:29	Katharine Jarmul - I Hate You, NLP... ;)	Katharine Jarmul - I Hate You, NLP... ;) [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/i-hate-you-nlp) In an era of almost-unlimited textual data, accurate sentiment analysis can be the key for determining if our products, services and communities are delighting or aggravating others. We'll take a look at the sentiment analysis landscape in Python: touching on simple libraries and approaches to try as well as more complex systems based on machine learning. ----- Overview ------------- This talk aims to introduce the audience to the wide array of tools available in Python focused on sentiment analysis. It will cover basic semantic mapping, emoticon mapping as well as some of the more recent developments in applying neural networks, machine learning and deep learning to natural language processing. Participants will also learn some of the pitfalls of the different approaches and see some hands-on code for sentiment analysis. Outline ----------- * NLP: then and now * Why Emotions Are Hard * Simple Analysis * TextBlob (& other available libraries) * Bag of Words * Naive Bayes * Complex Analysis * Preprocessing with word2vec * Metamind & RNLN * Optimus & CNN * TensorFlow * Watson * Live Demo * Q&A	28	Science & Technology	PT43M22S	2602	2d	hd	false	https://i.ytimg.com/vi/vitEXiOuiEk/maxresdefault.jpg		1315	12	0	0	0
594	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	KDhvktUcehI	2016-08-04T18:46:29Z	2016-08-04 18:46:29	Rogier van der Geer - How to conquer the world	Rogier van der Geer - How to conquer the world [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/a-genetic-algorithm-to-play-the-game-of-risk) The popular board game of Risk has many fans around the world. Using a Python-based simulation of the game, we use a genetic algorithm to train a risk-playing algorithm. ----- During this talk we'll explain what genetic algorithms are and we'll explain an entertaining use-case: how to win at popular board games. During the talk we'll demo how object oriented patterns help with the design and implementation of these algorithms. We'll also demonstrate a library that allows users to push their own risk bots into a game and battle it out on.	28	Science & Technology	PT43M7S	2587	2d	hd	false	https://i.ytimg.com/vi/KDhvktUcehI/maxresdefault.jpg		262	1	0	0	0
595	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	G1Z99GWvJCQ	2016-08-04T18:45:37Z	2016-08-04 18:45:37	John Kraal - High Availability Scaling with Share Nothing Architecture	John Kraal - High Availability Scaling with Share Nothing Architecture [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/high-availability-scaling-with-share-nothing-architecture) Scaling a project to a worldwide scale with the same performance and availability in every region using Python isn’t easy, but with the right mindset and tools it’s a very viable target. ----- We will discuss methods of delivering software, with automated scaling systems, building units out of your project to manage separately and how to reliably and securely distribute data to separate clusters, and how we have achieved this with the use of Celery, Redis, Databases, Protobuf and other modern tools, whilst making sure to highlight our pitfalls and successes	28	Science & Technology	PT20M50S	1250	2d	hd	false	https://i.ytimg.com/vi/G1Z99GWvJCQ/maxresdefault.jpg		505	5	0	0	0
596	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	CF8zt8l6SeI	2016-08-04T18:41:52Z	2016-08-04 18:41:52	James Saryerwinnie - Writing Redis in Python with asyncio	James Saryerwinnie - Writing Redis in Python with asyncio [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/writing-redis-in-python-with-asyncio) In this talk, I'll show you how to write redis using asyncio. You'll see how you can create a real world application using asyncio by creating a python port of redis. ----- Python has been adding more and more async features to the language. Starting with asyncio in python 3.4 and including the new async/await keywords in python 3.5, it's difficult to understand how all these pieces fit together. More importantly, it's hard to envision how to use these new language features in a real world application. In this talk we're going to move beyond the basic examples of TCP echo servers and example servers that can add number together. Instead I'll show you a realistic asyncio application. This application is a port of redis, a popular data structure server, written in python using asyncio. In addition to basic topics such as handling simple redis commands (GET, SET, APPEND, etc), we'll look at notifications using pub/sub, how to implement the MONITOR command, and persistence. Come learn how to apply the asyncio library to real world applications.	28	Science & Technology	PT24M43S	1483	2d	hd	false	https://i.ytimg.com/vi/CF8zt8l6SeI/maxresdefault.jpg		2207	32	3	0	1
597	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JWBBI-jFVOc	2016-08-04T18:41:52Z	2016-08-04 18:41:52	Adam Dangoor - Another pair of eyes: Reviewing code well	Adam Dangoor - Another pair of eyes: Reviewing code well [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/another-pair-of-eyes-reviewing-code-well) Many of us have been taught to code, but we know that software engineering jobs are so much more than that. Programmers can spend 5-6 hours per week on code review, but doing that is almost ignored as a skill. How many of us have seen poor reviews, which don't catch bugs, make people feel bad or block important features being merged? An introduction to what code review is alongside guidelines, tips, tricks and anecdotes to help make your code reviews be as productive as possible. ----- Many of us have been taught to code, but we know that software engineering is so much more than that. Programmers can spend 5-6 hours per week on code review, but doing that is almost ignored as a skill, and instead it is often treated as a rote chore. How many of us have seen poor reviews - those which upset people, don't catch bugs or block important features being merged? This talk explores the social and technical impacts of various code review practices as well as helpful tooling. The goal is to provide a structure to help improve how teams review code, and to introduce the costs and benefits of code review to anyone unfamiliar with the practice. There are always trade-offs to be made - e.g. think how costly a security flaw in this code could be to your organisation - perhaps intense scrutiny is not necessary for prototypes soon to be thrown away. It is useful to consider the trade-offs in order to optimise for a particular problem domain. Perhaps right now it is more important to look for issues with maintainability, functionality or performance. I talk about how some fantastic code reviews from mentors, colleagues and strangers have helped me become a better programmer and team member, as well as occasions where code review has been detrimental by slowing things down and causing arguments. This is aimed at everyone from beginner to advanced programmers.	28	Science & Technology	PT25M8S	1508	2d	hd	false	https://i.ytimg.com/vi/JWBBI-jFVOc/maxresdefault.jpg		415	8	1	0	0
598	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WKu7T976WkA	2016-08-04T18:41:51Z	2016-08-04 18:41:51	Anjana Vakil - Using and abusing Python’s double-underscore methods and attributes	Anjana Vakil - Using and abusing Python’s double-underscore methods and attributes [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/using-and-abusing-pythons-double-underscore-methods-and-attributes) Python’s double-underscore ('`__`') methods and attributes go by many names, including “special”, “dunder”, and “magic”. You already use some, like `__init__`, but there are many more! In this talk, we’ll see how dunders can be useful, silly, dangerous, and fun! We’ll trick Python’s arithmetic and comparison operators. We’ll make objects behave like dictionaries and containers. We’ll reduce an object’s memory usage, and speed up membership tests. We’ll even try some naughty function hacks! ----- The curious Python methods and attributes surrounded by double underscores ('`__`') go by many names, including “special”, “dunder”, and “magic”. You probably use some of them, like `__init__`, every day. But that’s just the tip of the iceberg! In this talk, we’ll explore the weird and wonderful world of the double-underscore, and find out how dunders can be useful, silly, dangerous, and just fun! We’ll play pranks on Python’s builtin operators for arithmetic and comparison. We’ll make arbitrary objects behave like dictionaries and containers. We’ll reduce an object’s memory usage, and speed up tests for membership. We’ll even try some naughty function hacks that we should never use in real life! You'll get the most out of this talk if you're already comfortable writing object-oriented Python code. If you already use special dunder magic in your own code, that's excellent! You’ll have a chance to share your tips & tricks with the rest of the audience at the end of the talk. _Talk repo_: [https://github.com/vakila/dunders][1] [1]: https://github.com/vakila/dunders	28	Science & Technology	PT31M1S	1861	2d	hd	false	https://i.ytimg.com/vi/WKu7T976WkA/maxresdefault.jpg		10565	189	3	0	12
599	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sC9N16E0a2E	2016-08-04T18:41:51Z	2016-08-04 18:41:51	Jose Manuel Ortega - Ethical hacking with Python tools	Jose Manuel Ortega - Ethical hacking with Python tools [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/ethical-hacking-with-python-tools) Python, as well as offering an ecosystem of tools for testing security and application pentesting.Python offers a tool ecosystem for developing our own tools security for testing applications and the servers security,identifying information about servers and potential vulnerabilities. The ultimate objective is show a pentesting tool integrating some of the modules commented and try a demo showing info about our domain target and find vulnerabilities in it, ----- Nowdays, Python is the language more used for developing tools within the field of security. Many of the tools can be found today as port scanner, vulnerability analysis, brute force attacks and hacking of passwords are written in python. The goal of the talk would show the tools available within the Python API and third-party modules for developing our own pentesting and security tools and finally show a pentesting tool integrating some of the modules. The main topics of the talk could include: **1.Enter Python language as platform for developing security tools** Introduction about the main libraries we can use for introducing in development of security tools such as socket and requests. **2.Libraries for obtain servers information such as Shodan, pygeocoder,pythonwhois** Shodan is a search engine that lets you find specific computers (routers, servers, etc.) and get information about ports and services that are opened. **3.Analysis and metadata extraction in Python for images and documents** Show tools for scraping web data and obtain metadata information in documents and images **4.Port scanning with tools like python-nmap** With python-nmap module we can check ports open for a target ip or domain. **5.Check vulnerabilities in FTP and SSH servers** With libraries like ftplib and paramiko we can check if the server is vulnerable to ftp and ssh anonymous connections.	28	Science & Technology	PT40M11S	2411	2d	hd	false	https://i.ytimg.com/vi/sC9N16E0a2E/maxresdefault.jpg		1827	16	3	0	0
600	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cK_oNI6VUHU	2016-08-04T18:41:50Z	2016-08-04 18:41:50	Andreas Dewes - Analyzing Data with Python & Docker	Andreas Dewes - Analyzing Data with Python & Docker [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/analyzing-data-with-python-docker) Docker is a powerful tool for packaging software and services in containers and running them on a virtual infrastructure. Python is a very powerful language for data analysis. What happens if we combine the two? We get a very versatile and robust system for analyzing data at small and large scale! I will show how we can make use of Python and Docker to build repeatable, robust data analysis workflows which can be used in many different contexts (possibly with a live demo). ----- Docker is a powerful tool for packaging software and services in containers and running them on a virtual infrastructure. Python is a very powerful language for data analysis. What happens if we combine the two? We get a very versatile and robust system for analyzing data at small and large scale! I will show how we can make use of Python and Docker to build repeatable, robust data analysis workflows that can be used in many different contexts. I will explain the core ideas behind Docker and show how they can be useful in data analysis. I will then discuss an open-source Python library (Rouster) which uses the Python Docker-API to analyze data in containers and show several interesting use cases (possibly even a live-demo). Outline: 1. Why data analysis can be frustrating: Managing software, dependencies, data versions, workflows 2. How Docker can help us to make data analysis easier & more reproducible 3. Introducing Rouster: Building data analysis workflows with Python and Docker 4. Examples of data analysis workflows: Business Intelligence, Scientific Data Analysis, Interactive Exploration of Data 5. Future Directions & Outlook	28	Science & Technology	PT43M19S	2599	2d	hd	false	https://i.ytimg.com/vi/cK_oNI6VUHU/maxresdefault.jpg		1498	21	0	0	2
601	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Q8JRs_hPuZA	2016-08-04T18:41:49Z	2016-08-04 18:41:49	Alexys Jacob/Guillaume Gelin - Planning for the worst	Alexys Jacob/Guillaume Gelin - Planning for the worst [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/planning-for-the-worst) Sharing our worst production experiences and the tricks, good practices and code we developed to address them. ----- This talk is about sharing our experience about how we handled production problems on all levels of our applications. We'll begin with common problems, errors and failures and dig on to more obscure ones while sharing concrete tips, good practices and code to address them ! This talk will make you feel the warmth of not being alone facing a problem :)	28	Science & Technology	PT1H	0	2d	hd	false	https://i.ytimg.com/vi/Q8JRs_hPuZA/maxresdefault.jpg		230	4	0	0	0
602	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dDMptG5YYyY	2016-08-04T18:41:49Z	2016-08-04 18:41:49	iztok kucan/Joris Peeters - Algorithmic Trading with Python	iztok kucan/Joris Peeters - Algorithmic Trading with Python [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/algorithmic-trading-with-python) This is a look behind the scenes at Winton Capital Management- one of Europe’s most successful systematic investment managers. The talk will mainly focus on how Python gives researchers fine-grained control over the data and trading systems, without requiring them to interact directly with the underlying, highly-optimised technology. ----- Have you ever wondered what technologies are used in a systematic trading system that utilises computer models and accounts for the majority of trading on the stock market? This is a look behind the scenes at Winton Capital Management- one of Europe’s most successful systematic investment managers. In this talk, we’ll run through an overview of Winton’s trading infrastructure, including data management, signal generation and execution of orders on global exchanges. The talk will mainly focus on how Python gives researchers fine-grained control over the data and trading systems, without requiring them to interact directly with the underlying, highly- optimised technology.	28	Science & Technology	PT32M38S	1958	2d	hd	false	https://i.ytimg.com/vi/dDMptG5YYyY/maxresdefault.jpg		2238	31	1	0	0
603	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SZ_7Z7s6-H0	2016-08-04T18:41:48Z	2016-08-04 18:41:48	Fabien Bochu - Grocker, a Python build chain for Docker	Fabien Bochu - Grocker, a Python build chain for Docker [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/grocker-a-python-build-chain-for-docker) Grocker is a Docker build chain for Python. It transforms your Python package into a self-contained Docker image which can be easily deployed in a Docker infrastructure. Grocker also adds a Docker entry point to easily start your application. ----- At Polyconseil, we build Paris electric car sharing service: Autolib'. This system is based on many services developed using web technologies, Django and our own libraries to handle business logic. Packaging is already a difficult problem, deploying large Python projects is even more difficult. When deploying on a live and user- centric system like Autolib', you cannot rely on Pip and external PyPI servers which might become unavailable and are beyond your control. In the beginning we used classic Debian packaging: it was a maintenance hell. It took hours to build our packages and update their metadata to match our Python packages. So we switched to Docker. Docker allows us to have a unique item that is deployed in production systems: code updates are now atomic and deterministic! But before deploying the Docker image, you need to build it. That's where Grocker comes in. Grocker is a Docker build chain for Python. It will transform your Python package into a self-contained Docker image which can be easily deployed in a Docker Infrastructure. Grocker also adds a Docker entry point to easily start your application.	28	Science & Technology	PT19M16S	1156	2d	hd	false	https://i.ytimg.com/vi/SZ_7Z7s6-H0/maxresdefault.jpg		184	4	0	0	0
604	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	zW_HyDTPjO0	2016-08-04T18:41:48Z	2016-08-04 18:41:48	Alexander Steffen - Writing unit tests for C code in Python	Alexander Steffen - Writing unit tests for C code in Python [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/writing-unit-tests-for-c-code-in-python) There are many unit testing frameworks for C out there, but most of them require you to write your tests in C (or C++). While there might be good reasons to keep your implementation in C, those hardly apply to the tests. So wouldn't it be nice to use all the power of Python and its unit testing capabilities also for your C code? This talk will show you how. ----- There are many unit testing frameworks for C out there, but most of them require you to write your tests in C (or C++). While there might be good reasons to keep your implementation in C (for example execution speed or resource consumption), those hardly apply to the tests. So wouldn't it be nice to use all the power of Python and its unit testing capabilities also for your C code? This talk will show you how to combine CFFI and pycparser to easily create Python unit tests for C code, without a single line of C anywhere in the test cases. It will also cover creating mock functions in Python, that can be used by the C code under test to hide external dependencies. Finally, we will look at some of the challenges you might face when trying to mix Python and C and what to do about them.	28	Science & Technology	PT26M12S	1572	2d	hd	false	https://i.ytimg.com/vi/zW_HyDTPjO0/maxresdefault.jpg		9420	141	0	0	14
605	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1H5uU_lcdWQ	2016-08-04T18:41:47Z	2016-08-04 18:41:47	Valeria Pettorino - Unveiling the Universe with python	Valeria Pettorino - Unveiling the Universe with python [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/unveiling-the-universe-with-python) I will describe a scientific application of python in the field of Astrophysics and Cosmology. How the publicly available package Monte Python is used to compare data from space satellite missions with theoretical models that attempt to describe the evolution and content of the Universe. The result is surprising, as it points towards a Universe which is mainly dark. ----- Python is widely used in Cosmology, which is the study of the Universe and all forms of energy in it. A large amount of data has been recently obtained through space satellite missions, such as Planck, financed by ESA/NASA. Planck has observed the radiation emitted about 13 billion years ago (the Cosmic Microwave Background, CMB), which gives us information on the content and space-time geometry of the Universe. Many competitive theoretical models have been proposed that aim at describing the evolution of the species contained in the Universe: therefore, cosmologists need a method to identify which theoretical model better fits the data. In order to compare data with theoretical predictions, cosmologists use Bayesian statistics and Monte Carlo simulations. Among the tools developed for the analysis, the package ‘Monte Python’ is publicly available and uses python to perform Monte Carlo simulations: this allows to determine the theoretical model that maximizes the likelihood to obtain the observed data. Such model is now the standard cosmological model and reveals a Universe that is very different from what scientists had ever expected. A Universe in which the atoms we are made of, constitute only 5% of the total energy budget. The rest is the so-called ‘Dark Universe’. I will illustrate the story of how cosmologists used python to analyse the data of the CMB and unveil the Dark Universe.	28	Science & Technology	PT41M3S	2463	2d	hd	false	https://i.ytimg.com/vi/1H5uU_lcdWQ/maxresdefault.jpg		823	6	0	0	0
606	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2gee5oUAO14	2016-08-04T18:41:46Z	2016-08-04 18:41:46	Joe Drumgoole - A deep dive into the Pymongo MongoDB driver	Joe Drumgoole - A deep dive into the Pymongo MongoDB driver [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/a-deep-dive-into-the-pymongo-mongodb-driver) The Pymongo driver is one of MongoDB’s most popular driver interfaces for connecting to MongoDB. But developers rarely look under the cover to see what’s happening inside the driver. By having a deeper insight into how the driver constructs server requests and responds, developers will be able to write more effective MongoDB applications in Python. ----- *The Pymongo driver is one of MongoDB’s most popular driver interfaces for connecting to MongoDB. But developers rarely look under the cover to see what’s happening inside the driver. * *By having a deeper insight into how the driver constructs server requests and responds, developers will be able to write more effective MongoDB applications in Python.* *We will look at :* - *Initial connection* - *A query* - *A simple write operation* - *A bulk write operation* - *How the driver responds when we have a node failure* *We will also give insight into the driver’s approach to server selection when connecting to a replicas set (a multi-node instance of MongoDB).*	28	Science & Technology	PT53M23S	3203	2d	hd	false	https://i.ytimg.com/vi/2gee5oUAO14/maxresdefault.jpg		642	4	0	0	0
607	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TU5DvG7Fl04	2016-08-04T18:41:46Z	2016-08-04 18:41:46	Sławomir Piasecki - Python in Astronomy	Sławomir Piasecki - Python in Astronomy [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/python-in-astronomy) I would like to talk about modern Astronomy where I would give a brief history of Astronomy. I will answer some question: What do we use computers for today in astronomy? Where is Python’s place in today’s science? Is Python is the best language for scientific computation? I would like to give a short introduction into AstroPy module. Finally I would like presents some result of my research where Python was used to create data. ----- For ages people have been watching the sky, and tried to learn something about all those mysterious lights. In ancient times, scientist used mostly their naked eyes to watch what happened in the night sky. Astronomy is one of the oldest fields in science. Everything changed when Galileo invented his lunette. Thanks to thi, we were able to proof Copernicus’ new model of the solar system with the sun in the center. The next big step in Astronomy was using computers. Where there are computers and Astronomy, there is a place for programming. For many years astronomers were mostly using Fortran and C/C++. Both are suited to numeric computation and scientific computing. Since they are structured programming language, that makes them very valuable for science. Over the past decade, Python has started to be used by more and more people in astronomy. But is there a place in Astronomy for Python, as it is not as fast as Fortran or C/C++? In Python there is a module called AstroPy which helps astronomers in their work. MatPlotLib is one of the most popular library use in astronomy. This tool helps created very sophisticated plots and graphs. Finally I would like talk about some research I did using Python. For research, we decided to use AUTO. It is a hybrid of Fortran and Python, to compute bifurcation points in mathematical models. In Python we introduce mathematical model, ODE and initial parameters. Fortran does all the computation.	28	Science & Technology	PT35M16S	2116	2d	hd	false	https://i.ytimg.com/vi/TU5DvG7Fl04/maxresdefault.jpg		1135	13	0	0	0
608	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QgNDi1vsrtQ	2016-08-04T18:41:45Z	2016-08-04 18:41:45	Valerio Maggio - Data Formats for Data Science	Valerio Maggio - Data Formats for Data Science [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/data-science-formats-beyond-csv-and-hdfs) The CSV is the most widely adopted data format. It used to store and share *not-so-big* scientific data. However, this format is not particularly suited in case data require any sort of internal hierarchical structure, or if data are too big. To this end, other data formats must be considered. In this talk, the different data formats will be presented and compared w.r.t. their usage for scientific computations along with corresponding Python libraries. ----- The *plain text* is one of the simplest yet most intuitive format in which data could be stored. It is easy to create, human and machine readable, *storage-friendly* (i.e. highly compressible), and quite fast to process. Textual data can also be easily *structured*; in fact to date the CSV (*Comma Separated Values*) is the most common data format among data scientists. However, this format is not properly suited in case data require any sort of internal hierarchical structure, or if data are too big to fit in a single disk. In these cases other formats must be considered, according to the shape of data, and the specific constraints imposed by the context. These formats may leverage *general purpose* solutions, e.g. [No]SQL databases, HDFS (Hadoop File System); or may be specifically designed for scientific data, e.g. hdf5, ROOT, NetCDF. In this talk, the strength and flaws of each solution will be discussed, focusing on their usage for scientific computations. The goal is to provide some practical guidelines for data scientists, derived from the the comparison of the different Pythonic solutions presented for the case study analysed. These will include `xarray`, `pyROOT` *vs* `rootpy`, `h5py` *vs* `PyTables`, `bcolz`, and `blaze`. Finally, few notes about the new trends for **columnar databases** (e.g. *MonetDB*) will be also presented, for very fast in-memory analytics.	28	Science & Technology	PT42M56S	2576	2d	hd	false	https://i.ytimg.com/vi/QgNDi1vsrtQ/maxresdefault.jpg		746	5	1	0	0
609	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	T3vPQrUrRgs	2016-08-04T18:41:44Z	2016-08-04 18:41:44	Fabio Pliger - OMG, Bokeh is better than ever!	Fabio Pliger - OMG, Bokeh is better than ever! [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/omg-bokeh-is-better-then-ever) Bokeh is a unique library in its genre that lets users create beautiful and complex visualizations from Python. The talks shows a comprehensive overview of the most powerful and popular Bokeh features, like: the optimized websocket based server for performant python callbacks from actions on the browser, Javascript callbacks written in Python (YES!!), bokeh command that lets target different outputs from the same input, JS transforms from Python, high-level charts, Geo support, ... ----- Bokeh is a unique library in its genre that lets users create beautiful and complex visualizations from Python (and other languages) to the browser without actually writing Javascript or HTML. In the last year the Bokeh team have added a large number of unique features that are extremely powerful. Fully optimized websocket based server that enables performant python callbacks from actions on the browser, Javascript callbacks written in Python (YES!!), bokeh command that lets target different outputs from the same input, JS transforms from Python, high-level charts, Geo support, ... Anyone interested in powerful and easy visualizations should take a look at it. :)	28	Science & Technology	PT39M6S	2346	2d	hd	false	https://i.ytimg.com/vi/T3vPQrUrRgs/maxresdefault.jpg		938	2	3	0	0
610	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9boJ-Ai6QFM	2016-08-04T18:41:43Z	2016-08-04 18:41:43	Anna Wszeborowska - Music transcription with Python	Anna Wszeborowska - Music transcription with Python [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/music-transcription-with-python) Music transcription allows to convert an audio recording to musical notation through mathematical analysis. In the talk we will focus on transcribing a monophonic audio input and see how we can modify it on the fly. To achieve that, we need to determine pitch and duration of each note, and then use these parameters to create a sequence of MIDI events. ----- Music transcription allows to convert an audio recording to musical notation through mathematical analysis. It is a very complex problem, especially for polyphonic music - currently existing solutions yield results with approx. 70% or less accuracy. In the talk we will focus on transcribing a monophonic audio input and see how we can modify it on the fly. To achieve that, we need to determine pitch and duration of each note, and then use these parameters to create a sequence of MIDI events. MIDI stands for _Musical Instrument Digital Interface_ and it encodes commands used to generate sounds by musical hardware or software. Let's see how to play around with sounds using Python and a handful of its powerful libraries. And let's do it in real-time!	28	Science & Technology	PT29M22S	1762	2d	hd	false	https://i.ytimg.com/vi/9boJ-Ai6QFM/maxresdefault.jpg		5860	88	0	0	9
611	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BC4aSBhBAKA	2016-08-04T07:31:02Z	2016-08-04 07:31:02	Floris Bruynooghe - Build your Microservices with ZeroMQ	Floris Bruynooghe - Build your Microservices with ZeroMQ [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/build-your-microservices-with-zeromq) While microservices are rather commonly implemented using JSON over HTTP this is merely an implementation choice. This talk will cover the reasons why you might want to choose ZeroMQ as communication transport between your microservices instead. It will show how ZeroMQ is used from within Python and the common patterns which can simplify the overal architecture while at the same time providing reliable and low-latency communications between your services. ----- Microservices is the popular term for the trend to build backend architectures as a number of smaller independent processes. As an evolution from the Service Oriented Architecture the core aims are to create independent services which are easy to operate and even replace while all of them together compose into providing the business logic required for your application. While it is rather common for microservices to choose JSON over HTTP to communicate with each other, this is purely an implementation choice. HTTP is a protocol using a strict request-response format, this can become a little burdensome when needing to deal with asynchronous requests and forces some architectural descisions to be not as ideal as they could be. ZeroMQ has more flexible communication patterns allowing for easier mapping of real-life interactions between services. Coupled with an easy to use asynchronous user-level API and very fast underlying communication on persistent TCP connections ZeroMQ is a rather attractive transport to build your microservices based applications in. This talk will show how to use ZeroMQ within Python to build your microservices. It will show the benefits of ZeroMQ's asynchronous API, common usage patterns and how to handle backpressure. Furthermore different communication patterns will be explored and the impact this has on how to simplify the overall architecture using these patterns.	28	Science & Technology	PT27M2S	1622	2d	hd	false	https://i.ytimg.com/vi/BC4aSBhBAKA/maxresdefault.jpg		4458	26	15	0	1
612	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HPUg31eylds	2016-08-04T07:31:02Z	2016-08-04 07:31:02	Raphael Pierzina - Pytest 3.0	Raphael Pierzina - Pytest 3.0 [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/pytest-30) - New features of pytest's upcoming major version 3.0 - Breaking changes and other important information - Recap of the first developer sprint in June, 2016 - Thank you notes to all who have contributed to the fundraiser ----- Pytest is a mature testing framework for Python that is developed by a thriving and ever-growing community of volunteers. Following the principle of "no API is the best API" it uses plain assert statements and regular Python comparisons. Writing tests with pytest requires little to no boilerplate code and powerful features allow easy parametrization and intelligent test selection. In this talk we will have an in-depth look at new features of pytest 3.0 and live demo possible use cases. We will also learn about important bugfixes and other enhancements of the upcoming major release. Backwards-incompatible changes will be addressed and changes made to the documentation will be highlighted. If you are already familiar with pytest, you will be happy to hear about significant improvements of the fixture and hook system but also what's in store for a better integration with tox, an important tool that allows testing across different Python versions. In June, 2016 more than 25 Pythonistas from around the globe gather in Freiburg, Germany to work on the release and set the path for future developments of the core framework. This is a big step forward for the project made posssible by a fundraiser that reached 108% of it's initial goal. I will share our experiences from the developer sprint while they are still fresh and explain why these events are incredibly important for a community and give advice on how to organize your own.	28	Science & Technology	PT35M2S	2102	2d	hd	false	https://i.ytimg.com/vi/HPUg31eylds/maxresdefault.jpg		1579	15	0	0	0
613	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LfbmcZ_NNVU	2016-08-04T07:31:02Z	2016-08-04 07:31:02	Lauris Jullien - Asynchronous network requests in a web application	Lauris Jullien - Asynchronous network requests in a web application [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/asynchronous-network-requests-in-a-web-application) Introducing asynchronous calls from within an endpoint in a web app can be desirable but hard to achieve. This talk will explore different solutions for this (running Twisted event loop, Co-Routines, Asyncio, …) and how well they play with the different parallelization models of common WSGI web servers. ----- In the more and more popular SOA paradigm, it’s common for services to have to compose responses with resources from many different services. Everyone’s first idea will probably be to call each service synchronously with your favorite python HTTP library. This unfortunately doesn’t scale well and tens of successive network calls will make your endpoints painfully slow. One solution is to parallelize these network calls. If you are already using an asynchronous web app (such as Tornado or Twisted), more asynchronous in your asynchronous shouldn’t be much of a challenge. But if you chose not to dive into the madness of chained Deferred calls, and used a standard prefork/threaded WSGI web server (such as Gunicorn or uWSGI) to run your Django/Flask/Pyramid application, you might find yourself wondering how to manage these asynchronous calls. This talk will explore different solutions (running Twisted event loop, Co-Routines, Asyncio, …) and how well they play with the different parallelization models of WSGI web servers.	28	Science & Technology	PT32M44S	1964	2d	hd	false	https://i.ytimg.com/vi/LfbmcZ_NNVU/maxresdefault.jpg		1357	10	0	0	1
614	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cCCiA-IlVco	2016-08-04T07:31:02Z	2016-08-04 07:31:02	Naomi Ceder - Come for the Language, Stay for the Community	Naomi Ceder - Come for the Language, Stay for the Community [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/keynote-stay-for-the-community) While Python the language is wonderful, the Python community and the personal, social, and professional benefits that flow from involvement in a community like ours are often more compelling. Learn about the goals of the Python Software Foundation and how everyone can take part to help build even better Python communities locally, regionally, and globally. I will also discuss some of our strengths as a community, and also look at some of the challenges we face going forward. ----- Python is a powerful and flexible tool that many of us love and use in many ways. And yet, as wonderful as the language is, many would say that the community is even more attractive. This talk will focus on involvement in the Python community and what that means - in particular the many personal, social, and professional benefits that flow from involvement in a community like ours. I will also discuss what the Python Software Foundation does, what its goals and purpose are, and how everyone in the community can take part in the PSF to help build even better Python communities. This will include specific explanations of the membership model and how active contributors (both in terms of code and community organisation) can and should become full voting members of the PSF. I will also touch on our strengths, like our commitment to safe and inclusive spaces and our devotion to education, and also look at some of the challenges we face as a community going forward.	28	Science & Technology	PT49M29S	2969	2d	hd	false	https://i.ytimg.com/vi/cCCiA-IlVco/maxresdefault.jpg		1133	9	5	0	1
615	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	m28fiN9y_r8	2016-08-04T07:31:02Z	2016-08-04 07:31:02	Yury Selivanov - async/await in Python 3.5 and why it is awesome	Yury Selivanov - async/await in Python 3.5 and why it is awesome [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/asyncawait-in-python-35-an-why-it-is-awesome) async/await is here, everybody can use it in Python 3.5. It's great and awesome, yet only a few understand it. As a PEP 492 author, I'd really like to have a chance to better explain the topic, show why async/await is important and how it will affect Python. I'll also tell a story on how I worked on the PEP -- starting from an idea that I discussed with Guido on PyCon US 2015, and landing to CPython source code one and a half moths later! ----- The talk will start with a brief coverage of the story of asynchronous programming in Python -- Twisted, Tornado, Stackless Python & greenlets, eventlet, Tornado, asyncio & curio. We've come a really long road, and it's important to understand how we ended up with async/await. Then I'll go over asyncio and curio, showing async/await by example, explaining that in reality it's a very easy to use language feature. You don't need to know all the details to be able to successfully use the new syntax, and even build new frameworks on top of it. I'll then explain the async/await machinery in CPython, starting with generators and 'yield' expression, showing what is 'yield from' and finally, demonstrating how async/await is implemented in CPython. This will ensure that those who want to invent some new crazy ways of using async/await will have a starting point! I'll end the talk with a story of how I came up with the idea. How I shared it with Guido van Rossum, Victor Stinner, and Andrew Svetlow. How the first version of the PEP was born, and how we managed to push it to Python 3.5 in under two months period. The goal is to make people understand that it's possible to change your programming language -- in fact, Python, as any other programming language, wants new features and capabilities to be relevant.	28	Science & Technology	PT25M8S	1508	2d	hd	false	https://i.ytimg.com/vi/m28fiN9y_r8/maxresdefault.jpg		20973	327	7	0	8
616	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	31Uhdd1efYA	2016-08-04T07:30:59Z	2016-08-04 07:30:59	Daniele Procida - Documentation-driven development	Daniele Procida - Documentation-driven development [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/documentation-driven-development) One secret of Django's success is the quality of its documentation. As well as being key to the quality of the code itself, it has helped drive the development of Django as a community project, and even the professional development of programmers who adopt Django. I'll discuss how Django has achieved it, and how any project can easily win the same benefits. ----- Part of my job title is _Documentation Manager_. When I explain this to a programmer outside the Python/Django community, the reaction can be anything from bewilderment to a kind of mild horror. When I mention it to a Python/Django programmer, the response is usually: _Oh, cool_. In fact, one secret of Django's success is the quality of its documentation, and everyone who uses Django is quick to note this. The returns on Django's investment have been substantial, but some of them are also surprising. The documentation has clearly been key to the _quality of the code itself_, but also (less obviously) to the _development of Django as a community project_, and even the _professional development of programmers_ who adopt Django. I'll discuss how Django has achieved it, and how any project can easily win the same benefits.	28	Science & Technology	PT46M22S	2782	2d	hd	false	https://i.ytimg.com/vi/31Uhdd1efYA/maxresdefault.jpg		268	2	1	0	0
617	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3o9lgJ1pZms	2016-08-04T07:30:59Z	2016-08-04 07:30:59	Rudy Sicard - Leveraging documentation power for better web APIs	Rudy Sicard - Leveraging documentation power for better web APIs [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/leveraging-documentation-power-for-better-web-apis) Web APIs that are easier to understand, develop, test and use, is a popular subject. "An API is only as good as its documentation". We decided to play with this proverb and leverage the power of documentation. We propose to use the code documentation and the type system to provide lots of free features: explorable APIs, better error messages, automatic testing. Python is perfect to explore code and documentation dynamically. We'll demonstrate what we came up to and the lessons we've learned. ----- 'Rich' web APIs that are easier to understand, develop, test and use, is a popular subject. There are a lot of new specification languages (e.g. swagger, apiblueprint ...) and libraries (django-rest-framework, drf ...) that provide features in this direction. Following the old proverb "An API is only as good as its documentation", we decided to play with these ideas and focus on leveraging the power of documentation. We propose to use the code documentation and the type system to provide: - browsable APIs, that are easy to interact with and visualize, reducing the need to provide custom UIs - verification of inputs/outputs along with precise error message if needed - automatic [de]-serialization of inputs/ouputs outside of the domain code - smart exception handling, e.g. exceptions that are not documented are automatically converted into internal errors - automatic testing, e.g. input, output and result including exceptions are tested ensuring the code works and the documentation is up-to-date. This use case is one of the rare situation where introspection is desirable and unavoidable. And Python is a good language to explore/exploit code and documentation dynamically. The perfect excuse to spend some time on meta coding a first implementation while being at work. We'll demonstrate what we came up to, the advantages and limitations compared to other approaches. And we'll share the lessons we learned from this experiment.	28	Science & Technology	PT22M48S	1368	2d	hd	false	https://i.ytimg.com/vi/3o9lgJ1pZms/maxresdefault.jpg		143	1	0	0	0
618	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8GIZW--41oE	2016-08-04T07:30:59Z	2016-08-04 07:30:59	Catherine Holloway - Simplifying Computer Art in Python	Catherine Holloway - Simplifying Computer Art in Python [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/simplifying-computer-art-in-python) The Processing project demonstrated that computer art can attract a wider audience to programming. Python has a robust catalog of libraries, including two interfaces to OpenGL. However, none of these libraries replicate Processing’s simplicity when drawing to the screen. I will present my solution to this problem: a re- implementation of VPython’s visual module purely in python called PygletHelper. ----- Processing is a programming language originally developed by the MIT media lab with the goal of allowing artists, educators, and many others develop striking computer generated or assisted projects without requiring deep knowledge of software engineering or computer graphics. Like Processing, Python has become a favourite language of users from diverse backgrounds, such as web development, education, and science. Unlike Processing, python lacks a simple and easy to use library for drawing shapes. Python’s existing libraries for scientific computing and data analysis could be made even more awesome when combined with a simple drawing library. VPython contains a module called visual that established a simple API and convention for drawing shapes, however it was written in C++, prior to the development of pyglet, and thus is not entirely cross- platform. In this talk, I will demonstrate my solution to this problem: a re-implementation of visual purely in Python called PygletHelper. Pyglet, an existing python library, provides a python interface to OpenGL. PygletHelper is built on pyglet but obscures all of the OpenGL calls, such that the user can draw simple geometric shapes to the screen and animate them without needing to know about computer graphics terminology, memory usage, or C data types. I will also show some need visualizations of science and music in my talk, as well as the graphical glitches encountered implementing the library.	28	Science & Technology	PT26M33S	1593	2d	hd	false	https://i.ytimg.com/vi/8GIZW--41oE/maxresdefault.jpg		285	4	0	0	0
619	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Dq4ubrwMl9U	2016-08-04T07:30:59Z	2016-08-04 07:30:59	Andrii Soldatenko - What is the best full text search engine for Python?	Andrii Soldatenko - What is the best full text search engine for Python? [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/what-is-the-best-full-text-search-engine-for-python) Compare full text search engines for Python. ----- Nowadays we can see lot’s of benchmarks and performance tests of different web frameworks and Python tools. Regarding to search engines, it’s difficult to find useful information especially benchmarks or comparing between different search engines. It’s difficult to manage what search engine you should select for instance, ElasticSearch, Postgres Full Text Search or may be Sphinx or Whoosh. You face a difficult choice, that’s why I am pleased to share with you my acquired experience and benchmarks and focus on how to compare full text search engines for Python.	28	Science & Technology	PT40M15S	2415	2d	hd	false	https://i.ytimg.com/vi/Dq4ubrwMl9U/maxresdefault.jpg		692	7	0	0	2
620	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	M179-VQ2kxI	2016-08-04T07:30:59Z	2016-08-04 07:30:59	Iwan Vosloo - What's the point of Object Orientation?	Iwan Vosloo - What's the point of Object Orientation? [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/whats-the-point-of-object-orientation) This talk covers the basics of what Object Orientation (OO) is really about. It focusses on the problem OO is aimed at solving and shows where the OO mechanisms of Python fit into this picture. This material can serve as an introduction to OO for beginners, but also as a homing signal for experienced programmers who are doubting whether they are reaping the benefits OO promises. ----- Object Orientation (OO) is often introduced in terms of how it is implemented by a specific language. However, understanding the theory underlying OO is not quite the same as understanding how OO concepts are supported by a particular language. It is insightful to understand the simple OO fundamentals and how these map to the particular implementation provided by Python. In this talk I will first explain the very basics of OO from a language-neutral point of view with the aim of showing what OO can offer you and to give a glimpse of the simple mathematical theory underlying OO. I hope to give you enough information to help you distinguish between better and worse designs and to detect whether you’re using OO as it was intended. I will also very briefly show how these fundamentals map to Python. This talk is for anyone: whether you’re new at Object Orientation, or a practitioner wondering whether OO is worth the effort you’ve spent trying to use it.	28	Science & Technology	PT38M13S	2293	2d	hd	false	https://i.ytimg.com/vi/M179-VQ2kxI/maxresdefault.jpg		309	5	0	0	0
621	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QWskFM3zHNg	2016-08-04T07:30:59Z	2016-08-04 07:30:59	Various speakers - Lightning Talks	Various speakers - Lightning Talks [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] Lightning talks, presented by Harry Percival	28	Science & Technology	PT55M29S	3329	2d	hd	false	https://i.ytimg.com/vi/QWskFM3zHNg/maxresdefault.jpg		185	1	1	0	0
622	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	AQdWIp6rkcI	2016-08-04T07:30:58Z	2016-08-04 07:30:58	Fabio Pliger/Marc-André Lemburg - EuroPython 2017: Help us build the next edition!	Fabio Pliger/Marc-André Lemburg - EuroPython 2017: Help us build the next edition! [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/europython-2017-help-us-build-the-next-edition) We need help with organizing and running EuroPython 2017. In this session, we will explain how the EuroPython workgroup model works and where you could help. ----- We need help with organizing and running EuroPython 2017 In this session, we will explain how the EuroPython workgroup model works and where you could help.	28	Science & Technology	PT30M46S	1846	2d	hd	false	https://i.ytimg.com/vi/AQdWIp6rkcI/maxresdefault.jpg		111	1	1	0	0
623	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Ahnw72diels	2016-08-04T07:30:58Z	2016-08-04 07:30:58	Helen Sherwood-Taylor - Managing Mocks	Helen Sherwood-Taylor - Managing Mocks [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/managing-mocks) Mocking is a valuable technique for writing tests but mocking effectively is often a stumbling block for many developers and can raise questions about its overall value as a technique. There will be a brief introduction to mocking, then a look at features and techniques of Python’s unittest.mock library and cover some useful tips and common scenarios, so this will be useful to those who have some experience mocking but would like to do so more effectively. ----- Mocking is a valuable technique for writing tests but mocking effectively is often a stumbling block for many developers and can raise questions about its overall value as a technique. The audience will have some familiarity with unit testing and may have tried mocking before, but some introduction will be provided for those who haven’t. We will look at some features and techniques of Python’s unittest.mock library and cover some useful tips and common scenarios, so this will be useful to those who have some experience mocking but would like to do so more effectively. Summary of proposed content: 1. A short introduction to what mocking is and why it is useful. 2. Tour of Python’s mock library and how to make the most of it * Creating and manipulating Mock objects * Setting up return values and side effects to control test environment * Inspecting mocks - different ways to examine a mock object and find out what happened during the test * How and where to patch 3. Common mocking situations - scenarios where mocking is particularly useful and/or tricky to get right. For example - date/time, filesystem, read only properties 4. Some discussion of when mocking is and isn't helpful. Focus will be mainly on Python's unittest.mock module but we will also have a brief look at some other useful libraries.	28	Science & Technology	PT25M18S	1518	2d	hd	false	https://i.ytimg.com/vi/Ahnw72diels/maxresdefault.jpg		233	0	0	0	0
624	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Gv8KaK8j2KE	2016-08-04T07:30:58Z	2016-08-04 07:30:58	Miguel Reguero/Rodrigo Núñez - Cybersecurity in the financial sector with Python	Miguel Reguero/Rodrigo Núñez - Cybersecurity in the financial sector with Python [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/ciberseguridad-en-el-sector-financiero-con-python) When people talk about cybersecurity they often think about ethical hacking and exploits, that is but a fraction of what cybersecurity is about, today we are going to talk about another aspect, which is often deemed as not too important.	28	Science & Technology	PT22M21S	1341	2d	hd	false	https://i.ytimg.com/vi/Gv8KaK8j2KE/maxresdefault.jpg		196	1	0	0	0
625	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fEbHimq0Wic	2016-08-04T07:30:58Z	2016-08-04 07:30:58	Fabio Pliger/Marc-André Lemburg - EPS General Assembly	Fabio Pliger/Marc-André Lemburg - EPS General Assembly [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/eps-general-assembly) This is where the EuroPython Society (EPS) board gives its reports, resolutions are passed and the EPS members can vote in a new EPS board.	28	Science & Technology	PT1H7M9S	429	2d	hd	false	https://i.ytimg.com/vi/fEbHimq0Wic/maxresdefault.jpg		53	0	0	0	0
626	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	y8x6-FyF6QE	2016-08-04T07:30:58Z	2016-08-04 07:30:58	Mihai Iachimovschi - Real virtual environments without virtualenv	Mihai Iachimovschi - Real virtual environments without virtualenv [EuroPython 2016] [21 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/real-virtual-environments-without-virtualenv) Virtualenv is a great tool for the development environment but it's definitely not suitable for every use case. Also, Docker is great for running the application in production, but not everyone that use it in production tried to use it in the development environment. Why not use the same tool from the beginning of the project and until it hits the production in a uniform stack of tooling? This talk will show use cases of using Docker in the process of development as well. ----- The process of developing using Python is very straightforward and easy. Still, each and every developer has his own style of developing and building his entire dev environment. Most of us use virtualenvs which are reliable and comfortable to use. But there are some issues. For instance, the repeatability and immutability of the built environment are not guaranteed. Virtualenv does a lot of work that targets the direction of somehow isolated and independent environments. They are *almost* *fully* repeatable. In any team, we can hear the notorious expression "It works for me!". For some time now, I am using Docker instead of virtualenv for building custom and really-virtual environments that are entirely isolated. The containers are immutable and consistent, so this workflow guarantees repeatability. Using such technique, not only enables the user to have unique and immutable environments, it also allows de developer to create full app architecture that can then be tested and deployed as is. So the production version will be in identical conditions as the one from the development environment. These features are not provided by virtualenv at all. The goal of this exercise is to try to use totally different tooling for building the application from its first line of code until the production.	28	Science & Technology	PT22M56S	1376	2d	hd	false	https://i.ytimg.com/vi/y8x6-FyF6QE/maxresdefault.jpg		314	7	0	0	0
627	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5RJRHBBX6LU	2016-08-02T06:58:31Z	2016-08-02 06:58:31	Alessandro Molina - Moving away from NodeJS to a pure python solution for assets	Alessandro Molina - Moving away from NodeJS to a pure python solution for assets [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/moving-away-from-nodejs-to-a-pure-python-solution-for-assets) The talk covers the complexity of managing an asset transformation pipeline through tools like Grunt and NodeJS, especially during deploy, test suites or when a new development environment has to be configured from scratch, and showcase how this complexity can be dodged by using tools like WebAssets and DukPy. No more need to keep around two languages, two package management systems and manage your dependencies between them by youself. Just pip install your app and have it working. ----- When working with WebApplications it is common to rely on an asset management pipeline to compile scripts, minify css or preprocess images. Most of the tools available today rely on JavaScript to perform those steps and always forced Python developers to rely on NodeJS to have grunt perform the pipeline tasks, coffee-script to compile their CoffeeScript or lessc to build their css. This causes longer setup times for projects newcomers, complex development environment, working with two package managers and dependencies that you use once a week but still need to be there. The talk will showcase the DukPy project and focus on how it is possible to build a pure python asset pipeline relying on DukPy to run javascript tools and WebAssets framework to perform the most common tasks that usually Nodejs and tools like Grunt handle for us, greatly reducing the development environment complexity and making its setup as simple as ‘pip install’. The talk aims at explaining the complexity of managing an asset transformation pipeline through tools like Grunt, especially during deploy, test suites or when a new development environment has to be created, and showcase how this complexity can be dodged by using tools like WebAssets and DukPy. No more need to keep around two languages, two package management systems and manage your dependencies between them by youself. Just pip install your app and have it working.	28	Science & Technology	PT32M28S	1948	2d	hd	false	https://i.ytimg.com/vi/5RJRHBBX6LU/maxresdefault.jpg		1215	8	2	0	1
628	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	zFl9RAfbSXE	2016-08-02T06:58:31Z	2016-08-02 06:58:31	Victor Stinner - FAT Python: a new static optimizer for Python 3.6	Victor Stinner - FAT Python: a new static optimizer for Python 3.6 [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/fat-python-a-new-static-optimizer-for-python-36) The Python language is hard to optimize. Let's see how guards checked at runtime allows to implement new optimizations without breaking the Python semantic. ----- (Almost) everything in Python is mutable which makes Python a language very difficult to optimize. Most optimizations rely on assumptions, for example that builtin functions are not replaced. Optimizing Python requires a trigger to disable optimization when an assumption is no more true. FAT Python exactly does that with guards checked at runtime. For example, an optimization relying on the builtin len() function is disabled when the function is replaced. Guards allows to implement various optimizations. Examples: loop unrolling (duplicate the loop body), constant folding (propagates constants), copy builtins to constants, remove unused local variables, etc. FAT Python implements guards and an optimizer rewriting the Abstract Syntax Tree (AST). The optimizer is implemented in Python so it's easy to enhance it and implement new optimizations. FAT Python uses a static optimizer, it is less powerful than a JIT compiler like PyPy with tracing, but it was written to be integrated into CPython. I wrote 3 PEP (509, 510, 511) targeting Python 3.6. Some changes to support FAT Python have already been merged into Python 3.6. We will also see other pending patches to optimize CPython core, and the bytecode project which allows to modify bytecode, it also includes a peephole optimizer written in pure Python. Links: * http://faster-cpython.readthedocs.org/fat_python.html * http://fatoptimizer.readthedocs.org/ * http://bytecode.readthedocs.org/	28	Science & Technology	PT35M52S	2152	2d	hd	false	https://i.ytimg.com/vi/zFl9RAfbSXE/maxresdefault.jpg		2224	18	3	0	2
629	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	S7bsPbJvBzU	2016-08-02T06:58:30Z	2016-08-02 06:58:30	Alexys Jacob - Using Service Discovery to build dynamic python applications	Alexys Jacob - Using Service Discovery to build dynamic python applications [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/service-discovery-for-dynamic-python-applications) Let's compare the usage of three major **service discovery** technologies to build a dynamic and distributed python application ! This talk will be about **consul**, **etcd** and **zookeeper** and their python bindings and will feature code along with a live demo. ----- This talk will **showcase and compare** three Service Discovery technologies and their usage to **build a dynamic and distributed python application** : - consul - etcd - zookeeper After a short introduction to service discovery, we will **iterate and compare** how we can address the concrete and somewhat complex design of our python application using each technology. We'll then be able to discuss their strengths, weaknesses and python bindings and finally showcase the application in a demo. All the source code will of course be made available for the audience to benefit and start from for their own use !	28	Science & Technology	PT33M56S	2036	2d	hd	false	https://i.ytimg.com/vi/S7bsPbJvBzU/maxresdefault.jpg		663	4	0	0	0
630	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qSlwRwFsUOI	2016-08-02T06:58:30Z	2016-08-02 06:58:30	Jameson Rollins - LIGO: The Dawn of Gravitational Wave Astronomy	Jameson Rollins - LIGO: The Dawn of Gravitational Wave Astronomy [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/keynote-ligo) Scientists have been searching for the elusive gravitational wave for more than half a century. Hear how they finally found them, and the role that Python played in the discovery. ----- Scientists have been searching for the elusive gravitational wave for more than half a century. On September 14, 2015, the Laser Interferometer Gravitational-wave Observatory (LIGO) finally observed the gravitational wave signature from the merger of two black holes. This detection marks the dawn of a new age of _gravitational wave astronomy_, where we routinely hear the sounds emanating from deep within the most energetic events in the Universe. This talk will cover the events leading up to one of the most important discoveries of the last century, and the myriad of ways in which Python enabled the effort.	28	Science & Technology	PT56M18S	3378	2d	hd	false	https://i.ytimg.com/vi/qSlwRwFsUOI/maxresdefault.jpg		784	14	0	0	2
631	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vzjTh-OkGQQ	2016-08-02T06:58:30Z	2016-08-02 06:58:30	Various speakers - Lightning Talks	Various speakers - Lightning Talks [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] Lightning talks, presented by Harald Massa and Harry Percival - Christopher Lozinski - blogory.org - David Naranja & Maria Coetero - Random.random() online - Petr Viktorin - PEPs 487 & 520 (*descriptors in 5 min) - Anselm Linsnau - tuxcademy - Great training material - for free! - Miroslav Pojman - PyOO - Control Open Office from Python - Fabio Pliger - Jupyterlab - Plethora - Python meets Industry - Data Challenge - Adam Castle - Ripe Forum - Florian Brühen - Crowdfunding - Charlie Beeson - Running a Coding Cometition - Pavlo Andriychenko - Jupiter Tricks	28	Science & Technology	PT1H2M25S	145	2d	hd	false	https://i.ytimg.com/vi/vzjTh-OkGQQ/maxresdefault.jpg		407	5	0	0	0
632	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UaNt4GD2ebs	2016-08-02T06:58:29Z	2016-08-02 06:58:29	Victor Stinner/Larry Hastings/Christian Heimes/Yury Selivanov - Core Developers' Panel	Victor Stinner/Larry Hastings/Christian Heimes/Yury Selivanov - Core Developers' Panel [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] Q&A session with Python core developers	28	Science & Technology	PT1H1M58S	118	2d	hd	false	https://i.ytimg.com/vi/UaNt4GD2ebs/maxresdefault.jpg		643	4	0	0	0
633	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fgWUwQVoLHo	2016-08-02T06:58:29Z	2016-08-02 06:58:29	Larry Hastings - The Gilectomy	Larry Hastings - The Gilectomy [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/the-gilectomy) CPython's GIL means your Python code can only run on one CPU core at a time. Can we remove it? Yes, we can... in fact we already have! But is it worth the cost? ----- CPython's "Global Interpreter Lock", or "GIL", was added in 1992. It was an excellent design decision. But 24 years is a long time--today it prevents Python from capitalizing on multiple CPUs. Many people want us to remove the GIL. It turns out, removing the GIL isn't actually that hard. In fact, I already removed it, in my experimental "gilectomy" branch. But the GIL is one reason CPython is so fast! The "gilectomy" makes CPython shockingly slow. This talk will discuss the history of the GIL, how the GIL helps make CPython fast, how the "gilectomy" removed the GIL, and some ways we might be able to make the "gilectomy" version fast enough to be useful.	28	Science & Technology	PT45M56S	2756	2d	hd	false	https://i.ytimg.com/vi/fgWUwQVoLHo/maxresdefault.jpg		1462	17	0	0	0
634	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	gN1o7lIOXr4	2016-08-02T06:58:29Z	2016-08-02 06:58:29	Anders Hammarquist - Metaclasses for fun and profit: Making a declarative GUI implementation	Anders Hammarquist - Metaclasses for fun and profit: Making a declarative GUI implementation [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/metaclasses-for-fun-and-profit-making-a-declarative-gui-implementation) When standard Python syntax doesn't cut it, apply metaclasses to make it do what you want. Here I present our metaclass-based implementation of a declarative GUI layout syntax to inspire ideas for what to do when your goals don't fit the Python syntax. ----- When overhauling the user interface of Autolabel's labeling printers, we wanted a clean way to describe the layout of the settings widgets. The structure we came up with was a declarative class layout that leverages Python's metaclass concept to build the underlying GTK widget structure. I will present the implementation to hopefully inspire you to apply metaclass techniques to problems that standard Python syntax can't quite solve. If that fails, you will at least have a way to declaratively construct GTK GUIs. A short, non-exaustive, summary of concepts I will mention includes metaclasses (obviously), class hierarchies, method resolution order, super(), and anecdotes of dealing with GTK. You may find some similarities with my talk on Python as a domain specific language at Europython 2006 http://indico.cern.ch/event/44/session/41/contribution/35 Slides are available at https://www2.openend.se/~iko/ep2016 Example code on Bitbucket https://bitbucket.org/iko/ep2016-declarative-gui/	28	Science & Technology	PT39M35S	2375	2d	hd	false	https://i.ytimg.com/vi/gN1o7lIOXr4/maxresdefault.jpg		553	4	0	0	0
635	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	F7_NWyOmMb8	2016-08-02T06:58:23Z	2016-08-02 06:58:23	Kali Kaneko - Against the silos: usable encrypted email & the quest for privacy-aware services	Kali Kaneko - Against the silos: usable encrypted email & the quest for privacy-aware services [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/against-the-silos-usable-encrypted-email-the-quest-for-privacy-aware-services) At the LEAP Encryption Access Project we aim to make secure communications both easy to use and easy to provide. We bring some tales (and some, hopefully, tools) from the quest for user-friendly crypto software. How to make people love the email experience in the 21st century, without risking their privacy. How to encrypt data locally, sync it to servers that you can lose, and still be sexy. ----- Technologies that allow for privacy in the communications, allowing the escape from the pervasive massive surveillance, have been there for some years now, but yet its use by the general public is far from widespread. The challenge, in our view, can be defined by one of making usable crypto. Usable for the end user, usable for the sysadmin and for the fellow application developer. In the quest for massive adoption of encryption technologies, we've been forging several python packages to solve different problems, always standing in the shoulders of giants. We bring some tales from the trenches to share, from our humble experience trying to deploy clients and servers to provide Secured Encrypted Internet Tunnels and Encrypted Email. This includes interesting challenges dealing with key management, automatic and secure software updates, and processing of email while using stock cloud providers, while still being resistant to hostile environments. We'll show a webmail email user agent based on this architecture, a promising future for decentralization and privacy. We'll also talk about how to store locally encrypted data, and will present Soledad (Synchronization of Locally Encrypted Data Across Devices). Soledad is a library with server and client components that allows the development of different applications based on client-side, end-to-end and cloud-syncable encryption of private data. We'll play with some toy apps to showcase its features and potential.	28	Science & Technology	PT44M56S	2696	2d	hd	false	https://i.ytimg.com/vi/F7_NWyOmMb8/maxresdefault.jpg		167	0	0	0	0
636	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	aFlKpLMrM0c	2016-08-02T06:58:23Z	2016-08-02 06:58:23	Erik Näslund - Building a reasonably popular web application for the first time.	Erik Näslund - Building a reasonably popular web application for the first time. [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/building-a-reasonably-popular-web-application-for-the-first-time) These are the lessons learned when scaling a SaaS web application which grew much faster than any one us could have ever expected. - Log and monitor from day one. - Things will fail, be sure you know when they do. - Choose components which allow language interoperability. - Horizontally scalable everything. - Plan for database downtime. - Have a way to share settings between backend and frontend. - Have a way to enter maintenance mode. - And more... ----- My name is Erik Näslund - I’m the co-founder and Head of Engineering at Hotjar. I'd love to share the lessons learned when scaling a SaaS web application which grew much faster than any one us could have ever expected. Words like “big” and “popular” carry very little meaning, so let me define how big Hotjar is right now using some numbers. We onboard about 500 new users on a daily basis. We process around 250 000 API requests every minute. Our CDN delivers about 10 TB of data per day. We have roughly 3 TB of data in our primary data store (PostgreSQL), another 1 TB in our Elasticsearch cluster, and a LOT more on Amazon S3. These are the key things we wish we knew when we started. They would have made our life so much easier! - Log and monitor from day one. - Have a way to profile your API calls. - Things will fail, be sure you know when they do. - Have a way to keep secrets. - Everything needs a limit (even if it's really big). - Be wary of hitting data type limits. - Don't get too attached to a framework. - Choose components which allow language interoperability. - Horizontally scalable everything. - Plan for database downtime. - Features are a great way to test things out before launching them to the public. - Have a way to share settings between back end and front end. - Have a way to enter maintenance mode. - Require different quality of code for different parts of your application.	28	Science & Technology	PT23M6S	1386	2d	hd	false	https://i.ytimg.com/vi/aFlKpLMrM0c/maxresdefault.jpg		429	13	0	0	3
637	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DhS3QWKsOrw	2016-08-02T06:58:22Z	2016-08-02 06:58:22	Roberto De Ioris - Modern OpenGL with Python	Roberto De Ioris - Modern OpenGL with Python [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/modern-opengl-with-python) The OpenGL api is one of the oldest (and most used) graphics library in both the gaming and simulations world. In latest years the api has been extremely re-designed to support modern hardware features available in GPUs. Can we build realtime graphics application with Python using OpenGL ? Well, obviously Yes ! ----- The talk will introduce how 2D and 3D graphics works, which math is required for mastering them and why strong hardware cooperation and heavy optimizations have been required since the very beginning of gaming development history. Once the theory is "almost" clear, we can start talking about OpenGL, which problems tries to solve and how it evolved in more than 20 years. The last (and the biggest) part of the talk will show how to interface Python with OpenGL, how to draw simple 2D sprites and how to load and show 3D models using simple lighting models. Warning: OpenGL shaders (the custom code you upload in the GPU) are written in GLSL, a pseudo-c dialect, so expect a bit of lower-level programming	28	Science & Technology	PT1H5M16S	316	2d	hd	false	https://i.ytimg.com/vi/DhS3QWKsOrw/maxresdefault.jpg		4382	31	4	0	4
638	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	KBcfWqNCvmA	2016-08-02T06:58:22Z	2016-08-02 06:58:22	Miguel Cabrera - Things I wish I knew before starting using Python for Data Processing	Miguel Cabrera - Things I wish I knew before starting using Python for Data Processing [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/things-i-wish-i-knew-before-starting-using-python-for-data-processing) In recent years one of the ways people get introduced into Python is through its scientific stack. Although this is not bad, it may lead to learn solely one aspect of the language, while overlooking other idioms and functionality included in Python as well as some basic software development good practices. I will share some useful tricks, tools and techniques and software design and development principles that I find beneficial when working on a data processing / science project. ----- In recent years of the ways people get introduced into Python is through its scientific stack. Most people that learned Python this way are not trained software developers and many times it is the first contact with a programming language. Although this is not bad, it may lead to learn solely one aspect of the language while overlooking other idioms, standard and common libraries included in Python as well as some basic software development good practices. This may become a problem when a data science project is moved from an experimentation phase to an integration with technical environment. In this talk I share some useful tricks, tools and techniques and as well as some software design and development principles that I find beneficial when working on a data processing / science project. The talk is divided into two parts, one is Python centered, where I will talk about some powerful Python construct that are useful in data processing tasks. This include some parts collections module, generators and iterators among others. The other I will describe some general software development concepts including SOLID, DRY, and KISS that are important to understand the rationale behind software design decisions.	28	Science & Technology	PT33M18S	1998	2d	hd	false	https://i.ytimg.com/vi/KBcfWqNCvmA/maxresdefault.jpg		499	5	0	0	0
639	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kuMf6lnEumo	2016-08-02T06:58:22Z	2016-08-02 06:58:22	Naomi Ceder - PSF Meeting	Naomi Ceder - PSF Meeting [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/psf-meeting-2016) EuroPython Meeting of the Python Software Foundation Members and non-members are invited to this EuroPython meeting of the PSF! Please join us for some updates from the PSF board.	28	Science & Technology	PT38M52S	2332	2d	hd	false	https://i.ytimg.com/vi/kuMf6lnEumo/maxresdefault.jpg		83	1	0	0	0
640	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pLyf1idJ4Lo	2016-08-02T06:58:22Z	2016-08-02 06:58:22	Andrew Svetlov - Introduction to aiohttp	Andrew Svetlov - Introduction to aiohttp [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/introduction-to-aiohttp) aiohttp is asynchronous HTTP client and server library built on top of asyncio. The intro describes basic programming patterns for both client and server API as well as more advanced techniques. The main target of the talk is displaying an alternative to people who want to avoid classic WSGI frameworks (Django/Flask/Pyramid etc) limitations but found Twisted and Tornado too cumbersome. ----- aiohttp is asynchronous HTTP client and server library built on top of asyncio. The library allows to write user friendly code which looks like well-known linear one (requests library for client and Django/Flask/Pyramid for server) but utilizes the power of non-blocking sockets and supports websockets natively. The intro describes basic programming patterns for both client and server API as well as more advanced techniques. Tips and tricks for writing asyncio-based code are included as well. The main target of the talk is displaying an alternative to people who want to avoid classic WSGI frameworks (Django/Flask/Pyramid etc) limitations but found Twisted and Tornado too cumbersome. Dive into aiohttp usage with the library author.	28	Science & Technology	PT38M8S	2288	2d	hd	false	https://i.ytimg.com/vi/pLyf1idJ4Lo/maxresdefault.jpg		2830	25	10	0	3
641	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	zL6G3nl0IjM	2016-08-02T06:58:22Z	2016-08-02 06:58:22	Sebastian Neubauer - Infrastructure as Code: "pip install" your environment	Sebastian Neubauer - Infrastructure as Code: "pip install" your environment [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/infrastructure-as-code-pip-install-your-environment) In this talk I will show how to build your own infrastructure- as-a-service on the example of "Postgraas", an open source postgres- as-a-service I wrote in python just for fun. With a simple curl request you can get your very own database, just like RDS on AWS. You will learn how easy it is to create such a remarkably useful service with hardly three hundred lines of flask, docker and some glue-code, a project for a rainy Sunday. ----- Continuous Delivery, DevOps, Lean - all those movements have one thing in common: extending the process of software development along the whole value stream, ultimately to the customer. This simple requirement causes surprising serious difficulties on traditional operations workflows. All of a sudden, a single manual ticket to the operations team is a critical blocker in the delivery process. Therefore all parts of the infrastructure, storage, databases, identities, compute resources must be provided as a self service for the developers in order to be able to achieve this goal. What one may call "the cloud" (including self hosted ones like open stack) is such a successful model not least because they offer exactly this "ticket- less" self-service. But why should we wait for "the cloud" to offer what we really need? We are python developers, we are hackers! In this talk I will show how to build your own infrastructure- as-a-service on the example of "Postgraas", an open source postgres- as-a-service I wrote in python just for fun. With a simple curl request you can get your very own database, just like RDS on AWS. You will learn how easy it is to create such a remarkably useful service with hardly three hundred lines of flask, docker and some glue-code, a project for a rainy Sunday. After the talk you will know how to amaze your colleagues by eliminating an annoying ticket or manual workflow with a simple flask app and some creativity.	28	Science & Technology	PT39M38S	2378	2d	hd	false	https://i.ytimg.com/vi/zL6G3nl0IjM/maxresdefault.jpg		293	4	0	0	0
642	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IaexAq-o5Ao	2016-08-02T06:58:21Z	2016-08-02 06:58:21	Alexander Hendorf - Game Theory to the Rescue When Hard Decisions Are to Be Made	Alexander Hendorf - Game Theory to the Rescue When Hard Decisions Are to Be Made [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/game-theory-to-the-rescue-when-hard-decisions-are-to-be-made) Sometimes it's hard to decide when a something is really done or cannot be improved further. **Game theory** can help you to make complicated decisions whenever you encounter flow problems. ----- Game theory is "the study of mathematical models of conflict and cooperation between intelligent rational decision-makers." In our use case we had to match data for accounting: - the data was not always clean but we had some extra tools at hand and a complex system to make good guesses. Nevertheless it was hard to decide when to give up, some records were just not processable. Finally we used Game theory to make the decision. https://en.wikipedia.org/wiki/Game_theory	28	Science & Technology	PT27M29S	1649	2d	hd	false	https://i.ytimg.com/vi/IaexAq-o5Ao/maxresdefault.jpg		1391	12	1	0	0
643	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	VCpTgU1pb5k	2016-08-02T06:58:21Z	2016-08-02 06:58:21	Juan Luis Cano - Per Python ad Astra	Juan Luis Cano - Per Python ad Astra [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/per-python-ad-astra) In the intersection of mechanics, mathematics and "cool stuff that travels through space" lies Astrodynamics, a beautiful branch of physics that studies the motion of spacecraft. In this talk we will describe poliastro, a pure Python library we can use to compute orbital maneuvers, plot trajectories and much more. The role of JIT compiling (using numba) to drop the previously used FORTRAN algorithms will also be discussed, as well as the importance of open source in scientific discoveries. ----- In the intersection of mechanics, mathematics and "cool stuff that travels through space" lies Astrodynamics, a beautiful branch of physics that studies the motion of spacecraft. Rocket launches have never been so popular thanks to companies like Space X, more and more investors pay attention to aerospace startups and amazing missions explore our planet and our Solar System every day. In this talk we will describe poliastro, a pure Python library we can use to compute orbital maneuvers, plot trajectories and much more. The role of JIT compiling (using numba) to drop the previously used FORTRAN algorithms will also be discussed, as well as the importance of open source in scientific discoveries.	28	Science & Technology	PT25M1S	1501	2d	hd	false	https://i.ytimg.com/vi/VCpTgU1pb5k/maxresdefault.jpg		240	8	0	0	0
644	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_RmWNN_-J4g	2016-08-02T06:58:21Z	2016-08-02 06:58:21	Ricardo Bánffy - Lessons Learned after 190 Million Lessons Served	Ricardo Bánffy - Lessons Learned after 190 Million Lessons Served [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/lessons-learned-after-190-million-lessons-served) What we learned along the way - processes, organization, technology and people - from 0 to 11 million students, 40 thousand courses and 20 thousand teachers.	28	Science & Technology	PT28M58S	1738	2d	hd	false	https://i.ytimg.com/vi/_RmWNN_-J4g/maxresdefault.jpg		253	3	2	0	0
645	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	i3AL3OQGJ6A	2016-08-02T06:58:21Z	2016-08-02 06:58:21	Christian Trebing - Get in control of your workflows with Airflow	Christian Trebing - Get in control of your workflows with Airflow [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/get-in-control-of-your-workflows-with-airflow) Airflow (https://github.com/airbnb/airflow) is an open source Python package from Airbnb to control your workflows. This talk will explain the concepts behind Airflow, demonstrating how to define your own workflows in Python code and how to extend the functionality with new task operators and UI blueprints by developing your own plugins. You'll also get to hear about our experiences at Blue Yonder, using this tool in real-world scenarios. ----- Whenever you work with data, sooner or later you stumble across the definition of your workflows. At what point should you process your customer's data? What subsequent steps are necessary? And what went wrong with your data processing last Saturday night? At Blue Yonder we use Airflow (https://github.com/airbnb/airflow), an open source Python package from Airbnb to solve these problems. It can be extended with new functionality by developing plugins in Python, without the need to fork the repo. With Airflow, we define workflows as directed acyclic graphs and get a shiny UI for free. Airflow comes with some task operators which can be used out of the box to complete certain tasks. For more specific cases, tasks can be developed by the end user. Best of all: even the configuration is done completely in Python! This talk will explain the concepts behind Airflow, demonstrating how to define your own workflows in Python code and how to extend the functionality with new task operators and UI blueprints. You'll also get to hear about our experiences using this tool in real-world scenarios.	28	Science & Technology	PT25M47S	1547	2d	hd	false	https://i.ytimg.com/vi/i3AL3OQGJ6A/maxresdefault.jpg		1860	12	0	0	0
646	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	gc9dkktg1gU	2016-08-02T06:58:19Z	2016-08-02 06:58:19	Marko Samastur - Publish your code so others can use it in 5 easy steps	Marko Samastur - Publish your code so others can use it in 5 easy steps [EuroPython 2016] [20 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/publish-your-code-so-others-can-use-it-in-5-easy-steps) As developers we all love well-documented, well-tested packages. If we do the same for our code it is easier for others to re-use our hard work, and maybe even contribute. We will take a quick look on how to do this using popular tools and only a small investment of time. With Github and some simple tools, setting up a well-groomed package doesn't have to be difficult. ----- Every Python open-source developer wants their software to be used. As developers, we trust software that is tested and well-documented. In this talk we'll go through 5 steps for how to do this for your own packages. We will take a quick look on how to do this using popular tools and small investment of time: - Write a setup.py script for a pure Python package - Set up py.test, tox and coverage to test our package with multiple versions of Python - Configure Github to use Travis CI & coveralls.io to automatically test our package every time we commit - Register and publish our package to PyPI - Setup our documentation on ReadTheDocs	28	Science & Technology	PT24M37S	1477	2d	hd	false	https://i.ytimg.com/vi/gc9dkktg1gU/maxresdefault.jpg		283	1	0	0	0
647	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Hcwovymu21o	2016-08-01T15:56:46Z	2016-08-01 15:56:46	Ankit Bahuguna - Query Embeddings: Web Scale Search powered by Deep Learning and Python	Ankit Bahuguna - Query Embeddings: Web Scale Search powered by Deep Learning and Python [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/query-embeddings) Query Embeddings is an unsupervised deep learning based system, built using Python and open source libraries (Annoy, keyvi etc.) which recognizes similarity between queries and their vector representations, for a web scale search engine integrated within Cliqz browser [https://cliqz.com/en]. It improves recall for previously unseen queries and is one of the many key components of our search stack. The framework be utilized by other low latency systems involving vector representations. ----- A web search engine allows a user to type few words of query and it presents list of potential relevant results within fraction of a second. Traditionally, keywords in the user query were fuzzy-matched in realtime with the keywords within different pages of the index and they didn't really focus on understanding meaning of query. Recently, Deep Learning + NLP techniques try to _represent sentences or documents as fixed dimensional vectors in high dimensional space_. These special vectors inherit semantics of the document. Query embeddings is an unsupervised deep learning based system, built using Python, Word2Vec, Annoy and Keyvi (https://github.com/cliqz- oss/keyvi) which recognizes similarity between queries and their vectors for a web scale search engine within Cliqz browser. (https://cliqz.com/en) ![][1] The goal is to describe how query embeddings contribute to our existing python search stack at scale and latency issues prevailing in real time search system. Also is a preview of separate vector index for queries, utilized by retrieval system at runtime via ANNs to get closest queries to user query, which is one of the many key components of our search stack. ![][2] Prerequisites: Basic experience in NLP, ML, Deep Learning, Web search and Vector Algebra. Libraries: Annoy. [1]: https://sites.google.com/site/netankit/1.png [2]: https://sites.google.com/site/netankit/3.png	28	Science & Technology	PT35M15S	2115	2d	hd	false	https://i.ytimg.com/vi/Hcwovymu21o/maxresdefault.jpg		687	6	0	0	1
648	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	uIwl01Nazdg	2016-07-31T07:56:24Z	2016-07-31 07:56:24	Dougal Matthews - Effective Code Review	Dougal Matthews - Effective Code Review [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/effective-code-review) Developers usually state that finding defects is the primary motivation for doing code reviews. However, research has shown that the main benefits of code reviews are; knowledge transfer, team awareness and finding alternative solutions. Code reviews when done well are more than just finding defects; it should be a discussion and conversation with other developers about finding the best solutions. We will talk about re-framing code review to encourage open discussions. ----- This talk is for everyone that is already involved in regular code review and those hoping to start. I will talk through the code review process with the aim of making it a better and more useful experience for both the authors and the reviewers. The talk will follow the following rough outline: - Introduction - Why do code reviews - What are we aiming to get out of it - Submitting code for review - How can you help reviewers? - What should you avoid doing? - Removing ownership of the code - Reviewing code - How should you give feedback? - What should you look for? - How can you encourage people to review more? - How to avoid and remove bike-shedding - Code review tools and how they impact on the process. - Wrap up and conclusion	28	Science & Technology	PT44M18S	2658	2d	hd	false	https://i.ytimg.com/vi/uIwl01Nazdg/maxresdefault.jpg		1854	11	2	0	1
649	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FPQrUuddT0s	2016-07-31T07:56:23Z	2016-07-31 07:56:23	Honza Král - Designing a Pythonic Interface	Honza Král - Designing a Pythonic Interface [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/designing-a-pythonic-interface) When designing an abstraction for a complex system (an ORM-like library in our case) you face a lot of design decisions and challenges. This talk details how we chose to tackle those when designing elasticsearch-dsl. ----- The json query language for elasticsearch, as well as its other APIs, can be very daunting to new users and can be a bit cumbersome when working with python. That is why we created elasticsearch-dsl - a sort of ORM for elasticsearch. We will go through the design philosophy and obstacles found during the development - trying to make a more pythonic interface for elasticsearch while maintaining access to all of the features of the underlying query language. The focus of the talk is more on the library and interface design than on elasticsearch and its query language itself, that is used only to demonstrate the principles.	28	Science & Technology	PT38M48S	2328	2d	hd	false	https://i.ytimg.com/vi/FPQrUuddT0s/maxresdefault.jpg		846	6	0	0	0
650	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TkHT3sLwtkY	2016-07-31T07:56:23Z	2016-07-31 07:56:23	vincent warmerdam - The Joy of Simulation: for Fun and Profit	vincent warmerdam - The Joy of Simulation: for Fun and Profit [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/the-joy-of-simulation-for-fun-and-profit) In this talk discusses some joyful exercises in simulation. I'll demonstrate it's usefulness but moreover I'll discuss the sheer joy. I'll discuss how to generate song lyrics, I'll discuss how to get better at casino games, how to avoid math, how to play monopoly or even how to invest in lego minifigures. No maths required; just a random number generator. ----- In this talk discusses some joyful exercises in simulation. I'll demonstrate it's usefulness but moreover I'll discuss the sheer joy you can experience. I'll go over the following points (the short list): - I'll show how you can avoid math by simulating; I'll calculate the probability that two people in the live room have the same birthday. - I'll show how simulation can help you get better at many games. I'll start with simple card games and with the game of roulette. Most prominently I'll discuss how to determine the value of buying an asset in the game of monopoly (See blogpost: http://koaning.io/monopoly- simulations.html). - I'll demonstrate how you can simulate Red Hot Chilli Pepper lyrics. Or any other band. Or legalese. - I'll demonstrate the results of a scraping exercise which helped me to determine the value of investing in Lego Minifigures (See blogpost: http://koaning.io/lego-minifigs-stochastics-profit.html). Depending on the level of the audience I might also discuss how biased simulation can help you solve optimisation problems or even introduce bayesian statistics via sampling. I'll gladly leave this decision to the EuroPython committee.	28	Science & Technology	PT41M24S	2484	2d	hd	false	https://i.ytimg.com/vi/TkHT3sLwtkY/maxresdefault.jpg		955	19	0	0	0
651	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YjHsOrOOSuI	2016-07-31T07:56:23Z	2016-07-31 07:56:23	Sebastian Witowski - Writing faster Python	Sebastian Witowski - Writing faster Python [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/writing-faster-python) Presentation on how you can write faster Python in your daily work. I will briefly explain ways of profiling the code, discuss different code structures and show how they can be improved. You will see what is the fastest way to remove duplicates from a list, what is faster than a _for_ loop or how “asking for permission” is slower than “begging for forgiveness”. ----- Did you know that Python preallocates integers from -5 to 257 ? Reusing them 1000 times, instead of allocating memory for a bigger integer, can save you a couple of milliseconds of code’s execution time. If you want to learn more about this kind of optimizations then, … well, probably this presentation is not for you :) Instead of going into such small details, I will talk about more _"sane"_ ideas for writing faster code. After a very brief overview of how to optimize Python code (rule 1: don’t do this, rule 2: don’t do this yet, rule 3: ok, but what if I really want to do this ?), I will show simple and fast ways of measuring the execution time and finally, discuss examples of how some code structures could be improved. You will see: - What is the fastest way of removing duplicates from a list - How much faster your code is when you reuse the built-in functions instead of trying to reinvent the wheel - What is faster than the good ol’ _for_ loop - If the lookup is faster in a list or a set (and when it makes sense to use each) - How the “It's better to beg for forgiveness than to ask for permission” rule works in practice I will NOT go into details of _"serious"_ optimization, like using different Python implementation or rewriting critical code in C, etc.	28	Science & Technology	PT24M10S	1450	2d	hd	false	https://i.ytimg.com/vi/YjHsOrOOSuI/maxresdefault.jpg		63439	1212	47	0	39
652	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_OhogXMaKAM	2016-07-31T07:56:23Z	2016-07-31 07:56:23	Mike Müller - Conda - Easier Installs and Simpler Builds	Mike Müller - Conda - Easier Installs and Simpler Builds [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/conda-easier-installs-and-simpler-builds) Learn about `conda`, the package installer from the scientific community. It offers very interesting features that can improve your installation experience considerably. The talk gives an overview of the basic usage of `conda`. It covers the topics installation and building of packages. `conda` can be combined with `pip` to use all PyPi packages. Its cross-platform and multi-languages features combined with power environments can help to improve your productivity. ----- The BSD license `conda` is a package installer for Python and other languages. While it originates form the scientific Python community, it can be really useful for all Python programmers. Installation of Python packages has become much simpler over the last years. The use of `pip` and `virtualenv` simplify the installation of Python packages a lot. However, they are specific to Python. The Python-agnostic `conda` has advantages for packages with C or Fortran extension that are very common for scientific libraries. `conda` is cross-platform. According to different statistics, the most Python users work on Windows. Often is especially complicate to get extensions with many dependencies installer on this platform. `conda` facilities the installation for Windows considerably. This talk introduces the basic usage of `conda` to install packages. This includes the basic commands for searching and installing of packages. Furthermore, the talk demonstrates the creation of environments for different Python versions and combinations of packages. The building of a packages is simple. The talk shows how to build recipes that contain declarations of dependencies . `conda` can work together with `pip`. This allows to use all packages from the Python Package Index ( PyPI). The talk explains the concept of channels that allow to get packages from different sources.	28	Science & Technology	PT32M13S	1933	2d	hd	false	https://i.ytimg.com/vi/_OhogXMaKAM/maxresdefault.jpg		828	6	1	0	0
653	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jOO2LUm8_Ak	2016-07-31T07:56:23Z	2016-07-31 07:56:23	Fabio Pliger - EuroPython 2016 Recruiting Session	Fabio Pliger - Recruiting session [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/recruiting-session) The recruiting sponsors will present their companies and their job offers in short talks.	28	Science & Technology	PT47M21S	2841	2d	hd	false	https://i.ytimg.com/vi/jOO2LUm8_Ak/maxresdefault.jpg		154	1	0	0	0
654	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FASl4pYm6lU	2016-07-31T07:56:22Z	2016-07-31 07:56:22	Ilia Kurenkov - re-Discovering Python's Regular Expressions	Ilia Kurenkov - re-Discovering Python's Regular Expressions [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/rediscovering-pythons-regular-expressions) As Armin Ronacher pointed out in a recent blog post, there is more to Python's regular expression module than meets the eye. His post made me wonder what other “hidden gems” are stashed away in Python’s `re`. In the talk I share what I’ve learned about the inner workings of this extremely popular and heavily used module. ----- Anyone who has used Python to search text for substring patterns has at least heard of the regular expression module. Many of us use it extensively for parsers and lexers, extracting information . And yet we know surprisingly little about its inner workings, as Armin Ronacher demonstrated in his recent blog post, “Python's Hidden Regular Expression Gems”. Inspired by this, I want to dive deeper into Python’s `re` module and share what I find with folks at EuroPython. My goal is that at the end of the day most of us walk away from this talk with a better understanding of this extremely useful module. Here are a few examples of the kinds of things I would like to cover: - A clear presentation of `re`’s overall structure. - What actually happens behind the scenes when you “compile” a regular expression with `re.compile`? - What are the speed implications of using a callable as the replacement argument to `re.sub`? - re.MatchObject interface: `group` vs. `groups` vs `groupdict` To keep the talk entertaining as well as educational I plan to pepper it with whatever interesting and/or funny trivia I find about the module’s history and structure. Prerequisites: If you've ever used the `re` module, you should be fine :)	28	Science & Technology	PT18M51S	1131	2d	hd	false	https://i.ytimg.com/vi/FASl4pYm6lU/maxresdefault.jpg		612	7	0	0	0
655	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	RyrxWqpHRcc	2016-07-31T07:56:22Z	2016-07-31 07:56:22	Theo Crevon - Automate, contribute, repeat.	Theo Crevon - Automate, contribute, repeat. [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/automate-contribute-repeat) At Ableton we love music and we love open-source. Ansible is an amazing tool which allows us to free more time for music by automating boring and repetitive tasks, and to contribute back to the open-source community with ease. Here's an opportunity to share our love for it, our experience with it, and our contributions to it with you. ----- Computers are never as convenient as when they work for us. If you agree with this motto, then Ansible, a deployment and automation tool written in Python, might come in handy. At Ableton, Ansible is involved in every aspect of deployment and automation. From local machine setup, to vm creation and deployment in our self-hosted datacenter, to our services in the immensity of the cloud. Because it is dead simple to use, can deal with any number of hosts in parallel and has robust compatibility with Unix as well as Windows systems, you will probably never have to write a shell script again. Because it is written in Python and exposes a clean, extensible and easy to adapt design and architecture; contributing features to the project and fixing the bugs you might encounter during the journey is extremely easy. At Ableton we love music and we love open-source. Ansible is an amazing tool which allows us to free more time for music by automating boring and repetitive tasks, and to contribute back to the open-source community with ease. Here's an opportunity to share our love for it, our experience with it, and our contributions to it with you. Automate, contribute, repeat.	28	Science & Technology	PT45M20S	2720	2d	hd	false	https://i.ytimg.com/vi/RyrxWqpHRcc/maxresdefault.jpg		273	5	0	0	0
656	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YgC-Eqw47fI	2016-07-31T07:56:22Z	2016-07-31 07:56:22	Zuria Bauer/Daniel Domene López - How to improve your diet and save money with Python	Zuria Bauer/Daniel Domene López - How to improve your diet and save money with Python [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/how-to-improve-your-diet-and-save-money-with-python) Optimization in Python (also known as mathematical programming) can be performed by minimization (or maximization) of an objective function within a model that can include discrete variables subject to a set of constrains. At this talk, chemical engineering students of the University of Alicante will introduce the audience to the possibilities of optimization, presenting Pyomo and showing real world examples such as how to improve your diet and save money at fast food restaurants. ----- Process optimization in industry has become essential in order to maximize the resources available and reduce energy consumption. Optimization problems become interesting when dealing with restrictions (linear or nonlinear) and integer variables (modeling the discrete decisions). Python ecosystem presents different libraries to solve optimization problems, some of them are CVXOpt, CVXPy, PulP, OpenOpt, or Pyomo. Among them, Pyomo results interesting because: - It can be used for Mathematical modeling in Python similarly to AMPL (and GAMS) - It communicates with the main solvers used in this field such as GLPK, Gurobi, CPLEX, CBC and PICO - It's free and open source Python library (BSD license), being developed by Sandia National Laboratories, USA. - It supports Python 3 and it is easy to install. The talk will be divided in three parts: 1. _Introduction to Mathematical Programming/Optimization (15 min):_ visual introduction to optimization concepts including restrictions and non linearties (linear Programming, Nonlinear Programming, ILP, MIP, MINLP). 2. _Introduction to the Pyomo sintax and a quick note for the installation (20 min):_ showing how to improve their diet and save money when ordering food in fast food restaurants. 3. _Optimization problems in engineering (10 min):_ showing more advanced optimization examples that include decision variables.	28	Science & Technology	PT33M13S	1993	2d	hd	false	https://i.ytimg.com/vi/YgC-Eqw47fI/maxresdefault.jpg		421	5	1	0	2
657	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nBcWwMJYCKI	2016-07-31T07:56:22Z	2016-07-31 07:56:22	Various speakers - Lightning Talks	Various speakers - Lightning Talks [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] Lightning talks, presented by Harry Percival	28	Science & Technology	PT1H4M14S	254	2d	hd	false	https://i.ytimg.com/vi/nBcWwMJYCKI/maxresdefault.jpg		302	2	1	0	0
658	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	srx6SvSw2us	2016-07-31T07:56:22Z	2016-07-31 07:56:22	Juan Manuel Santos - Salting things up in the DevOps' World: things just got real	Juan Manuel Santos - Salting things up in the DevOps' World: things just got real [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/salting-things-up-in-the-devops-world-things-just-got-real) SaltStack is a thriving configuration management system written in Python that leverages YAML and Jinja2 which, by now, probably needs no introduction. This talk will explore Salt beyond the minimum required setup, targeting developers/sysadmins already using Salt, and those considering making the switch from other systems but wishing to dive deeper first. Attendees should be familiar with configuration management systems and practices, and comfortable using and reading YAML and Jinja syntax. ----- There is much more to Salt than the basics. This talk will go beyond the minimum required setup and will take a look at Salt under the hood, which will appeal not only to system administrators, but will also be more interesting to developers and to the DevOps community in general as the talk progresses. Topics include: * Introduction and basics review (master/minions, matching, grains, pillar) * Salt Mine * Syndic node * State modules vs. runner modules * The Reactor * The Event System * Salt Beacons * Salt API Attendees should be familiar with configuration management systems and practices, and also feel comfortable using and reading YAML and Jinja syntax. This talk is targeted to developers or sysadmins already using Salt, and to those who are considering switching to it from other systems but wish to dive deeper before making that decision. After the talk, attendees will have a better grasp of the more advanced possibilities that Salt brings, and be ready to apply them to their use cases.	28	Science & Technology	PT42M18S	2538	2d	hd	false	https://i.ytimg.com/vi/srx6SvSw2us/maxresdefault.jpg		257	4	0	0	0
659	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vdS88uyGayM	2016-07-31T07:56:22Z	2016-07-31 07:56:22	Scott Triglia - Protect your users with Circuit Breakers	Scott Triglia - Protect your users with Circuit Breakers [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/protect-your-users-with-circuit-breakers) Failures are the bane of scaling a modern web service and can cause serious pain for end users! Lucky for us, there are techniques that can help protect your product and handle failures in subsystems gracefully. This talk will dive into one of these in depth, the Circuit Breaker pattern, and explore the options it gives us for keeping all our users safe. We will be focusing on several real-world problems and options for how to implement your circuit breaker setup in nice, readable python code. ----- The inevitability of failures is the bane of scaling any modern web service and can cause serious pain for end users! Lucky for us, there are techniques that can help protect your product handle failures in subsystems gracefully. This talk will dive into one of these in depth, the Circuit Breaker pattern, and explore the options it gives us for keeping our users safe. We will be focusing on several real-world problems and how they can be addressed by circuit breakers. You should expect to leave the talk with details on simple circuit breakers as well as understanding how they can be adapted for more complex situations. We’ll also discuss some options for how to implement your circuit breaker in readable python. **Contrived FAQ time!** **I don’t know what Circuit Breakers are, should I come?** Definitely! We’re going to start from scratch and work our way up. Only requirement is basic familiarity with backend services receiving and making HTTP requests. **I totally know what Circuit Breakers are, should I come?** Definitely! After the intro, the main meat of the talk will be working through a series of more advanced situations and talking about how we can alter the basic circuit breaker setup to address them. **I want real-world advice, not made up hypotheticals!** Well that’s not really a question, but you’ll be happy to know that the examples we’ll discuss come straight from my experience at Yelp. They should be very realistic and broadly applicable.	28	Science & Technology	PT27M14S	1634	2d	hd	false	https://i.ytimg.com/vi/vdS88uyGayM/maxresdefault.jpg		2171	24	2	0	0
660	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	EssolXRfAWo	2016-07-31T07:56:21Z	2016-07-31 07:56:21	Alex Willmer - CloudABI: Capability based security on Linux/Unix	Alex Willmer - CloudABI: Capability based security on Linux/Unix [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/capability-based-security-on-unix-with-cloudabi) Take POSIX, add capability-based security, then remove anything that conflicts. The result is CloudABI, available for BSD, Linux, OSX et al. A CloudABI process is incapable of any action that has a global impact It can only affect the file descriptors you provide. As a result even unknown binaries can safely be executed - without the need for containers, virtual machines, or other sandboxes. This talk will introduce CloudABI, how to use it with Python, the benefits, and the trade-offs. ----- [CloudABI](https://nuxi.nl/) is a new POSIX based computing environment that brings [capability-based security](https://en.wikipedia.org/wiki/Capability-based_security) to BSD, Linux, OSX et al. Unlike traditional Unix, if a CloudABI process goes rogue it _cannot_ execute random binaries, or read arbitrary files. This is achieved by removing `open()` & any other API able to acquire global resources. Instead a CloudABI process must be granted _capabilities_ to specific resources (e.g. directories, files, sockets) in the form of file descriptors. If a process only has a descriptor for `/var/www` then it's _incapable_ of affecting any file or folder outside that directory. This talk will - Review the security & reusability problems of Linux & Unix processes - Introduce capability-based security - Summarize the design of CloudABI - its benefits & trade-offs - Demonstrate how to write Python software for CloudABI & run it - Point out the pitfalls & gotchas to be aware of - Discuss the current & future status of CloudABI CloudABI began life on FreeBSD. It also runs DragonFly BSD, NetBSD, PC-BSD, Arch Linux, Debian, Ubuntu, & OS X. The API & ABI are kernel agnostic - a CloudABI binary can run on any supported kernel. The design is evolved from [Capsicum](https://www.cl.cam.ac.uk/research/security/capsicum/), a library that allows processes to drop access to undesired syscalls at runtime. CloudABI applies this at build time to make testing & lock- down easier.	28	Science & Technology	PT36M4S	2164	2d	hd	false	https://i.ytimg.com/vi/EssolXRfAWo/maxresdefault.jpg		450	9	1	0	0
661	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	R0lDKw0FQSI	2016-07-31T07:56:21Z	2016-07-31 07:56:21	Stephane Wirtel - Exploring our Python Interpreter	Stephane Wirtel - Exploring our Python Interpreter [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/exploring-our-python-interpreter) During the last CPython sprints at PyCon US (Montreal), I started to contribute to the CPython project and I wanted to understand the beast. In this case, there is only one solution, trace the code from the beginning. From the command line to the interpreter, we will take part to an adventure. The idea behind is just to show how CPython works for a new contributor. ----- During my last CPython sprint, I started to contribute to the CPython code and I wanted to understand the beast. In this case, there is only one solution, trace the code from the beginning. From the command line to the interpreter, we will take part to an adventure * Overview of the structure of the project and the directories. * From the Py_Main function to the interpreter. * The used technics for the Lexer, Parser and the generation of the AST and of course of the Bytecodes. * We will see some bytecodes with the dis module. * How does VM works, it's a stack machine. * The interpreter and its main loop of the Virtual Machine. The idea behind is just to show how CPython works for a new contributor to CPython. From the command line, we will learn that Python is a library and that we can embed it in a C project. In fact we will see the Py_Main function to the ceval.c file of the interpreter. But there is no magic in the CPython code, we will travel in the lexer and the parser of CPython, and why not, by the AST for one Python expression. After the AST, we will visit the Compiler and the Bytecodes for the interpreter. Of course, we will learn there is the peepholer where some basic instructions are optimised by the this component. And of course, the interpreter, this virtual machine is really interesting for the newbiew, because it's a big stack where the bytecodes are executed one by one on the stack and the ceval.c file.	28	Science & Technology	PT26M29S	1589	2d	hd	false	https://i.ytimg.com/vi/R0lDKw0FQSI/maxresdefault.jpg		404	0	1	0	1
662	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SzPSA_qZfuA	2016-07-31T07:56:21Z	2016-07-31 07:56:21	Daniele Procida - Minds, machines and Python	Daniele Procida - Minds, machines and Python [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/minds-machines-and-python) Are we looking in the wrong direction for artificial intelligence and machine learning? I'll discuss an older but perhaps more satisfying approach, that has been neglected in recent years. It begins with questions in logic and language, and can be explored using easy techniques. I'll use simple Python programs to explore three key notions in this AI research: **loops**, **self-reference** and **tangled hierarchies**, themselves directly reflected in important programming concepts. ----- In recent years, we've seen interesting and spectacular successes in artificial intelligence and machine learning, made possible by leaps in computing power and techniques able to harvest vast quantities of data. The results are uncanny. We see them everywhere, from the personal assistants built into smartphones to the neural networks that do an astounding job of recognising images. However, they're also susceptible to the criticism that they represent not intelligence but a mere simulation of it, and that producing a convincing simulacrum has become more important than a genuine search for intelligence or learning. At the same time, another, perhaps deeper, approach has become neglected in recent decades, along with the questions it asks about the nature of mind, intelligence and learning. This approach begins with fundamental questions in logic and language, and can be explored using some of the simplest programming techniques. In this talk, I'll use simple Python programs to explore three key notions in this strand of artificial intelligence research: *loops*, *self-reference* and *tangled hierarchies*. The way these concepts directly reflect important concepts in programming suggests that for the programmer, this approach could be more interesting and satisfying, and simply more **fun,** than using huge ontologies and big data to create mere simulacra of intelligence. The examples I use will be concrete and easy to understand, even for novice programmers.	28	Science & Technology	PT45M34S	2734	2d	hd	false	https://i.ytimg.com/vi/SzPSA_qZfuA/maxresdefault.jpg		396	3	0	0	1
663	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Txt7JjtCO-U	2016-07-31T07:56:21Z	2016-07-31 07:56:21	Vinicius Pacheco - APIs and Microservices With Go	Vinicius Pacheco - APIs and Microservices With Go [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/apis-and-microservices-with-go) In this talk we show how the Go language helped us get a high performance in a concise and simple API. Everything will be exemplified using the backdrop of a real case of Globo.com: API registrations. We will see how we went from 200 to 19,000 records per second to the impacts of this rapid growth and the consequences of Go of use. We also show how our microservices architecture was used in the project. ----- This talk is about Go, software architecture and parallelism. How we went from legacy, complex and slow software to new, speed, resilient and maintainable software. I'll start the talk showing the problemas and the challenges that my team had received. After that, I'll show the tests, tests of performance and the options that we did considering technologies and strategies of development. The difficulties and problems also will be show. Also I talk about: - Goroutines - Resilient patterns - Go tools - Architecture - Web performance How we leave of the Java ecosystem to new free ecosystem with microservices and how Go help us.	28	Science & Technology	PT45M51S	2751	2d	hd	false	https://i.ytimg.com/vi/Txt7JjtCO-U/maxresdefault.jpg		372	2	1	0	0
664	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	W5wN7pf2iLo	2016-07-31T07:56:21Z	2016-07-31 07:56:21	Radomir Dopieralski - Making robots walk with Python	Radomir Dopieralski - Making robots walk with Python [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/making-robots-walk-with-python) You will see several different walking robots controlled with Python in different ways, and learn how they were built and programmed. ----- Making a robot walk is not easy, especially when all it has for brains is a small microcontroller which you have to program in C. During this talk you will see different ways in which such a robot can be controlled in Python, either by using remote control, with the Python program running on a stationary computer, by putting a small computer, such as a Raspberry Pi on it, or by programming it with Micropython, a version of the Python language designed for microcontrollers. I will also explain the basic problems with walking robots and how Python can be used to overcome them. Finally, I will show some of the robots I have built.	28	Science & Technology	PT28M42S	1722	2d	hd	false	https://i.ytimg.com/vi/W5wN7pf2iLo/maxresdefault.jpg		472	7	1	0	1
665	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pi49aiLBas8	2016-07-31T07:56:21Z	2016-07-31 07:56:21	Yury Selivanov - High Performance Networking in Python	Yury Selivanov - High Performance Networking in Python [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/high-performance-networking-in-python) The talk will cover new async/await syntax in Python, asyncio library and ecosystem around it, and ways to use them for creating high performance servers. It will explain how to build custom event loops for asyncio, with an example of using the libuv library with Cython to achieve 2-3x performance boost over vanilla asyncio. ----- The talk will start with an overview of async/await syntax introduced with PEP 492 in Python 3.5. We'll go through asynchronous context managers and iteration protocols it introduces. I'll briefly explain how the feature is implemented in CPython core. Then we'll explore asyncio design. I'll briefly cover event loop, policies, transports, protocols and streams abstractions. I'll explain that event loops are pluggable, which really makes asyncio a universal framework. We'll cover libuv - a high performance networking library that drives NodeJS. I'll highlight where it's similar to asyncio and how it's different. In the final part of the talk I'll explain how to make an asyncio compatible event loop on top of libuv. I'll showcase Cython, which is an amazing tool for tasks like this. Finally, I'll share some ideas on how we can further improve the performance of asyncio and networking in Python, and what are the challenges that we will face. **Objectives:** 1. Deeper understanding of async/await in Python and why it's important. 2. Deeper understanding of asyncio architecture and protocols. 3. How to improve asyncio performance by implementing custom event loops. 4. Show that it's easy to integrate existing complex & low level libraries with Cython. 5. Some perspective on how Python may evolve wrt networking.	28	Science & Technology	PT35M51S	2151	2d	hd	false	https://i.ytimg.com/vi/pi49aiLBas8/maxresdefault.jpg		1229	24	0	0	0
666	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yqg4tEjzO9M	2016-07-31T07:56:21Z	2016-07-31 07:56:21	Shahriar Tajbakhsh - Go for Python Programmers	Shahriar Tajbakhsh - Go for Python Programmers [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/go-for-python-programmers) A side-by-side walkthrough of basic Go history, syntax, semantics and tools compared to Python. ----- There's been quite a bit of hype around Go for some time. In particular within the Python community, we've seen some engineers moving their stack from Python to Go or starting their new project in Go. This talk is **not** about whether you should move from Python to Go. Instead, this talk is for those who've been hearing all about all the hype but haven't yet had a chance to take a proper look at Go. We'll first _very_ briefly look at Go and Python's history. Then we'll go through a high-level side-by-side walkthrough of basic Go syntax and semantics compared to Python. Finally, we'll have a brief look at a subset of the ecosystem and tools available to Go and Python programmers for certain tasks such as testing, code formatting, documentation generation etc. By the end, you will not be a Go programmer but you'll have a high- level feel for how the Go language operates.	28	Science & Technology	PT30M50S	1850	2d	hd	false	https://i.ytimg.com/vi/yqg4tEjzO9M/maxresdefault.jpg		428	4	0	0	1
667	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nIoE3KJxK6U	2016-07-31T07:56:20Z	2016-07-31 07:56:20	Marc-André Lemburg - So you think your Python startup is worth $10 million...	Marc-André Lemburg - So you think your Python startup is worth $10 million... [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/so-you-think-your-startup-is-worth-10-million) This talk is based on a recent consulting project the speaker ran to support the valuation of a Python startup company in the due diligence phase. By following some of the advice from this talk, you should be possible to improve the valuation of your Python startup or consulting business in preparation for investment rounds or an acquisition. ----- This talk is based on the speaker's experience running a Python focused software company for more than 15 years and a recent consulting project to support the valuation of a Python startup company in the due diligence phase. For the valuation we had to come up with metrics, a catalog of criteria analyzing risks, potential and benefits of the startup's solution, as well as an estimate for how much effort it would take to reimplement the solution from scratch. In the talk, I am going to show the metrics we used, how they can be applied to Python code, the importance of addressing risk factors, well designed code and data(base) structures. By following some of the advice from this talk, you should be able to improve the valuation of your startup or consulting business in preparation for investment rounds or an acquisition.	28	Science & Technology	PT30M18S	1818	2d	hd	false	https://i.ytimg.com/vi/nIoE3KJxK6U/maxresdefault.jpg		251	1	0	0	0
668	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jAZ-NyAwpsg	2016-07-31T07:56:18Z	2016-07-31 07:56:18	Facundo Batista - Entendiendo Unicode	Facundo Batista - Entendiendo Unicode [EuroPython 2016] [19 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/entendiendo-unicode) Charla que explica qué es Unicode y otros conceptos relacionados para poder usar esta tecnología ----- La charla muestra de forma teórica/práctica qué son Unicode, las planillas de códigos, los caracteres, y las codificaciones, entra en detalle en las distintas codificaciones, para saber cómo usarlas, ejemplifica las reglas de oro para utilizar Unicode en nuestros programa, y termina mostrando algunas funciones útiles para el manejo de esa tecnología.	28	Science & Technology	PT31M43S	1903	2d	hd	false	https://i.ytimg.com/vi/jAZ-NyAwpsg/maxresdefault.jpg		824	24	0	0	3
669	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LJ2zRHociVw	2016-07-28T21:42:03Z	2016-07-28 21:42:03	Various speakers - Lightning Talks	Various speakers - Lightning Talks [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] Lightning talks, presented by Harald Massa - Larry Hastings - My life as a MEME - Javier Domingo - Python exp! - Danielle Procida - Python Adventures in Namibia - Radomes Dopiralski - Win Fabulous Prizes - Thomas Waldmann - Borg Backup - Lasse Schuirmann - Cola - Lint and Fix All Code - Tuna Vargi - argüman.org - Harry Percival & Fabian Kreutz - Sponsored Massage Training, in Aid of The Python Software Foundation - Michele Simionato - Thanks for the Python3 Statement	28	Science & Technology	PT55M14S	3314	2d	hd	false	https://i.ytimg.com/vi/LJ2zRHociVw/maxresdefault.jpg		433	3	1	0	0
670	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-hk6nEQEMLs	2016-07-28T21:14:59Z	2016-07-28 21:14:59	Stefan Behnel - Fast Async Code with Cython and AsyncIO	Stefan Behnel - Fast Async Code with Cython and AsyncIO [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/fast-async-code-with-cython-and-asyncio) Learn how to use the new async/await language feature to write asynchronous code in Python and [Cython][1]. See how to benefit from the excellent low-level features that Cython provides to speed up or parallelise your code, interface natively with external C/C++ code, and achieve better responsiveness and lower latency also in mostly I/O bound applications. [1]: http://cython.org/ ----- Python has recently seen a fresh development boost around asynchronous applications, triggered by the addition of the asyncio library and the new async/await language features in Python 3.5, but coming from a world of well established tools like [Twisted][2] and [Tornado][3]. The [Cython][1] compiler, which compiles Python code to C, has accompanied and influenced this development. It provides full language support for async/await under all Python versions starting from 2.6, as well as native interoperability with existing Python code and the new Python coroutines in Python 3.5. Benchmarks show that, while fully compatible, Cython compiled coroutines perform about 2-3x better than the same code executed in Python, but they additionally allow to interface natively with external C/C++ code, release the GIL, do parallel computation, and much more. All of this extends the applicable zone for asynchronous applications dramatically and can lead to better responsiveness and lower latency also for mostly I/O bound applications. This joined talk by an async I/O expert and one of the Cython core developers explains how to write code with async/await in Python and Cython, and shows how to benefit from the excellent low-level features that Cython provides on top of Python. [1]: http://cython.org/ [2]: https://twistedmatrix.com/ [3]: http://www.tornadoweb.org/	28	Science & Technology	PT42M24S	2544	2d	hd	false	https://i.ytimg.com/vi/-hk6nEQEMLs/maxresdefault.jpg		2718	23	1	0	1
671	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	mnWdB99K-mA	2016-07-28T21:14:58Z	2016-07-28 21:14:58	Facundo Batista - It's not magic: descriptors exposed	Facundo Batista - It's not magic: descriptors exposed [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/its-not-magic-descriptors-exposed) This talk shows the Python Descriptors, detailing their behaviour with a detailed practical example, so we can understand the power and flexibility they give. As a bonus track, class decorators are explained. ----- This talk presents, using a detailed practical example, the Python Descriptos. The behaviour of descriptors mechanisms is detailed, showing their power and flexibility. Finally, as a bonus track and to complete the used practical example, class descriptors are explained.	28	Science & Technology	PT38M42S	2322	2d	hd	false	https://i.ytimg.com/vi/mnWdB99K-mA/maxresdefault.jpg		554	5	0	0	1
672	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qKdxOdT4c1U	2016-07-28T21:14:57Z	2016-07-28 21:14:57	Manuel Miranda - Where is the bottleneck?	Manuel Miranda - Where is the bottleneck? [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/where-is-the-bottleneck) We all know Python strength does not rely on its performance and speed when running programs. This plus the flexibility of it, can lead to build real slow and bad quality software. In this talk you will discover a set of useful tools for diagnosing where the bottleneck is in your programs along with trips for quickly realizing which is the most needed resource. ----- Have you ever felt like your software is eating your resources and you have no clue why? Have you reviewed all the lines, debugged and printed everything but you still don't know what's wrong? In this talk I will conduct a fast intro of a basic set of tools you can use to diagnose your software's performance and then we will go through a simple piece of code to show how those tools work and what you can expect from them This set of tools will include basic ones given by the OS itself like `htop`, `lsof`, `ps` and more advanced ones that let you plot the memory usage for given functions like `memory_profiler`, check CPU usage and the call graph between functions like `cprofile` and `kcachegrind` and others. By the end of the talk, you should have an idea of which are the most typical causes that can make your program slow and you will have a list of tools to search for and identify the source of the problems.	28	Science & Technology	PT38M49S	2329	2d	hd	false	https://i.ytimg.com/vi/qKdxOdT4c1U/maxresdefault.jpg		369	1	0	0	0
673	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DSXkazo_Tn4	2016-07-28T21:14:56Z	2016-07-28 21:14:56	Maciej Dziergwa - The Journey from Python Developer to Python Company Owner	Maciej Dziergwa - The Journey from Python Developer to Python Company Owner [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/the-journey-from-python-developer-to-python-company-owner) I would like to indicate main keys to success, factors and features that help a developer to find himself on an independent career path. How to create employee-friendly work environment for Python developers? Which business model gives a chance to attract and keep more than 100 Python enthusiast? I will also gladly share some lessons learned working with dozens of clients, dozens of Python frameworks, and lots, lots of great developers. ----- Ten years ago I became a big Python fan, but at the time there were no jobs for Python developers in Poland. So, I decided to start my own Python company. Today, ten years later, this company employs more than 100 Python Developers in four cities. There are a lot of Python enthusiasts in the world, many of them more skilled than I was at that time, but clearly not anyone can become a „Python Business Developer”. In this talk I would like to indicate main keys to success, factors and features that help a developer to find himself on an independent career path. My goal is to answear these questions: How to create employee-friendly work environment for Python developers? Which business model gives a chance to attract and keep more than 100 Python enthusiast? I will also gladly share some lessons learned while working with dozens of clients, dozens of Python frameworks, and lots, lots of great developers.	28	Science & Technology	PT37M33S	2253	2d	hd	false	https://i.ytimg.com/vi/DSXkazo_Tn4/maxresdefault.jpg		720	10	3	0	0
674	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iCrOGS1QlB8	2016-07-28T21:14:56Z	2016-07-28 21:14:56	Víctor Terrón - Kung Fu at Dawn with Itertools	Víctor Terrón - Kung Fu at Dawn with Itertools [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/kung-fu-at-dawn-with-itertools) The itertools module is one of the cornerstones of advanced programming in Python. This talk offers practical advice about iterator algebra that can be put into practice immediately. Discovering the itertools module means taking the veil from our eyes, and once we use functions such as repeat(), takewhile(), dropwhile() or product(), there is no return — it is impossible to come back to the world of the mere mortals, where solutions are more complex and need more memory. ----- The itertools module is one of the cornerstones of advanced programming in Python. Part of the standard library, it provides an iterator algebra that allows us to elegantly chain abstractions, enabling solutions that are both simpler and more memory efficient. The goal of this talk is to offer practical advice and clear lessons that can be immediately put into practice. Illustrating it with numerous examples, attendees will leave having assimilated at least several concepts that will improve their code undeniably and irremediably. Emphasis will be on showing specific cases where a traditional solution can be overhauled over and over with functions from the itertools module. Let’s say, for example, that we want to alternate indefinitely between two values: -1 and 1. The novice would use a variable, updating its value at each step, and the average user would maybe opt for an endless generator. Both are worthy and honorable solutions, but they pale before the mastery of the martial artist who only needs itertools.cycle(). Because that is the nature of the itertools module: once the veil falls from our eyes and we come across functions such as repeat(), takewhile(), dropwhile() or product(), there is no return. In this talk we will learn to identify when they can be used, accomplishing with a single line of code what for the mere mortals takes much more effort.	28	Science & Technology	PT43M28S	2608	2d	hd	false	https://i.ytimg.com/vi/iCrOGS1QlB8/maxresdefault.jpg		1037	6	2	0	5
675	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jJGJy0MUvZw	2016-07-28T21:14:55Z	2016-07-28 21:14:55	David Charles - Managing Kubernetes from Python using Kube	David Charles - Managing Kubernetes from Python using Kube [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/managing-kubernetes-from-python-using-kube) Kubernetes is the Google Borg inspired control plane for Docker containers. It has a great API but needs a load of HTTP client code and JSON processing to use it from Python. This talk introduces Kube, a Python wrapper around the Kubernetes API that enables you to manage your Kubernetes cluster in a pythonic way while avoiding any Kubernetes API peculiarities. Programmers and operations folk who are interested in interacting with the Kubernetes API using Python. ----- ## Abstract Docker has had a transformative influence on the way we deploy software and Kubernetes, the Google Borg inspired control plane for Docker-container- hosting-clusters, is gaining similar momentum. Being able to easily interact with this technology from Python will become an increasingly important capability in many organisations. I'll discuss what the motivations behind writing Kube. We'll dive into Kube using the Python interactive interpreter, getting connected to the API, and simple viewing and label update operations. Finally I'll discuss more advanced resource management activities like Kube's 'watch' API capability. ## Objectives Attendees will learn about the key concepts in getting resource information out of their Kubernetes cluster using Kube. ## Outline 1. Setting the scene (3 minutes) 1. Other Python kubernetes wrappers (2 minutes) 1. Kubernetes concepts quick recap (5 minutes) 1. Dive into Kube in the Python interactive interpreter (10 minutes) * Outline prerequisites * The entry point - a Cluster instance * Views and Items - two important Kube concepts * Item meta data: labels and versions 1. More Kube features (5 minutes) * Creating and deleting resources * Using Kube's Watch API support * The cluster proxy attribute for when you need to get at the actual API. 1. Q&A (5 minutes)	28	Science & Technology	PT28M41S	1721	2d	hd	false	https://i.ytimg.com/vi/jJGJy0MUvZw/maxresdefault.jpg		713	1	0	0	0
676	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	unFMJlKGh98	2016-07-28T21:14:54Z	2016-07-28 21:14:54	Noah Kantrowitz - Behind Closed Doors: Managing Passwords in a Dangerous World	Noah Kantrowitz - Behind Closed Doors: Managing Passwords in a Dangerous World [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/behind-closed-doors-managing-passwords-in-a-dangerous-world) A modern application has a lot of passwords and keys floating around. Encryptions keys, database passwords, and API credentials; often typed in to text files and forgotten. Fortunately a new wave of tools are emerging to help manage, update, and audit these secrets. Come learn how to avoid being the next TechCrunch headline. ----- Secrets come in many forms, passwords, keys, tokens. All crucial for the operation of an application, but each dangerous in its own way. In the past, many of us have pasted those secrets in to a text file and moved on, but in a world of config automation and ephemeral microservices these patterns are leaving our data at greater risk than ever before. New tools, products, and libraries are being released all the time to try to cope with this massive rise in threats, both new and old-but- ignored. This talk will cover the major types of secrets in a normal web application, how to model their security properties, what tools are best for each situation, and how to use them with major web frameworks.	28	Science & Technology	PT27M42S	1662	2d	hd	false	https://i.ytimg.com/vi/unFMJlKGh98/maxresdefault.jpg		382	6	0	0	0
677	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	zZPGRV5Kw70	2016-07-28T21:14:54Z	2016-07-28 21:14:54	Alain Martin - Python as the keystone of building and testing C++ applications	Alain Martin - Python as the keystone of building and testing C++ applications [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/python-as-the-keystone-of-building-and-testing-c-applications) This talk explains how Ableton’s developers use Python to build and test C, C++ and Objective-C code. Our "build-system" is a collection of Python scripts that simplify our workflows, and help us write better software. The top-level scripts share a common design which makes them easy to use, maintain and extend. This talk describes the essence of that design, so you can apply it to your own project. ----- At Ableton, we make [Live][1], [Push][2] and [Link][3], unique software and hardware for music creation and performance. Live is a C++ desktop application built from a 15-year old code base. Push is an instrument embedding a multicolor display which renders a [Qt Quick][4] scene powered by [Qt][5]. Link is a technology that keeps music devices in time and is available to app developers as [LinkKit][6], an iOS SDK. "But what does all that have to do with Python?", you might ask. This talk answers that question by explaining how our developers use Python to build and test C, C++ and Objective-C source code. Based on [GYP][7], what we call "build-system" is a collection of Python scripts that simplify our workflows, and help us write better software. The three top-level scripts, "configure.py", "build.py" and "run.py", share a common design which makes them easy to use by developers, as well as easy to maintain and extend. This talk describes the essence of that design, so you can apply it to your own project. [1]: https://www.ableton.com/live/ [2]: https://www.ableton.com/push/ [3]: https://www.ableton.com/link/ [4]: https://www.qt.io/qt-quick/ [5]: http://www.qt.io/ [6]: https://ableton.github.io/linkkit/ [7]: https://gyp.gsrc.io/	28	Science & Technology	PT33M21S	2001	2d	hd	false	https://i.ytimg.com/vi/zZPGRV5Kw70/maxresdefault.jpg		783	9	1	0	0
678	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LZ7THTB88AE	2016-07-28T21:14:53Z	2016-07-28 21:14:53	Cameron Macleod - Implementing a Sound Identifier in Python	Cameron Macleod - Implementing a Sound Identifier in Python [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/implementing-a-sound-identifier-in-python) The talk will go over implementing a Shazam-style sound recogniser using DSP techniques and some fantastic libraries. It will cover implementation, challenges and further steps. The project is still a work in progress and the code is [available on GitHub][1]. It was inspired by the [Over-the-Air Audio Identification talk][2] at FOSDEM 2016. [1]: https://github.com/notexactlyawe/abracadabra [2]: https://fosdem.org/2016/schedule/event/audio_identification/ ----- The talk will go over the journey of implementing a Shazam-style sound recogniser using DSP techniques and some fantastic libraries. It will cover implementation, challenges and further steps. The project is still a work in progress at the time of proposal and the code is [available on GitHub][1]. It was inspired by the [Over-the-Air Audio Identification talk][2] at FOSDEM 2016. The basic structure of the project consists a classifier that fingerprints audio and stores it in a searchable form and a recogniser that fingerprints a smaller chunk of audio and then searches the stored records to find the most suitable fit for it. The recogniser will be exposed as an API to allow for different front-ends. I will aim to introduce both the field of DSP and concepts behind applications like Shazam in a simple easy-to-understand manner. The audience will not need any prior experience in anything except Python. [1]: https://github.com/notexactlyawe/abracadabra [2]: https://fosdem.org/2016/schedule/event/audio_identification/	28	Science & Technology	PT21M54S	1314	2d	hd	false	https://i.ytimg.com/vi/LZ7THTB88AE/maxresdefault.jpg		5480	69	2	0	1
679	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2raXkX0Wi2w	2016-07-28T20:48:15Z	2016-07-28 20:48:15	Burkhard Kloss - Performant Python	Burkhard Kloss - Performant Python [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/performant-python) Python is a great language. Easy to learn, friendly to use, widely used. It is not, however, renowned for being fast. In a lot of situations that does not matter. Sometimes it really does. This talk will introduce you to some tools and techniques for making sure your Python code becomes fast enough – without turning into a maintenance nightmare. Warning: may contain small bits of other languages. ----- Python is a great language. Easy to learn, friendly to use, widely used. It is not, however, renowned for being fast. In a lot of situations that does not matter. Sometimes it really does. This talk will introduce you to some tools and techniques for making sure your Python code becomes fast enough – without turning into a maintenance nightmare. Fast code does not have to be unreadable - and when you're writing Python, it really pays of to think "pythonically". That does mean using the included batteries, and utilising the ecosystem of tools around the language, too. Warning: may contain small bits of other languages.	28	Science & Technology	PT25M19S	1519	2d	hd	false	https://i.ytimg.com/vi/2raXkX0Wi2w/maxresdefault.jpg		520	3	3	0	1
680	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZNx6UIdLDLk	2016-07-28T20:48:15Z	2016-07-28 20:48:15	Rachel Willmer - 20 years without a 'proper job'	Rachel Willmer - 20 years without a 'proper job' [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/keynote-20-years-without-a-proper-job) Have you ever wondered how you could be your own boss? or how you could make money from your side project? or build the next Facebook or Uber. To be a coder in today's world of work is to have amazing opportunities to design the business life you want. I've enjoyed the last 20 years without a 'real job', as company founder, freelancer and side-project-hacker. Now I am bootstrapping my current company to profitability. Listen to my stories and learn from my mistakes and successes. ----- Have you ever wondered how you could be your own boss? If so, then this talk is for you. Maybe you're working on a sideproject and wonder how you could make some money from it? Or maybe you have the idea for the next Facebook or Uber? To be a coder in today's world of work is to have amazing opportunities to design the business life you want. You can work remotely; you can write books, or teach, or consult, with anyone anywhere. You can have a crazy idea on Friday and have it running by Monday. Design your architecture to use cloud computing, so your tiny team can scale up your huge ideas. Or keep it small, and just earn some extra money with a Wordpress plugin, or a training course. It has been 21 years since I last had a 'real job' and a regular income. I survived creating and running a company through the madness of the dotcom years. I made money from sideprojects, that I had started just for fun and for learning. I have freelanced without needing to use an agency to find the work. And now I'm bootstrapping my current business to profitability. Listen to my stories and learn from my mistakes and successes.	28	Science & Technology	PT37M18S	2238	2d	hd	false	https://i.ytimg.com/vi/ZNx6UIdLDLk/maxresdefault.jpg		603	9	0	0	0
681	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Pzs-c-B3RiM	2016-07-28T20:36:30Z	2016-07-28 20:36:30	Daniel Pope - Pygame Zero	Daniel Pope - Pygame Zero [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/pygame-zero) Pygame Zero is a new game engine for education, built on top of Pygame. It makes writing your first games extremely simple, while saving beginners from certain potential pitfalls. Daniel will introduce Pygame Zero, walk through creating a simple game, and discuss the background for Python in education and the design philosophy behind Pygame Zero. ----- Pygame Zero is a new game engine for education, built on top of Pygame. It makes writing your first games extremely simple, while saving beginners from certain potential pitfalls. This talk will introduce Pygame Zero, walk through creating a simple game, and discuss the background for Python in education and the design philosophy behind Pygame Zero. Pygame is a powerful set of libraries for graphics, sound, input and more. But it is just a library: each program needs to import and set up the libraries, implement a game loop and load resources among numerous other concerns. While seasoned Pythonistas have no trouble with this, teachers told us that they found it difficult to teach with Pygame. There is simply too much boilerplate involved, and getting students to reproduce the boilerplate perfectly before useful lessons can begin takes too much time out of a 40-minute lesson. Pygame Zero is simple enough that a lesson can be broken down into bitesize steps where meaningful progress can be made with just a couple of lines of code at a time.	28	Science & Technology	PT23M59S	1439	2d	hd	false	https://i.ytimg.com/vi/Pzs-c-B3RiM/maxresdefault.jpg		1543	13	1	0	0
682	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_KkPcHKbE4I	2016-07-28T20:36:29Z	2016-07-28 20:36:29	Liana Bakradze - Learn Python The Fun Way	Liana Bakradze - Learn Python The Fun Way [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/learn-python-the-fun-way) Programming is one of the most important 21st-century skills and tons of different online and offline resources can help you to master it. On the other hand, playing games is really effective way for us to learn and it's also the most fun. But is it possible to learn real programming language like Python by playing a game? In this talk I'll show you some projects that allow you to achieve that. I also want to inspire you to help such projects and to suggest ideas how to do that. ----- Programming is one of the most important 21st-century skills. It doesn't only provide promising career opportunities but teaches how to reason logically, systematically and creatively. Code readability, rich standard library, straightforward syntax and other features make Python a great language for teaching beginners how to program. Python community is very supportive and friendly to newcomers and does awesome work to make Python available to everyone. Tons of different online and offline resources can help you to master Python programming. Problem solving is the classical way of learning how to code. But it can be boring for some people, especially for kids. On the other hand, playing games is really effective way for us to learn and it's also the most fun. You can find different games designed to teach basics of programming, but most of them use special visual environments and don't teach real text based languages. But is it possible to learn programming language like Python by playing a game? In this talk I'll show you a few projects for different age and levels that allow you to achieve that. I'll pay attention on methods that are used to teach programming. I also want to inspire you to help such projects and to suggest ideas how to do that.	28	Science & Technology	PT18M5S	1085	2d	hd	false	https://i.ytimg.com/vi/_KkPcHKbE4I/maxresdefault.jpg		955	8	0	0	0
683	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ttNzc_dBJ60	2016-07-28T20:36:29Z	2016-07-28 20:36:29	Fabio Pliger/Endor - Welcome to EuroPython 2016	Fabio Pliger/Endor - Welcome [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] Welcome to EuroPython 2016	28	Science & Technology	PT26M51S	1611	2d	hd	false	https://i.ytimg.com/vi/ttNzc_dBJ60/maxresdefault.jpg		3127	3	2	0	0
684	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Z-aiV0pkt_8	2016-07-28T20:10:50Z	2016-07-28 20:10:50	Rafael Monnerat - Hyperconvergence meets BigData	Rafael Monnerat - Hyperconvergence meets BigData [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/hyperconvergence-meets-bigdata) This presentation show how to deploy **[Wendelin][1]**, the free software platform for Big Data & Machine Learning, using **[SlapOS][2]** , the free software hyperconverged Operating System (hOS). Written in 100% in Python, SlapOS and Wendelin, can create a complete Big Data Infraestruture with out-of-core capabilities ready to use and operate in just few hours. [1]: http://www.wedelin.io [2]: http://community.slapos.org ----- This presentation aims to demonstrate how to use [SlapOS][1] (Hyperconverged OS) to deploy an entire Big Data Infrastrucure and show how "data life cycle" can be managed with [Wendelin][2] - covering ingestion, analysis, visualization and weaving it into an application. We'll show how Wendelin and SlapOS could handle acquisition, analysis and exploitation of data, making it a potential solution for IOT scenarios where data is available and needs some logic applied before being presented as web application, possibly on a commercial basis. The agenda of the presentation includes an introduction on SlapOS, as a tool used to deploy a wide range of different services and an introduction of Wendelin, as a tool in order to make out-of-core python applications. After a short introduction, we progress to show the steps to deploy SlapOS infrastructure and later to deploy Wendelin on the just deployed SlapOS, including an use case which shows SlapOS deploying a fluentd instance to ingest data to the Wendelin Database. To conclude, we make a live demo with an Jupiter using out-of-core python to handle wav files stored on Wendelin, and a second short demo on handle computer resources consumption data. [1]: http://community.slapos.org [2]: http://www.wendelin.io/	28	Science & Technology	PT43M19S	2599	2d	hd	false	https://i.ytimg.com/vi/Z-aiV0pkt_8/maxresdefault.jpg		207	0	0	0	0
685	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5evBTvBO12U	2016-07-28T20:10:49Z	2016-07-28 20:10:49	Antonio Spadaro - Build and control a Python-powered robot.	Antonio Spadaro - Build and control a Python-powered robot. [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/build-and-control-a-python-powered-robot) During this talk you will see how to make a robot able to recognize people with a Raspberry Pi as main board and Python as language. The talk will cover the hardware and modules, discuss briefly the alternatives, and finally show a live demo. ----- The robot uses two main modules: - **OpenCV** (_Open Source Computer Vision Library_), an open-source library that includes several hundreds of computer vision algorithms. Usage ranges from interactive art, to mines inspection, stitching maps on the web or through advanced robotics. - **gpiozero**, a simple interface to everyday GPIO components used with Raspberry Pi. The first is used to recognize the people and the object; the second to control the robot.	28	Science & Technology	PT25M25S	1525	2d	hd	false	https://i.ytimg.com/vi/5evBTvBO12U/maxresdefault.jpg		788	9	2	0	0
686	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	a-Dj6MtyqXo	2016-07-28T20:05:29Z	2016-07-28 20:05:29	Lorena Mesa - Is that spam in my ham?	Lorena Mesa - Is that spam in my ham? [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/is-that-spam-in-my-ham) Beginning programmers or Python beginners may find it overwhelming to implement a machine learning algorithm. Increasingly machine learning is becoming more applicable to many areas. This talk introduces key concepts and ideas and uses Python to build a basic classifier - a common type of machine learning problem. Providing some jargon to help those that may be self-educated or currently learning ----- Supervised learning, machine learning, classifiers, big data! What in the world are all of these things? As a beginning programmer the questions described as "machine learning" questions can be mystifying at best. In this talk I will define the scope of a machine learning problem, identifying an email as ham or spam, from the perspective of a beginner (non master of all things "machine learning") and show how Python can help us simply learn how to classify a piece of email. To begin we must ask, what is spam? How do I know it "when I see it"? From previous experience of course! We will provide human labeled examples of spam to our model for it to understand the likelihood of spam or ham. This approach, using examples and data we already know to determine the most likely label for a new example, uses the Naive Bayes classifier. Our model will look at the words in the body of an email, finding the frequency of words in both spam and ham emails and the frequency of spam and ham. Once we know the prior likelihood of spam and what makes something spam, we can try applying a label to a new example. Through this exercise we will see at a basic level what types of questions machine learning asks, learn to model "learning" with Python, and understand how learning can be measured.	28	Science & Technology	PT25M47S	1547	2d	hd	false	https://i.ytimg.com/vi/a-Dj6MtyqXo/maxresdefault.jpg		248	1	0	0	0
687	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8sJUmFHHY-Y	2016-07-28T20:05:28Z	2016-07-28 20:05:28	Nicolas Lara - Python and Async programming	Nicolas Lara - Python and Async programming [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/python-and-async-programming) How does the experienced python programmer fair when faced with python's "new" way of doing async programming for the first time? This talk details the different ways python provides for attacking the problem of asynchronous programming and focuses on the best practices for the future (as of python 3.4 and 3.5) ----- How does the experienced python programmer fair when faced with python's "new" way of doing async programing in for the first time? Do we all know how and when to use Futures, yield from, asyncio, coroutines, the async and await keywords, eventloops, and others? A lot has changed in recent versions of Python when it comes to async programming, concurrency, and parallelism. We still have very different ways of approaching the problem in each version, but they are finally (as of python 3.4/3.5) converging to a standard. This talk explores, from the perspective of an experienced python programmer with little to no experience in async programming, what the "one obvious way" to do async programming in Python is supposed to be. It does so but analysing examples of different categories of async problems we may want to solve and what the correct way to solve them with the latest versions of Python would be (along with the trade offs of different approaches). The examples include generic CPU-bound problems, IO-bound problems, and "both-bound" problems; along with common tasks as building a simple server, scraping, deferring a web response, and traversing graphs. When useful, I compare the solutions with the approach we would take in languages that have been design for- and are known to be good at async programming like Javascript and Go.	28	Science & Technology	PT31M15S	1875	2d	hd	false	https://i.ytimg.com/vi/8sJUmFHHY-Y/maxresdefault.jpg		1206	11	0	0	2
688	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fhqE7aS6cj8	2016-07-28T20:05:27Z	2016-07-28 20:05:27	Kyle Knapp - Dynamic Class Generation in Python	Kyle Knapp - Dynamic Class Generation in Python [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/dynamic-class-generation-in-python) This talk is about dynamic class generation in python: the practice of writing code that generates classes and their functionality at runtime. It will use boto3, the AWS SDK for Python, as a basis to dive into the basics, the benefits, and the drawbacks to dynamically generating classes. ----- This talk is about the concept of dynamic class generation in python. The whole idea is writing code that generates classes and their functionality at runtime. You now may be asking yourself, “That sounds like a neat trick. Why would I ever generate my classes at runtime?” Here are a few reasons why: - It can decrease the physical size of your code. - It can improve the workflow in adding new functionality. - It can improve reliability of your code. One example where the power of this concept has really been leveraged is in boto3, the AWS SDK for Python. Dynamic class generation has allowed boto3 to become heavily data driven such that most of its classes and methods are generated based off JSON models representing aspects of an AWS service’s API. For example, to add support for a new AWS service API in boto3, just plop in a JSON file into the library with no additional Python code required. Using lessons and techniques drawn from developing boto3, this talk will dive into the following topics related to dynamic class generation: - The basics of dynamic class generation such as how to effectively dynamically generate classes. - How to overcome some of the challenges of dynamic class generation. - The tradeoffs in dynamically generating classes and discussion on when it is appropriate. By the end of this talk, the hope is that you will have a better understanding of dynamic class generation and come away with helpful ideas for your next big project.	28	Science & Technology	PT26M12S	1572	2d	hd	false	https://i.ytimg.com/vi/fhqE7aS6cj8/maxresdefault.jpg		1848	18	0	0	0
689	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kOIrD9YMA18	2016-07-28T20:05:27Z	2016-07-28 20:05:27	David Arcos - Efficient Django	David Arcos - Efficient Django [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/efficient-django) Does Django scale? How to manage traffic peaks? What happens when the database grows too big? How to find the bottlenecks? We will overview the basics concepts on scalability and performance, and then see some tips and tricks. These statements will be backed up with experiments and numbers, to show the timing improvements. ----- **Does Django scale?** How to manage traffic peaks? What happens when the database grows too big? How to find the bottlenecks? We will overview the basics concepts on scalability and performance, and then see some tips and tricks. These statements will be backed up with experiments and numbers, to show the timing improvements. Main topics: - System architecture - Database performance - Queues and workers - Profiling with django-debug-toolbar - Caching queries and templates - Dealing with a slow admin - Optimizing the models - Faster tests	28	Science & Technology	PT41M13S	2473	2d	hd	false	https://i.ytimg.com/vi/kOIrD9YMA18/maxresdefault.jpg		1414	12	3	0	0
690	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JVaF6uZuSIU	2016-07-28T20:05:25Z	2016-07-28 20:05:25	Nicholas Tollervey - A Million Children (and MicroPython)	Nicholas Tollervey - A Million Children (and MicroPython) [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/keynote-a-million-children-and-micropython) The BBC micro:bit is a small programmable device for children. A million of them have been handed out to the UK's 11 and 12 years olds. The Python Software Foundation was a partner in this moon-shot scheme and, thanks to the efforts of Damien George, MicroPython runs on the device. My talk will tell the story of the project, describe Python's role in it and explain how the wider Python community can become involved. It may involve demonstrations, live coding and audience participation.	28	Science & Technology	PT27M13S	1633	2d	hd	false	https://i.ytimg.com/vi/JVaF6uZuSIU/maxresdefault.jpg		1305	8	0	0	1
691	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dIE4WTqrq_0	2016-07-28T20:05:25Z	2016-07-28 20:05:25	Javier Arias Losada - Machine Learning for dummies with Python	Javier Arias Losada - Machine Learning for dummies with Python [EuroPython 2016] [18 July 2016] [Bilbao, Euskadi, Spain] (https://ep2016.europython.eu//conference/talks/machine-learning-for-dummies-with-python) Machine Learning is the next big thing. If you are a dummy in terms of Machine Learning, but want to get started with it... there are options. Still, thanks to the Web, Python and OpenSource libraries, we can overcome this situation and do some interesting stuff with Machine Learning. ----- Have you heard that Machine Learning is the next big thing? Are you a dummy in terms of Machine Learning, and think that is a topic for mathematicians with black-magic skills? If your response to both questions is 'Yes', we are in the same position. Still, thanks to the Web, Python and OpenSource libraries, we can overcome this situation and do some interesting stuff with Machine Learning.	28	Science & Technology	PT28M17S	1697	2d	hd	false	https://i.ytimg.com/vi/dIE4WTqrq_0/maxresdefault.jpg		1324	8	3	0	1
692	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eAj8dojeY5E	2016-07-18T15:59:31Z	2016-07-18 15:59:31	EUROPYTHON_SALA A1_2016-07-18		28	Science & Technology	PT1H33M16S	1996	2d	hd	false	https://i.ytimg.com/vi/eAj8dojeY5E/maxresdefault.jpg		396	1	2	0	2
693	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5ZjqjhjsJtM	2016-07-17T16:49:54Z	2016-07-17 16:49:54	EUROPYTHON 2016-Prueba A2		28	Science & Technology	PT22S	22	2d	hd	false	https://i.ytimg.com/vi/5ZjqjhjsJtM/maxresdefault.jpg		131	1	0	0	0
694	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XyGPzYKWCKA	2016-07-17T16:43:10Z	2016-07-17 16:43:10	EUROPYTHON 2016-Prueba A1		28	Science & Technology	PT1M3S	63	2d	hd	false	https://i.ytimg.com/vi/XyGPzYKWCKA/maxresdefault.jpg		232	1	0	0	0
695	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OAemUvFGhE4	2015-08-08T16:11:50Z	2015-08-08 16:11:50	Vasilij Litvinov - Tuning Python applications can dramatically increase performance	Vasilij Litvinov - Tuning Python applications can dramatically increase performance [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Traditional Python profiling tools have limitations. Standard tools like **cProfile** and most all third party tools (like **Python Tools** plugin for Microsoft Visual Studio) suffer from common flaws. First, the profiling overhead is high (up to 50%). Second, the information provided is “function-level” i.e. the tool shows how much time was spent within a function, but not actionable “line-level” information to show which exact lines are _the bottleneck_ in a function. Adding “line-level” information to most tools causes the application to run even slower. Third, some tools require modification of the application source code to enable profiling thus disrupting development. This talk presents an experimental Python profiler. It typically has less than 15% overhead, shows line-level information and does not require modification of application source code. Experiments using it resulted in performance gains of 2x and more. Of course results vary by application, but in a typical application there may be quick optimizations easily identified by this type of profiler. The talk will briefly describe the basics of what, why and how to profile. The profiler‘s use and results will be shown in the presentation with examples based on real-life applications. Previous experience of working with profilers and trying to optimize an application is a plus, but not required, to gain a better appreciation of the work presented.	28	Science & Technology	PT36M45S	2205	2d	hd	false	https://i.ytimg.com/vi/OAemUvFGhE4/maxresdefault.jpg		1866	10	0	0	2
696	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HXwBsnFjqn0	2015-08-08T16:04:51Z	2015-08-08 16:04:51	Julian Berman - Just Because You Can, Doesn't Mean You Should	Julian Berman - Just Because You Can, Doesn't Mean You Should [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Python is a powerful language that provides many tools for creating highly dynamic programs. It offers tools all across the complexity spectrum that library authors can use to make their libraries seem convenient to use for users. While it's true that there are a wealth of techniques with huge positive benefits, there are a number of common antipatterns which can deceptively cause a net-loss in flexibility, readability, and predictability for users. We'll explore a few specific commonalities in this area of library and object API design, and talk about the ramifications they have on each of these programmer concerns.	28	Science & Technology	PT39M8S	2348	2d	hd	false	https://i.ytimg.com/vi/HXwBsnFjqn0/maxresdefault.jpg		800	5	0	0	0
697	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	z3_HorshzJ4	2015-08-08T16:04:51Z	2015-08-08 16:04:51	Arrested Development - surviving the awkward adolescence of a microservices-based application	Scott Triglia - Arrested Development - surviving the awkward adolescence of a microservices-based application [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] The potential upside of microservices is significant and exciting. So much so that Yelp's Transaction Platform committed from the start to an architecture of small, cooperative microservices. This talk explores the inevitable complications that arise for Python developers in as the services grow larger and stretch both their own architecture and the developers responsible for them. Come hear tales of terror (tight coupling! low test coverage!), stories which will warm your heart (agility! strong interfaces!), and everything in between as we follow the adventures of our plucky team. The talk will be focused on the functional, cultural, and reliability challenges which occur as a microservices-based project evolves and expands over time. Particular attention will be paid to where these diverge from the utopian way microservices are often described, and to the particular difficulties faced by Python developers trying to implement such systems. My goal is to share with attendees some mistakes we've made, some successful methods for growing gracefully, and Python-specific tools/libraries which can help with these problems. To enjoy this talk, you should be aware of the basic vocabulary and concepts of HTTP-based services. Any additional awareness of distributed systems (and their failure modes) will be helpful.	28	Science & Technology	PT42M15S	2535	2d	hd	false	https://i.ytimg.com/vi/z3_HorshzJ4/maxresdefault.jpg		1112	15	1	0	1
698	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HEOI8y0qHMk	2015-08-08T16:04:50Z	2015-08-08 16:04:50	Rob Collins - DumbDev -- eight rules for dumb development	Rob Collins - DumbDev -- eight rules for dumb development [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] So often, we've been encouraged to be smart in our development. "Work smarter not harder!" say the encouraging posters. But the desire to be smart, and be seen to be smart, is hurting. The design suffers, the code suffers, and it's hard to recruit developers smart enough to cope with the problems caused. In this talk, I'm proposing an alternative to being smart: **_DumbDev_**. Let's use our brains for enjoyable, interesting things, rather than wrestling with code written for smart developers. **So what do I mean by _dumb_?** Well, I don't mean 'ignorant'. A clever person can be ignorant of some important information, and learn it. With ignorance, there is hope. I'm also not talking about its opposite, 'stupidity'. This occurs when someone is given the information or advice, and chooses to ignore it. Dumb isn't stupid. Nor is it silent, as in someone who can't speak. Instead, the picture I have is of one of the early computers: very small RAM, disk space measured in KB, and a woefully inadequate CPU. In other words, slow, with very little working memory and limited persistent storage. Hey, this describes my brain -- and I realise that's an asset! I will write better software if I take this into account. So, I'm a **_DumbDev_**, which means I can't hold in my mind the infamous [Plone Site class hierarchy][1] (see [Michele Simionato's article][2]). Rather than beat myself up about this, I can say, "Hold on, maybe deep inheritance is a bad idea..." There is some debate about the number of things we can think about simultaneously: it may be 7, 9, 5, 4 or even only 3. We can learn some tricks to appear to cope with more, but most of us can't easily do 38. Here's the first **_DumbDev_** rule, putting a sensible limit on complexity: &gt; **1. All diagrams must fit on a Noughts and Crosses (Tic-tac-toe) board**. &gt; _One central class/concept and up to eight things linked. Larger structures need to be subdivided._ There are seven further rules for me to explain in this talk. I will demonstrate the benefits of the **_DumbDev_** approach, with good and bad examples. At the end of the presentation, I hope you will realise that you're a better developer than you thought at the start. The next time it takes you two hours to debug a simple exception, you'll know that it's not you. It's because the system wasn't written using **_DumbDev_** rules. Let's free our brains for more interesting things, like having ideas and solving problems. Let's do **_DumbDev_**. [1]: http://www.phyast.pitt.edu/~micheles/python/plone-hierarchy.png [2]: http://www.artima.com/weblogs/viewpost.jsp?thread=246341	28	Science & Technology	PT37M11S	2231	2d	hd	false	https://i.ytimg.com/vi/HEOI8y0qHMk/maxresdefault.jpg		1016	6	5	0	0
699	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9kgiApzKDMw	2015-08-08T12:49:27Z	2015-08-08 12:49:27	Panel Discussion: Code Review Tools	Gautier Hayoun (org) - Panel Discussion: Code Review Tools [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] This was a last minute replacement for a cancelled talk.	28	Science & Technology	PT42M46S	2566	2d	hd	false	https://i.ytimg.com/vi/9kgiApzKDMw/maxresdefault.jpg		325	2	1	0	0
700	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UcR5JvAsNh8	2015-08-08T12:49:27Z	2015-08-08 12:49:27	Andrii Chaichenko - Building a RESTful real-time analytics system with Pyramid	Andrii Chaichenko - Building a RESTful real-time analytics system with Pyramid [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] CeleraOne tries to bring its vision to Big Data by developing a unique platform for real-time Big Data processing. The platform is capable of personalizing multi-channel user flows, right-in time targeting and analytics while seamlessly scaling to billions of page impression. It is currently tailored to the needs of content providers, but of course not limited to. - The platform’s architecture is based on four main layers: - Proxy/Distribution -- OpenResty/LUA for dynamic request forwarding - RESTful API -- several Python applications written using Pyramid web framework running under uWSGI server, which serve as an integration point for third party systems; - Analytics -- Python API for Big Data querying and distributed workers performing heavy data collection. - In-memory Engine -- CeleraOne’s NoSql database which provides both data storage and fast business logic. In the talk I would like to give insights on how we use Python in the architecture, which tools and technologies were chosen, and share experiences deploying and running the system in production.	28	Science & Technology	PT25M40S	1540	2d	hd	false	https://i.ytimg.com/vi/UcR5JvAsNh8/maxresdefault.jpg		1615	17	1	0	0
701	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YSTsgldazSU	2015-08-08T12:49:27Z	2015-08-08 12:49:27	Alex Willmer - Taking the pain out of passwords and authentication	Alex Willmer - Taking the pain out of passwords and authentication [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] Passwords are a pain for us all - programmers, users and admins alike. How can we reduce that pain, or eliminate it entirely? This talk will - Review research into techniques that improve the usability of password systems, and mitigate shortcomings - Introduce the new standards Universal Authentication Framework (UAF) & Universal Second Factor (U2F) - Describe how they streamline authentication, even eliminate passwords entirely - Show how to integrate UAF/U2F in Django and other Python frameworks - Summarize the state of support for UAF & U2F in browsers, devices, and the wider world - &lt;del&gt;Introduce Sonipass - a project to replace passwords, even on existing websites&lt;/del&gt; [Slides][1] [1]: https://moreati.github.io/passwordspain/	28	Science & Technology	PT58M3S	3483	2d	hd	false	https://i.ytimg.com/vi/YSTsgldazSU/maxresdefault.jpg		639	10	0	0	0
702	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2ygaowx5ukA	2015-08-08T09:52:40Z	2015-08-08 09:52:40	Architecture of a cloud hosting service using python technologies: django, ansible and celery	Abraham Martin - Architecture of a cloud hosting service using python technologies: django, ansible and celery [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] The talk will show the architecture and inners of a cloud hosting service we are developing in the University of Cambridge based on python technologies, mainly django, ansible, and celery. The users manage their hosts using a web panel, developed in django, with common options: ability to create a vhost, associate domain names to vhosts, install packages, recover from backups, make snapshots, etc. Interaction between the panel and the hosts are made using ansible playbooks launched asynchronously by celery tasks. The VM architecture has been designed to be VM platform agnostic and to provide disk replication and high availability. The University of Cambridge central IT services (http://www.ucs.cam.ac.uk/) also provides other services to the rest of the university like domain name registration, authentication, authorisation, TLS certificates, etc. We link all these other services with the hosting service by using APIs while keeping a microservices architecture approach. Thus, enabling the use/link of other services within the same hosting service web application.	28	Science & Technology	PT39M16S	2356	2d	hd	false	https://i.ytimg.com/vi/2ygaowx5ukA/maxresdefault.jpg		1716	10	2	0	1
703	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BbsdFGo6SzY	2015-08-08T09:52:40Z	2015-08-08 09:52:40	Harry Percival - How to build a spreadsheet with Python	Harry Percival - How to build a spreadsheet with Python [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] Do you know how a spreadsheet works? Can you imagine building one, from scratch, in Python? This talk will be a whirlwind overview of how to do just that. Based on the source code of Dirigible, a short- lived experiment in building a cloud-based Pythonic spreadsheet (now [open-sourced](https://github.com/pythonanywhere/dirigible- spreadsheet), for the curious). We'll start from scratch, with a simple data representation for a two- by-two grid, and then gradually build up the functionality of our spreadsheet: - Cell objects, and the formula/value distinction - Evaluating cells, from simple arithmetic up to an Excel-like dialect - Building up the dependency graph, and the ensuing fun times with recursion (arg!) - Integrating custom functions and user-defined code. Showing and explaining code examples, and alternating with live demos (don't worry, I've done this before!) And it's all in Python! You'll be surprised at how easy it turns out to be, when you go step-by-step, each building on the last... And I promise you'll be at least a couple of moderately mind-blowing moments :)	28	Science & Technology	PT23M30S	1410	2d	hd	false	https://i.ytimg.com/vi/BbsdFGo6SzY/maxresdefault.jpg		6058	44	4	0	1
704	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WN_890QPhNA	2015-08-08T09:52:40Z	2015-08-08 09:52:40	Alexys Jacob - Designing a scalable and distributed application	Alexys Jacob - Designing a scalable and distributed application [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] One of the key aspect to keep in mind when developing a scalable application is its faculty to grow easily. But while we're used to take advantage of scalable backend technologies such as mongodb or couchbase, **scaling automatically our own application** core is usually another story. In this talk I will **explain and showcase** a distributed web application design based on **consul** and **uWSGI** and its consul plugin. This design will cover the key components of a distributed and scalable application: - **Automatic service registration and discovery** will allow your application to grow itself automatically. - **Health checking and service unregistration** will allow your application to be fault tolerant, highly available and to shrink itself automatically. - A **distributed Key/Value storage** will allow you to (re)configure your distributed application nodes at once. - **Multi-Datacenter awareness** will allow your application to scale around the world easily. [Slides of this talk are available here][1] ! [1]: https://docs.google.com/presentation/d/1bZ30UculKOM4IQ4ic5X2fLpz1Fe1QQPVqJLtshIO0pg/edit?usp=sharing	28	Science & Technology	PT57M19S	3439	2d	hd	false	https://i.ytimg.com/vi/WN_890QPhNA/maxresdefault.jpg		530	7	0	0	0
705	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5kaqOKIqX_4	2015-08-08T09:52:39Z	2015-08-08 09:52:39	Tom Viner - Testing with two failure seeking missiles: fuzzing and property based testing	Tom Viner - Testing with two failure seeking missiles: fuzzing and property based testing [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] **[Full Video of Talk][0]** Testing with purely random data on it's own doesn't get you very far. But two approaches that have been around for a while have new libraries that help you generate random input, that homes in on failing testcases. First **[Hypothesis][1]**, a Python implementation and update of the Haskell library QuickCheck. Known as property based testing, you specify a property of your code that must hold, and Hypothesis does its best to find a counterexample. It then shrinks this to find the minimal input that contradicts your property. Video: https://www.youtube.com/watch?v=YGim-BL_ebE#t=53m17s Second, **[American fuzzy lop][2]** (AFL), is a young fuzzing library that's already achieved an impressive trophy case of bug discoveries. Using instrumentation and genetic algorithms, it generates test input that carefully searches out as many code paths as it can find, seeking greater functional coverage and ultimately locating crashes and hangs that no other method has found. I'll be showing how with **[Python-AFL][3]** we can apply this tool to our Python code. [0]: https://youtu.be/YGim-BL_ebE?t=53m17s [1]: https://hypothesis.readthedocs.org/en/latest/ [2]: http://lcamtuf.coredump.cx/afl/ [3]: http://jwilk.net/software/python-afl	28	Science & Technology	PT37M30S	2250	2d	hd	false	https://i.ytimg.com/vi/5kaqOKIqX_4/maxresdefault.jpg		1131	14	1	0	0
706	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ABnqAnhonDk	2015-08-08T09:52:39Z	2015-08-08 09:52:39	Moritz Gronbach - What's the fuzz all about? Randomized data generation for robust unit testing	Moritz Gronbach - What's the fuzz all about? Randomized data generation for robust unit testing [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] In static unit testing, the output of a function is compared to a precomputed result. Even though such unit tests may apparently cover all the code in a function, they might cover only a small subset of behaviours of the function. This potentially allows bugs such as heartbleed to stay undetected. Dynamic unit tests using fuzzing, which allows you to specify a data generation template, can make your test suite more robust. In this talk, we demonstrate fuzzing using the hypothesis library. Hypothesis is a Python library to automatically generate test data based on a template. Data is generated using a strategy. A strategy specifies how data is generated, and how falsifying examples can be simplified. Hypothesis provides strategies for Python's built-in data types, and is easily customizable.Since test data is generated automatically, we can not compare against pre-computed results. Instead, tests are usually done on invariants of functions. We give an overview of such invariants. Finally, we demonstrate how we use fuzzing to test machine learning algorithms at Blue Yonder.	28	Science & Technology	PT20M17S	1217	2d	hd	false	https://i.ytimg.com/vi/ABnqAnhonDk/maxresdefault.jpg		552	4	0	0	2
707	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	f5Ica6AeeqE	2015-08-08T05:23:50Z	2015-08-08 05:23:50	Jesús Espino - Playing with CPython Objects Internals	Jesús Espino - Playing with CPython Objects Internals [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] I will explain how CPython objects are built, from simple objects like int or None to complex ones like dict. To make it funnier, I will play to change instance data directly using ctypes and do "really bad things" like truncating tuples.	28	Science & Technology	PT30M37S	1837	2d	hd	false	https://i.ytimg.com/vi/f5Ica6AeeqE/maxresdefault.jpg		270	4	0	0	0
708	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5ELGhtekjsc	2015-08-08T05:23:14Z	2015-08-08 05:23:14	Ramon Navarro Bosch - Plone 5 and how to use machine learning with it.	Ramon Navarro Bosch - Plone 5 and how to use machine learning with it. [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] Plone is a Document Management System and Content Management System that has been in the Python scope for more than 10 years. Plone 5’s features allow us to manage content, define various kinds of content and provide a nice useful UI to work on semantic web technologies. In this talk we are going to explain our approach for using Plone with the Python machine learning toolkit sklearn (http ://scikit-learn.org/stable/) to enable clusterization and classification of content using a scalable content management system. We will also add some sophisticated front-end gloss using the new functionalities on frontend development added on Plone 5 and some real use cases of CMS/DMS with machine learning using sklean and solr.	28	Science & Technology	PT37M38S	2258	2d	hd	false	https://i.ytimg.com/vi/5ELGhtekjsc/maxresdefault.jpg		1108	7	1	0	0
709	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BZJ6q4eihCs	2015-08-08T05:23:13Z	2015-08-08 05:23:13	Antonio Cuni - Python and PyPy performance (not) for dummies	Antonio Cuni - Python and PyPy performance (not) for dummies [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] In this talk we would like to have a short introduction on how Python programs are compiled and executed, with a special attention towards just in time compilation done by PyPy. PyPy is the most advanced Python interpreter around and while it should generally just speed up your programs there is a wide range of performance that you can get out of PyPy, ranging from slightly faster than CPython to C speeds, depending on how you write your programs. We will split the talk in two parts. In the first part we will explain how things work and what can and what cannot be optimized as well as describe the basic heuristics of JIT compiler and optimizer. In the next part we will do a survey of existing tools for looking at performance of Python programs with specific focus on PyPy. As a result of this talk, an audience member should be better equipped with tools how to write new software and improve existing software with performance in mind. The talk will be given by Antonio Cuni and Maciej Fijalkowski, both long time PyPy core developers and expert in the area of Python performance.	28	Science & Technology	PT56M58S	3418	2d	hd	false	https://i.ytimg.com/vi/BZJ6q4eihCs/maxresdefault.jpg		1304	10	0	0	0
710	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	mJyjkAOK0uw	2015-08-08T05:23:13Z	2015-08-08 05:23:13	Andreas Dewes - Code is not text! How graph technologies can help us to understand our code better.	Andreas Dewes - Code is not text! How graph technologies can help us to understand our code better. [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Today, we almost exclusively think of code in software projects as a collection of text files. The tools that we use (version control systems, IDEs, code analyzers) also use text as the primary storage format for code. In fact, the belief that "code is text" is so deeply ingrained in our heads that we never question its validity or even become aware of the fact that there are other ways to look at code. In my talk I will explain why treating code as text is a very bad idea which actively holds back our understanding and creates a range of problems in large software projects. I will then show how we can overcome (some of) these problems by treating and storing code as data, and more specifically as a graph. I will show specific examples of how we can use this approach to improve our understanding of large code bases, increase code quality and automate certain aspects of software development. Finally, I will outline my personal vision of the future of programming, which is a future where we no longer primarily interact with code bases using simple text editors. I will also give some ideas on how we might get to that future. More information about me: - Github: https://github.com/adewes - Twitter: https://twitter.com/japh44 - Website: http://www.andreas-dewes.de/en	28	Science & Technology	PT41M5S	2465	2d	hd	false	https://i.ytimg.com/vi/mJyjkAOK0uw/maxresdefault.jpg		830	6	2	0	1
711	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QKBcnEhkCtk	2015-08-08T05:23:12Z	2015-08-08 05:23:12	Christine Doig - Scale your data, not your process: Welcome to the Blaze ecosystem	Christine Doig - Scale your data, not your process: Welcome to the Blaze ecosystem [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] NumPy and Pandas have revolutionized data processing and munging in the Python ecosystem. As data and systems grow more complex, moving and querying becomes more difficult. Python already has excellent tools for in-memory datasets, but we inevitably want to scale this processing and take advantage of additional hardware. This is where Blaze comes in handy by providing a uniform interface to a variety of technologies and abstractions for migrating and analyzing data. Supported backends include databases like Postgres or MongoDB, disk storage systems like PyTables, BColz, and HDF5, or distributed systems like Hadoop and Spark. This talk will introduce the Blaze ecosystem, which includes: - Blaze (data querying): [http://blaze.pydata.org/en/latest/][1] - Odo (data migration): [http://odo.readthedocs.org/en/latest/][2] - Dask (task scheduler): [http://dask.pydata.org/en/latest/][3] - DyND (dynamic, multidimensional arrays): [https://github.com/libdynd /dynd-python][4] - Datashape (data description): [http://datashape.pydata.org/][5] Attendees will get the most out of this talk if they are familiar with NumPy and Pandas, have intermediate Python programming skills, and/or experience with large datasets. [1]: http://blaze.pydata.org/en/latest/ [2]: http://odo.readthedocs.org/en/latest/ [3]: http://dask.pydata.org/en/latest/ [4]: https://github.com/libdynd/dynd-python [5]: http://datashape.pydata.org/	28	Science & Technology	PT35M46S	2146	2d	hd	false	https://i.ytimg.com/vi/QKBcnEhkCtk/maxresdefault.jpg		2589	26	1	0	1
712	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iUN5GrgIiks	2015-08-08T05:23:12Z	2015-08-08 05:23:12	Carles Bruguera - MAX: Realtime messaging and activity stream engine	Carles Bruguera - MAX: Realtime messaging and activity stream engine [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] What if I told you that we’ve built an open source “WhatsApp”-like RESTful API on the top of Pyramid? We've developed MAX: a real-time messaging service and activity stream that has become the key feature for a social intranet at the BarcelonaTech University We will show how we designed and built MAX with performance in mind using state of the art Python technologies like Gevent, WSGI, and multi-threaded queue processing. We will also show you how we've managed to design a simple architecture guaranteeing both high scalability and performance, achieving connecting ratios over 30.000 students, teachers, and university staff. The API is secured using oAuth 2.0 resource owner password credentials flow powered by our own oAuth server implementation (Osiris) also Pyramid-based. We are using MongoDB as general storage backend and RabbitMQ over websockets to support realtime and messaging.	28	Science & Technology	PT32M18S	1938	2d	hd	false	https://i.ytimg.com/vi/iUN5GrgIiks/maxresdefault.jpg		206	1	0	0	0
713	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	oQwlTfQwz8w	2015-08-08T05:23:12Z	2015-08-08 05:23:12	Lluís Esquerda - CityBikes: bike sharing networks around the world	Lluís Esquerda - CityBikes: bike sharing networks around the world [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] CityBikes [1] started on 2010 as a FOSS alternative endpoint (and Android client) to gather information for Barcelona's Bicing bike sharing service. Later evolved as an open API [2] providing bike sharing data of any (mostly) service worldwide. Fast forward today and after some C&D letters, there's support for more than 200 cities, more than 170M historical entries have been gathered for analysis (in approx. a year) and the CityBikes API is the main source for open bike share data worldwide. This talk will tour about how we got there with the help of python and the community [3]. PS: We have a realtime map, it is awesome [4]. [1]: http://citybik.es [2]: http://api.citybik.es [3]: http://github.com/eskerda/pybikes [4]: http://upcoming.citybik.es	28	Science & Technology	PT33M56S	2036	2d	hd	false	https://i.ytimg.com/vi/oQwlTfQwz8w/maxresdefault.jpg		278	3	0	0	0
714	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OsI7p65OcCI	2015-08-08T05:23:11Z	2015-08-08 05:23:11	Dale - Data-visualisation with Python and Javascript: crafting a data-viz toolchain for the web	Kyran Dale - Data-visualisation with Python and Javascript: crafting a data-viz toolchain for the web [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] To accompany an upcoming O'Reilly book 'Data-visualisation with Python and Javascript: crafting a dataviz toolchain for the web' (see [here][1]) this talk aims to sketch out the toolchain by transforming some dry Wikipedia data (Nobel prize-winners) into a far more engaging and insightful web-visualisation. This transformative cycle uses Python big-hitters such as Scrapy, Pandas and Flask, the latter delivering data to Javascript's D3. While Python is fast becoming the goto language for data- processing/science, the visual fruits of that labour hit the wall of the web, where there is only one first-class language, Javascript. To develop a data-viz toolchain for the modern world, where web- presentation is increasingly mandated, making Python and Javascript play nicely is fundamental. This talk aims to show that the perceived wall between the two languages is actually a thin, permeable membrane and that, with a bare minimum of web-dev, one can get on with programming seamlessly in both. [1]: http://kyrandale.com/blog/data-visualization-python-javascript/	28	Science & Technology	PT35M59S	2159	2d	hd	false	https://i.ytimg.com/vi/OsI7p65OcCI/maxresdefault.jpg		2897	22	0	0	0
715	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bFqQd1eyY10	2015-08-08T05:23:11Z	2015-08-08 05:23:11	Mike Müller - Functional Python with Mochi	Mike Müller - Functional Python with Mochi [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] [Slides][1] While Python supports procedural, object-oriented, and functional programming, its functional features are not fully developed. Mochi is a Python-like functional language that compiles to Python 3 and PyPy 3 bytecode. It can use Python libraries and can be used from Python. Mochi adds functional features such as tail recursion optimization, no re-assignments in function definitions, persistent data structures, pattern matching, algebraic data types, a pipeline operator, better anonymous functions, Erlang-style actors, Lisp-style macros as well as many useful builtin functions. This talk presents what Mochi is, how it works, and what you can do with it. Functional programming can help to solve certain kind of problems elegantly. Done right, functional programs can be easily tested and provide more confidence that you program is really doing what you want. Mochi could be another tool in your toolbox. Functional programming can expand your horizon and can be a lot of fun. Mochi offers easy access to this new world because you can leverage your existing Python knowledge and libraries whenever needed. [Slides][1] [1]: http://www.python-academy.com/talks/europython2015/Functional%20Python%20with%20Mochi.slides.html#/	28	Science & Technology	PT28M54S	1734	2d	hd	false	https://i.ytimg.com/vi/bFqQd1eyY10/maxresdefault.jpg		472	2	0	0	1
716	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MUlMh_oy_4k	2015-08-07T22:37:26Z	2015-08-07 22:37:26	Fabio Pliger - Big data beautiful visualization on the browser with Bokeh	Fabio Pliger - Big data beautiful visualization on the browser with Bokeh [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Bokeh is a Python interactive visualization library for large datasets that natively uses the latest web technologies. Its goal is to provide elegant, concise construction of novel graphics in the style of Protovis/D3, while delivering high-performance interactivity over large data to thin clients. The talk will go through it’s design providing details of the different API layers (bottom to top) concluding with a comprehensive showcase of examples to expose many of the features that make Bokeh so powerful and easy.	28	Science & Technology	PT59M6S	3546	2d	hd	false	https://i.ytimg.com/vi/MUlMh_oy_4k/maxresdefault.jpg		3235	12	1	0	1
717	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	a8RRbT4BTEw	2015-08-07T22:37:26Z	2015-08-07 22:37:26	Kay Hayen - The Python Compiler	Kay Hayen - The Python Compiler [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] The Python compiler Nuitka has evolved from an absurdly compatible Python to C++ translator into a **statically optimizing Python compiler**. The mere peephole optimization is now accompanied by full function/module level optimization, with more to come, and only increased compatibility. Witness local and module **variable value propagation**, **function in-lining** with suitable code, and graceful degradation with code that uses the full Python power. (This is considered kind of the break through for Nuitka, to be finished for EP.) No compromises need to be made, full language support, all modules work, including extension modules, e.g. PyQt just works. Also new is a plugin framework that allows the user to provide workarounds for the standalone mode (create self contained distributions), do his own type hinting to Nuitka based on e.g. coding conventions, provide his own optimization based on specific knowledge. Ultimately, Nuitka is intended to grow the Python base into fields, where performance is an issue, it will need your help. Scientific Python could largely benefit from future Nuitka. Join us now.	28	Science & Technology	PT35M41S	2141	2d	hd	false	https://i.ytimg.com/vi/a8RRbT4BTEw/maxresdefault.jpg		4054	58	3	0	6
718	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sLseUEez1D0	2015-08-07T22:37:26Z	2015-08-07 22:37:26	Andreas Klostermann - Brainwaves for Hackers 2.0	Andreas Klostermann - Brainwaves for Hackers 2.0 [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] This talk is a sequel to "Brainwaves for Hackers" and illustrates some experiments you can do with a Neurosky Mindwave headset, a bluetooth enabled EEG device. I'll also talk some more about how to integrate the device with the IPython Notebook for real time viewing and how to use the Mindwave with the Raspberry Pi.	28	Science & Technology	PT27M8S	1628	2d	hd	false	https://i.ytimg.com/vi/sLseUEez1D0/maxresdefault.jpg		246	2	0	0	0
719	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	o-UbWsO9rZk	2015-08-07T19:18:48Z	2015-08-07 19:18:48	Ionel Cristian Mărieș - Less known packaging features and tricks	Ionel Cristian Mărieș - Less known packaging features and tricks [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] You've been making packages for a while now. Everything works almost fine, however, lots of new features and tools have been developed recently. Some are really obscure. And there's a chance they can save you time and help you avoid _packaging-induced-pain_. I'm willing to bet couple of beers you haven't seen these features and/or tools before. This talk is going to show you: - Patterns and tricks you can use in your `setup.py`. - Obscure pip/setuptools/virtualenv/python features you can use to improve your packaging experience (be it as a user of packages or a package author). - Fledgeling alternative tools. [Slides (HTML with notes)][1] [1]: http://blog.ionelmc.ro/presentations/packaging/	28	Science & Technology	PT36M	2160	2d	hd	false	https://i.ytimg.com/vi/o-UbWsO9rZk/maxresdefault.jpg		1071	18	0	0	1
720	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wHkvokOtpWE	2015-08-07T19:18:48Z	2015-08-07 19:18:48	Gianluca Nieri - Python for IT specialists' tasks automation	Gianluca Nieri - Python for IT specialists' tasks automation [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] This talks is about automation and the use of Python scripts to speed up repetitive tasks. It's for developers, sysops, devops, but also any kind of user that want improve his daily routine. I will talk about the use of Python with different tools for different platforms: Keyboard Maestro/Alfred/Hazel on OsX and Synapse/Kupfer/AutoKey on Linux. There will be presented some sample script to give an idea of the potentiality of Python mixed with great tools, and these are some of the topics that I will cover: - text manipulation; - document template management; - clipboard management; - stuff internet activities (url shortening, web scraping, etc.); - list management. - etc.	28	Science & Technology	PT31M24S	1884	2d	hd	false	https://i.ytimg.com/vi/wHkvokOtpWE/maxresdefault.jpg		1481	19	0	0	0
721	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7cCinfaBtIE	2015-08-07T19:18:47Z	2015-08-07 19:18:47	Oliver Braun - Multibody Simulation using sympy, scipy and vpython	Oliver Braun - Multibody Simulation using sympy, scipy and vpython [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] The talk is about the implementation of multibody simulation in the scientific python world on the way to a stage usefull for engineering and educational purposes. Multibody simulation (MBS) requires two major steps: first the formulation of the specific mechanical problem. Second step is the integration of the resulting equations. For the first step we use the package sympy which is on a very advanced level to perform symbolic calculation and which supports already Lagrange's and Kane's formalism. The extensions we made are such that a complex mechanical setup can be formulated easily with several lines of python code. The functionality is analogous to well known MBS-tools, with that you can assemble bodies, joints, forces and constraints. Also external forces even in a cosimulation model can be added on top. The second step, the integration is done via ode- integrators implemented in scipy. Finally for visual validation the results are visualized with the vpython package and for further analytics with matplotlib. Conclusion: not only highly constrained pendulums with many rods and springs but also driving simulation of passenger cars an be performed with our new extension using python packages off the shelf.	28	Science & Technology	PT30M6S	1806	2d	hd	false	https://i.ytimg.com/vi/7cCinfaBtIE/maxresdefault.jpg		1699	16	0	0	1
722	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wQAPRfEOb10	2015-08-07T16:28:31Z	2015-08-07 16:28:31	Daniel Pope - Writing Domain Specific Languages with Python	Daniel Pope - Writing Domain Specific Languages with Python [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Python is an expressive general purpose programming language. Its syntax provides many ways to represent structure and minimise code repetition and boilerplate. But Python not always expressible enough. Perhaps when you've built a complicated enough system with hard-to-express inter-relationships, the code required to construct or operate on it can become complicated, repetitive and unreadable. Or perhaps you have users unfamiliar with Python who need to understand or edit a system. In cases like these, stepping beyond the syntax and semantics of basic Python can be an advantage. Daniel will describe various ways you can implement your own Domain Specific Languages, languages perhaps completely unlike Python that can succinctly describe more complicated Python systems. This talk will cover: * What and why of DSLs * Metaprogramming tricks * Writing simple parsers * The libraries PLY and PyParsing * Building tooling around your new DSLs	28	Science & Technology	PT58M36S	3516	2d	hd	false	https://i.ytimg.com/vi/wQAPRfEOb10/maxresdefault.jpg		7570	86	2	0	5
723	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LklGF1rcJII	2015-08-07T14:51:59Z	2015-08-07 14:51:59	Hynek Schlawack - Beyond grep: Practical Logging and Metrics	Hynek Schlawack - Beyond grep: Practical Logging and Metrics [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Knowing that your application is up and running is great. However in order to make informed decisions about the future, you also need to know in what state your application currently is and how its state is developing over time. This talk combines two topics that are usually discussed separately. However I do believe that they have a lot of overlap and ultimately a similar goal: giving you vital insights about your system in production. We'll have a look at their commonalities, differences, popular tools, and how to apply everything in your own systems while avoiding some common pitfalls. **Slides & Notes**: [https://hynek.me/talks/beyond- grep/](https://hynek.me/talks/beyond-grep/)	28	Science & Technology	PT35M51S	2151	2d	hd	false	https://i.ytimg.com/vi/LklGF1rcJII/maxresdefault.jpg		908	10	0	0	0
724	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	X-85QhLeTHI	2015-08-07T11:27:23Z	2015-08-07 11:27:23	Ben Nuttall - Physical computing with Python and Raspberry Pi	Ben Nuttall - Physical computing with Python and Raspberry Pi [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] [Education Summit] With the Raspberry Pi, it's easy to do physical computing directly from Python code - rather than usual embedded hardware engineering in C or Assembler. In this talk I'll show examples of physical computing projects that use Python on Raspberry Pi and demonstrate the sort of code used in such projects. Physical computing with Python is very popular in education - as it's so engaging, and more interesting than printing to the screen. This will be an informative session with learning possibilities to give those new to physical computing a change to get started.	28	Science & Technology	PT35M27S	2127	2d	hd	false	https://i.ytimg.com/vi/X-85QhLeTHI/maxresdefault.jpg		2143	11	0	0	0
725	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lMcNWv6Xatw	2015-08-07T11:27:22Z	2015-08-07 11:27:22	Harry Percival - PythonAnywhere and Education	Harry Percival - PythonAnywhere and Education [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] [Education Summit] Python may be the ideal language for teaching because of its simplicity and readability, but actually getting a working and consistent development environment installed on a diverse set of student (or school) computers can be less than straightforward. And then there's pip, numpy, scipy, windows vs unix command lines... As a result, we've had lots of teachers coming to PythonAnywhere over the years, to skip all these problems. We've recently started adding some extra features to help teachers and students which we're keen to share with the EuroPython audience.	28	Science & Technology	PT26M19S	1579	2d	hd	false	https://i.ytimg.com/vi/lMcNWv6Xatw/maxresdefault.jpg		448	2	0	0	1
726	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xWLFiKfoOTA	2015-08-07T09:39:22Z	2015-08-07 09:39:22	Lynn Root - Diversity: We are not done yet	Lynn Root - Diversity: We are not done yet [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] [Education Summit] The past few years, we have made large strides to welcome more diverse people into our community. You see better gender ratios in attendance numbers at Python conferences, the billed speakers, the amount of women-centric programs. We can see the benefits of outreach. But we're not done yet. While a lot of the Python community embraces the importance of being diverse, we haven't taken that mindset to our workplace. From recruiting, we still hear, "sure, we wanted to recruit women, but we couldn't find them" and "we only focus on quality here, not gender!" Within company cultures, we hear "gender equality isn't a problem here!" or "women don't ask for a higher salary" and to "just lean in!" This talk will recount the diversity efforts of the past few years and quantify the effects on the Python community. But this talk will also address the not-so-low-hanging fruit; the deeper-rooted problems that still plague the community from inside where we work. And it will talk the audience through actionable items to improve one's work place that welcomes more diversity.	28	Science & Technology	PT37M39S	2259	2d	hd	false	https://i.ytimg.com/vi/xWLFiKfoOTA/maxresdefault.jpg		412	4	4	0	0
727	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Zhd1pRQKoNE	2015-08-07T08:46:18Z	2015-08-07 08:46:18	Waits - Incorporando administrado repositorios de información para generar documentación on-demand	Todd Waits - Incorporando administrado repositorios de información para generar documentación on-demand [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] [En Español] Generar documentación de forma dinámica es relevante para los ingenieros de software porque ellos interactúan con la data en el mismo donde está localizada. Es también relevante para los clientes porque la documentación se puede presentar en un formato organizado y claro. En esta presentación, hablaremos de cómo usar un proceso unificado para generar dinámicamente la documentación de diversas fuentes de data incluyendo los wikis y los sistemas de rastreo de incidencias. Idealmente, nosotros como ingenieros deberíamos interactuar solamente con una Fuente de información que nos dara como resultado una documentación vigente y correspondiente al estado actual de un sistema. En el Presente, el cliente recibe documentos incompletos y sin actualización dando una incorrecta impresión del estado vigente de un Sistema. Usando un proceso unificado para generar documentación de solo una Fuente de data permite presentar al cliente lo que se merece: artefactos actualizados y completos dando el real y mas reciente estado de un Sistema. El resto de esta presentación se enfocara en cómo lograr este Sistema. Idealmente, nosotros como ingenieros deberíamos interactuar solamente con una Fuente de información que nos dara como resultado una documentación vigente y correspondiente al estado actual de un sistema. En el Presente, el cliente recibe documentos incompletos y sin actualización dando una incorrecta impresión del estado vigente de un Sistema. Usando un proceso unificado para generar documentación de solo una Fuente de data permite presentar al cliente lo que se merece: artefactos actualizados y completos dando el real y mas reciente estado de un Sistema. El resto de esta presentación se enfocara en cómo lograr este Sistema.	28	Science & Technology	PT30M59S	1859	2d	hd	false	https://i.ytimg.com/vi/Zhd1pRQKoNE/maxresdefault.jpg		85	0	0	0	0
728	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8NIGl_xiCb8	2015-08-07T08:06:00Z	2015-08-07 08:06:00	Yamila Moreno - Lecciones aprendidas en un proyecto grande de Django	Yamila Moreno - Lecciones aprendidas en un proyecto grande de Django [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] [En Español] Un proyecto hecho en Django durante dos años da para muchas anécdotas y mucho aprendizaje. Esta charla es un repaso por las decisiones sobre lo humano y lo técnico que fuimos tomando durante el desarrollo del proyecto. Señalaré las buenas decisiones que tomamos en el equipo, y también las que no nos salieron bien y nos hicieron aprender por las malas. Tanto las buenas como las malas decisiones nos enseñaron muchísimo y aquí las compilo junto con unos cuantos tips que pueden divertir y, ojalá, inspirar a la audiencia, especialmente a aquellas personas que se enfrentan por primera vez a un proyecto grande.	28	Science & Technology	PT22M58S	1378	2d	hd	false	https://i.ytimg.com/vi/8NIGl_xiCb8/maxresdefault.jpg		278	4	0	0	0
729	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sSMPiQZTyrI	2015-08-07T06:58:08Z	2015-08-07 06:58:08	Francisco Fernández Castaño - Knowing your garbage collector	Francisco Fernández Castaño - Knowing your garbage collector [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] As Python programmers we're used to program without taking care about allocating memory for our objects and later on freeing them, Python garbage collector takes care of this task automatically for us. Garbage collection is one of the most challenging topics in computer science, there are a lot of research around the topic and different ways to tackle the problem. Knowing how our language does this process give us a better understanding of underlying interpreter and allow us to know why problems like cycles can happen in CPython interpreters. So, this talk aims to be and introduction to the topic and a walkaround through different approaches followed in CPython and PyPy: * Generational Reference counting with cycles detector on CPython. * Incremental version of the MiniMark GC on PyPy.	28	Science & Technology	PT39M35S	2375	2d	hd	false	https://i.ytimg.com/vi/sSMPiQZTyrI/maxresdefault.jpg		464	1	0	0	0
730	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LP9J93qdZp0	2015-08-07T06:37:26Z	2015-08-07 06:37:26	Alejandro Castillo - Deja de pegarte con tus servicios; import lymph	Alejandro Castillo - Deja de pegarte con tus servicios; import lymph [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] [En Español] ¿Y si pudieras centrarte en la funcionalidad de tus servicios en lugar de programar la integración entre ellos? lymph es un framework con personalidad propia para escribir servicios en Python que te permite hacer justo eso. Incluye descubrimiento de servicios extensible, comunicación vía petición-respuesta, comunicación vía publicación-subscripción extensible y gestión de procesos. A medida que crecen nuestros equipos de desarrollo, nos alejamos cada vez más de una arquitectura monolítica. Queremos empezar a escribir servicios sin tener que preocuparnos de los requisitos de infraestructura. Queremos desarrollar de forma rápida, centrándonos en nuestro trabajo. En esta charla os enseñaremos lo fácil que es desarrollar y ejecutar servicios con lymph. Echad un ojo a http://lymph.io. Esperamos vuestros pull requests.	28	Science & Technology	PT27M55S	1675	2d	hd	false	https://i.ytimg.com/vi/LP9J93qdZp0/maxresdefault.jpg		224	2	0	0	1
731	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cFXvEZr7oFI	2015-08-07T06:37:26Z	2015-08-07 06:37:26	Mikel Larreategi - Python gure etxean: (r)eboluzioa atzo, gaur eta bihar	Mikel Larreategi - Python gure etxean: (r)eboluzioa atzo, gaur eta bihar [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] [Euskara] 2000 urtean CodeSyntax sortu zenetik Python erabili dugu gure lan ia guztiak egiteko. Lan horiek egitean izandako (r)eboluzioa azalduko dugu hitzaldi honetan: python script arruntetatik, Zope aplikazioen zerbitzarian nabigatzaile baten programatzetik, fitxategi sisteman programatzera pasatu gara, Turbogears ere ikutu dugu eta orain Plone, Django eta Pyramid darabilgu. Since the beginning of our company in year 2000 we have been using Python to do our work. We will explain the (r)evolution we faced working with python during this 15 years: small python scripts, browser-based-development using Zope Application Server, we touched Turbogears and now Plone, Django and Pyramid applications. [Aurkezpena Slidesharen dago][1]. [1]: http://www.slideshare.net/erral/python-gure-etxean-reboluzioa-atzo-gaur-eta-bihar	28	Science & Technology	PT17M41S	1061	2d	hd	false	https://i.ytimg.com/vi/cFXvEZr7oFI/maxresdefault.jpg		87	1	0	0	0
732	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4-3zLTg3GKk	2015-08-07T04:20:26Z	2015-08-07 04:20:26	Alessandro Amici - Solving the web most popular code shortening competition in Python.	Alessandro Amici - Solving the web most popular code shortening competition in Python. [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] “Code shortening” is the “sport” where participants strive to achieve the shortest possible source code that solves a programming problem by exploiting all the tricks and quirks of the language. The [SIZECON on SPOJ][1] is one of the oldest and most popular code shortening problems on the web with a bizarre twist, only character above ASCII value 32 are counted for the penalty. During the talk we will take a journey into some frightening depths of the Python language in order to write shorter and shorter solutions to SIZECON until, exploiting a number of truly mind-blowing tricks, we will reach the current record solution of 28 characters (above ASCII 32!). I promise I’ll show you the most obfuscated, contrived and sick python code you have ever seen and (hopefully!) will ever see. I invite participants to give [SIZECON][1] a try and check their score against the [Python2][2] and [Python3][3] SPOJ rankings. *Slides:* [http://slides.com/alessandroamici/solving-the-web-most- popular-shortening-contest-with-python][4] [1]: http://www.spoj.com/problems/SIZECON/ [2]: http://www.spoj.com/ranks/SIZECON/lang=PYTH%202.7 [3]: http://www.spoj.com/ranks/SIZECON/lang=PYTH%203.2.3 [4]: http://slides.com/alessandroamici/solving-the-web-most-popular-shortening-contest-with-python	28	Science & Technology	PT40M8S	2408	2d	hd	false	https://i.ytimg.com/vi/4-3zLTg3GKk/maxresdefault.jpg		1112	14	0	0	0
733	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DOQUPQZTXXs	2015-08-07T04:20:26Z	2015-08-07 04:20:26	Kyle Knapp - It Works on My Machine: Writing Python Code for Any Environment	Kyle Knapp - It Works on My Machine: Writing Python Code for Any Environment [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Have you ever developed a nice, well-working python program on one environment, only to have it blow up with exceptions and tracebacks when you run it on a different environment? Have no fear! This talk will show you how to write and maintain python code that is compatible across environments that may differ by python versions and/or operating systems. Techniques and tips will be drawn from lessons and experiences gained from making the AWS CLI, a python-based command line tool to manage AWS resources, compatible across a wide range of environments. In a case-study-like format, real-life compatibility issues encountered while developing the AWS CLI will be presented along with how we resolved each of them. These real-life examples will encompass, but will not be limited to, the following topics: • How to use functions and classes that may differ across python versions and/or operating systems • How to handle version-specific bugs • How to handle strings, bytes, and Unicode across python versions • How to handle differing locale settings • How to handle file operations across operating systems • How and when to vendor dependencies • How to write tests that are compatible across python versions and operating systems • How to create a testing environment that monitors compatibility of code across various environments Ultimately, the goal of these examples is introduce to you some effective, real-world programming practices to overcome your current or next compatibility issue.	28	Science & Technology	PT37M52S	2272	2d	hd	false	https://i.ytimg.com/vi/DOQUPQZTXXs/maxresdefault.jpg		738	6	0	0	1
734	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ukxOwyKie-Q	2015-08-07T04:20:26Z	2015-08-07 04:20:26	Anders Lehmann - Online Education: challenges and opportunities for Staff and Students	Anders Lehmann - Online Education: challenges and opportunities for Staff and Students [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] [Education Summit] From september 2015 Aarhus School of Engineering will offer the education Bachelor of Electronic Engineering, as a combined online and on campus education. In the talk I will describe the technical and pedagogical setup, we are working at to meet the challenges of having both on-site and remote students. I will also touch on how IPython Notebook, will be part of the technical setup, and how it can be incorporated into the teaching.	28	Science & Technology	PT24M17S	1457	2d	hd	false	https://i.ytimg.com/vi/ukxOwyKie-Q/maxresdefault.jpg		179	1	0	0	1
735	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6EBBWv6tuA8	2015-08-06T21:12:28Z	2015-08-06 21:12:28	Hitul Mistry - Python Multithreading and Multiprocessing: Concurrency and Parallelism	Hitul Mistry - Python Multithreading and Multiprocessing: Concurrency and Parallelism [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] In this talk, people will get introduced to python threading and multiprocessing packages. This talk will cover multiprocessing/threaded development best practices, problems occurs in development, things to know before multiprocessing/multi-threading. After this talk attendees will be able to develop multiprocessing/threaded applications. This talk will cover threads, global interpreter lock, thread pool, processes, process pool, synchronization locks - Lock & RLock , semaphores, events, condition, timer, pipes, queue, shared memory. This talk will also cover best practices and problems in multiprocessing and threaded application development.	28	Science & Technology	PT30M48S	1848	2d	hd	false	https://i.ytimg.com/vi/6EBBWv6tuA8/maxresdefault.jpg		2193	4	5	0	5
736	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-Jm_ZNPIqjY	2015-08-06T21:12:27Z	2015-08-06 21:12:27	Sever Banesiu - Distributed Workflows with Flowy	Sever Banesiu - Distributed Workflows with Flowy [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] This presentation introduces Flowy, a library for building and running distributed, asynchronous workflows built on top of different backends (such as Amazon’s SWF). Flowy deals away with the spaghetti code that often crops up from orchestrating complex workflows. It is ideal for applications that do multi-phased batch processing, media encoding, long-running tasks, and/or background processing. We'll start by discussing Flowy's unique execution model and see how different execution topologies can be implemented on top of it. During the talk we'll run and visualize workflows using a local backend. We'll then take a look at what it takes to scale beyond a single machine by using an external service like SWF.	28	Science & Technology	PT38M29S	2309	2d	hd	false	https://i.ytimg.com/vi/-Jm_ZNPIqjY/maxresdefault.jpg		492	2	0	0	0
737	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9SP54aEmmVw	2015-08-06T21:12:27Z	2015-08-06 21:12:27	Alessio Siniscalchi - Citizen Science: Tracking Aliens with Python!	Alessio Siniscalchi - Citizen Science: Tracking Aliens with Python! [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] The talk discusses the challenges of implementing a Citizen Science Paradigm in a Python-centric platform, and the solutions devised for the System for observation and monitoring of Marine Alien Species, currently used by the italian Institute for Environmental Protection and Research (ISPRA). "Alien" Species means species introduced into a natural environment where they are not normally found. Topics includes strategies for crowd-friendly forms, work-flow definition for collected data, choice of the best technologies for its components: app for android devices, web application for citizens and experts, webGIS for data browsing and web services for data exporting.	28	Science & Technology	PT24M53S	1493	2d	hd	false	https://i.ytimg.com/vi/9SP54aEmmVw/maxresdefault.jpg		336	2	0	0	0
738	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pwmZ7AGhcuo	2015-08-06T21:12:27Z	2015-08-06 21:12:27	João Santos - Using Git Hooks to Help Your Engineering Teams Work Autonomously	João Santos - Using Git Hooks to Help Your Engineering Teams Work Autonomously [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] In this talk, Software Engineer Joao Santos will describe how the engineering team at Zalando has been migrating to local Git hooks to ensure that engineers can work autonomously and flexibly. Zalando--- Europe’s leading online fashion platform for men, women and children-- began shifting from SVN to Git in late 2013. Santos and his colleagues used Python to create a Git update hook that enabled the team to reject changes to a branch while still allowing changes to other branches. He’ll explain why his team chose Python for this job instead of a bash script, point out mistakes made during the process (and solutions his team used to fix them), and the benefits generated by this migration. He’ll also talk about turnstile: a set of open-source, configurable, optional local Git hooks, created by the Zalando team, that enables engineers to abide by internal rules for committing code while following their own coding style and workflow preferences.	28	Science & Technology	PT25M26S	1526	2d	hd	false	https://i.ytimg.com/vi/pwmZ7AGhcuo/maxresdefault.jpg		443	0	0	0	0
739	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	069YOG8HaXw	2015-08-06T21:12:26Z	2015-08-06 21:12:26	oier etxaniz - Karakate magaletik EuroPythoneko tontorrera	oier etxaniz - Karakate magaletik EuroPythoneko tontorrera [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] [Euskara] Orain dela urte batzuk asi genuen bidea azalduko dut, Python San Sebastian elkartea nola sotu genuen eta hortik pixkanaka pixkanaka nola sortzen joan den EuroPython sortzeko grina. Gendeari nahi izan eskero eta lan egin eskero EuroPython bezelako kongresu bat antolatzea posible dela erakustea du helburu hitzaldi honek.	28	Science & Technology	PT17M48S	1068	2d	hd	false	https://i.ytimg.com/vi/069YOG8HaXw/maxresdefault.jpg		182	1	0	0	1
740	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	62_jD-8zV4M	2015-08-06T21:12:26Z	2015-08-06 21:12:26	Jan Pazdziora - External authentication for Django projects	Jan Pazdziora - External authentication for Django projects [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] When applications get deployed in enterprise environment or in large organizations, they need to support user accounts and groups that are managed externally, in existing directory services like FreeIPA or Active Directory, or federated via protocols like SAML. While it is possible to add support for these individual setups and protocols directly to application code or to Web frameworks or libraries, often it is better to delegate the authentication and identity operations to a frontend server and just assume that the application has to be able to consume results of the external authentication and identity lookups. In this talk, we will look at Django Web framework and how with few small changes to the framework and to the application we can extend the functionality of existing RemoteUserMiddleware and RemoteUserBackend to consume users coming from enterprise identity management systems. We will focus on using proven OS-level components such as SSSD for Web applications, but will also show setup using federation.	28	Science & Technology	PT35M9S	2109	2d	hd	false	https://i.ytimg.com/vi/62_jD-8zV4M/maxresdefault.jpg		5803	21	0	0	1
741	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	uPeHwxfYB_I	2015-08-06T21:12:26Z	2015-08-06 21:12:26	Timo Stollenwerk - The Butler and the Snake - Continuous Integration for Python	Timo Stollenwerk - The Butler and the Snake - Continuous Integration for Python [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Continuous Integration is a software development practice where members of a team integrate their work frequently, leading to multiple integrations per day. Each integration is verified by an automated process (including tests) to detect integration errors as quickly as possible. This talk will introduce the basic principles for building an effective Continuous Integration system for Python-based projects. It will present the lessons learned from building a Jenkins-based CI system for an Open Source project with a distributed team of more than 340 core developers that ranks among the top 2% of all open source projects worldwide (Plone).	28	Science & Technology	PT27M51S	1671	2d	hd	false	https://i.ytimg.com/vi/uPeHwxfYB_I/maxresdefault.jpg		537	6	0	0	0
742	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	EQCtGIdA0nE	2015-08-06T21:12:25Z	2015-08-06 21:12:25	Getting started with Bokeh / Let's build an interactive data visualization for the web..in Python!	Sarah Bird - Getting started with Bokeh / Let's build an interactive data visualization for the web..in Python! [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Slides: [birdsarah.github.io/europython-2015-bokeh][1] As a web developer, I find myself being asked to make increasing numbers of data visualizations, interactive infographics, and more. d3.js is great, as are many other javascript toolkits that are out there. But if I can write more Python and less JavaScript... well, that makes me happy! Bokeh is a new Python library for interactive visualization. Its origins are in the data science community, but it has a lot to offer web developers. In this mini-tutorial, I'll run through how to build a data visualization in Bokeh and how to hook it into your web application. This will be a real-world example, that was previously built in d3.js. Along the way, I'll provide tips and tricks that I've discovered in my experience including how Bokeh works wonderfully with the iPython notebook which I use to prototype my visualizations, and many data science people use as their native way to explore data. For those of you who already know a little Bokeh, I'll be covering the new "actions framework" that lets you write JS callbacks in your python code so you can do lots of interactions all on the client side. [1]: http://birdsarah.github.io/europython-2015-bokeh/	28	Science & Technology	PT38M46S	2326	2d	hd	false	https://i.ytimg.com/vi/EQCtGIdA0nE/maxresdefault.jpg		10302	53	8	0	3
743	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nrSZthcAN2U	2015-08-06T21:12:25Z	2015-08-06 21:12:25	Tibor Arpas - Mashing up py.test, coverage.py and ast.py to take TDD to a new level	Tibor Arpas - Mashing up py.test, coverage.py and ast.py to take TDD to a new level [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Users and developers especially, hate waiting. Computing has adapted and we almost never wait for the computer for more then 10 seconds. One big exception is runnig a test suite which takes MINUTES on many projects. That is incredibly distracting, frustrating and dragging the whole concept of automated tests down. I present a technique and a tool (py.test plugin called "testmon") which automatically selects only tests affected by recent changes. Does it sound too good to be true? Python developers rightfully have a suspecting attitude towards any tool which tries to be too clever about their source code. Code completion and symbol searching doesn't need to be 100% reliable but messing with the test suite execution? I show that we can cut test suite execution time significantly but maintain it's reliability.	28	Science & Technology	PT26M	1560	2d	hd	false	https://i.ytimg.com/vi/nrSZthcAN2U/maxresdefault.jpg		1215	5	2	0	0
744	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qYGlMCk15hs	2015-08-06T15:10:10Z	2015-08-06 15:10:10	Sam Thursfield - Introduction to Baserock	Sam Thursfield - Introduction to Baserock [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] The Baserock project is about creating system images from source code in a clean, reproducible way. All of the tooling is written in Python. In this talk I'll explain a bit about the core idea of Baserock: declarative system definitions (expressed in YAML) that can be built and deployed in various ways. Then I'll go into more detail about the tools available, and some of the cool things that they can do: distributed building, atomic system updates, creating custom container images, and more. Find out more about the Baserock project at http://www.baserock.org/	28	Science & Technology	PT35M29S	2129	2d	hd	false	https://i.ytimg.com/vi/qYGlMCk15hs/maxresdefault.jpg		374	6	0	0	0
745	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PckwHNNe8pw	2015-08-06T15:10:09Z	2015-08-06 15:10:09	Alessandro Molina - Why storing files for the web is not as straightforward as you might think.	Alessandro Molina - Why storing files for the web is not as straightforward as you might think. [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] DEPOT ( http://depot.readthedocs.org/en/latest/ ) is a file storage framework born from the experience on a project that saved a lot of files on disk, until the day it went online and the customer system engineering team decided to switch to Heroku, which doesn't support storing files on disk. The talk will cover the facets of a feature "saving files" which has always been considered straightforward but that can become complex in the era of cloud deployment and when infrastructure migration happens. After exposing the major drawbacks and issues that big projects might face on short and long terms with file storage the talk will introduce DEPOT and how it tried to solve most of the issues while providing a super-easy-to-use interface for developers. We will see how to use DEPOT to provide attachments on SQLAlchemy or MongoDB and how to handle problems like migration to a different storage backend and long term evolution. Like SQLAlchemy makes possible to switch your storage on the fly without touching code, DEPOT aims at making so possible for files and even use multiple different storages together.	28	Science & Technology	PT39M20S	2360	2d	hd	false	https://i.ytimg.com/vi/PckwHNNe8pw/maxresdefault.jpg		413	1	0	0	0
746	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UUkyzCwgqPw	2015-08-06T15:10:09Z	2015-08-06 15:10:09	Stephan Jaensch - Building mobile APIs with services at Yelp	Stephan Jaensch - Building mobile APIs with services at Yelp [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] At Yelp, we ship code multiple times a day and have maintained this pace as our team has grown to 300+ and our codebase to several million lines of Python code. This talk explores the pain points we experienced along the ways, how our service-oriented architecture alleviates them, and the infrastructure we built to develop, test, and deploy in this highly-distributed environment. As a case study, we’ll be looking at the backend powering the new Yelp Business Owner Android and iOS apps. At the start, most of the development at Yelp occurred in a single, monolithic web application, creatively named “yelp-main” (naming is hard!). As the company grew, our developers were spending increasing amounts of time trying to ship code. After recognizing this pain point, we started experimenting with a service oriented architecture to scale the development process, and so far it’s been a resounding success. Over the course of the last three years, we’ve gone from writing our first service to having over seventy production services. Along the way, we’ve dabbled with Docker containers, Pyramid, SQLAlchemy, uWSGI, gevent, and virtualenv in an effort to build the next-generation service platform for our engineers.	28	Science & Technology	PT37M44S	2264	2d	hd	false	https://i.ytimg.com/vi/UUkyzCwgqPw/maxresdefault.jpg		605	4	0	0	0
747	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	et0Hnntk3-s	2015-08-06T15:10:09Z	2015-08-06 15:10:09	Bhaumik Shukla - Python for Cloud Services and Infrastructure Management	Bhaumik Shukla - Python for Cloud Services and Infrastructure Management [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] This talk is about how python is used in cloud computing as well as used while configuring cloud infrastructure. It also gives brief about tools and technologies/libraries can be used for number of tasks while cloud development/execution. Developers and all python lovers are the perfect audience for this talk. They will get the brief about reliable stack of python based tools used in cloud development and also will be sharing the experience with python. Summary: Python in cloud. Kind of services can be build with python. Python based tools used in deployment and configuration management for the cloud. For every python lovers - How to create a python friendly cloud infrastructure with great reliable combination of many stable tools. Stability. Experience sharing.	28	Science & Technology	PT18M47S	1127	2d	hd	false	https://i.ytimg.com/vi/et0Hnntk3-s/maxresdefault.jpg		474	1	0	0	0
748	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	VAbTDiYsY6U	2015-08-06T11:37:15Z	2015-08-06 11:37:15	James Robinson - Raspberry Pi Weather Station	James Robinson - Raspberry Pi Weather Station [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] [Education Summit] The Raspberry Pi weather station project introduces young people to using python programming to solve real and technical problems. The weather station consists of a range of sensors including: Anemometer Rain gauge Wind Vane Temperature Probe Barometer Air Quality Sensor Hygrometer 1000 kits are being given away to schools to take part in the project by following our schemes of work which will involve. Programming basic interrupt based sensors Advanced Sensors using ADC chips Create a pygame based UI Logging data to MySQL and Oracle Apex Presenting data to a web app Deploying the weather station Integrating Apex database We would love feedback on the project from Python Developers and support in updating some libraries from python 2 to 3.	28	Science & Technology	PT22M43S	1363	2d	hd	false	https://i.ytimg.com/vi/VAbTDiYsY6U/maxresdefault.jpg		4694	16	2	0	3
749	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jSxBHLqeX-A	2015-08-06T11:37:14Z	2015-08-06 11:37:14	Raúl Cumplido - Metaprogramación en Python	Raúl Cumplido - Metaprogramación en Python [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] [En Español] Según wikipedia: "La metaprogramación consiste en escribir programas que escriben o manipulan otros programas (o a sí mismos) como datos, o que hacen en tiempo de compilación parte del trabajo que, de otra forma, se haría en tiempo de ejecución. Esto permite al programador ahorrar tiempo en la producción de código." En esta charla veremos diferentes mecanismos que Python proporciona como: - Decoradores - Metaclasses - Descriptors A través de varios ejemplos veremos como reutilizar código en varias funciones y clases, como modificar como nuestras clases se generan, como se genera una clase (que funciones se llaman cuando una clase se crea) o como se genera una instancia. Veremos también que fácilmente se nos puede ir de las manos y como utilizar con cuidado las herramientas que Python nos proporciona.	28	Science & Technology	PT33M18S	1998	2d	hd	false	https://i.ytimg.com/vi/jSxBHLqeX-A/maxresdefault.jpg		918	13	0	0	0
750	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	js_5dDRWe48	2015-08-06T11:37:14Z	2015-08-06 11:37:14	Jesús Espino - Todo es una trampa	Jesús Espino - Todo es una trampa [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] [En Español] A día de hoy usamos un enorme conjunto de bibliotecas y frameworks, además los usamos con cierta libertad dentro de nuestro código, y pasado el tiempo nos damos cuenta de que esa biblioteca, no cubre mis necesidades, o tiene algún fallo, o no escala bien en proyectos más grandes... en resumen, hemos caído en una trampa. No se puede evitar caer en estas trampas, porque depende de nuestras necesidades y las bibliotecas que utilizamos, por lo tanto, solo podemos estar lo mejor preparados posibles para salir de ellas tan pronto como nos demos cuenta. Como solución a esto, plantearé varias vías (nada innovadoras, pero menos usadas de lo que deberían). Unit testing (TDD idealmente), arquitectura hexagonal, y algunas reglas básicas de clean code.	28	Science & Technology	PT29M36S	1776	2d	hd	false	https://i.ytimg.com/vi/js_5dDRWe48/maxresdefault.jpg		285	1	0	0	0
751	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rMn2wC0PuXw	2015-08-06T11:37:14Z	2015-08-06 11:37:14	Ana Balica - Demystifying Mixins with Django	Ana Balica - Demystifying Mixins with Django [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Mixins are a great way to keep an application decoupled. This talk is about building mixins and dissecting what's behing the mixin "magic" and that, in fact, there is no magic involved at all. The main focus will be on Django framework while digging into mixins. When using Django class-based views, mixins feel very natural. **Goal**: by the end of this talk, every developer should be confident about creating his or her own custom mixins. **Prerequisites:** - basic understanding of OOP principles and their application in Python - Django web framework Generally mixins in Python are pretty straight-forward, easy to create and use. Nevertheless a lot of developers stay away from them. I think attendees of this talk will be interested to learn that mixins are not that complex and their benefit is tremendous.	28	Science & Technology	PT24M23S	1463	2d	hd	false	https://i.ytimg.com/vi/rMn2wC0PuXw/maxresdefault.jpg		5822	131	4	0	11
752	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pSaL7QFwwmQ	2015-08-06T08:37:22Z	2015-08-06 08:37:22	Fabio Pliger/Marc-André Lemburg - EuroPython 2016: Help us build the next edition!	Fabio Pliger/Marc-André Lemburg - EuroPython 2016: Help us build the next edition! [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] We need help with organizing and running EuroPython 2016. In this session, we will explain how the EuroPython workgroup model works and where you could help.	28	Science & Technology	PT40M47S	2447	2d	hd	false	https://i.ytimg.com/vi/pSaL7QFwwmQ/maxresdefault.jpg		521	0	0	0	0
753	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UNr49W08vnc	2015-08-06T08:27:23Z	2015-08-06 08:27:23	Andrey Syschikov - Practical usage of advanced Python constructs	Andrey Syschikov - Practical usage of advanced Python constructs [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Python is a language of choice for developers with wide range of experience, for some it is a first programming language, others switch to Python after years of experience. Python provides friendly syntax and smooth learning curve. This sometimes leads to developers lacking comprehension of some more advanced constructs. It happens that experienced developers jump into using Python and sometimes miss less known Python language constructs. On the other hands people who purposefully learned Python sometimes lack practical ideas for how to apply those constructs. This talk will be specifically focused on the practical usages of advanced Python constructs like iterators, generators, decorators and context managers. Goal of the talk is to share ideas about how those constructs can be used for practical purposes in real projects. Prior knowledge is not required, there will be a brief introduction to every construct being presented.	28	Science & Technology	PT31M58S	1918	2d	hd	false	https://i.ytimg.com/vi/UNr49W08vnc/maxresdefault.jpg		4514	52	2	0	4
754	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NtAKQIrIU7w	2015-08-06T06:45:52Z	2015-08-06 06:45:52	Maciej Kula - Speeding up search with locality sensitive hashing	Maciej Kula - Speeding up search with locality sensitive hashing [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Locality sensitive hashing (LSH) is a technique for reducing complex data down to a simple hash code. If two hash codes are similar than the original data is similar. Typically, they are used for speeding up search and other similarity comparisons. In this presentation I will discuss two ways of implementing LSH in python; the first method is completely stateless but only works on certain forms of data; the second is stateful but does not make any assumptions about the distribution of the underlying data. I will conclude the presentation by describing how we apply LSH to search at Lyst.	28	Science & Technology	PT24M6S	1446	2d	hd	false	https://i.ytimg.com/vi/NtAKQIrIU7w/maxresdefault.jpg		1648	24	0	0	2
755	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XuEjV30OQT4	2015-08-06T06:45:52Z	2015-08-06 06:45:52	James Robinson - Pycon - A teacher's perspective	James Robinson - Pycon - A teacher's perspective [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] [Education Summit] A perspective of the impact of the PyconUK education track from the point of view of teachers and educators. Having attended the education track at Pycon UK 2014 as a teacher, my talk will share both my experiences and those of other teachers attending. The education track bought educators and developers together in a way that allowed the teachers to get support and advice whilst developers get to support teachers in developing exciting & real applications for teaching computing. The talk will focus on two aspects of the education track. The workshops delivered for teachers by python developers and how this helps build teachers confidence. But also the breakout sessions where educators and developers with common interests can work together to develop something. This might be a program / library or a teaching resource, some developers gave a hands on and bespoke training session to a group of teachers. If we are to get more young people programming or at least having a positive experience of programming then we need to minimize obstacles to that experience. By having educators and developers working together we can identify those obstacles and eliminate them! https://goo.gl/nt05hC	28	Science & Technology	PT33M49S	2029	2d	hd	false	https://i.ytimg.com/vi/XuEjV30OQT4/maxresdefault.jpg		894	5	0	0	1
756	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ztfdv9jcxtw	2015-08-06T06:45:52Z	2015-08-06 06:45:52	Wilhelm - "It's about time to take your medication!" or how to write a friendly reminder bot ;-)	Florian Wilhelm - "It's about time to take your medication!" or how to write a friendly reminder bot ;-) [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] The author shows how to use the [SleekXMPP][1] library in order to write a small chatbot that connects to Google Hangouts and reminds you or someone else to take medication for instance. The secure and recommended OAuth2 protocol is used to authorize the bot application in the [Google Developers Console][2] in order to access the Google+ Hangouts API. The author will elaborate then on how to use an event- driven library to write a bot that sends scheduled messages, waits for a proper reply and repeats the question if need be. Thereby, a primer on event-driven architectures will be given. [1]: http://sleekxmpp.readthedocs.org/ [2]: https://console.developers.google.com/	28	Science & Technology	PT30M30S	1830	2d	hd	false	https://i.ytimg.com/vi/ztfdv9jcxtw/maxresdefault.jpg		468	2	0	0	1
757	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MA9zIXHwoag	2015-08-06T06:45:51Z	2015-08-06 06:45:51	Radosław Jan Ganczarek - Code Quality in Python - tools and reasons	Radosław Jan Ganczarek - Code Quality in Python - tools and reasons [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Beginner's guide to Python code quality. I'll talk about the tools for code analysis, differences between them, extending them with new features and ways to running them automatically. In the end, I'll talk about reasons behind all of these tools and try to convince you to using them in your projects (but if you are against it - I'll gladly listen to your arguments).	28	Science & Technology	PT28M42S	1722	2d	hd	false	https://i.ytimg.com/vi/MA9zIXHwoag/maxresdefault.jpg		569	3	0	0	0
758	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Okz6agNgaTA	2015-08-06T06:45:51Z	2015-08-06 06:45:51	Michael Kuehne - TDD for APIs	Michael Kuehne - TDD for APIs [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] It is always tough to test a complex API comprehensively. The additional level of complexity brings us to the question "How can we validate that our API is working as intended?" In this talk I will explain how to use test driven development for APIs to solve this problem and even further how TDD can drive an API Design towards a more usable design. I will outline my practical approach with an implementation example based on django. And finally I will give you a brief summary of my lessons learned using this approach in customer projects.	28	Science & Technology	PT41M28S	2488	2d	hd	false	https://i.ytimg.com/vi/Okz6agNgaTA/maxresdefault.jpg		440	7	0	0	0
759	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xm3nkXvUJ2k	2015-08-06T06:45:51Z	2015-08-06 06:45:51	Petr Viktorin - Import Deep Dive	Petr Viktorin - Import Deep Dive [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Whatever you need to do with Python, you can probably import a library for it. But what exactly happens when you use that import statement? How does a source file that you've installed or written become a Python module object, providing functions or classes for you to play with? While the import mechanism is relatively well-documented in the reference and dozens of PEPs, sometimes even Python veterans are caught by surprise. And some details are little-known: did you know you can import from zip archives? Write CPython modules in C, or even a dialect of Lisp? Or import from URLs (which might not be a good idea)? This talk explains exactly what can happen when you use the import statement – from the mundane machinery of searching PYTHONPATH through subtle details of packages and import loops, to deep internals of custom importers and C extension loading.	28	Science & Technology	PT27M44S	1664	2d	hd	false	https://i.ytimg.com/vi/xm3nkXvUJ2k/maxresdefault.jpg		284	6	0	0	0
760	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3NdFVbNOZ1o	2015-08-06T06:45:50Z	2015-08-06 06:45:50	Fernando Masanori Ashikaga - Data Structures with Python	Fernando Masanori Ashikaga - Data Structures with Python [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] [Education Summit] Data Structures is traditionally a “bogeyman” discipline in Computer Science courses and has a high degree of failure. In FATEC São José dos Campos we are adopting a hybrid approach, with C and Python languages. The failure rate decreased from 85% (2008) to 12% (2014). The talk will be extensively illustrated with code in C and Python, addressing the various concepts taught in this course: recursion, linked lists, queues, stacks, sorting algorithms.	28	Science & Technology	PT27M22S	1642	2d	hd	false	https://i.ytimg.com/vi/3NdFVbNOZ1o/maxresdefault.jpg		621	8	3	0	0
761	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NKvayNMeSZM	2015-08-06T06:45:50Z	2015-08-06 06:45:50	Roy Simkes - Preparing Apps for Dynamic Scaling	Roy Simkes - Preparing Apps for Dynamic Scaling [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Scalability is a big problem for everyone who wants to grow. In order to handle the demand, appropriate infrastructure both in terms of software and hardware should be met. What if hardware was as dynamic as a service where CPU and RAM could have been acquired when only it's needed. Is there such an environment? How can you work with it? What you should be careful of? How your applications should evolve?	28	Science & Technology	PT25M	1500	2d	hd	false	https://i.ytimg.com/vi/NKvayNMeSZM/maxresdefault.jpg		175	1	1	0	0
762	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_X41eTYz-_k	2015-08-06T06:45:50Z	2015-08-06 06:45:50	Rafał Nowicki - BDD: You’re doing it wrong!	Rafał Nowicki - BDD: You’re doing it wrong! [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] Talk about mistakes we made and best practises we have elaborated while implementation Behave Driven Development into one of the projects. Great idea to coverage whole application with functional tests fall down in development chaos and reborn on new better foundations. Project referred is web-based big data management which main features are transcoding and file sharing. Thanks to Django and many Python frameworks we have web interface for it and we are able to run automation tests with Selenium.	28	Science & Technology	PT20M2S	1202	2d	hd	false	https://i.ytimg.com/vi/_X41eTYz-_k/maxresdefault.jpg		543	0	0	0	0
763	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	GsGHwfXwBpI	2015-08-06T06:45:49Z	2015-08-06 06:45:49	Jose Ortega - Python Security & Cryptography	Jose Ortega - Python Security & Cryptography [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] The talk would aim to introduce cryptography and security from the developer point of view, showing ways to encrypt information with Python scripts and more sensitive information in web applications using django. I will introduce to security in python ,showing some libraries that allow encryption and decryption like PyCrypto or M2Crypto,comparing theses libraries with the cryptography module.At the same time,I will show the main ciphers and hashing algorithms used in these libraries like AES,DES,RSA and some examples illustrating each case.I wil show other techniques like steganography for hiding information in files(images,documents,programs) with some libraries like Stepic or ezPyCrypto. Finally,I will comment OWASP Python Security Project where we can find some useful practices and secure coding guidelines for detecting potential security vulnerabilities in our applications like SQL injection or Cross-site scripting. **Slides** [https://speakerdeck.com/jmortega/python-cryptography-and-security][1] [1]: https://speakerdeck.com/jmortega/python-cryptography-and-security	28	Science & Technology	PT38M50S	2330	2d	hd	false	https://i.ytimg.com/vi/GsGHwfXwBpI/maxresdefault.jpg		967	4	0	0	1
764	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XaoT65DUbYA	2015-08-06T06:45:49Z	2015-08-06 06:45:49	Josef Heinen - Getting more out of Matplotlib with GR	Josef Heinen - Getting more out of Matplotlib with GR [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Python is well established in software development departments of research and industry, not least because of the proliferation of libraries such as _SciPy_ and _Matplotlib_. However, when processing large amounts of data, in particular in combination with GUI toolkits (_Qt_) or three-dimensional visualizations (_OpenGL_), Python as an interpretative programming language seems to be reaching its limits. In particular, large amounts of data or the visualization of three- dimensional scenes may overwhelm the system. This presentation shows how visualization applications with special performance requirements can be designed on the basis of _Matplotlib_ and _GR_, a high-performance visualization library for Linux, OS X and Windows. The lecture focuses on the development of a new graphics backend for _Matplotlib_ based on the _GR_ framework. By combining the power of those libraries the responsiveness of animated visualization applications and their resulting frame rates can be improved significantly. This in turn allows the use of _Matplotlib_ in real- time environments, for example in the area of signal processing. Using concrete examples, the presentation will demonstrate the benefits of the [GR framework][1] as a companion module for _Matplotlib_, both in _Python_ and _Julia_. Based on selected applications, the suitability of the _GR framework_ will be highlighted especially in environments where time is critical. The system’s performance capabilities will be illustrated using demanding live applications. In addition, the special abilities of the _GR framework_ are emphasized in terms of interoperability with graphical user interfaces (_Qt/PySide_) and _OpenGL_, which opens up new possibilities for existing _Matplotlib_ applications. [1]: http://gr-framework.org	28	Science & Technology	PT21M4S	1264	2d	hd	false	https://i.ytimg.com/vi/XaoT65DUbYA/maxresdefault.jpg		544	3	0	0	0
765	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eaj74A9c82Y	2015-08-06T06:45:49Z	2015-08-06 06:45:49	Haikel Guemar - The Lightweight Cloud Servers War Begins	Haikel Guemar - The Lightweight Cloud Servers War Begins [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Docker has introduced a new model of deployment solving the infamous "Deployment Matrix from Hell" by using containers. But this also brought the spotlight back on the Operating System side, and following the trails of CoreOS and Atomic Host, a new generation of Cloud Servers are born by using containers instead of traditional RPM/DPKG/tarball/whaterver packages model to deploy services. CoreOS/Atomic Host/Snappy Ubuntu and now VMWare Photon also provides transactional image-based OS focusing on security and built-in cluster management. During this talk, we'll present these next-gen OS, and their components and how they fit in.	28	Science & Technology	PT31M	1860	2d	hd	false	https://i.ytimg.com/vi/eaj74A9c82Y/maxresdefault.jpg		169	0	0	0	0
766	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5hULMNzKgJg	2015-08-05T20:33:58Z	2015-08-05 20:33:58	Yamila Moreno - Learnt lessons in a big Django Project	Yamila Moreno - Learnt lessons in a big Django Project [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] A Django project, developed for 2 years is a valuable source of anecdotes and wisdom. This talk is a review on the decissions, about human and tech, that my team took during the project. I'll point out the good decissions as well as the bad ones, those which made us learn "the hard way". Both good and bad decissions taught us a lot, and here I compile them, together with a handful of tips which can amuse and, hopefully, inspire the audience, specially those who are facing for the first time a big project.	28	Science & Technology	PT21M39S	1299	2d	hd	false	https://i.ytimg.com/vi/5hULMNzKgJg/maxresdefault.jpg		431	2	0	0	0
767	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Qxg1n8as06s	2015-08-05T20:33:58Z	2015-08-05 20:33:58	Anders Lehmann - How to GIS with Python	Anders Lehmann - How to GIS with Python [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] In this talk I will present some tools for working with Geographic Information Systems in Python. Geographic information Systems are widely used for managing geographic (map) data. As an example I will present how to use Open Street Map data (http://openstreetmap.org/), in routing, traffic planning and estimation of pollution emission. For the purpose of the project EcoSense (http://ecosense.au.dk), GPS data from users smartphones are mapped to OSM roads. The map matching algorithm is written in Python and uses data from the database PostgreSQL, with the PostGIS extension. One of the goals of the EcoSense project is to devise methods to improve the estimation of air quality in urban environments.	28	Science & Technology	PT40M39S	2439	2d	hd	false	https://i.ytimg.com/vi/Qxg1n8as06s/maxresdefault.jpg		7578	40	6	0	7
768	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	byctbj2AKWc	2015-08-05T20:33:58Z	2015-08-05 20:33:58	Brianna Laugher - The realities of open source testing: lessons learned from “Adopt pytest month”	Brianna Laugher - The realities of open source testing: lessons learned from “Adopt pytest month” [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] Ever feel like your open source project could be better tested? Lack of tests holding you back from contributors but you don’t know where to start? You’re not alone. [“Adopt pytest month”][1] was held in April 2015. [Pytest][2] volunteers were paired with open source software projects, to find a path to better testing with pytest. Projects varied from libraries/command line utilities, to a browser, to a complex Django app. In some cases converting existing tests was necessary, in others writing the first tests in existence for non-trivial amounts of code. Two projects were open sourced specifically to take part in “adopt pytest month”. What began as an experiment in increasing software audience proved to be an interesting exercise in strengthening community and most valuable of all, provided a newcomer’s perspective to veteran contributors. This talk will discuss what worked well with “adopt pytest month”, what didn’t, what we learned about pytest and what you could take away for your open source project, be it an improved testing environment or an improved contributor community. A basic knowledge of testing and pytest will be useful. [1]: http://pytest.org/latest/adopt.html [2]: http://pytest.org/latest/	28	Science & Technology	PT26M19S	1579	2d	hd	false	https://i.ytimg.com/vi/byctbj2AKWc/maxresdefault.jpg		228	4	0	0	0
769	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	n8PTMoKHfkk	2015-08-05T20:33:57Z	2015-08-05 20:33:57	Andreas Kaiser - Standing on the Shoulders of Giants: The Kotti Web Application Framework	Andreas Kaiser - Standing on the Shoulders of Giants: The Kotti Web Application Framework [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Kotti is a high-level, Pythonic web application framework based on Pyramid, SQLAlchemy and Bootstrap 3. It includes an extensible Content Management System called the Kotti CMS. Kotti is particularly well suited for building custom applications with object level security. It comes with complete user and group management and supports the concepts of global and local roles providing management views for each of those. The talk will give an overview on Kotti, its philosophy, history and future. Target audience are people who want to learn what it is and can be used for. Because Kotti is just a rather small layer on top of its foundations, the talk might also give some interesting insights on how to build a solid (web) framework that suits your personal preferences. References: - http://kotti.pylonsproject.org/ - http://kotti.readthedocs.org/en/latest/	28	Science & Technology	PT23M24S	1404	2d	hd	false	https://i.ytimg.com/vi/n8PTMoKHfkk/maxresdefault.jpg		327	1	0	0	0
770	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	zGVl9S5Ylpk	2015-08-05T20:33:57Z	2015-08-05 20:33:57	Nazzaro - Image recognition and camera positioning with OpenCV. A tourist guide application.	Francesco Nazzaro - Image recognition and camera positioning with OpenCV. A tourist guide application. [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] OpenCV Python bindings provide several ready to use tools for camera calibration, image recognition and camera position estimation. This talk will show how to recognize a picture, from a library of known paintings, and compute the camera position with respect to the recognized picture using OpenCV and numpy. This is applied to a tourist guide application for Google Glass through the recognition of the paintings exposed in the museum.	28	Science & Technology	PT24M6S	1446	2d	hd	false	https://i.ytimg.com/vi/zGVl9S5Ylpk/maxresdefault.jpg		1727	10	0	0	2
771	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qOoKR8qEglU	2015-08-05T20:33:56Z	2015-08-05 20:33:56	Thomas Ballinger - Terminal Whispering	Thomas Ballinger - Terminal Whispering [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] The terminal emulators we run so many of our programming tools in are more powerful than we remember to give them credit for, and the key to that power is understanding the interface. This talk will cover terminal colors and styles, writing to arbitrary portions of the screen, handling signals from the terminal, determining the terminal's dimensions and scrollback buffer behavior. Terminal programming can get hairy; along the way we'll deal with encoding issues, consider cross platform concerns, acknowledge 4 decades' worth of standards for terminal communication, and consider that humans at interactive terminals may not be the only users of our interfaces. By gaining an understanding of these issues, we'll be able choose from the abstractions over them offered by Python libraries Urwid, Blessings, and Python Prompt Toolkit. This talk requires minimal Python knowledge, but does assume familiarity with command line tools in a unix environment. An abbreviated version of this talk was presented at PyCon 2015 in Montréal: https://www.youtube.com/watch?v=WAitSilLDUA With the additional time I'd hope to present more code examples, a more in- depth tour of existing libraries and more practical advice about writing programs that use the terminal, and an additional example of a difficult terminal details: dealing with reflowing of text in modern terminal emulators like GNOME Terminal and iTerm.	28	Science & Technology	PT38M20S	2300	2d	hd	false	https://i.ytimg.com/vi/qOoKR8qEglU/maxresdefault.jpg		1309	16	0	0	1
772	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Y0_QFkw8IdU	2015-08-05T15:49:54Z	2015-08-05 15:49:54	Núria Pujol/Ignasi Fosch - What dojos are and how we run them at pyBCN	Núria Pujol/Ignasi Fosch - What dojos are and how we run them at pyBCN [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Coding dojos are a very good way to share coding knowledge among members in a community, and, at the same time, introduce people into the language and community. Sometimes, though, the typical approach to set coding dojos may prevent expert coders to join the session. This is the story of the pyBCN's dojos, so far.	28	Science & Technology	PT21M58S	1318	2d	hd	false	https://i.ytimg.com/vi/Y0_QFkw8IdU/maxresdefault.jpg		115	2	0	0	0
773	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	re7dtwYy5sc	2015-08-05T15:49:53Z	2015-08-05 15:49:53	Stephan Erb - Release Management with Devpi	Stephan Erb - Release Management with Devpi [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] Devpi is an open source PyPi-compatible package server. Its versatile features make it the Swiss Army knife of Python package and release management, enabling anyone to shape a custom release workflow. In this talk, I will detail how we use our company-wide Devpi installation in order to share a large set of packages across teams, deploy binary packages to our application servers, and mix and mash open source packages with our own. With Devpi being a critical part of our release and deployment infrastructure, I will also cover our high- availability setup and how we perform major version updates with minimal downtime. While this talk is not meant to be an exhaustive introduction of all available Devpi features, it can offer insights on how Devpi can be used at a larger scale.	28	Science & Technology	PT26M36S	1596	2d	hd	false	https://i.ytimg.com/vi/re7dtwYy5sc/maxresdefault.jpg		511	6	0	0	0
774	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	weAxEoEfl0M	2015-08-05T15:49:53Z	2015-08-05 15:49:53	Dmitry Trofimov - Can Rust make Python shine?	Dmitry Trofimov - Can Rust make Python shine? [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Rust is a new programming language from Mozilla. It is fast, safe and beautiful. It is also a very good option when needing performance. In this talk we're going to look at Rust and see what it offers and how we can leverage it as Python developers. And we'll do it with a case study: a statistical profiler for Python.	28	Science & Technology	PT31M5S	1865	2d	hd	false	https://i.ytimg.com/vi/weAxEoEfl0M/maxresdefault.jpg		3187	28	3	0	4
775	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NKPHP5p0WXA	2015-08-05T13:29:03Z	2015-08-05 13:29:03	Anton Caceres - Better asynchronous code with Tornado and Python 3	Anton Caceres - Better asynchronous code with Tornado and Python 3 [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] The asyncio module introduced in Python 3.4 is a game-changer for I/O management and event-driven network programming in Python. Aiming to be a lower-level implementation of an asynchronous event loop, it intends that higher level frameworks like Tornado, Twisted or Gevent will build on top of it, taking advantage of the shared interface for writing concurrent event-driven code across different Python frameworks. This talk connects theory with practice, presenting how Tornado can run in the asyncio event loop and take advantage of the subgenerator delegation syntax (yield from) to provide a high degree of concurrency while keeping the simplicity of sequential code. It explains the concept of coroutines, futures and ioloop, exposing Python 3 code for sample web tasks. The talk completes with a basic demo of running this code on Tornado, comparing its syntax and performance with popular asynchronous frameworks from other languages.	28	Science & Technology	PT39M42S	2382	2d	hd	false	https://i.ytimg.com/vi/NKPHP5p0WXA/maxresdefault.jpg		7061	88	3	0	7
776	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lkASgQg8vWQ	2015-08-05T13:29:03Z	2015-08-05 13:29:03	Michael Foord - To the Clouds: Why you should deploy to the cloud even if you don't want to	Michael Foord - To the Clouds: Why you should deploy to the cloud even if you don't want to [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Do you deploy your Python services to Amazon EC2, or to Openstack, or even to HP cloud, joyent or Azure? Do you want to - without being tied into any one of them? What about local full stack deployments with lxc or kvm containers? Even if you're convinced you don't need "the cloud" because you manage your own servers, amazing technologies like Private clouds and MaaS, for dynamic server management on bare metal, may change your mind. Fed up with the cloud hype? Let us rehabilitate the buzzword! (A bit anyway.) A fully automated cloud deployment system is essential for rapid scaling, but it's also invaluable for full stack testing on continuous integration systems. Even better, your service deployment and infrastructure can be managed with Python code? (Devops distilled) Treat your servers as cattle not as pets, for service oriented repeatable deployments on your choice of back-end. Learn how service orchestration is a powerful new approach to deployment management, and do it with Python! If any of this sounds interesting then Juju maybe for you! In this talk we'll see a demo deployment for a Django application and related infrastructure. We'll be looking at the key benefits of cloud deployments and how service orchestration is different from the "machine provisioning" approach of most existing cloud deployment solutions.	28	Science & Technology	PT38M54S	2334	2d	hd	false	https://i.ytimg.com/vi/lkASgQg8vWQ/maxresdefault.jpg		290	2	0	0	0
777	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nhwwwV8qlKA	2015-08-05T13:29:03Z	2015-08-05 13:29:03	Xavier Fernandez - PIP Internals	Xavier Fernandez - PIP Internals [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] pip is certainly one of the most used package in the Python ecosystem, but what actually happens when you pip install foo ? The talk will mainly focus on two aspects: - how does it perform an installation and resolve dependencies ? - how does pip find installation candidates and select the 'best' ?	28	Science & Technology	PT28M57S	1737	2d	hd	false	https://i.ytimg.com/vi/nhwwwV8qlKA/maxresdefault.jpg		275	0	0	0	0
778	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-AlKImuKTcs	2015-08-05T13:29:02Z	2015-08-05 13:29:02	Francesc Alted - New Trends In Storing Large Data Silos With Python	Francesc Alted - New Trends In Storing Large Data Silos With Python [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] My talk is meant to provide an overview of our current set of tools for storing data and how we arrived to these. Then, in the light of the current bottlenecks, and how hardware and software are evolving, provide a brief overview of the emerging technologies that will be important for handling Big Data within Python. Although I expect my talk to be a bit prospective, I won't certainly be trying to predict the future, but rather showing a glimpse on what I expect we would be doing in the next couple of years for properly leveraging modern architectures (bar unexpected revolutions ;). As an example of library adapting to recent trends in hardware, I will be showing bcolz (https://github.com/Blosc/bcolz), which implements a couple of data containers (and specially a chunked, columnar 'ctable') meant for storing large datasets efficiently.	28	Science & Technology	PT24M57S	1497	2d	hd	false	https://i.ytimg.com/vi/-AlKImuKTcs/maxresdefault.jpg		369	2	0	0	0
779	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LhtKkygNuNc	2015-08-05T13:29:02Z	2015-08-05 13:29:02	Using Scikit-Learn's interface for turning Spaghetti Data Science into Maintainable Software	Holger Peters - Using Scikit-Learn's interface for turning Spaghetti Data Science into Maintainable Software [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Finding a good structure for number-crunching code can be a problem, this especially applies to routines preceding the core algorithms: transformations such as data processing and cleanup, as well as feature construction. With such code, the programmer faces the problem, that their code easily turns into a sequence of highly interdependent operations, which are hard to separate. It can be challenging to test, maintain and reuse such "Data Science Spaghetti code". Scikit-Learn offers a simple yet powerful interface for data science algorithms: the estimator and composite classes (called meta- estimators). By example, I show how clever usage of meta-estimators can encapsulate elaborate machine learning models into a maintainable tree of objects that is both handy to use and simple to test. Looking at examples, I will show how this approach simplifies model development, testing and validation and how this brings together best practices from software engineering as well as data science. _Knowledge of Scikit-Learn is handy but not necessary to follow this talk._	28	Science & Technology	PT32M52S	1972	2d	hd	false	https://i.ytimg.com/vi/LhtKkygNuNc/maxresdefault.jpg		312	2	0	0	0
780	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pzoOQg6BNG4	2015-08-05T13:29:02Z	2015-08-05 13:29:02	Dougal Matthews - MkDocs: Documenting projects with Markdown	Dougal Matthews - MkDocs: Documenting projects with Markdown [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] MkDocs is a Python library for creating documentation with Markdown. The primary goal of the project is to lower the barrier for documentation writers and to help enable high quality prose based documentation. The primary maintainer of MkDocs will cover the following topics: - An introduction to MkDocs and the project goals. - How and why did the project start? - Who uses MkDocs today? - Discuss what we need to do to create great documentation and how MkDocs can help. - A tour of the key features currently in MkDocs - Adding MkDocs to your project. - Using themes in the documentation and making customisations - Publishing your documentation with ReadTheDocs and GitHub pages. - A look at the up and coming features in MkDocs and how you can help make these happen. - A comparison with Sphinx and why you should consider MkDocs.	28	Science & Technology	PT22M33S	1353	2d	hd	false	https://i.ytimg.com/vi/pzoOQg6BNG4/maxresdefault.jpg		5342	22	1	0	0
781	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JBItMmAvlN4	2015-08-05T13:29:01Z	2015-08-05 13:29:01	Adam Forsyth - Python Not Recommended	Adam Forsyth - Python Not Recommended [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Braintree is a Ruby shop. By default, we use Ruby and Rails for projects. We also use Ruby-based projects for much of our tooling, including puppet, capistrano, and rake. However, we strongly believe in using the right tool for the job. What that means has evolved over ti me, and I'll discuss what solutions we chose in the past as well as our current choices. So what's it like doing Python at a Ruby shop? You get lots of jokes about language features Ruby has but Python lacks and lots of disbelief that Python will survive the 2/3 split. People also tend to apply the best practices and conventions of Ruby to Python code as if t hey were the same. Python's major inroad at Braintree has been, surprisingly enough, as a platform for high-concurrency situations. This is a direct result of the power of Tornado as a platform for asynchronous I/O. It also helps that many Python is very approachable and many developers have at least some experience with it. Braintree has three pieces of our infrastructure using Python and Tornado -- an incoming request proxy; an outgoing request proxy; and a webook delivery service. They've served us well for 3+ years but all suffer from a number of problems. The outdated concurrency feature s of CPython / Python 2 as well as our lack of experience with and commitment to Tornado have always been an issue. As the meat of the talk, I'll speak in depth about the other issues we've encountered with each of the three applications and our short- and long- term solu tions to the problems. The state as of the end of 2014 appeared dire for Python at Braintree. All the old Python code in our stack is on the way out, and Python has been specifically recommended agaist for new projects. Our Python client library is used by some of our largest merchants, and is ready for the future by supporting Python 2.6+ and Python 3.3+ in a single codebase. We also have a vibrant Python community at Venmo, our sister company. Both Braintree and Venmo support Python by attending, hosting, sponsoring, and speaking at meetups, conferences, and other events in Chicago, New York, and elsewhere. At Braintree, our Data Science team uses Python almost exclusively and they're becoming a bigger part of our business every day. We also use custom tooling written in Python to manage our infrastructure.	28	Science & Technology	PT21M5S	1265	2d	hd	false	https://i.ytimg.com/vi/JBItMmAvlN4/maxresdefault.jpg		754	6	4	0	0
782	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iiclNoOd4ls	2015-08-05T13:29:01Z	2015-08-05 13:29:01	Christian Trebing - Building a multi-purpose platform for bulk data using sqlalchemy	Christian Trebing - Building a multi-purpose platform for bulk data using sqlalchemy [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] At Blue Yonder, we've built a platform that can accept and process bulk amounts of data for multiple business domains (e.g. handling retail store location and sales data) using SQLAlchemy as a database abstraction layer. We wanted to use as much of SQLAlchemy as possible, but we quickly found that the ORM (Object Relational Mapper) is not suitable for handling large amounts of data at once. At the same time, we did not want each team of developers working on individual business domains to have to handcraft their own SQL statements. To solve this problem, we built an application configuration that closely resembles an SQLAlchemy model, but also contains application-specific logic settings. In this talk I will demonstrate: - an application architecture for multiple business domains - the structure of the domain configuration utilized in the generation of the SQLAlchemy model, SQLAlchemy core statements, and other application functionality - how the domain configuration is used throughout the application (consuming and parsing incoming data, storing it in a database and ensuring data quality)	28	Science & Technology	PT22M58S	1378	2d	hd	false	https://i.ytimg.com/vi/iiclNoOd4ls/maxresdefault.jpg		255	1	0	0	0
783	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tw1IaPc6Mxg	2015-08-05T13:29:01Z	2015-08-05 13:29:01	Teodor Dima - Use Python to process 12mil events per minute and still keep it simple (Talk)	Teodor Dima - Use Python to process 12mil events per minute and still keep it simple (Talk) [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Creating a large-scale event processing system can be a daunting task. Especially if you want it “stupid simple” and wrapped around each client’s needs. We built a straightforward solution for this using Python 3 and other open-source tools. Main issues to solve for a system that needs to be both performant and scalable: - handling a throughput of 1 million events per minute in a 4 cores AWS instance; - following the principle of least astonishment; - data aggregation and how Python's standard libraries and data structures can help; - failsafe and profiling mechanisms that can be applied to any Linux service in production; - addressing unexpected behaviors of Python’s Standard Library; like reading from a file while it is written; - tackling a sudden spectacular cloud instance failure; The alternative to this system would be to adopt existing technology stacks that might be too general, add more complexity, bloat, costs and which need extensive work to solve your specific problem. Moreover, our approach resulted in over 85% drop on hardware utilisation. [Context: Production Software – II (where good coding reduces the client’s bill)][1] [1]: https://eastvisionsystems.com/production-software-part-ii-good-coding-reduces-clients-bill/	28	Science & Technology	PT21M15S	1275	2d	hd	false	https://i.ytimg.com/vi/tw1IaPc6Mxg/maxresdefault.jpg		449	1	0	0	0
784	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pOeaQQxsCiI	2015-08-05T07:41:33Z	2015-08-05 07:41:33	Stefan Behnel - Get native with Cython	Stefan Behnel - Get native with Cython [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] [Cython][1] is not only an excellent and widely used tool to speed up computational Python code, it's also a very comfortable way to talk to native code and libraries. The Cython compiler translates Python code to C or C++ code, and supports static type annotations to allow direct use of C/C++ data types and functions. The tight integration of all three languages makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code. This talk by a core developer introduces the Cython compiler by interactive code examples and presents recent enhancements in the language that continue to make Cython the best choice for the development of fast and portable Python extensions. **Update:** Examples used in presentation as **[IPython/Jupyter][3]** or **[HTML][2]** [1]: http://cython.org/ [2]: http://consulting.behnel.de/ep/2015/ep15-cython.ipynb [3]: http://consulting.behnel.de/ep/2015/ep15-cython.html	28	Science & Technology	PT40M9S	2409	2d	hd	false	https://i.ytimg.com/vi/pOeaQQxsCiI/maxresdefault.jpg		962	8	0	0	0
785	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	E8433onmm0k	2015-08-05T07:41:32Z	2015-08-05 07:41:32	Adriano Petrich - Yak shaving a good place to eat using non negative matrix factorization	Adriano Petrich - Yak shaving a good place to eat using non negative matrix factorization [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] Trying to find a good place to eat has become much easier and democratic with online reviews, but on the other hand, that creates new problems. Can you trust that 5 star review of fast food chain as much as the 1 star of a fancy restaurant because "Toast arrived far too early, and too thin"? We all like enjoy things differently. Starting of on the assumption that the "best pizza" is not the same for everyone. Can we group users into people that has similar tastes? Can we identify reviews and restaurants to make sense of it? Can that lead us to a better way to find restaurants that you like? Using some data handling techniques I walk you through my process and results that I've got from that idea. There are no requisites for this talk except basic python and math knowledge (matrices exist)	28	Science & Technology	PT24M51S	1491	2d	hd	false	https://i.ytimg.com/vi/E8433onmm0k/maxresdefault.jpg		123	6	0	0	0
786	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	p4mCCNgyMWY	2015-08-05T07:41:32Z	2015-08-05 07:41:32	Roberto Polli - Scaling MySQL with Python	Roberto Polli - Scaling MySQL with Python [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Python is the language of choice for the orchestration part of MySQL 5.6. After a brief introduction of MySQL replication architecture, the talk [Slides here][1] presents the python utilities released by MySQL: - a set of drivers in pure-python - mysql-utilites for replication, management and failover - fabric, a tool for scaling, sharding and provisioning new servers You will see how to: - create resilient configurations in minutes - use mysql-fabric to create high available infrastructures As a plus, we'll show how we: - implemented a fabric provider for provisioning new databases via docker # Prerequisites Basic database knowledge, transactions, replication. MySQL specific concepts (eg: binary logs) are briefly introduced in the talk. [1]: http://www.slideshare.net/ioggstream/scaling-mysql-with-python	28	Science & Technology	PT26M17S	1577	2d	hd	false	https://i.ytimg.com/vi/p4mCCNgyMWY/maxresdefault.jpg		489	2	0	0	0
787	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7frMhSob8sE	2015-08-05T05:54:38Z	2015-08-05 05:54:38	Various speakers - Lightning Talks, conference closing	Various speakers - Lightning Talks, conference closing [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Lightning talks, presented by Harry Percival	28	Science & Technology	PT38M58S	2338	2d	hd	false	https://i.ytimg.com/vi/7frMhSob8sE/maxresdefault.jpg		119	1	0	0	0
788	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TNik9belbD8	2015-08-05T05:54:38Z	2015-08-05 05:54:38	Various speakers - Lightning Talks	Various speakers - Lightning Talks [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Lightning talks, presented by Harry Percival	28	Science & Technology	PT55M41S	3341	2d	hd	false	https://i.ytimg.com/vi/TNik9belbD8/maxresdefault.jpg		285	2	0	0	0
789	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nofEnPqj0cE	2015-08-05T05:54:38Z	2015-08-05 05:54:38	Various speakers - Lightning Talks	Various speakers - Lightning Talks [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Lightning talks, presented by Harry Percival	28	Science & Technology	PT52M50S	3170	2d	hd	false	https://i.ytimg.com/vi/nofEnPqj0cE/maxresdefault.jpg		392	3	0	0	0
790	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xjKRJHaRQ0Y	2015-08-05T05:54:38Z	2015-08-05 05:54:38	Iwan Vosloo - Reahl: The Python-only web framework	Iwan Vosloo - Reahl: The Python-only web framework [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] Reahl is a full-featured web framework with a twist: with Reahl you write a web application purely in Python. HTML, JavaScript, CSS and all those cumbersome web technologies (and a few other lower level concerns) are hidden away from you. As far as web frameworks go this is truly a paradigm shift: away from the cobwebs of all the different web technologies, template languages and low-level details -- towards being able to focus on the goals at hand instead, using a single language. In this talk I will give you a brief idea of what Reahl is all about: why it is worthwhile doing, how it works, where we are and what still needs to be done. I hope to convince you that this is an important direction for web frameworks, and of how unique Reahl is. Developing such an abstract framework is an ambitious goal. I'd like to convey the message that what we have achieved so far, and the strategy lessons learnt along the way demonstrate this goal to be realistic and practical.	28	Science & Technology	PT31M16S	1876	2d	hd	false	https://i.ytimg.com/vi/xjKRJHaRQ0Y/maxresdefault.jpg		694	6	0	0	0
791	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LQSWi3QJV8s	2015-08-05T05:54:37Z	2015-08-05 05:54:37	Various speakers - Lightning Talks	Various speakers - Lightning Talks [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] Lightning talks, presented by Harry Percival	28	Science & Technology	PT1H32M27S	1947	2d	hd	false	https://i.ytimg.com/vi/LQSWi3QJV8s/maxresdefault.jpg		462	2	0	0	0
792	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WmvTfUYJ2Bw	2015-08-05T05:54:37Z	2015-08-05 05:54:37	Various speakers - Lightning Talks	Various speakers - Lightning Talks [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] Lightning talks, presented by Harry Percival	28	Science & Technology	PT1H15M7S	907	2d	hd	false	https://i.ytimg.com/vi/WmvTfUYJ2Bw/maxresdefault.jpg		671	0	0	0	0
793	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ct-ytiyZzkw	2015-08-05T05:54:37Z	2015-08-05 05:54:37	Various speakers - Recruiting sponsors presentation	Various speakers - Recruiting sponsors presentation [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Recruiting sponsors presentation.	28	Science & Technology	PT47M39S	2859	2d	hd	false	https://i.ytimg.com/vi/ct-ytiyZzkw/maxresdefault.jpg		69	0	0	0	0
794	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_gU7sfTrz4c	2015-08-04T21:30:19Z	2015-08-04 21:30:19	Carrie Anne Philbin - Keynote: Designed for Education: A Python Solution	Carrie Anne Philbin - Keynote: Designed for Education: A Python Solution [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] The problem of introducing children to programming and computer science has seen growing attention in the past few years. Initiatives like Raspberry Pi, Code Club, code.org, (and many more) have been created to help solve this problem. With the introduction of a national computing curriculum in the UK, teachers have been searching for a text based programming language to help teach computational thinking as a follow on from visual languages like Scratch. The educational community has been served well by Python, benefiting from its straight-forward syntax, large selection of libraries, and supportive community. Education-focused summits are now a major part of most major Python Conferences. Assistance in terms of documentation and training is invaluable, but perhaps there are technical means of improving the experience of those using Python in education. Clearly the needs of teachers and their students are different to those of the seasoned programmer. Children are unlikely to come to their teachers with frustrations about the Global Interpreter Lock! But issues such as usability of IDEs or comprehensibility of error messages are of utmost importance. In this keynote, Carrie Anne will discuss existing barriers to Python becoming the premier language of choice for teaching computer science, and how learning Python could be helped immensely through tooling and further support from the Python developer community.	28	Science & Technology	PT59M36S	3576	2d	hd	false	https://i.ytimg.com/vi/_gU7sfTrz4c/maxresdefault.jpg		2861	12	0	0	1
795	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2iV8VLZHcEE	2015-08-04T21:30:18Z	2015-08-04 21:30:18	Juan Riaza - Dive into Scrapy	Juan Riaza - Dive into Scrapy [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Scrapy is a fast high-level screen scraping and web crawling framework, used to crawl websites and extract structured data from their pages. It can be used for a wide range of purposes, from data mining to monitoring and automated testing. In this talk some advanced techniques will be shown based on how Scrapy is used at Scrapinghub. Goals: - Understand why its necessary to _Scrapy-ify_ early on. - Anatomy of a Scrapy Spider. - Using the interactive shell. - What are items and how to use item loaders. - Examples of pipelines and middlewares. - Techniques to avoid getting banned. - How to deploy Scrapy projects.	28	Science & Technology	PT28M33S	1713	2d	hd	false	https://i.ytimg.com/vi/2iV8VLZHcEE/maxresdefault.jpg		1522	17	0	0	0
796	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	S-utpUpaGqQ	2015-08-04T21:30:18Z	2015-08-04 21:30:18	Matt Bennett - Nameko for Microservices	Matt Bennett - Nameko for Microservices [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Microservices are popping up everywhere. This talk will explain what this fashionable new architecture is, including the pros and cons of adopting it, and then discuss an open-source framework that can help you do so -- [https://nameko.readthedocs.org][1]. Nameko assists you in writing services with well-defined boundaries that are easy to test. By leveraging some neat design patterns and providing test helpers, it also encourages good service structure and clean code. [1]: https://nameko.readthedocs.org	28	Science & Technology	PT41M12S	2472	2d	hd	false	https://i.ytimg.com/vi/S-utpUpaGqQ/maxresdefault.jpg		2081	18	1	0	3
797	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ThRO-1np5eE	2015-08-04T21:30:18Z	2015-08-04 21:30:18	Max Brauer - Stop trying to glue your services together; import lymph	Max Brauer - Stop trying to glue your services together; import lymph [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] What if you could focus on functionality rather than the glue code between services? Lymph is an opinionated framework for writing services in Python. It features pluggable service discovery, request-reply messaging and pluggable pub-sub messaging. As our development teams are growing, we're moving away from our monolithic architecture. We want to write services and not worry about the infrastructure's needs. We want development to be fast, quick and simply work. In this talk we will show you how easy it is to write and run services with lymph. Go check http://lymph.io - we are accepting pull requests. http://import-lymph.link/	28	Science & Technology	PT39M20S	2360	2d	hd	false	https://i.ytimg.com/vi/ThRO-1np5eE/maxresdefault.jpg		700	2	0	0	0
798	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	GzNDcmWHuuE	2015-08-04T21:30:17Z	2015-08-04 21:30:17	Shane Evans - Web Scraping Best Practises	Shane Evans - Web Scraping Best Practises [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Python is a fantastic language for writing web scrapers. There is a large ecosystem of useful projects and a great developer community. However, it can be confusing once you go beyond the simpler scrapers typically covered in tutorials. In this talk, we will explore some common real-world scraping tasks. You will learn best practises and get a deeper understanding of what tools and techniques can be used and how to deal with the most challenging of web scraping projects! We will cover crawling and extracting data at different scales - from small websites to large focussed crawls. This will include an overview of automated extraction techniques. We'll touch on common difficulties like rendering pages in browsers, proxy management, and crawl architecture. **Slides**: [https://speakerdeck.com/shaneaevans/web-scraping-best- practises][1] [1]: https://speakerdeck.com/shaneaevans/web-scraping-best-practises	28	Science & Technology	PT32M4S	1924	2d	hd	false	https://i.ytimg.com/vi/GzNDcmWHuuE/maxresdefault.jpg		2987	28	1	0	0
799	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	goS8qerBlBA	2015-08-04T21:30:17Z	2015-08-04 21:30:17	Marc-André Lemburg - Python idioms to help you write good code	Marc-André Lemburg - Python idioms to help you write good code [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Python focuses a lot on writing readable code and also tries to make solutions obvious, but this doesn't necessarily mean that you cannot write unreadable code or design your code in ways which makes it hard to extend or maintain. This talk will show some useful idioms to apply when writing Python code, how to structure your modules and also goes into details on which techniques to use and which to think about twice, based on 20 years of experience writing Python.	28	Science & Technology	PT27M32S	1652	2d	hd	false	https://i.ytimg.com/vi/goS8qerBlBA/maxresdefault.jpg		1231	11	1	0	0
800	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cxI0dIn1n2E	2015-08-04T21:30:16Z	2015-08-04 21:30:16	Mandy Waite - Keynote: So, I have all these Docker containers, now what?	Mandy Waite - Keynote: So, I have all these Docker containers, now what? [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] You've solved the issue of process-level reproducibility by packaging up your apps and execution environments into a number of Docker containers. But once you have a lot of containers running, you'll probably need to coordinate them across a cluster of machines while keeping them healthy and making sure they can find each other. Trying to do this imperatively can quickly turn into an unmanageable mess! Wouldn't it be helpful if you could declare to your cluster what you want it to do, and then have the cluster assign the resources to get it done and to recover from failures and scale on demand? Kubernetes (http://kubernetes.io) is an open source, cross platform cluster management and container orchestration platform that simplifies the complex tasks of deploying and managing your applications in Docker containers. You declare a desired state, and Kubernetes does all the work needed to create and maintain it. In this talk, we’ll look at the basics of Kubernetes and at how to map common applications to these concepts. This will include a hands-on demonstration and visualization of the steps involved in getting an application up and running on Kubernetes.	28	Science & Technology	PT58M18S	3498	2d	hd	false	https://i.ytimg.com/vi/cxI0dIn1n2E/maxresdefault.jpg		599	2	0	0	0
801	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	gxNE1O9s-9w	2015-08-04T21:30:16Z	2015-08-04 21:30:16	Michal Hořejšek - Testing web apps with Selenium	Michal Hořejšek - Testing web apps with Selenium [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] „Selenium automates browser.“ Selenium can be used as tool for testing web applications. At first it can be pretty hard to start testing with Selenium, but later on it can be even harder. I want to show you that it doesn't have to be true. That it can be easy, actually. But you have to know few things which you have to be careful about and that there is tool webdriverwrapper which can make it easy for you. I will speak about handling pages with JavaScript and which common problem can you have, how to run Selenium on servers without X server, how to deal with tabs, how to test with UnitTest or pytest, and how can webdriverwrapper make things easier for you and more.	28	Science & Technology	PT38M40S	2320	2d	hd	false	https://i.ytimg.com/vi/gxNE1O9s-9w/maxresdefault.jpg		266	0	0	0	0
802	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	t0VljE9kq1Q	2015-08-04T21:30:16Z	2015-08-04 21:30:16	Vaidik Kapoor - Understanding Non-blocking IO	Vaidik Kapoor - Understanding Non-blocking IO [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] As an engineer working on any web stack, you may have heard about Blocking and Non-Blocking IO. You may as well have used any framework or library that supports Non-Blocking IO. After all, they are very useful as you don't want to block execution of other tasks while one task is waiting to complete a network call to another service (like HTTP call to an API or may be a TCP call to your database). Non- Blocking IO while doing tasks and not wait for IO. This also helps us handle a lot many connections than we possibly could with Blocking IO. Python supports Non-Blocking IO, but we always use some existing 3rd party library that hides all the gory details and makes it all look like black magic to the uninitiated. But there is nothing like black magic. This presentation will be an introductory talk focused at explaining how Non-Blocking IO works, which is the basis of libraries like Gevent, Tornado and Twisted. We will learn about how Non-Blocking IO can be implemented using the most basic modules that form the base for the above mentioned libraries. Hopefully after this talk, Non-Blocking IO will not be an unsolved mystery for you anymore.	28	Science & Technology	PT29M57S	1797	2d	hd	false	https://i.ytimg.com/vi/t0VljE9kq1Q/maxresdefault.jpg		10415	67	7	0	3
803	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	O_pzz5X0s04	2015-08-04T21:30:15Z	2015-08-04 21:30:15	Alexander Hendorf - Data Analysis and Map-Reduce with mongoDB and pymongo	Alexander Hendorf - Data Analysis and Map-Reduce with mongoDB and pymongo [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] The MongoDB aggregation framework provides a means to calculate aggregated values without having to use map-reduce. While map-reduce is powerful, it is often more difficult than necessary for many simple aggregation tasks, such as totaling or averaging field values. See how to use the build-in data-aggregation-pipelines for averages, summation, grouping, reshaping. See how to work with documents, sub- documents, grouping by year, month, day, etc. This talk will give many (live) examples how to make the most of your data with pymongo with a few lines of code. added 28/07/15: iPython notebook & sample data can be found in [this git][1] [1]: https://bitbucket.org/alanderex/ep2015-dataanalysis-with-mongodb	28	Science & Technology	PT38M2S	2282	2d	hd	false	https://i.ytimg.com/vi/O_pzz5X0s04/maxresdefault.jpg		776	2	0	0	0
804	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	w1zcUNMwac0	2015-08-04T12:10:44Z	2015-08-04 12:10:44	Juan Manuel Santos - Salting things up in the sysadmin's world	Juan Manuel Santos - Salting things up in the sysadmin's world [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] SaltStack is a thriving configuration management system written in Python that leverages YAML and Jinja2 which, by now, probably needs no introduction. This talk will cover a brief summary of why we need configuration management tools, followed by a full dive into SaltStack, its features, pros and cons, how to use it and how to extend it. By the end of this talk you will have gone from knowing little or nothing about SaltStack, to being able to deploy your own setup. This talk will be targeted to either seasoned Python developers who are taking their first steps in the system administration world, or established system administrators who secretly love Python and prefer to stay away of configuration management systems based on other languages. Its advisable that attendees have some familiarity with Python as well as with system administration concepts. Also, this presentation will be focused on GNU/Linux systems, so it is expected that attendees are comfortable with some of its concepts.	28	Science & Technology	PT37M21S	2241	2d	hd	false	https://i.ytimg.com/vi/w1zcUNMwac0/maxresdefault.jpg		595	10	0	0	0
805	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Yqnrfa5ri7E	2015-08-04T12:10:42Z	2015-08-04 12:10:42	Guido van Rossum - Type Hints for Python 3.5	Guido van Rossum - Type Hints for Python 3.5 [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] PEP 484, "Type Hints", was accepted in time for inclusion in Python 3.5 beta 1. This introduces an optional standard for specifying types in function signatures. This concept was previously discussed as "optional static typing" and I similar to the way TypeScript adds optional type declarations to JavaScript. In this talk I will discuss the motivation for this work and show the key elements of the DSL for describing types (which, by the way is backward compatible with Python 3.2, 3.3 and 3.4). Note: *Python will remain a dynamically typed language, and I have no desire to ever make type hints mandatory, even by convention!*	28	Science & Technology	PT46M14S	2774	2d	hd	false	https://i.ytimg.com/vi/Yqnrfa5ri7E/maxresdefault.jpg		4252	29	3	0	3
806	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bp3mCgrdMxU	2015-08-04T12:10:42Z	2015-08-04 12:10:42	Guido van Rossum - Keynote: Python now and in the future	Guido van Rossum - Keynote: Python now and in the future [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] This is *your* keynote! I will have some prepared remarks on the state of the Python community and Python's future directions, but first and foremost this will be an interactive Q&A session.	28	Science & Technology	PT59M30S	3570	2d	hd	false	https://i.ytimg.com/vi/bp3mCgrdMxU/maxresdefault.jpg		25986	214	7	0	8
807	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	10XUZVKzfZA	2015-08-04T12:10:41Z	2015-08-04 12:10:41	Holger Krekel - Keynote: Towards a more effective, decentralized web	Holger Krekel - Keynote: Towards a more effective, decentralized web [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] Many would like to see more decentralization but what does it mean, really? In this talk, I'll discuss the recent rise of immutable state concepts in languages and network protocols. And how the advent of hash-based data structures and replication strategies are shaking the client/server web service paradigm which rests on managing mutable state through http. By contrast, building on git, bittorrent and other content addressed data structures provides for a more secure, efficient decentralized communication topology. There are projects, thoughts and talk to create new web standards to bring such technologies to mass deployment and fuel a new wave of decentralization. What can Python bring to the table?	28	Science & Technology	PT1H3M53S	233	2d	hd	false	https://i.ytimg.com/vi/10XUZVKzfZA/maxresdefault.jpg		463	5	0	0	0
808	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4zeHStBowEk	2015-08-04T12:10:41Z	2015-08-04 12:10:41	Larry Hastings - Python's Infamous GIL	Larry Hastings - Python's Infamous GIL [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] You've heard about Python's GIL. But what is it really? What does it do, both good and bad? Come learn all about the Python GIL. You'll learn about its history, all the problems it solves, all the problems it causes (that we know about!), and what it would take to remove the GIL. Attendees should be familiar with the terrors inherent in multithreaded programming, and be comfortable with a little C code in the slides.	28	Science & Technology	PT28M59S	1739	2d	hd	false	https://i.ytimg.com/vi/4zeHStBowEk/maxresdefault.jpg		5436	97	0	0	2
809	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qQi9Vor-5-M	2015-08-04T12:10:41Z	2015-08-04 12:10:41	Lesuisse - Odoo the underdog python killer app. A python framework for web based business apps.	Antony Lesuisse - Odoo the underdog python killer app. A python framework for web based business apps. [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] Odoo is used by 2 millions of users, although relatively unknown in the python community, it has a vibrant community and is one of the most active python open source project. I will present you the Odoo framework and how it can help to be more productive when building web based business apps. I will highlight its advantages compared to more popular framework such as django.	28	Science & Technology	PT39M41S	2381	2d	hd	false	https://i.ytimg.com/vi/qQi9Vor-5-M/maxresdefault.jpg		7737	33	5	0	2
810	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FbKlSXTK98c	2015-08-04T05:12:28Z	2015-08-04 05:12:28	Eugene Amirov - Sustainable way of testing your code	Eugene Amirov - Sustainable way of testing your code [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] How to write a test so you would remember what it does in a year from now? How to write selective tests with different inputs? What is test? How to subclass tests cases and yet maintain control on which tests would run? How to extend or to filter inputs used in parent classes? Are you a tiny bit intrigued now? :) This is not another talk about how to test, but how to organize your tests so they were maintainable. I will be using nose framework as an example, however main ideas should be applicable to any other framework you choose. Explaining how some parts of code works I would have to briefly touch some advanced python topics, although I will provide need-to-know basics there, so people with any level of python knowledge could enjoy the ride.	28	Science & Technology	PT31M2S	1862	2d	hd	false	https://i.ytimg.com/vi/FbKlSXTK98c/maxresdefault.jpg		371	3	2	0	0
811	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yxXio-jzAMQ	2015-08-04T05:12:20Z	2015-08-04 05:12:20	Raphael Pierzina - Come to the Dark Side! We have a whole bunch of Cookiecutters!	Raphael Pierzina - Come to the Dark Side! We have a whole bunch of Cookiecutters! [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] *(This talk is intended for intermediate-level participants who have a basic understanding of the Python language and contains quotes from Darth Vader that some attendees may find hilarious)* Writing a Python script from scratch is fairly easy and you get on with very little boilerplate code in general. However starting a new Python project can be tiring if you decide to stick to best practices and plan on submitting it to PyPI. It requires great diligence and occasionally gets pretty cumbersome if you start new tools on a regular basis. You underestimate the power of a good template ---------------------------------------------- Why not just use a template for it? Cookiecutter is a CLI tool written in pure Python that enables you to do so. Not only is it working for Python code, but also markdown formats and even other programming languages. We will talk about the ideas behind Cookiecutter and go over how you can create your very own template, so you and others can benefit from your experience. I would like to briefly go into the technologies used and how you can get involved in the Cookiecutter GitHub project. There are already plenty of Cookiecutter templates, or Cookiecutters as we call them, available online. Most of them target Python projects, but others can be used to create C++, LaTeX or Javascript projects. The ability to destroy a planet is insignificant next to the power of Cookiecutter. ---------------------------------------------------------------------- ------------- I will show you how to use Cookiecutter and highlight some of the amazing templates created by the community. More importantly we will create a Cookiecutter template from scratch using the example of a simple Kivy app and make use of advanced features such as post-gen hooks, copy-without-render and templates in context values. Finally I will recommend resources on how to follow up on this talk and how to get in touch in case of any queries. GitHub: [https://github.com/hackebrot][1] Twitter: [https://twitter.com/hackebrot][2] Blog: [http://www.hackebrot.de/][3] [1]: https://github.com/hackebrot [2]: https://twitter.com/hackebrot [3]: http://www.hackebrot.de/	28	Science & Technology	PT31M17S	1877	2d	hd	false	https://i.ytimg.com/vi/yxXio-jzAMQ/maxresdefault.jpg		1205	13	0	0	1
812	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yIixWzjTNog	2015-08-04T05:12:19Z	2015-08-04 05:12:19	Honza Král - Beyond the basics with Elasticsearch	Honza Král - Beyond the basics with Elasticsearch [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Elasticsearch has many use cases, some of them fairly obvious and widely used, like plain searching through documents or analytics. In this talk I would like to go through some of the more advanced scenarios we have seen in the wild. Some examples of what we will cover: Trend detection - how you can use the aggregation framework to go beyond simple "counting" and make use of the full-text properties of Elasticsearch. Percolator - percolator is reversed search and many people use it as such to drive alerts or "stored search" functionality for their website, let's look at how we can use it to detect languages, geo locations or drive live search. If we end up with some time to spare we can explore some other ideas about how we can utilize the features of a search engine to drive non- trivial data analysis including Geo-enabled search with relevancy.	28	Science & Technology	PT37M21S	2241	2d	hd	false	https://i.ytimg.com/vi/yIixWzjTNog/maxresdefault.jpg		1588	13	1	0	2
813	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wSsuggB6dCM	2015-08-04T05:12:18Z	2015-08-04 05:12:18	Ekaterina Tuzova - NumPy: vectorize your brain	Ekaterina Tuzova - NumPy: vectorize your brain [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] NumPy is the fundamental Python package for scientific computing. However, being efficient with NumPy might require slightly changing how you write Python code. I’m going to show you the basic idioms essential for fast numerical computations in Python with NumPy. We'll see why Python loops are slow and why vectorizing these operations with NumPy can often be good. Topics covered in this talk will be array creation, broadcasting, universal functions, aggregations, slicing and indexing. Even if you're not using NumPy you'll benefit from this talk.	28	Science & Technology	PT34M22S	2062	2d	hd	false	https://i.ytimg.com/vi/wSsuggB6dCM/maxresdefault.jpg		3126	39	8	0	2
814	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xuY7qlDY6_s	2015-08-04T05:12:18Z	2015-08-04 05:12:18	Jean-Philippe Caissy - Static type-checking is dead, long live static type-checking in Python!	Jean-Philippe Caissy - Static type-checking is dead, long live static type-checking in Python! [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] A few months ago, Guido unfolded PEP 484, which was highlighted at PyCon 2015 as a keynote presentation. This proposal would introduce type hints for Python 3.5. While the debate is still roaring and without taking a side, I believe that there is much to learn from static type-checking systems. The purpose of this talk is to introduce ways that could be used to fully take over the amazing power that comes with static types, inside a dynamic type language such as Python. The talk will go over what exactly a static type system is, and what kind of problem it tries to solve. We will also review Guido's proposal of type hinting, and what it could mean to you. Finally, I will present a few libraries that are available, such as Hypothesis or various QuickCheck-inspired library that tries to build more robust tests, how they achieve it and their limitations. Throughout the talk, a lot of examples will used to fully illustrate the ideas being explained. At the end of this talk, you should have a better understanding of the wonderful world of type systems, and what it really means to you. It should help you decide wether using type hints will be helpful to you and also if an external library trying to fuzz your tests has its place inside your project	28	Science & Technology	PT24M26S	1466	2d	hd	false	https://i.ytimg.com/vi/xuY7qlDY6_s/maxresdefault.jpg		297	0	0	0	0
815	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-3KMZEPXQNQ	2015-08-04T05:12:17Z	2015-08-04 05:12:17	Antoine Pitrou - Numba, a JIT compiler for fast numerical code	Antoine Pitrou - Numba, a JIT compiler for fast numerical code [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] This talk will be a general introduction to Numba. Numba is an open source just­-in-­time Python compiler that allows you to speed up numerical algorithms for which fast linear algebra (i.e. Numpy array operations) is not enough. It has backends for the CPU and for NVidia GPUs. After the talk, the audience should be able to understand for which use cases Numba is adequate, what level of performance to expect, and have a general notion of its inner working. A bit of familiarity with scientific computing and/or Numpy is recommended for optimal understanding, but the talk should otherwise be accessible to the average Python programmer. It should also be of interest to people who are curious about attempts at high-­performance Python. [View slides online][1] [1]: http://pitrou.net/ep2015/_build/slides/#1	28	Science & Technology	PT29M51S	1791	2d	hd	false	https://i.ytimg.com/vi/-3KMZEPXQNQ/maxresdefault.jpg		1030	6	1	0	0
816	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	05gOxcsup9c	2015-08-04T05:12:17Z	2015-08-04 05:12:17	Radosław Jankiewicz - Writing quality code	Radosław Jankiewicz - Writing quality code [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] The quality of written code is an important factor in a final success of a software project. Perhaps there is no universal definition of high quality code, however usually it's characterized as clear and readable, well-designed, well tested and documented, easier to debug, maintain and extend, etc. Python was designed to be a highly readable language that would make it easier to develop high quality code. Nevertheless, programming language is only a tool in a software development process and in the end the quality of code depends mostly on its author's concept and decisions he make. In this talk I would like to present some of ideas, techniques and tools for improving the quality of written code, tried out with a good result in everyday work on developing software in Python.	28	Science & Technology	PT23M11S	1391	2d	hd	false	https://i.ytimg.com/vi/05gOxcsup9c/maxresdefault.jpg		561	6	0	0	1
817	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	URwL23hQn4U	2015-08-04T05:12:17Z	2015-08-04 05:12:17	Lynn Root - Metrics-driven development	Lynn Root - Metrics-driven development [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] At Spotify, my team struggled to be awesome. We had a very loose understanding of what product/service our squad was responsible for, and even less so of the expectations our internal and external customers had for those services. Other than “does our Facebook login work?”, we had no understanding of how our services we’re responsible for were doing. How many users actually sign up or log in with Facebook? How many users have connected their Spotify account with their Uber account? Do folks even use Spotify with Uber? With a 2-month challenge period, my squad and I focused inward to establish those unanswered questions and to establish feedback loops and always-on dashboards. This talk will tell the story of how we chose which metrics are important for us to focus on, what technologies we have used and are using, and how we’ve iterated over our feedback loops to fine-tune what metrics we care about.	28	Science & Technology	PT24M	1440	2d	hd	false	https://i.ytimg.com/vi/URwL23hQn4U/maxresdefault.jpg		273	0	0	0	0
818	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BdQClprjdjU	2015-08-04T05:12:16Z	2015-08-04 05:12:16	Patrick Mühlbauer - Building nice command line interfaces - a look beyond the stdlib	Patrick Mühlbauer - Building nice command line interfaces - a look beyond the stdlib [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] One of the problems programmers are most often faced with is the parsing and validation of command-line arguments. If you're new to Python or programming in general, you might start by parsing sys.argv. Or perhaps you might've already come across standard library solutions such as getopt, optparse or argparse in the official documentation. While these modules are probably preferable to parsing sys.argv yourself, you might wonder if there are more satisfactory solutions outside of the standard library. Well, yes there are! This talk will give you an overview of some popular alternatives to the standard library solutions (e.g. click, docopt and cliff), explain their basic concepts and differences and show how you can test your CLIs.	28	Science & Technology	PT28M59S	1739	2d	hd	false	https://i.ytimg.com/vi/BdQClprjdjU/maxresdefault.jpg		252	0	0	0	0
819	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	67SZeV1iSL4	2015-08-03T18:57:10Z	2015-08-03 18:57:10	Ignacio Elola - Everyone can do Data Science in Python	Ignacio Elola - Everyone can do Data Science in Python [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Data Science is a hot topic, and most data scientist use either Python or R to do their jobs as main scripting language. Being import.io data scientist for the last 2 years, all of them using Python, I've come across many different problems and needs on how to wrangle data, clean data, report on it and make predictions. In this talk I will cover all main analytics and data science needs of a start-up using Python, numpy, pandas, and sklearn. For every use case I will show snippets of code using IPython notebooks and run some of them as live demos.	28	Science & Technology	PT42M41S	2561	2d	hd	false	https://i.ytimg.com/vi/67SZeV1iSL4/maxresdefault.jpg		413	5	0	0	0
820	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ukW89Dbt5hk	2015-08-03T18:57:10Z	2015-08-03 18:57:10	Peter Hoffmann - PySpark - Data processing in Python on top of Apache Spark.	Peter Hoffmann - PySpark - Data processing in Python on top of Apache Spark. [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] [Apache Spark][1] is a computational engine for large-scale data processing. It is responsible for scheduling, distribution and monitoring applications which consist of many computational task across many worker machines on a computing cluster. This Talk will give an overview of PySpark with a focus on Resilient Distributed Datasets and the DataFrame API. While Spark Core itself is written in Scala and runs on the JVM, PySpark exposes the Spark programming model to Python. It defines an API for Resilient Distributed Datasets (RDDs). RDDs are a distributed memory abstraction that lets programmers perform in-memory computations on large clusters in a fault-tolerant manner. RDDs are immutable, partitioned collections of objects. Transformations construct a new RDD from a previous one. Actions compute a result based on an RDD. Multiple computation steps are expressed as directed acyclic graph (DAG). The DAG execution model is a generalization of the Hadoop MapReduce computation model. The Spark DataFrame API was introduced in Spark 1.3. DataFrames envolve Spark's RDD model and are inspired by Pandas and R data frames. The API provides simplified operators for filtering, aggregating, and projecting over large datasets. The DataFrame API supports diffferent data sources like JSON datasources, Parquet files, Hive tables and JDBC database connections. Resources: - [An Architecture for Fast and General Data Processing on Large Clusters][2] Matei Zaharia - [Spark][6] Cluster Computing with Working Sets - Matei Zaharia et al. - [Resilient Distributed Datasets][5] A Fault-Tolerant Abstraction for In-Memory Cluster Computing -Matei Zaharia et al. - [Learning Spark][3] Lightning Fast Big Data Analysis - Oreilly - [Advanced Analytics with Spark][4] Patterns for Learning from Data at Scale - Oreilly [1]: https://spark.apache.org [2]: http://www.eecs.berkeley.edu/Pubs/TechRpts/2014/EECS-2014-12.pdf [3]: http://shop.oreilly.com/product/0636920028512.do [4]: http://shop.oreilly.com/product/0636920035091.do [5]: https://www.cs.berkeley.edu/~matei/papers/2012/nsdi_spark.pdf [6]: http://www.cs.berkeley.edu/~matei/papers/2010/hotcloud_spark.pdf	28	Science & Technology	PT23M55S	1435	2d	hd	false	https://i.ytimg.com/vi/ukW89Dbt5hk/maxresdefault.jpg		4848	19	0	0	1
821	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HLRQPZI4L5Y	2015-08-03T18:57:09Z	2015-08-03 18:57:09	Brecht Machiels - RinohType, a document processor inspired by LaTeX	Brecht Machiels - RinohType, a document processor inspired by LaTeX [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] RinohType is a document processor inspired by [LaTeX][1] and written in Python. It renders [reStructuredText][2] and [Sphinx][3] documents to PDF based on a document template and a style sheet. RinohType already implements many of the features that make LaTeX so great. Not stopping there, RinohType also tries to fix LaTeX's weaknesses; it should not only be easy to use, but easy to _customize_ and _extend_ as well. To minimize frustration when things go wrong, care is taken to provide descriptive warning and error messages. The powerful layout engine makes it easy to define custom page layouts. And the CSS- inspired stylesheets simplify the styling of document elements. At a lower level, Python makes the writing of extensions much more accessible when compared to TeX's rather arcane macro language. In the talk, I would like to introduce RinohType to the Python community. No special prerequisite knowledge is required. I will start off by discussing my motivation for starting RinohType development, its design goals and the currently available features. This will be followed by an example of how you can use RinohType to render a reStructuredText document to a neat PDF document, highlighting some of the features along the way. Next, we'll explore some of RinohType's internals such as the page layout engine and the style sheet system. We will explore how these can be used in a Python application to create a document from scratch. A first RinohType release was recently created. While this preview release is of alpha quality, it should be able to render most reStructuredText documents. It also includes a preliminary Sphinx builder. Please find more details in the package's description at [PyPI][4]. [1]: http://en.wikipedia.org/wiki/LaTeX [2]: http://docutils.sourceforge.net/rst.html [3]: http://sphinx-doc.org [4]: https://pypi.python.org/pypi/RinohType	28	Science & Technology	PT38M18S	2298	2d	hd	false	https://i.ytimg.com/vi/HLRQPZI4L5Y/maxresdefault.jpg		457	8	0	0	1
822	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BJ_1ROah-lI	2015-08-03T16:39:37Z	2015-08-03 16:39:37	Jyrki Pulliainen - How-To: Build a local Python community	Jyrki Pulliainen - How-To: Build a local Python community [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Do you like visiting Python conferences like the EuroPython? Does it make you to want something similar where you live too? This talk looks into the effort, practical things and some good tips on how to bootstrap your own Python community where you live! If you already run a local Python community, join this talk to share your views and give your comments to those interested in building their first Python community. After the talk you have a good idea of what it takes to run your local Python community (spoiler: not much!) and how can you take it even further!	28	Science & Technology	PT25M29S	1529	2d	hd	false	https://i.ytimg.com/vi/BJ_1ROah-lI/maxresdefault.jpg		111	5	0	0	0
823	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	e8wUiGDDVno	2015-08-03T16:39:37Z	2015-08-03 16:39:37	Armin Rigo - The GIL is dead: PyPy-STM	Armin Rigo - The GIL is dead: PyPy-STM [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] Take a big, non-multithreaded program, and run in on multiple cores! PyPy, the Python implementation written in Python, experimentally supports Software Transactional Memory (STM). It runs without the Global Interpreter Lock (GIL). The strength of STM is not only to remove the GIL, but to also enable a novel use of multithreading, inheritently safe, and more useful in the general case than other approaches like OpenMP. The main news from last year's presentation is that there is now a way to get reports about the "STM conflicts", which is essential to go past toy examples. With it, you can incrementally remove conflicts from large code bases until you see a benefit from PyPy-STM. The goal of the talk is to give several concrete examples of doing that.	28	Science & Technology	PT28M13S	1693	2d	hd	false	https://i.ytimg.com/vi/e8wUiGDDVno/maxresdefault.jpg		2818	33	1	0	4
824	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LEJb1VZxRoE	2015-08-03T15:41:31Z	2015-08-03 15:41:31	Vlad Temian - gitfs - building a filesystem in Python	Vlad Temian - gitfs - building a filesystem in Python [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] gitfs is an open-source[1] filesystem which was designed to bring the full powers of Git to everyone, no matter how little they know about versioning. A user can mount any repository and all the his changes will be automatically converted into commits. gitfs will also expose the history of the branch you’re currently working on by simulating snapshots of every commit. gitfs is useful in places where you want to keep track of all your files, but at the same time you don’t have the possibility of organizing everything into commits yourself. A FUSE filesystem for git repositories, with local cache. In this talk we will take a look at some of the crucial aspects involved in building a reliable FUSE filesystem, the steps that we took in building gitfs, especially in handling the git objects (http ://git-scm.com/book/en/v2/Git-Internals-Git-Objects), what testing methods we have used for it and also we will share the most important lessons learned while building it. The prerequisites for this talk are: A good understanding of how Git works Basic understaning of Operating Systems concepts [1] You can get the source here - https://github.com/PressLabs/gitfs; you cand find more details here - http://www.presslabs.com/gitfs/.	28	Science & Technology	PT29M49S	1789	2d	hd	false	https://i.ytimg.com/vi/LEJb1VZxRoE/maxresdefault.jpg		464	1	0	0	0
825	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WCez3zbM2eU	2015-08-03T15:41:30Z	2015-08-03 15:41:30	Igor Davydenko - Asyncio Stack & React.js or Development on the Edge	Igor Davydenko - Asyncio Stack & React.js or Development on the Edge [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Times changed, with introducing asyncio to Python standard library many and many developers think about switching from previous solutions to aio stack. Talk will introduce aiohttp, aioredis & aiopg - cornerstones for building modern Python backends and show common problems & solutions while switching to aio stack. But not only Python changed. In second part, I'll talk about what new happened in frontend development, how new ES6 features modified JavaScript, and what React.js & Flux means for Python developers. Talk will cover real-world web application, which used aio stack on backend and React.js & Flux approach on frontend and provide useful observations for other developers interested in these topics.	28	Science & Technology	PT40M17S	2417	2d	hd	false	https://i.ytimg.com/vi/WCez3zbM2eU/maxresdefault.jpg		1172	13	3	0	0
826	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	mdtxHjH2wog	2015-08-03T15:41:30Z	2015-08-03 15:41:30	Takayuki Shimizukawa - Sphinx autodoc: automated API documentation	Takayuki Shimizukawa - Sphinx autodoc: automated API documentation [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Abstract: Using the automated documentation feature of Sphinx, you can make with ease the extensive documentation of Python program. You just write python function documents (docstrings), Sphinx organizes them into the document, can be converted to a variety of formats. In this session, I'll explain a documentation procedure that uses with sphinx autodoc and autosummary extensions. Description: Sphinx provides autodoc feature that generate document from docstring in your python sources. The docstring that contains description and example of the use of function written near the program, makes doc easy to update. In addition, the output of the Sphinx will make you understand what to write in docstring. As a result, this will improve your motivation of doc writing. To use the autodoc, you must specify python modules to automodule directive one by one. This is a tedious task, hoswever autosummary extension automate this task. In most cases, once developers have developed the API, you only need to run the make html of Sphinx, you get a nicely formatted document. Sphinx also has coverage and doctest extentions. These support writing the documentation to work with autodoc. This allow you to check the APIs that have not been documented or you can verify each doctest part is correct or not. If you use such autodoc-related extensions, you can create a Sphinx API documentation in the following procedure. 1. make coverage; you can get the APIs that have not been documented. 2. Write docstrings that includes the doctest format how to use the API. 3. make doctest; you can verify each doctest part is correct or not. 4. make html; you can generate the HTML or your favorite format. In this session, I'll explain a documentation procedure that uses with sphinx autodoc, autosummary, coverage and doctest extensions. Target: - Python programmer who is struggling with documentation. - Python library author who want to generate API docs automatically. - Python library author who want to create a clear documentation which contains python snippets. Outline: * Self introduction (2 min) * Sphinx introduction (2 min) * What is Sphinx? * Sphinx examples * Have you written API docs for your code? (2 min) * I don't know what/where should I write. * Docstrings is needed? Are there some specific format? * Getting start Sphinx (2 min) * How to install Sphinx * How to start a Sphinx project * Generate API docs from your python code (5 min) * setup autodoc extension * write docstrings for yuor python module * "automodule & make html" will generate API docs from python code * autodoc pros & cons: docs for many modules * Listing APIs automatically (5 mins) * setup autosummary extension * how to use autosummary directive * no more autodoc directive * Discovering undocumented APIs (5 min) * setup coverage extension * make coverage * Detect deviations of the impl and doc (5 min) * setup doctest extension * make doctest * Overall picture, tips, Q&A (10 min) * Overall picture of the process * Options for autodoc * translate them into other langs	28	Science & Technology	PT36M28S	2188	2d	hd	false	https://i.ytimg.com/vi/mdtxHjH2wog/maxresdefault.jpg		3530	29	1	0	1
827	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0jKbNpEjkhI	2015-08-03T15:41:29Z	2015-08-03 15:41:29	Claudiu Popa - 12 years of Pylint (or How I learned to stop worrying about bugs)	Claudiu Popa - 12 years of Pylint (or How I learned to stop worrying about bugs) [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] Given the dynamic nature of Python, some bugs tend to creep in our codebases. Innocents NameErrors or hard-to-find bugs with variables used in a closure, but defined in a loop, they all stand no chance in front of Pylint (http://pylint.org/). In this talk, I'll present one of the oldest static analysis tools for Python, with emphasis on what it can do to understand your Python code. Pylint is both a style checker, enforcing PEP 8 rules, as well as a code checker in the vein of pyflakes and the likes, but its true power isn't always obvious to the eye of beholder. It can detect simple bugs such as unused variables and imports, but it can also detect more complicated cases such as invalid arguments passed to functions, it understands the method resolution order of your classes and what special methods aren't implemented correctly. Starting from abstract syntax trees, we'll go through its inference engine and we'll see how Pylint understands the logical flow of your program and what sort of type hinting techniques are used to improve its inference, including PEP 484 type hints. As a bonus, I'll show how it can be used to help you port your long-forgotten library to Python 3, using its new --py3k mode. Link to presentation: http://pcmanticore.github.io/pylint-talks/#slide:1	28	Science & Technology	PT36M9S	2169	2d	hd	false	https://i.ytimg.com/vi/0jKbNpEjkhI/maxresdefault.jpg		1597	9	0	0	0
828	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FopnpwK6ALw	2015-08-03T15:41:29Z	2015-08-03 15:41:29	Mikey Ariel - FOSS DOCS 101 (keep it simple, present!)	Mikey Ariel - FOSS DOCS 101 (keep it simple, present!) [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Does your open source project need better documentation? Do you wish that new users could get started with your software more easily? Do you feel that your code contribution workflow isn't documented well enough, or that contributors are discouraged from documenting their code? How can you give your project docs the love they deserve? This high-level talk aims to introduce the main principles of technical communication in the context of FOSS projects. It is intended for anyone who interacts with docs, whether your project is fresh off the dev environment or has been around since the dawn of Git. Topics include tone, style, process management, structure, and contribution workflow.	28	Science & Technology	PT42M37S	2557	2d	hd	false	https://i.ytimg.com/vi/FopnpwK6ALw/maxresdefault.jpg		249	3	0	0	0
829	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NSkW26eUwKg	2015-08-03T15:41:29Z	2015-08-03 15:41:29	Fabian Kreutz - TDD - the why, the how and the when not	Fabian Kreutz - TDD - the why, the how and the when not [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] TDD is great, we all know that. But why is it so, and under which circumstances is it ineffective or even harmful? In this talk I want to delve into the deeper meaning of testing to derive how to do it best. All of this from the point of view of somebody who has profited but also struggled with testing and TDD. For every experience level from beginner to advanced there is something to learn or ponder.	28	Science & Technology	PT37M7S	2227	2d	hd	false	https://i.ytimg.com/vi/NSkW26eUwKg/maxresdefault.jpg		209	0	0	0	0
830	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NAr8XCPGLMM	2015-08-03T15:41:28Z	2015-08-03 15:41:28	Paul Hallett - What it's really like building RESTful APIs with Django	Paul Hallett - What it's really like building RESTful APIs with Django [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] At the beginning of this year I started working at Lyst and I was tasked with helping to replace their old and outdated web API with a modern RESTful replacement. Along the way we encountered some interesting design decisions and now I’m going to share what we learned about building a real RESTful API with Django and Django REST framework. I've been talking about how to build great RESTful APIs for the past year at various Python and Django conferences in Europe. Now I'd like to take some real world experiences from creating Lyst's new web API and share what I've learned along the way.	28	Science & Technology	PT25M51S	1551	2d	hd	false	https://i.ytimg.com/vi/NAr8XCPGLMM/maxresdefault.jpg		1546	25	2	0	0
831	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ymJZri_-4qo	2015-08-03T15:41:28Z	2015-08-03 15:41:28	Max Tepkeev - Big Data with Python & Hadoop	Max Tepkeev - Big Data with Python & Hadoop [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Big Data - these two words are heard so often nowadays. But what exactly is Big Data ? Can we, Pythonistas, enter the wonder world of Big Data ? The answer is definitely "Yes". This talk is an introduction to the big data processing using Apache Hadoop and Python. We'll talk about Apache Hadoop, it's concepts, infrastructure and how one can use Python with it. We'll compare the speed of Python jobs under different Python implementations, including CPython, PyPy and Jython and also discuss what Python libraries are available out there to work with Apache Hadoop. This talk is intended for beginners who want to know about Hadoop and Python or those who are already working with Hadoop but are wondering how to use it with Python or how to speed up their Python jobs. Slides for this talk are available [here][1] and code used for benchmarks can be found [here][2]. [1]: http://www.slideshare.net/maxtepkeev/europython-2015-big-data-with-python-and-hadoop [2]: https://github.com/maxtepkeev/talks/tree/master/big-data-with-hadoop-and-python	28	Science & Technology	PT43M34S	2614	2d	hd	false	https://i.ytimg.com/vi/ymJZri_-4qo/maxresdefault.jpg		475	4	1	0	0
832	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DUgYznUfwyo	2015-08-03T07:37:49Z	2015-08-03 07:37:49	Ola Sitarska/Ola Sendecka - Keynote: It's Dangerous To Go Alone, Take This: The Power of a Community	Ola Sitarska/Ola Sendecka - Keynote: It's Dangerous To Go Alone, Take This: The Power of a Community [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] In this keynote, Ola and Ola will take you on a fantastic journey to the magical world of little Liz, who is totally enchanted by technology. The story of Liz will show that with a little bit of magic, curiosity, courage and hard work, you can defeat all the obstacles standing in your way. You'll discover with her that making big and scary things is easier when you're not doing them alone. Because sometimes, one magical spell, the helpful hand of a friend or this shiny sparkle is all it takes to make a dent in one's universe.	28	Science & Technology	PT41M12S	2472	2d	hd	false	https://i.ytimg.com/vi/DUgYznUfwyo/maxresdefault.jpg		1005	9	1	0	0
833	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	udhV84W3-Jg	2015-08-03T07:37:48Z	2015-08-03 07:37:48	Sebastian Buczyński - Distributed locks with Python and Redis	Sebastian Buczyński - Distributed locks with Python and Redis [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] Traditional methods of coping with concurrent programming problems are well-known and described in literature. Many programming languages, including Python, contain in their standard libraries tools and primitives such as semaphores and can spawn threads or subprocesses. However, in the face of increasing interest in service oriented architecture and building distributed systems, that span across many independent server nodes, emerges a need to adapt traditional solutions, so they can be applied in the new environment. In this talk I will share my experiences gathered during building a modern contact center - highly concurrent system, which requires certain resources to be accessed exclusively by several self-contained components.	28	Science & Technology	PT22M30S	1350	2d	hd	false	https://i.ytimg.com/vi/udhV84W3-Jg/maxresdefault.jpg		1670	15	3	0	4
834	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IxGibdRaC2I	2015-08-03T05:16:02Z	2015-08-03 05:16:02	Stefan Baerisch - A Deep Look at Logging	Stefan Baerisch - A Deep Look at Logging [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Do you know what your application did last night? Python logging can help you. This talk you will show you how to implement a systematic logging approach without boilerplate code and how to set up the Python logging module for different needs in production systems. We will see how to work with log files and other logging endpoints. We will address the data protection concerns that come up when logging from application with personal information. We will also look at the performance implications of logging. We will then cover best practices - how to structure logging, what to include in a log message, and how to configure logging for different use cases. We will use the Python standard logging module to implement logging. This talk is useful to beginners with some experience. An understanding of decorators is useful, but not required. Some experience in web programming is a plus.	28	Science & Technology	PT24M25S	1465	2d	hd	false	https://i.ytimg.com/vi/IxGibdRaC2I/maxresdefault.jpg		1245	6	0	0	1
835	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Oen84UnCvNM	2015-08-03T05:16:02Z	2015-08-03 05:16:02	Giuseppe Cammarota - Activity Map from space: supporting mine clearance with Python	Giuseppe Cammarota - Activity Map from space: supporting mine clearance with Python [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] Removing UneXploded Ordnance (UXO) from minefields at the end of a conflict is a very time-consuming and expensive operation. Advanced satellite image processing can detect changes and activities on the ground and represent them on a map that can be used by operators to classify more dangerous zones and safer areas, potentially reducing the time spent on field surveys. We exploit space-borne radar Earth images together with thematic data for mapping activities on the ground using numpy, scipy and gdal. The Activity Map generation process to be shown will be implemented using IPython Notebook.	28	Science & Technology	PT20M44S	1244	2d	hd	false	https://i.ytimg.com/vi/Oen84UnCvNM/maxresdefault.jpg		209	4	0	0	0
836	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lqkj3PgdLWU	2015-08-03T05:16:02Z	2015-08-03 05:16:02	Andrey Vlasovskikh - How you can benefit from type hints	Andrey Vlasovskikh - How you can benefit from type hints [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] PEP 484 introduces type hints for Python 3. Type hints can increase readability of our code for both humans and tools and lead to better and safer outcomes. And we'll prove it in this talk! We're going to take a closer look at type hints, see practical examples of where they can be used and the value they provide. We'll see that simple class types and built-in collection types are often enough for our public API's. We'll also discuss how you can benefit from type hinting stubs for third-party libraries and briefly cover more advanced scenarios like generic types.	28	Science & Technology	PT35M6S	2106	2d	hd	false	https://i.ytimg.com/vi/lqkj3PgdLWU/maxresdefault.jpg		344	2	1	0	2
837	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	oS_5FK-KJag	2015-08-03T05:16:01Z	2015-08-03 05:16:01	Ravi Vagadia - Python & Internet of Things	Ravi Vagadia - Python & Internet of Things [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] There is a lot buzz about the Internet of things and how it's going to be the next big thing in computing. Python can power "things" and is used extensively in network applications, however there isn't much information out there about where Python can be used to build end-to- end IoT products. Goals : To put into perspective the usefulness of Python in building IoT products. Spread awareness on possibilities of using Python on embedded hardware.	28	Science & Technology	PT26M26S	1586	2d	hd	false	https://i.ytimg.com/vi/oS_5FK-KJag/maxresdefault.jpg		658	3	0	0	0
838	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wnearKj0Iqc	2015-08-03T05:16:01Z	2015-08-03 05:16:01	Antonin Lacombe - From basic distance search to a complex multi criteria search	Antonin Lacombe - From basic distance search to a complex multi criteria search [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] This case study show how to start from a simple distance search on elasticsearch and haystack and implement a production ready search like airbnb. The talk will explain decay functions works with the different curves (linear, exponential, gauss) and how to send them with query scores to elasticsearch. With that you will be able to mix the distance, the price, the user activity, the number of picture and whatever you want. Additionally I will show how to write a custom ElasticsearchSearchQuery and ElasticsearchSearchBackend because this is not yet supported by haybtacksearch. All the code is available here https://github.com/JeLoueMonCampingCar /haystack-function-score-backend.git	28	Science & Technology	PT30M2S	1802	2d	hd	false	https://i.ytimg.com/vi/wnearKj0Iqc/maxresdefault.jpg		240	3	0	0	0
839	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	62wkprXlFJY	2015-08-03T05:16:00Z	2015-08-03 05:16:00	Richard Wall - Faking It - The Art of Testing Using Verified Fakes	Richard Wall - Faking It - The Art of Testing Using Verified Fakes [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] Have you ever worried that your tests aren't as good because they're running against a fake or mock instead of the real thing? Verified fakes solve this problem. Verified fakes allow for simplified testing using fakes while still providing the assurance that code tested using a fake implementation will behave the same way when used with a real implementation. The talk will begin with a case-study, demonstrating what it means to write a "verified fake" implementation of a public API. I will show how to write tests that verify a fake implementation of a well defined API and I will show how those same tests can be re-used to verify and test real implementations of the same API. The talk will end with a proposal that more libraries should include verified fakes. I will show, with real-world examples, how verified fakes can be used by integrators and discuss how they are superior to ad-hoc, unverified, mocking. During the talk I will refer to various real world, Open Source examples. Including: * Flocker's Pluggable "Block Device Backend" [1] This API allows Flocker to manipulate file systems on OpenStack Cinder Blocks and AWS EBS devices. It also makes it easy for third parties to implement their own Flocker block device backends. * Eliot's Memory Logger - and its use in testing and verifying logged messages. * LibCloud's DummyNodeDriver - and its limitations. * Boto - as an example of a library that could benefit from a verified, introspectable fake. * Docker-py - as an example of a library for which we have written a verified fake. There will be at least 5 minutes for discussion at the end of the talk. [1] Flocker is an Open Source Docker orchestration system written in Python by ClusterHQ	28	Science & Technology	PT29M44S	1784	2d	hd	false	https://i.ytimg.com/vi/62wkprXlFJY/maxresdefault.jpg		246	0	0	0	0
840	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PrdLvyEFYLg	2015-08-03T05:15:59Z	2015-08-03 05:15:59	Valerio Maggio - Machine Learning Under Test	Valerio Maggio - Machine Learning Under Test [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] One point usually underestimated or omitted when dealing with machine learning algorithms is how to write *good quality* code. The obvious way to face this issue is to apply automated testing, which aims at implementing (likely) less-buggy and higher quality code. However, testing machine learning code introduces additional concerns that has to be considered. On the one hand, some constraints are imposed by the domain, and the risks intrinsically related to machine learning methods, such as handling unstable data, or avoid under/overfitting. On the other hand, testing scientific code requires additional testing tools (e.g., `numpy.testing`), specifically suited to handle numerical data. In this talk, some of the most famous machine learning techniques will be discudded and analysed from the `testing` point of view, emphasizing that testing would also allow for a better understanding of how the whole learning model works under the hood. The talk is intended for an *intermediate* audience. The content of the talk is intended to be mostly practical, and code oriented. Thus a good proficiency with the Python language is **required**. Conversely, **no prior knowledge** about testing nor Machine Learning algorithms is necessary to attend this talk. **Slides**: [https://speakerdeck.com/valeriomaggio/machine-learning- under-test-at-europython2015]()	28	Science & Technology	PT32M35S	1955	2d	hd	false	https://i.ytimg.com/vi/PrdLvyEFYLg/maxresdefault.jpg		202	1	0	0	0
841	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QFLeb6wbnQ8	2015-08-03T05:15:59Z	2015-08-03 05:15:59	Matthieu Rigal - Bringing PostgreSQL towards zero downtime migration with Python	Matthieu Rigal - Bringing PostgreSQL towards zero downtime migration with Python [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Using an SQL database offers a bunch of advantages; first of all its maturity and that it is understood by almost every software developer. But it has at least one main disadvantage. As the data is structured, if you want to modify the structure, for example on a long-running project, you need a migration and therefore almost for sure, a downtime. When you have to make a migration, to modify the structure of data for a small amount of records, it is so fast that it never gets problematic. But if you think to modify the structure of tables containing millions or billions of records, the time required to simply apply the structural change is problematic. Here are some changes we are working on at orderbird to go towards zero downtime migrations using some of the latest improvements of PostgreSQL 9.4, mainly logical replication and mixing in a little magic of some python scripting with psycopg.	28	Science & Technology	PT27M45S	1665	2d	hd	false	https://i.ytimg.com/vi/QFLeb6wbnQ8/maxresdefault.jpg		316	5	0	0	0
842	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tgjY7kPxiog	2015-08-03T05:15:59Z	2015-08-03 05:15:59	Pablo Enfedaque - Decorators demystified	Pablo Enfedaque - Decorators demystified [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] Do you know what happens every time you use the **@** symbol in Python? In this talk we will see the magic behind the _syntactic sugar_ of the decorators. To understand how they internally work we will see in detail Python's **scopes**, **namespaces** and **closures**, and finally we will manually apply our own handcrafted decorator. This talk is an improved version (in English) of the talk I delivered at PyConES 2013 (the feedback was pretty positive): [https://www.youtube.com/watch?v=d9-yTnJgcg4 ][1] Level: Intermediate. Attendees must have previous knowledge of Python and should be somehow familiar with the **'@'** notation to decorate a function. The **slides** of the talk can be downloaded from here: [https://speakerdeck.com/pablito56/europython-2015-decorators- demystified][2] [1]: https://www.youtube.com/watch?v=d9-yTnJgcg4 [2]: https://speakerdeck.com/pablito56/europython-2015-decorators-demystified	28	Science & Technology	PT37M38S	2258	2d	hd	false	https://i.ytimg.com/vi/tgjY7kPxiog/maxresdefault.jpg		293	2	0	0	0
843	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2l1w5NguN18	2015-08-03T05:15:58Z	2015-08-03 05:15:58	Alvaro Aguirre - Easy FullStack Deployments	Alvaro Aguirre - Easy FullStack Deployments [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] During this talk we will discuss how to manage your full stack development life cycle using python technologies plus Docker. We will cover from, the project creation (using Pyramid web framework), to maintaining a consistent deployment infrastructure using buildout and docker containers.	28	Science & Technology	PT23M37S	1417	2d	hd	false	https://i.ytimg.com/vi/2l1w5NguN18/maxresdefault.jpg		160	0	0	0	0
844	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yw_Y8-BGOz4	2015-08-03T05:15:58Z	2015-08-03 05:15:58	Nicholas Tollervey - Lessons learned with asyncio ("Look ma, I wrote a distributed hash table!")	Nicholas Tollervey - Lessons learned with asyncio ("Look ma, I wrote a distributed hash table!") [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] This talk introduces the asyncio module. I'll cover what it's for, how it works and describe how I used it to write a real-world networked application (a distributed hash table). We'll explore the event loop, coroutines, futures and networking with examples from my code. This won't be an exhaustive exposition. Rather, attendees will grasp enough of asyncio to continue with their own studies. By the end of this introductory talk I hope attendees will want to learn more about asyncio and perhaps give it a try in their own projects.	28	Science & Technology	PT24M40S	1480	2d	hd	false	https://i.ytimg.com/vi/yw_Y8-BGOz4/maxresdefault.jpg		185	0	0	0	1
845	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WYXkpiaGBms	2015-08-03T05:15:57Z	2015-08-03 05:15:57	Michał Bultrowicz - Python microservices on PaaS done right	Michał Bultrowicz - Python microservices on PaaS done right [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] Lately, there's a lot of talk about microservices but not enough concrete examples and case studies. I want to change that by showing: - how thinking in PaaS terms can lead to robust and scalable designs; - what infrastructure and automation you need to set up to go along smoothly; - how to get real time metrics of your apps; - what makes Python good for microservices; - what is Python's performance relative to some alternatives. **Prerequisites for the talk:** - some experience with web development in Python; - basic knowledge of RESTful web services.	28	Science & Technology	PT40M19S	2419	2d	hd	false	https://i.ytimg.com/vi/WYXkpiaGBms/maxresdefault.jpg		591	10	1	0	1
846	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wtrJ2OzJ7zE	2015-08-03T05:15:48Z	2015-08-03 05:15:48	Cosmin Poieana - Argus - the omniscient CI	Cosmin Poieana - Argus - the omniscient CI [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] Bring the continuous integration to a new level, through a platform/project independent framework able to give you unittest-like reports. Argus is a scenario-based application written in Python, driven by custom recipes under configurable environments, that can be used for testing a wide variety of small and big projects, with the ability of querying live data from the in-test application. Until now, it's successfully used with [cloudbase-init][1] (a robust cloud initialization service for instances) under OpenStack and not only, due to its extensiveness and the ability to mimic different infrastructures. More details can be found on the package page: https://github.com/PCManticore/argus-ci. The goals of this talk are to show its generic scalability, how simple is to create such kind of recipes, the relationship between scenarios, introspection and tests and, but not last, the unlimited freedom of creating very custom aspects of these entities which lead to relevant and in-depth ready for analysis logs. There are no major prerequisites to understand it, just to be familiar with Python and optionally have a focus on cloud infrastructures. [1]: https://github.com/stackforge/cloudbase-init	28	Science & Technology	PT19M1S	1141	2d	hd	false	https://i.ytimg.com/vi/wtrJ2OzJ7zE/maxresdefault.jpg		160	3	0	0	0
847	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	McMb8ZFfMXk	2015-08-03T05:15:47Z	2015-08-03 05:15:47	Filipe Ximenes - What is wrong with API wrappers and how can we do better	Filipe Ximenes - What is wrong with API wrappers and how can we do better [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Wrappers are an essential tool for interacting with web APIs. They reduce the amount of work needed to make requests and sometimes, only sometimes prevent the developer from dealing with extensive documentations. It’s common to encounter libs that require not only the study of their own documentation, but also the APIs one, duplicating the needed work. This is caused because wrappers do not follow a design pattern, each developer creates it’s own design, coding style and use their preferred tools. [Tapioca][1] is what can be called: "a wrapper generator”. Creating API wrappers with Tapioca is extremely easy and fast. For example, it took 1 hour to write the full wrapper for the [Parse.com][2] REST API. But this is not the more important thing, Tapioca libs have a similar interface so once understood how they work, developers can work with any other without the need to learn a new interface. Tapioca is also thought to comply with REST features and takes HATEOAS (Hypermedia as the engine of application state) seriously, so “following” links and pagination are natively supported. Explorability is also a key concept and developers are encouraged to play with Tapioca packages and find their way through APIs before writing their final code. Although there are some production ready [Tapioca wrappers][3], it is a work in progress, there are still many features to be explored. [1]: https://github.com/vintasoftware/tapioca-wrapper [2]: http://parse.com [3]: https://github.com/vintasoftware/tapioca-wrapper#tapioca-comes-in-many-flavours	28	Science & Technology	PT28M8S	1688	2d	hd	false	https://i.ytimg.com/vi/McMb8ZFfMXk/maxresdefault.jpg		444	11	0	0	1
848	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NrLKOEhnb7w	2015-08-03T05:15:47Z	2015-08-03 05:15:47	Fabio Pliger/Oier Beneitez - Welcome	Fabio Pliger/Oier Beneitez - Welcome [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Welcome to EuroPython 2015	28	Science & Technology	PT9M1S	541	2d	hd	false	https://i.ytimg.com/vi/NrLKOEhnb7w/maxresdefault.jpg		329	3	0	0	0
849	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kdl5odf-sMc	2015-08-03T05:15:47Z	2015-08-03 05:15:47	Naomi Ceder - Antipatterns for Diversity	Naomi Ceder - Antipatterns for Diversity [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] **Stop doing the same thing but expecting different results** As developers we put considerable effort into optimisation. We are always tinkering, trying to make things better, and striving to remove antipatterns from our code and our development processes. Yet for some reason we have not been as good at applying this spirit of optimisation to the problem of increasing diversity, even though most people these days agree that, like good tests, agile methodologies, and virtual environments, diversity is a "good thing". My position is that just as there is no single easy way to write good code there is no single easy way to increasing diversity. There are, however, several things that companies and organisations do which actually work against diversity. This talk will explore these antipatterns for diversity, including uncritical belief in meritocracy, lack of understanding of the realities of marginalisation, null processes, misunderstanding of "culture fit", and an unwillingness to change, as well as some ways that teams, companies, and organisations might work to combat them.	28	Science & Technology	PT25M20S	1520	2d	hd	false	https://i.ytimg.com/vi/kdl5odf-sMc/maxresdefault.jpg		274	5	0	0	1
850	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Ad9qSbrfnvk	2015-08-03T05:15:46Z	2015-08-03 05:15:46	Sebastian Neubauer - A Pythonic Approach to Continuous Delivery	Sebastian Neubauer - A Pythonic Approach to Continuous Delivery [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] Software development is all about writing code that delivers additional value to a customer. Following the agile and lean approach this value created by code changes should be continuously delivered as fast, as early and as often as possible without any compromise on the quality. Remarkably, there is a huge gap between the development of the application code and the reliable and scalable operation of the application. As an example, most of the tutorials about web development with Flask or Django end by starting a local “dummy” server, missing out all the steps needed for production ready operation of the web service. Furthermore, as there is no “rocket science” in-between, many proposals to bridge that gap from both sides, operations and developers start with sentences like: “you just have to...”, a clear indication that it will cause problems later on and also a symptom of a cultural gap between developers and operations staff. In this talk I will go through the complete delivery pipeline from application development to the industrial grade operation, clearly biased towards the “DevOps” mindset. Instead of presenting a sophisticated enterprise solution, I will outline the necessary building blocks for continuous delivery and fill them up with simple but working poor man's solutions, so that it is equally useful for professional and non-professional developers and operations engineers. After the talk you will know how to build such a continuous delivery pipeline with open-source tools like “Ansible”, “Devpi” and “Jenkins” and I will share some of my day-to-day experiences with automation in general. Although many of the concepts are language agnostic I will focus on the ins and outs in a python universe and outline the pythonic way of “get this thing running”.	28	Science & Technology	PT39M11S	2351	2d	hd	false	https://i.ytimg.com/vi/Ad9qSbrfnvk/maxresdefault.jpg		653	2	0	0	0
851	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	zZsNPDfOoHU	2015-08-03T05:15:45Z	2015-08-03 05:15:45	Floris Bruynooghe - The hook-based plugin architecture of py.test	Floris Bruynooghe - The hook-based plugin architecture of py.test [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] The hook-based plugin system used by py.test and being made available as a stand alone package allows easy extensibility based on defined extension points which can be implemented using hook functions in the plugins. Plugins can themselves call these hooks as well as define future extension points allowing for a very flexible design. py.test itself uses this plugin system from the ground up with the entire application being implemented by built-in plugins. This architecture has proven powerful and flexible over the years, on both command line tools as well as long running daemons. This talks will describe how the plugin system works and how it deals with passing arguments and return values 1:N hook calls. It will also describe how to design an application consisting entirely of plugins. While not specifically talking about py.test it will also give a solid understanding on how plugins work in py.test. Slides: http://devork.be/talks/pluggy/pluggy.html Org-mode source: http://devork.be/talks/pluggy/pluggy.org	28	Science & Technology	PT40M27S	2427	2d	hd	false	https://i.ytimg.com/vi/zZsNPDfOoHU/maxresdefault.jpg		2015	18	0	0	0
852	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	22lmEdB9QyU	2015-08-03T05:15:44Z	2015-08-03 05:15:44	Georges Dubus - Through the lens of Haskell: exploring new ideas for library design	Georges Dubus - Through the lens of Haskell: exploring new ideas for library design [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] Haskell is very different from Python, and provide different tools to library and framework designers. As a result, its ecosystem is filled with libraries and frameworks that solve the same problems we try to solve in our favorite programming languages, but with a very different approach. This talk is an exploration of the Haskell ecosystem, from the point of view of a Python developer. We will review various popular Haskell libraries and frameworks, focusing on the library design. The goal is to provide the audience a sneak peak of some different ways to tackle problems, and hopefully to inspire library authors to explore some design space that we don't usually explore in Python. This talk should be interesting to any intermediate Python programmer who is curious about other ways to solve problems. No Haskell knowledge is required from the audience.	28	Science & Technology	PT29M33S	1773	2d	hd	false	https://i.ytimg.com/vi/22lmEdB9QyU/maxresdefault.jpg		379	1	0	0	0
853	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	B0Qfe3U_hKU	2015-08-03T05:15:44Z	2015-08-03 05:15:44	Shahriar Tajbakhsh - Parallelism Shootout: threads vs asyncio vs multiple processes	Shahriar Tajbakhsh - Parallelism Shootout: threads vs asyncio vs multiple processes [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] You need to download data from lots and lots of URLs stored in a text file and then save them on your machine. Sure, you could write a loop and get each URL in sequence, but imagine that there are so many URLs that the sun may burn out before that loop is finished; or, you're just too impatient. For the sake of making this instructive, pretend you can only use one box. So, what do you do? Here are some typical solutions: Use a single process that creates lots of threads. Use many processes. Use a single process and a library like asyncio, gevent or eventlet to yield between coroutines when the OS blocks on IO. The talk will walk through the mechanics of each approach, and then show benchmarks of the three different approaches.	28	Science & Technology	PT28M57S	1737	2d	hd	false	https://i.ytimg.com/vi/B0Qfe3U_hKU/maxresdefault.jpg		2032	22	4	0	0
854	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ER08WwJMjm8	2015-08-03T05:15:44Z	2015-08-03 05:15:44	Pablo Seminario - The Salt Route	Pablo Seminario - The Salt Route [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] An introduction to the devops culture by sharing our experience at PeopleDoc Inc. a successfully French start-up. The salt route talk presents some best practices and common mistakes that arise in everyday teamwork between developers and sysadmins using SaltStack for configuration management, server provisioning, orchestration and Django web applications deployment. As an introductory talk there is no prerequisites required.	28	Science & Technology	PT21M13S	1273	2d	hd	false	https://i.ytimg.com/vi/ER08WwJMjm8/maxresdefault.jpg		103	0	0	0	0
855	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Aw4uT0Fi_QY	2015-08-03T05:15:43Z	2015-08-03 05:15:43	David Arcos - Python in the Sky: In-Flight Entertainment with Python	David Arcos - Python in the Sky: In-Flight Entertainment with Python [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Case study of [Immfly][1]'s Wireless In-Flight Entertainment system, built using Python. This talk will show the basic requirements for the system and the architecture decisions we took. Besides, running software at 10.000 meters implies new unexpected challenges, different from the ones we encounter day-to-day. We'll focus on how we solved them. Slides: [https://www.slideshare.net/DZPM/python-in-the-sky/][2] [1]: http://immfly.com [2]: https://www.slideshare.net/DZPM/python-in-the-sky/	28	Science & Technology	PT43M5S	2585	2d	hd	false	https://i.ytimg.com/vi/Aw4uT0Fi_QY/maxresdefault.jpg		426	4	2	0	0
856	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ulFUwi_Ge8E	2015-08-03T05:15:43Z	2015-08-03 05:15:43	Victor Stinner - asyncio community, one year later	Victor Stinner - asyncio community, one year later [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] The asyncio project was officially launched with the release of Python 3.4 in March 2014. The project was public before that under the name "tulip". asyncio is just a core network library, it requires third party library to be usable for common protocols. One year later, asyncio has a strong community writing libraries on top of it. The most advanced library is aiohttp which includes a complete HTTP client but also a HTTP server. There are also libraries to access asynchronously the file system, resolve names with DNS, have variables local to tasks, read-write locks, etc. There are clients for AMQP, Asterisk, ElasticSearch, IRC, XMPP (Jabber), etc. (and even an IRC server!). There are asynchronous drivers for all common databases, and even for some ORMs. As expected, there are tons of new web frameworks based on asyncio. It's also possible to plug asyncio into Gtk, Qt, gevent, eventlet, gunicorn, tornado, etc. I will also discuss use cases of asyncio in production and benchmarks. Spoiler: asyncio is not slow. The asyncio library also evolved to become more usable: it has a better documentation, is easier to debug and has a few new functions. There is also a port to Python 2: trollius.	28	Science & Technology	PT32M7S	1927	2d	hd	false	https://i.ytimg.com/vi/ulFUwi_Ge8E/maxresdefault.jpg		448	4	0	0	0
857	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5Ij0w2pk-fQ	2015-08-02T18:17:08Z	2015-08-02 18:17:08	Philipp Mack - Python in the world of retail and mail order	Philipp Mack - Python in the world of retail and mail order [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] At Blue Yonder a lot of different python packages, provided by the community, as well as our own self-written packages, are used in order to provide flexible solutions to our problems. In this talk I'll present a walkthrough of a generic python application example for demand and purchase order quantity calculations, putting together those packages in an orderly way. The example will feature real world problems derived from hands-on experience with our retail and mail order customers. Additionally the talk addresses the subjects of testing, configuring, parallelising and deploying the code. Packages used in this talk are : - pytest http://pytest.org/latest/ - voluptuous https://github.com/alecthomas/voluptuous - redis https://pypi.python.org/pypi/redis/ - SciPy http://www.scipy.org/ - scikit-learn http://scikit-learn.org/stable/ - pandas http://pandas.pydata.org/	28	Science & Technology	PT33M4S	1984	2d	hd	false	https://i.ytimg.com/vi/5Ij0w2pk-fQ/maxresdefault.jpg		225	3	0	0	0
858	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WhRfr7r5tYQ	2015-08-02T18:17:08Z	2015-08-02 18:17:08	Wojciech Lichota - Continuous Deployment for webapps based on Django	Wojciech Lichota - Continuous Deployment for webapps based on Django [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] When you see users starting to use your feature, you feel very proud and fulfilled. So why feel this only once every few weeks, why not feel it every day? In this talk I will show how we changed our workflow to automate deployment of code changes to production every time a feature is ready - sometimes even few times per day. I will present how to successfully combine open-source tools like Git, Jenkins, Buildout, Fabric, uWSGI, and South, in order to simplify the process and make it more reliable. I will discuss challenges that we faced implementing this workflow in a real project based on Django and how we resolved them. During this talk you will gain the knowledge required to implement Continuous Deployment in your own project.	28	Science & Technology	PT34M17S	2057	2d	hd	false	https://i.ytimg.com/vi/WhRfr7r5tYQ/maxresdefault.jpg		305	1	2	0	0
859	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BzmjfXzj1LA	2015-08-02T18:17:07Z	2015-08-02 18:17:07	Benoît Calvez - Python and elasticsearch 101	Benoît Calvez - Python and elasticsearch 101 [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] Before its first major version, Elasticsearch was only used as a "secondary" database, and search engine. The releases added a snapshort/restore feature, making it a great full featured database This talk will focus on how we integrate Elasticsearch into our stack, and the multiple usage we make of it: from storing business events to IOT devices metrics.	28	Science & Technology	PT19M12S	1152	2d	sd	false			696	1	4	0	3
860	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LJgDGh-6xJs	2015-08-02T18:17:07Z	2015-08-02 18:17:07	Piotr Dyba - with modern_peripherals: Python and Flask	Piotr Dyba - with modern_peripherals: Python and Flask [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] with modern_peripherals: Python and Flask Auto-scrolling sites, glance-following ads, and gesture friendly web pages are coming! Over the last few years three products emerged that enable interaction with computer in a new way: Myo Armband, Leap Motion Controller and EyeTribe. The Myo Armband is a device that uses the electrical activity in your muscles to wirelessly control your computer, phone, and tablet, which is especially useful when your hands are "tied" or dirty. This device will be used to navigate through the presentation. The Leap Motion Controller tracks both hands in front of the screen. From a web developer’s perspective, both devices allows us to use gestures, previously restricted to touch devices, on desktops. EyeTribe is an affordable eye-tracking device. The talk will briefly cover setting up SDKs and python wrappers, and then focus on possible uses in daily life, business and, of course, web app development. Code examples will be included. In addition, the trade-offs between processing this new type of input data in the client versus processing input on the server will be discussed.	28	Science & Technology	PT31M22S	1882	2d	hd	false	https://i.ytimg.com/vi/LJgDGh-6xJs/maxresdefault.jpg		289	2	0	0	0
861	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qLoBHbVb0Fw	2015-08-02T18:17:07Z	2015-08-02 18:17:07	Alejandro Guirao Rodríguez - Extending and embedding Ansible with Python	Alejandro Guirao Rodríguez - Extending and embedding Ansible with Python [EuroPython 2015] [23 July 2015] [Bilbao, Euskadi, Spain] [Slides here][1] :-) [Ansible ][2] is the _new cool kid in town_ in the configuration management world. It is easy to learn, fast to setup and works great! In the first part of the talk, I will do a super-fast introduction to Ansible for the newcomers. If you are a Pythonista, you can hack and leverage Ansible in many ways. In the second part of the talk, I will describe some options to extend and embed Ansible with Python: - Embedding Ansible with the Python API - Extending Ansible: creating modules, dynamic inventory scripts and plugins Previous experience with Ansible is advised in order to get the most of this talk, but beginners to the tool will also get an overview of the capabilities of this kind of integration. [1]: http://slides.com/alejandroguiraorodriguez/ee-ansible-with-python#/ [2]: http://www.ansible.com/home	28	Science & Technology	PT37M29S	2249	2d	hd	false	https://i.ytimg.com/vi/qLoBHbVb0Fw/maxresdefault.jpg		583	2	2	0	1
862	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	AOwP2xq_ceE	2015-08-02T18:17:06Z	2015-08-02 18:17:06	Vincent Warmerdam - PySpark and Warcraft Data	Vincent Warmerdam - PySpark and Warcraft Data [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] In this talk I will describe how to use Apache Spark (PySpark) with some data from the World of Warcraft API from an iPython notebook. Spark is interesting because it speeds up iterative processes on your hadoop cluster as well as your local machine. I will give basic benchmarks (comparing it to numpy/pandas/scikit), explain the architecture/performance behind the technology and will give a live demo on how I used Spark to analyse an interesting dataset. I'll explain why you might want to use Spark and I'll also go in and explain when you don't want to use it. The dataset I will be using is a 22Gb json blob containing auction house data from all world of warcraft servers over a period of time. The goal of the analysis will be to determine when and if basic economics still applies in a massively online game. I will assume that the everyone knows what the ipython notebook is and I will assume a basic knowledge of numpy/pandas but nothing fancy. The dataset has been chosen such that people who are less interested in Spark can still enjoy the analysis part of the talk. If you know very little about data science but if you love video games then you should like this talk.	28	Science & Technology	PT38M16S	2296	2d	hd	false	https://i.ytimg.com/vi/AOwP2xq_ceE/maxresdefault.jpg		522	4	0	0	0
863	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Axm14JH8XlY	2015-08-02T18:17:06Z	2015-08-02 18:17:06	Romain Guillebert - PyPy and the future of the Python ecosystem	Romain Guillebert - PyPy and the future of the Python ecosystem [EuroPython 2015] [24 July 2015] [Bilbao, Euskadi, Spain] Python has a great versatile ecosystem but the competition is getting better, this talk is about how Python can keep up with these new languages and where PyPy fits into this. Recently we've seen the rise of new technologies like Go, Node.js and Julia, those have the ability to build an ecosystem on a clean slate and thus be better than Python in some aspects. What would it take to be as good as those technologies on those aspects without loosing all the things we love about Python ? This talk will describe my perfect future where Python keeps getting better, gets to keep it's great set of libraries and where PyPy fits in that future.	28	Science & Technology	PT22M	1320	2d	hd	false	https://i.ytimg.com/vi/Axm14JH8XlY/maxresdefault.jpg		647	6	0	0	1
864	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	41RzcHNfdSo	2015-08-02T18:17:05Z	2015-08-02 18:17:05	Marco Buttu - Lessons learned about testing and TDD	Marco Buttu - Lessons learned about testing and TDD [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] One day our software will go in production, and so shortly we will pay dearly for our youthful mistakes. Without regression tests, we will be in deep trouble. If we have regression tests, but we did not have performed TDD, we should probably increase the effort in bug fixing and maintenance, since we do not have enough code coverage and our tests come out complex. By retracing the author youthful mistakes, we will see a complete development workflow, from the user story to the low-level tests, in order to highlight the differences between functional, integration and unit tests, the best practices, and the lessons learned by the author during the development of the [Sardinia Radio Telescope][1] control software. [Slides available here][2]. [1]: https://www.youtube.com/watch?v=zCL_tSMqsRg [2]: http://marco-buttu.github.io/pycon_testing/	28	Science & Technology	PT29M27S	1767	2d	hd	false	https://i.ytimg.com/vi/41RzcHNfdSo/maxresdefault.jpg		214	2	0	0	1
865	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Km7poOD8ybU	2015-08-02T18:17:05Z	2015-08-02 18:17:05	Alexander Sibiryakov - Frontera: open source large-scale web crawling framework	Alexander Sibiryakov - Frontera: open source large-scale web crawling framework [EuroPython 2015] [20 July 2015] [Bilbao, Euskadi, Spain] In this talk I'm going to introduce Scrapinghub's new open source framework [Frontera][1]. Frontera allows to build real-time distributed web crawlers and website focused ones. Offering: - customizable URL metadata storage (RDBMS or Key-Value based), - crawling strategies management, - transport layer abstraction. - fetcher abstraction. Along with framework description I'll demonstrate how to build a distributed crawler using [Scrapy][2], Kafka and HBase, and hopefully present some statistics of Spanish internet collected with newly built crawler. Happy EuroPythoning! [1]: https://github.com/scrapinghub/frontera [2]: http://scrapy.org/	28	Science & Technology	PT27M52S	1672	2d	hd	false	https://i.ytimg.com/vi/Km7poOD8ybU/maxresdefault.jpg		2617	10	0	0	0
866	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	uWDNvWvlw7I	2015-08-02T13:30:43Z	2015-08-02 13:30:43	Fabrizio Romano - TDD is not about tests!	Fabrizio Romano - TDD is not about tests! [EuroPython 2015] [21 July 2015] [Bilbao, Euskadi, Spain] TDD is not about tests! Well, actually, it’s not a about writing tests, or writing them before the code. This talk will show you how to use tests to really drive development by transforming business requirements into tests, and allowing your code to come as their natural consequence. Too often this key aspect is neglected and the result is that tests and code are somehow “disconnected”. The code is not as short and efficient as it could be, and the tests are not as effective. Refactoring is not always easy, and over time all sorts of issues start to come out of the surface. However, we will show that when TDD is done properly, tests and code merge beautifully into an organic whole that fulfills the business requirements, and provides all sorts of advantages: your code is minimal, easy to amend and extend, readable, clean. Your tests will be effective, short and focused, and allow for light-hearted refactoring and excellent coverage. We will provide enough information and examples to spark the curiosity of the novice, and satisfy the need of a deeper insight for the intermediate, and help you immediately benefit from this transformative technique that is still often underestimated and misunderstood. Slides: [http://slides.com/gianchub/ep2015-tdd#/][1] [1]: http://slides.com/gianchub/ep2015-tdd#/	28	Science & Technology	PT23M44S	1424	2d	hd	false	https://i.ytimg.com/vi/uWDNvWvlw7I/maxresdefault.jpg		328	5	0	0	0
867	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PIcCsZ3Nk8I	2015-08-02T12:43:45Z	2015-08-02 12:43:45	Alejandro Garcia - Python Gamedev MLG	Alejandro Garcia - Python Gamedev MLG [EuroPython 2015] [22 July 2015] [Bilbao, Euskadi, Spain] An overview of the currently available Python game development libraries and frameworks and how is Python currently being used in the videogame industry. Presentation of Kobra, a modern open source Python game development framework with ECS (Entity Component System) architecture and C++ bindings.	28	Science & Technology	PT28M24S	1704	2d	hd	false	https://i.ytimg.com/vi/PIcCsZ3Nk8I/maxresdefault.jpg		442	2	0	0	0
868	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1s5f4VzCxcs	2014-09-22T06:53:37Z	2014-09-22 06:53:37	Stefanie Lück - RISCy Business: Development of a RNAi design and off-target prediction software	Stefanie Lück - RISCy Business: Development of a RNAi design and off-target prediction software [EuroPython 2014] [24 July 2014] RNA interference (RNAi) is a biological mechanism for targeted inhibition of gene expression. It has also been used routinely to discover genes involved in the interaction of plants with pathogenic fungi. To minimize the miss-targeting of unrelated genes and to maximize the RNAi efficiency, we have developed a PyQt based cross- platform software tool called “si-Fi”. Our aim of the talk is to show that also hobby programmers can use Python in a very useful way.	28	Science & Technology	PT25M5S	1505	2d	sd	false			125	2	0	0	0
869	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9lfRjdASrAQ	2014-09-22T06:53:37Z	2014-09-22 06:53:37	Benoit Chesneau - Concurrent programming with Python and my little experiment	Benoit Chesneau - Concurrent programming with Python and my little experiment [EuroPython 2014] [25 July 2014] Concurrent programming in Python may be hard. A lot of solutions exists though. Most of them are based on an eventloop. This talk will present what I discovered and tested along the time and my little experiment in porting the Go concurrency model in Python. ----- Concurrent programming in Python may be hard. A lot of solutions exists though. Most of them are based on an eventloop. This talk will present what I discovered and tested along the time with code examples, from asyncore to asyncio, passing by gevent, eventlet, twisted and some new alternatives like evergreen or gruvi. It will also present my little experiment in porting the Go concurrency model in Python named [offset](http://github.com/benoitc/offset), how it progressed in 1 year and how it became a fully usable library . This presentation will be an update of the presentation I gave at the FOSDEM 2014. It will introduce to the concurrency concepts and how they are implemented in the different libraries.	28	Science & Technology	PT21M12S	1272	2d	sd	false			694	1	1	0	0
870	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	CJ7-SroGtZ8	2014-09-22T06:53:37Z	2014-09-22 06:53:37	Mark Smith - Writing Awesome Command-Line Programs in Python	Mark Smith - Writing Awesome Command-Line Programs in Python [EuroPython 2014] [24 July 2014] Command-Line programs can have a lot to them - usually more than you think, yet often suffer from a lack of thought. This is a tour through how to structure your code, tools in the standard library and some 3rd party libraries. Take your command-line programs to the next level! ----- Python is a great language for writing command-line tools - which is why so much of Linux is secretly written in Python these days. Unfortunately, what starts as a simple script can quickly get out of hand as more features are added and more people start using it! The talk will consist of a tour through various useful libraries and practical code showing how each can be used, and include advice on how to best structure simple and complex command-line tools. Things to consider when writing command-line apps: * Single-file vs Multiple-file * Standard library only vs. 3rd party requirements * Installation - setup.py vs. native packaging The different parts of a command-line program: * Option Parsing: * Libraries: getopt, optparse, argparse, docopt * Sub-commands * Configuration: * Formats: Ini file, JSON, YAML * Where should it be stored (cross-platform); * Having multiple configuration files, and allowing user config to override global config * Output: * Colour - colorama * Formatting output for the user * Formatting output for other programs * How do you know when your output is being piped to another program? * Managing logging and verbosity * Managing streamed input * Exit values: What are the conventions? * Interactive apps - REPL * Structuring a bunch of programs/commands around a shared codebase. * Command-line frameworks: clint, compago & cliff * Testing command-line apps * Writing command-line tools in Python 3 vs Python 2	28	Science & Technology	PT41M25S	2485	2d	sd	false			6642	56	3	0	1
871	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Rm2P6DB6-nU	2014-09-22T06:53:37Z	2014-09-22 06:53:37	Schlomo Schapiro - DevOps Risk Mitigation: Test Driven Infrastructure	Schlomo Schapiro - DevOps Risk Mitigation: Test Driven Infrastructure [EuroPython 2014] [23 July 2014] The (perceived) risk of the DevOps is that too many people get the right to "break" the platform. Test Driven Infrastructure is about adapting proven ideas from our developer colleagues to the development and operations of Infrastructure services like virtualization, OS provisioning, postfix configuration, httpd configuration, ssh tuning, SAN LUN mounting and others. This talk shows how ImmobilienScout24 utilizes more and more test driven development in IT operations to increase quality and to mitigate the risk of opening up the infrastructure developmen to all developers. ----- Common wisdom has it that the test effort should be related to the risk of a change. However, the reality is different: Developers build elaborate automated test chains to test every single commit of their application. Admins regularly “test” changes on the live platform in production. But which change carries a higher risk of taking the live platform down? What about the software that runs at the “lower levels” of your platform, e.g. systems automation, provisioning, proxy configuration, mail server configuration, database systems etc. An outage of any of those systems can have a financial impact that is as severe as a bug in the “main” software! One of the biggest learnings that any Ops person can learn from a Dev person is Test Driven Development. Easy to say - difficult to apply is my personal experience with the TDD challenge. This talk throws some light on recent developments at ImmobilienScout24 that help us to develop the core of our infrastructure services with a test driven approach: * How to do unit tests, integration tests and systems tests for infrastructure services? * How to automatically verify Proxy, DNS, Postfix configurations before deploying them on live servers? * How to test “dangerous” services like our PXE boot environment or the automated SAN mounting scripts? * How to add a little bit of test coverage to everything we do. * Test Driven: First write a failing test and then the code that fixes it. The tools that we use are Bash, Python, Unit Test frameworks and Teamcity for build and test automation. See http://blog.schlomo.schapiro.org/2013/12/test-driven-infrastructure.html for more about this topic.	28	Science & Technology	PT47M25S	2845	2d	sd	false			154	0	0	0	0
872	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Whd2LfousHk	2014-09-22T06:53:37Z	2014-09-22 06:53:37	Jozef - Amanda: A New Generation of Distributed Services Framework	Jozef - Amanda: A New Generation of Distributed Services Framework [EuroPython 2014] [22 July 2014] Abstract To help create award winning visual effects, MPC developed a distributed service-oriented platform, Amanda. Amanda allows developers of any level to write a service that is presented to users across 8 facilities globally without them requiring any knowledge of building large concurrent systems. It allows artists and developers across different domains to work with clearly defined API's and gives the service developer control over what and how data can and should be accessed. The talk will cover how to set up such a platform from the ground up. Starting at the service level building it out with additional modules and technologies until the fully distributed system, covering topics such as concurrency, componetisation and monitoring that allow the fine tuning of setups depending on the type of work being undertaken and changing business needs.	28	Science & Technology	PT24M50S	1490	2d	sd	false			177	1	0	0	0
873	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jWFmfbxnANo	2014-09-22T06:53:37Z	2014-09-22 06:53:37	Naomi Ceder - Farewell and Welcome Home: Python in Two Genders	Naomi Ceder - Farewell and Welcome Home: Python in Two Genders [EuroPython 2014] [24 July 2014] After half a lifetime I transitioned from male to female while staying involved in the Python community. This talk discusses that transition and explores how I found life in Python as a woman different from my former life as a man and the lessons about diversity I have learned. ----- After half a lifetime "undercover as a man" I transitioned from male to female while staying involved in the Python community. This talk discusses that transition and explores how I found life in Python as a woman different from my former life as a man and the lessons about diversity I have learned. This talk will include a brief discussion of what being transgender means, my experiences as I came to terms with it, and the losses and gains transition entailed. Early on I made the decision to be as open as possible and to stay engaged in the Python community as I transitioned and I will discuss why I made that decision and the levels of acceptance and support I encountered. Transition has been wonderfully successful, but that very transition put me in a surprisingly different world. Now being part of not one, but at least 3 groups that are minorities in the Python world gave me a very different view of a community I thought I knew, and pushed me to being an activist (or trouble maker) in spite of myself. In addition to the many positives the Python community has offered me on my journey, I will discuss the experiences that have made me understand that privilege is very much alive and well in the Python world.	28	Science & Technology	PT31M42S	1902	2d	sd	false			305	1	3	0	0
874	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kLP83HZvbfQ	2014-09-22T06:53:37Z	2014-09-22 06:53:37	Francesc Alted - Out-of-Core Columnar Datasets	Francesc Alted - Out-of-Core Columnar Datasets [EuroPython 2014] [25 July 2014] Tables are a very handy data structure to store datasets to perform data analysis (filters, groupings, sortings, alignments...). But it turns out that how the tables are actually implemented makes a large impact on how they perform. Learn what you can expect from the current tabular offerings in the Python ecosystem. ----- It is a fact: we just entered in the Big Data era. More sensors, more computers, and being more evenly distributed throughout space and time than ever, are forcing data analyists to navigate through oceans of data before getting insights on what this data means. Tables are a very handy and spreadly used data structure to store datasets so as to perform data analysis (filters, groupings, sortings, alignments...). However, the actual table implementation, and especially, whether data in tables is stored row-wise or column-wise, whether the data is chunked or sequential, whether data is compressed or not, among other factors, can make a lot of difference depending on the analytic operations to be done. My talk will provide an overview of different libraries/systems in the Python ecosystem that are designed to cope with tabular data, and how the different implementations perform for different operations. The libraries or systems discussed are designed to operate either with on-disk data ([PyTables] [1], [relational databases] [2], [BLZ] [3], [Blaze] [4]...) as well as in-memory data containers ([NumPy] [5], [DyND] [6], [Pandas] [7], [BLZ] [3], [Blaze] [4]...). A special emphasis will be put in the on-disk (also called out-of-core) databases, which are the most commonly used ones for handling extremely large tables. The hope is that, after this lecture, the audience will get a better insight and a more informed opinion on the different solutions for handling tabular data in the Python world, and most especially, which ones adapts better to their needs. [1]: http://www.pytables.org [2]: http://en.wikipedia.org/wiki/Relational_database [3]: http://blz.pydata.org [4]: http://blaze.pydata.org [5]: http://www.numpy.org/ [6]: https://github.com/ContinuumIO/dynd-python [7]: http://pandas.pydata.org/	28	Science & Technology	PT22M32S	1352	2d	sd	false			118	1	0	0	0
875	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	r6hGGURJwqo	2014-09-22T06:53:37Z	2014-09-22 06:53:37	Armin Rigo/Romain Guillebert - PyPy status talk (a.k.a.: no no, PyPy is not dead)	Armin Rigo/Romain Guillebert - PyPy status talk (a.k.a.: no no, PyPy is not dead) [EuroPython 2014] [22 July 2014] The current status of PyPy, with a particular focus on what happened in the last two years, since the last EuroPython PyPy talk. We will give a brief overview of the current speed and the on-going development efforts on the JIT, the GC, NumPy, Python 3 compatibility, CFFI, STM... http://pypy.org/talk/ep2014-status.html ----- In this talk we will present the current status of PyPy, with a particular focus on what happened in the last two years, since the last EuroPython PyPy talk. We will give an overview of the current speed and the on-going development efforts, including but not limited to: - the status of the Just-in-Time Compiler (JIT) and PyPy performance in general; - the improvements on the Garbage Collector (GC); - the status of the NumPy and Python 3 compatibility subprojects; - CFFI, which aims to be a general C interface mechanism for both CPython and PyPy; - a quick overview of the STM (Software Transactional Memory) research project, which aims at solving the GIL problem. This is the "general PyPy status talk" that we give every year at EuroPython (except last year; hence the "no no, PyPy is not dead" part of the title of this talk).	28	Science & Technology	PT31M38S	1898	2d	sd	false			252	0	0	0	0
876	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	r8Rqp2w_kHk	2014-09-22T06:53:37Z	2014-09-22 06:53:37	Felix Wick/Florian Wilhelm - How to Setup a new Python Project	Felix Wick/Florian Wilhelm - How to Setup a new Python Project [EuroPython 2014] [23 July 2014] Setting up a new Python project from scratch can be quite hard. How to structure your files and directories. Where should my packages, modules, documentation and unit tests go? How do I configure setup.py, Sphinx and so on? We provide proven answers! ----- Whenever a Python beginner starts with its own project he or she is confronted with the same technical questions. Questions about a well thought out directory structure to hold all the files. How setup.py needs to be configured and even what it is capable of like specifying entry_points and other goodies. We show from the experience of our yearslong work with Python how to structure your Python project in terms of folders, files, modules and packages. How to configure setup.py to specify your requirements, to use it with nosetests, with Sphinx and so on. We also elaborate on the usage of Git and Versioneer (https://github.com/warner/python-versioneer) to help you version your package.	28	Science & Technology	PT24M44S	1484	2d	sd	false			836	6	0	0	0
877	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	svA4k9UzSZE	2014-09-22T06:53:37Z	2014-09-22 06:53:37	Valerio Maggio - Traversing Mazes the pythonic way and other Algorithmic Adventures	Valerio Maggio - Traversing Mazes the pythonic way and other Algorithmic Adventures [EuroPython 2014] [22 July 2014] Graphs define a powerful mental (and mathematical) model of structure, representing the building blocks of formulations and/or solutions for many hard problems. In this talk, graphs and (some of the) main graph-related algorithms will be analysed from a very pythonic angle: the Zen of Python (e.g., beautiful is better than ugly, simple is better than complex, readability counts).	28	Science & Technology	PT44M50S	2690	2d	sd	false			155	0	0	0	0
878	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	u2tnvWyO3U0	2014-09-22T06:53:37Z	2014-09-22 06:53:37	Florian Wilhelm - Extending Scikit-Learn with your own Regressor	Florian Wilhelm - Extending Scikit-Learn with your own Regressor [EuroPython 2014] [25 July 2014] We show how to write your own robust linear estimator within the Scikit-Learn framework using as an example the Theil-Sen estimator known as "the most popular nonparametric technique for estimating a linear trend". ----- Scikit-Learn (http://scikit-learn.org/) is a well-known and popular framework for machine learning that is used by Data Scientists all over the world. We show in a practical way how you can add your own estimator following the interfaces of Scikit-Learn. First we give a small introduction to the design of Scikit-Learn and its inner workings. Then we show how easily Scikit-Learn can be extended by creating an own estimator. In order to demonstrate this, we extend Scikit-Learn by the popular and robust Theil-Sen Estimator (http://en.wikipedia.org/wiki/Theil%E2%80%93Sen_estimator) that is currently not in Scikit-Learn. We also motivate this estimator by outlining some of its superior properties compared to the ordinary least squares method (LinearRegression in Scikit-Learn).	28	Science & Technology	PT25M54S	1554	2d	sd	false			770	3	0	0	0
879	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-kuobN7d1eU	2014-09-22T06:53:36Z	2014-09-22 06:53:36	valentin - Compress Me, Stupid!	valentin - Compress Me, Stupid! [EuroPython 2014] [23 July 2014] Compression is a general technique for reducing the size of datasets that normally lie on disk or that should be sent remotely. But time has come to use it as a means to accelerate applications that uses in-memory data too. Blosc is a high-performance meta-compressor that is meant to do that. ----- Compression is a technique to reduce the number of bits needed to represent a given dataset. A very common use-case in the distributed digital age is to reduce the size of files in order to reduce the time and bandwidth requirements of sending a file from one location to another. There are a large variety of different algorithms and implementations of so called "codecs" - a term is derived from the fact that programs that implement a compression algorithm commonly constitute of both a compressor and a corresponding decompressor. There are many different special purpose compressors that exploit specifics in the structure of the input data, for example: MP3, Ogg and FLAC for audio data such as music, GIF, JPEG and PNG for images and MPEG for encoding video. Also, there are many general purpose codecs that make no assumptions about the structure of the data, for example: Zlib(DEFLATE), Bzip2(BWT) and LZMA. However, and due to the ever growing divide between memory access latency and CPU clock speed a new use-case beyond faster file transfers and more efficient use of disk-space has emerged: "in-memory compression". Keeping data in RAM that is compressed also means that the CPU has to do more work in order to make use of it. However, if the compressor is fast enough, this decompression overhead could pay off, and applications could work with compressed data transparently, and so not even noticing the slowdown due to the extra effort for compression/decompression. This technique can be very beneficial in a variety of scenarios where RAM availability is critical. For example, in-memory caching systems like Memcached or Redis could store more data using the same resources thereby optimizing resource usage. Another use case is to use compression for in-memory data containers, à la NumPy's ndarray or Pandas' DataFrame, allowing for improved memory usage and potentially allow for accelerated computations. In our talk, we will explain first why we are in a moment of computer history that [in-memory compression can be beneficial for modern applications] [1]. Then, we will introduce [Blosc] [2], a high speed meta-compressor, allowing other existing compressors (BloscLZ, LZ4, Snappy or even Zlib) to leverage the SIMD and multithreading framework that it provides and help achieving extremely fast operation (frequently faster than a plain memcpy() system call). Finally, we will show some existing data handling libraries ([Bloscpack] [3], [PyTables] [4], [BLZ] [5]) -- all written in Python -- that already use Blosc today for fulfilling the promise of faster operations by doing in-memory compressing. [1]: http://www.pytables.org/docs/CISE-12-2-ScientificPro.pdf [2]: http://www.blosc.org [3]: https://github.com/Blosc/bloscpack [4]: http://www.pytables.org [5]: http://continuum.io/blog/blz-format	28	Science & Technology	PT35M45S	2145	2d	sd	false			377	4	2	0	0
880	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6vp8Hjx173E	2014-09-22T06:53:36Z	2014-09-22 06:53:36	Adriana Vasiu - Cutting-edge APIs using hypermedia at BSkyB	Adriana Vasiu - Cutting-edge APIs using hypermedia at BSkyB [EuroPython 2014] [22 July 2014] In this talk I will explain what hypermedia enabled API means, I will give an example of such an API and I will take you through the implementation details and the usage of flask, dougrain and HAL in this context. Also, I will present a brief comparison with an API that is not hypermedia enabled and take you through the advantages of using the hypermedia approach. ----- In the technology community at the moment there is a lot of talk about hypermedia enabled APIs and Web as an Architecture model. More and more applications nowadays try to adopt the loosely coupled and distributed web like architecture by using hypermedia as an engine of the application state. In Sky we are successfully implementing this approach for some of our components, and we’ve learnt that the major benefit for us is the scalability that it offers: as an increasingly expanding business with a constantly growing product portfolio, scalability of all our systems is crucial. In this talk I will share some of the things we learnt, I will explain what hypermedia enabled API means, I will give an example of such an API and I will take you through the implementation details and the usage of flask, dougrain and HAL in this context. Also, I will present a brief comparison with an API that is not hypermedia enabled and take you through the advantages of using the hypermedia approach.	28	Science & Technology	PT32M30S	1950	2d	sd	false			214	1	0	0	0
881	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8QeFAJ9o1-o	2014-09-22T06:53:36Z	2014-09-22 06:53:36	Jim Baker - Scalable Realtime Architectures in Python	Jim Baker - Scalable Realtime Architectures in Python [EuroPython 2014] [25 July 2014] This talk will focus on you can readily implement highly scalable and fault tolerant realtime architectures, such as dashboards, using Python and tools like Storm, Kafka, and ZooKeeper. We will focus on two related aspects: composing reliable systems using at-least-once and idempotence semantics and how to partition for locality. ----- Increasingly we are interested in implementing highly scalable and fault tolerant realtime architectures such as the following: * Realtime aggregation. This is the realtime analogue of working with batched map-reduce in systems like Hadoop. * Realtime dashboards. Continuously updated views on all your customers, systems, and the like, without breaking a sweat. * Realtime decision making. Given a set of input streams, policy on what you like to do, and models learned by machine learning, optimize a business process. One example includes autoscaling a set of servers. (We use realtime in the soft sense: systems that are continuously computing on input streams of data and make a best effort to keep up; it certainly does not imply hard realtime systems that strictly bound their computation times.) Obvious tooling for such implementations include Storm (for event processing), Kafka (for queueing), and ZooKeeper (for tracking and configuration). Such components, written respectively in Clojure (Storm), Scala (Kafka), and Java (ZooKeeper), provide the desired scalability and reliability. But what may not be so obvious at first glance is that we can work with other languages, including Python, for the application level of such architectures. (If so inclined, you can also try reimplementing such components in Python, but why not use something that's been proven to be robust?) In fact Python is likely a better language for the app level, given that it is concise, high level, dynamically typed, and has great libraries. Not to mention fun to write code in! This is especially true when we consider the types of tasks we need to write: they are very much like the data transformations and analyses we would have written of say a standard Unix pipeline. And no one is going to argue that writing such a filter in say Java is fun, concise, or even considerably faster in running time. So let's look at how you might solve such larger problems. Given that it was straightforward to solve a small problem, we might approach as follows. Simply divide up larger problems in small one. For example, perhaps work with one customer at a time. And if failure is an ever present reality, then simply ensure your code retries, just like you might have re-run your pipeline against some input files. Unfortunately both require distributed coordination at scale. And distributed coordination is challenging, especially for real systems, that will break at scale. Just putting a box in your architecture labeled **"ZooKeeper"** doesn't magically solve things, even if ZooKeeper can be a very helpful part of an actual solution. Enter the Storm framework. While Storm certainly doesn't solve all problems in this space, it can support many different types of realtime architectures and works well with Python. In particular, Storm solves two key problems for you. **Partitioning**. Storm lets you partition streams, so you can break down the size of your problem. But if the a node running your code fails, Storm will restart it. Storm also ensures such topology invariants as the number of nodes (spouts and bolts in Storm's lingo) that are running, making it very easy to recover from such failures. This is where the cleverness really begins. What can you do if you can ensure that **all the data** you need for a given continuously updated computation - what is the state of this customer's account? - can be put in **exactly one place**, then flow the supporting data through it over time? We will look at how you can readily use such locality in your own Python code. **Retries**. Storm tracks success and failure of events being processed efficiently through a batching scheme and other cleverness. Your code can then choose to retry as necessary. Although Storm also supports exactly-once event processing semantics, we will focus on the simpler model of at-least-once semantics. This means your code must tolerate retry, or in a word, is idempotent. But this is straightforward. We have often written code like the following: seen = set() for record in stream: k = uniquifier(record) if k not in seen: seen.add(k) process(record) Except of course that any such real usage has to ensure it doesn't attempt to store all observations (first, download the Internet! ;), but removes them by implementing some sort of window or uses data structures like HyperLogLog, as we will discuss.	28	Science & Technology	PT28M31S	1711	2d	sd	false			341	1	0	0	0
882	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	GwqI3YQre_4	2014-09-22T06:53:36Z	2014-09-22 06:53:36	Francisco Fernández Castaño - Extending Python, what is the best option for me?	Francisco Fernández Castaño - Extending Python, what is the best option for me? [EuroPython 2014] [22 July 2014] Python is a great language, but there are occasions where we need access to low level operations or connect with some database driver written in C. With the FFI(Foreign function interface) we can connect Python with other languages like C, C++ and even the new Rust. There are some alternatives to achieve this goal, Native Extensions, Ctypes and CFFI. I'll compare this three ways of extending Python. ----- In this talk we will explore all the alternatives in cpython ecosystem to load external libraries. In first place we'll study the principles and how shared libraries work. After that we will look into the internals of CPython to understand how extensions work and how modules are loaded. Then we will study the main three alternatives to extend CPython: Native Extensions, Ctypes and CFFI and how to automate the process. Furthermore we will take a look to other python implementations and how we can extend it.	28	Science & Technology	PT32M22S	1942	2d	sd	false			203	0	0	0	0
883	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MMKsDtCN6G4	2014-09-22T06:53:36Z	2014-09-22 06:53:36	Tom Christie - Documenting your project with MkDocs.	Tom Christie - Documenting your project with MkDocs. [EuroPython 2014] [22 July 2014] MkDocs is a new tool for creating documentation from Markdown. The talk will cover: How to write, theme and publish your documentation. The background and motivation for MkDocs. Choosing between MkDocs or Sphinx. ----- This talk will be a practical introduction to MkDocs, a new tool for creating documentation from Markdown: * The background behind MkDocs and the motivation for creating a new documentation tool. * Comparing against Sphinx - what benefits each tool provides. * Getting starting with MkDocs - how to write, theme and publish your documentation. * Under the covers - how MkDocs works, and some asides on a couple of the neat Python libraries that it uses.	28	Science & Technology	PT22M9S	1329	2d	sd	false			368	0	1	0	0
884	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WHhJJxakIO4	2014-09-22T06:53:36Z	2014-09-22 06:53:36	ssc - Event discrete simulation with SimPy	ssc - Event discrete simulation with SimPy [EuroPython 2014] [25 July 2014] Often, experiments with real world systems are high-risk, accompanied by high costs or not even possible at all. That’s when simulations come into play. This talk will give a brief introduction into the topic of simulation. By means of simple examples, it will demonstrate how you can use SimPy to implement event-discrete simulations and which features SimPy offers to help you doing that. ----- Simulation is important for the analysis of complex systems or the analysis of the impact of certain actions on that systems. They are especially useful if the actions are potentially harmful or expensive. Simulation is used in various natural scientific and economic areas, e.g., for the modeling and study of biological or physical systems, for resource scheduling and optimization or at the research for the integration of renewable energies into the power grid (my personal background). The simulated time can thereby be seen as continuous or discrete (discrete time or discrete event). In this talk, I want to show why Python is a good choice for implementing simulation models and how SimPy can help here. Structure of the talk (20min talking + 5min discussion + 5min buffer): - Why simulation? (5min) - History of SimPy (3min) - How does SimPy work? (9min) - Conclusion (3min) In the introduction, I’ll briefly explain what simulation is and motivate, why it is a useful tool. The main part will consist of an introduction and demonstration of SimPy. Since SimPy is now more then ten years old, I’ll first give a quick overview about its history and development. Afterwards, I’ll explain SimPy’s concepts and features by means of simple examples. In the conclusion, I’ll give a short outlook on the future development of SimPy. The main goal of this talk is to create awareness that simulation is a powerful tool in a lot of domains and to give the audience enough information to ease their first steps.	28	Science & Technology	PT25M16S	1516	2d	sd	false			669	6	0	0	0
885	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	d403gvJ4mOs	2014-09-22T06:53:36Z	2014-09-22 06:53:36	Prashant Agrawal - Jigna: a seamless Python-JS bridge to create rich HTML UIs for Python apps	Prashant Agrawal - Jigna: a seamless Python-JS bridge to create rich HTML UIs for Python apps [EuroPython 2014] [22 July 2014] Jigna aims to provide an easy way to create rich user interfaces for Python applications using web technologies like HTML, CSS and Javascript, as opposed to widget based toolkits like Qt/wx or native toolkits. It provides a seamless two-way data binding between the Python model and the HTML view by creating a Python-JS communication bridge. This ensures that the view is always live as it can automatically update itself when the model changes, and update the model when user actions take place on the UI. The Jigna view can be rendered in an in-process Qt widget or over the web in a browser.	28	Science & Technology	PT23M35S	1415	2d	sd	false			212	1	0	0	0
886	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fmc1Je3VLKI	2014-09-22T06:53:36Z	2014-09-22 06:53:36	whitone - GNU/Linux Hardware Emulation with Python	whitone - GNU/Linux Hardware Emulation with Python [EuroPython 2014] [22 July 2014] With the kernel inotify feature, the D-Bus mocker library and the udev monitoring we try to detect the different events that occours when you're using a specific set of connected devices. Then we try to mimic these devices investigating also the kernel drivers if necessary. At the end we're ready to connect the simulation routines to our testing procedure. ----- With the kernel [inotify](http://en.wikipedia.org/wiki/Inotify "inotify") feature, the [D-Bus mocker library](https://launchpad.net/python-dbusmock "D-Bus mocker library") and the [udev monitoring](http://pyudev.readthedocs.org/en/latest/api/pyudev.html#pyudev.Monitor "udev monitoring") we try to detect the different events that occours when you're using a specific set of connected devices. Then we try to mimic these devices investigating also the kernel drivers if necessary. At the end we're ready to connect the simulation routines to our testing procedure.	28	Science & Technology	PT20M34S	1234	2d	sd	false			125	2	0	0	0
887	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	l_oM2CJmtuQ	2014-09-22T06:53:36Z	2014-09-22 06:53:36	Tarashish Mishra - Building Realtime Web Applications with WebRTC and Python	Tarashish Mishra - Building Realtime Web Applications with WebRTC and Python [EuroPython 2014] [25 July 2014] WebRTC makes building peer to peer real time web applications easier. First, we'll discuss in short what WebRTC is, how it works. Then we will explore ways to build the signalling system of a WebRTC app using Python. ----- Introduction =========== This talk will first introduce the audience to WebRTC and then discuss about how to implement the server side logic of a WebRTC app using Python. WebRTC is a free, open project that enables web browsers with plugin-less Real-Time Communications (RTC) capabilities via simple JavaScript APIs. What makes WebRTC special is that the data travels from one client to another without going through the server. The main functions of WebRTC can be broadly categorized into three types. - Access and acquire video and audio streams - Establish a connection between peers and stream audio/video. - Communicate arbitrary data. WebRTC uses three different JavaScript APIs to perform these three functions. These APIs are: - MediaStream (aka getUserMedia) - RTCPeerConnection - RTCDataChannel MediaStream API performs the task of accessing the webcam and/or microphone of the device and acquire the video and/or audio stream from them. RTCPeerConnection API establishes connection between peers and streams audio and video data. This API also does all the encoding and decoding of audio/video data. The third API, RTCDataChannel helps to communicate arbitrary data from one client to the other. There will be short demos to demonstrate the functionalities of these APIs. Signaling and Session Control ======================== WebRTC uses RTCPeerConnection to communicate streaming data between browsers, but some sort of mechanism is needed to coordinate this communication and to send control messages. This process is known as signaling. Signaling is used to exchange three types of information. - Session control messages: to initialize or close communication and report errors. - Network configuration: to the outside world, what's my computer's IP address and port? - Media capabilities: what codecs and resolutions can be handled by my browser and the browser it wants to communicate with? This can be implemented using any appropriate two way communication channel. Implementing signaling in Python ========================== Next, we will have a look at how to implement this signaling mechanism in Python. ( Demonstration with annotated code and live application.) ### Google AppEngine and the Channel API ### Google AppEngine has a channel API which offers persistent connections between your application and Google servers, allowing your application to send messages to JavaScript clients in real time without the use of polling. We'll use this Channel API to build the signaling system of our WebRTC app on top of webapp2 and flask framework. ### Flask and gevent ### We'll implement the same signaling system again, this time on top of Flask using gevent for the persistent connection between the browser and our application. Outline of the talk =============== ### Intro (5 min) ### - Who are we? - What is WebRTC? - Functions of WebRTC. ### WebRTC APIs and Demos (3 min) ### - MediaStream (getUserMedia) API - RTCPeerConnection API - RTCDataChannel API ### Signaling in WebRTC Applications (3 min) ### - What is signaling? - Why is it needed? - How to implement it? ### Implementation of signaling (16 min) ### - Implementation using Google AppEngine and Channel API - Implementation using Flask and gevent ### Questions (3 min) ###	28	Science & Technology	PT20M17S	1217	2d	sd	false			3340	8	1	0	1
888	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	oFYbjeXFT38	2014-09-22T06:53:36Z	2014-09-22 06:53:36	Anselm Kruis - Post-Mortem Debugging with Heap-Dumps	Anselm Kruis - Post-Mortem Debugging with Heap-Dumps [EuroPython 2014] [25 July 2014] UNIX core-dumps, Windows minidumps or Java heap-dumps are well established technologies for post-mortem defect analysis. I'll present a similar technology for Python. An improved pickling mechanism makes it possible to serialise the state of a Python program for subsequent analysis with a conventional Python-debugger. ----- Post-Mortem Debugging with Heap-Dumps === UNIX core-dumps, Windows minidumps and analogous solutions of other operating systems are well established technologies for post-mortem defect analysis of native-code processes. In principle those dumps can be used to analyse „interpreted“ programs running within a native-code interpreter-process. However in practise this approach is tedious and not always successful \[1\]. Therefore operating system independent dump methods were developed for some „interpreted“ languages \[2\]. A prominent example are Java heap dumps \[3\]. Unfortunately up to now there was no practically usable dump-method for Python. Various attempts were made to utilise OS-level dump methods \[4, 5\]. In 2012 Eli Finer published the Python module *pydump* \[6\]. This module pickles the traceback of an exception and subsequently uses the pdb debugger to analyse the unpickled traceback. Unfortunately *pydump* fails on PicklingErrors. In my talk I'll present the Python package [*pyheapdump*](https://pypi.python.org/pypi/pyheapdump). It has the same operation principle as Eli's *pydump*, but is an independent implementation. *pyheapdump* uses an extended pickler ([sPickle](https://pypi.python.org/pypi/sPickle)) to serialise all relevant objects of a Python process to a file. Later on a fault tolerant unpickler recreates the objects and a common Python debugger can be used to analyse the dump. The pickler extensions make it possible to: * pickle and unpickle many commonly not pickleable objects [7]. * replace the remaining not pickleable objects by surrogate objects so that the resulting object graph is almost isomorphic to the original object graph. Which objects are relevant? In its default operation mode *pyheapdump* uses the frame-stacks of all threads as start point for pickling. Following the usual rules for pickling the dump includes all local variables and all objects reachable from a local variable and so on. That is usually enough for a successful defect analysis. Compared with other Python post-mortem debugging methods *pyheapdump* has several advantages: * It is a pure Python solution and independent from the operation system. * Creation of the pyheapdump and fault analysis can be performed different computers. * It is not obstructive. It does not modify / monkey-patch or disturb the dumped process in any way, with the exception of loading additional modules. * If used with the Pydev-debugger, it supports multi-threaded applications. * If used with the Pydev-debugger and Stackless Python, it supports tasklets. The implementation of *pyheapdump* is fairly small, because it draws most of its functionality from the underlying sPickle package and from the new Stackless-Support \[8\] of the Pydev-Debugger. Therefore it is - despite of its short history - already a useful piece of software. Outline of the talk --- 1. Introduction to the problem 2. Previous works 3. The concept of *pyheapdump* 4. Live demonstration 5. Open problems and further development 6. Questions and Answers References --- 1. Andraz Tori, Python, 2011-01-16: *gdb and a very large core dump*, blog at &lt;http://www.zemanta.com/blog/python-gdb-large-core-dump/&gt; 2. David Pacheco, ACM Queue - Programming Languages Volume 9 Issue 10, October 2011: *Postmortem Debugging in Dynamic Environments*, PDF &lt;http://dl.acm.org/ft_gateway.cfm?id=2039361&ftid=1050739&dwn=1&CFID=290171300&CFTOKEN=95099236&gt; 3. Chris Bailey, Andrew Johnson, Kevin Grigorenko, IBM developerWorks, 2011-03-15: *Debugging from dumps - Diagnose more than memory leaks with Memory Analyzer*, PDF &lt;http://www.ibm.com/developerworks/library/j-memoryanalyzer/j-memoryanalyzer-pdf.pdf&gt; 4. Brian Curtin, 2011-09-29: *minidumper - Python crash dumps on Windows*, blog at &lt;http://blog.briancurtin.com/posts/20110929minidumper-python-crash-dumps-on-windows.html&gt; 5. David Malcolm, Fedora Feature, 2010-04-06: *Easier Python Debugging* at &lt;http://fedoraproject.org/wiki/Features/EasierPythonDebugging&gt; 6. Eli Finer, Github-Project, 2012: *pydump* at &lt;https://github.com/gooli/pydump&gt; 7. Anselm Kruis, EuroPython 2011: *Advanced Pickling with Stackless Python and sPickle*, archived talk at &lt;https://ep2013.europython.eu/conference/talks/advanced-pickling-with-stackless-python-and-spickle&gt; 8. Fabio Zadrozny, 2013-12-12: *PyDev 3.1.0 released* blog at &lt;http://pydev.blogspot.de/2013/12/pydev-310-released.html&gt;	28	Science & Technology	PT26M54S	1614	2d	sd	false			457	0	1	0	0
889	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	p3jedMvNkM0	2014-09-22T06:53:36Z	2014-09-22 06:53:36	Matt - Full Stack Python	Matt - Full Stack Python [EuroPython 2014] [22 July 2014] There has been a lot of noise about being a "full stack developer" recently. What does the full web stack look like for Python and how do you go about learning each piece? This talk will guide you up the layers from the server that handles the web request through the JavaScript that executes on a user's browser. ----- This talk distills information from the open source guide [Full Stack Python](http://www.fullstackpython.com/) I wrote into a 30 minute talk on web stack layers. An approximate timeline for this talk would be: * 5 min: intro story * 5 min: what the web developers need to know about virtual servers, web servers, and WSGI servers * 5 min: what do web frameworks provide? * 5 min: what are the most important parts of your web application to analyze and monitor? * 5 min: static files and execution on the user's browser * 5 min: concluding story and resources to learn more This is a high level overview intended for developers who are new to Python web development and need to understand what the web stack layers are and how they fit together.	28	Science & Technology	PT25M47S	1547	2d	sd	false			2198	75	0	0	1
890	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pSGhdgJefAI	2014-09-22T06:53:36Z	2014-09-22 06:53:36	Peter Hoffmann - log everything with logstash and elasticsearch	Peter Hoffmann - log everything with logstash and elasticsearch [EuroPython 2014] [22 July 2014] When your application grows beyond one machine you need a central space to log, monitor and analyze what is going on. Logstash and elasticsearch let you store your logs in a structured way. Kibana is a web fronted to search and aggregate your logs. ----- The talk will give an overview on how to add centralized, structured logging to a python application running on multiple servers. It will focus on useful patterns and show the benefits from structured logging.	28	Science & Technology	PT18M29S	1109	2d	sd	false			769	3	0	0	0
891	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tDaU238DNB0	2014-09-22T06:53:36Z	2014-09-22 06:53:36	Armin Rigo - Using All These Cores: Transactional Memory in PyPy	Armin Rigo - Using All These Cores: Transactional Memory in PyPy [EuroPython 2014] [23 July 2014] PyPy, the Python implementation written in Python, experimentally supports Transactional Memory (TM). The strength of TM is to enable a novel use of multithreading, inheritently safe, and not limited to special use cases like other approaches. This talk will focus on how it works under the hood. http://pypy.org/talk/ep2014-stm.html ----- PyPy is a fast alternative Python implementation. Software Transactional Memory (STM) is a current academic research topic. Put the two together --brew for a couple of years-- and we get a version of PyPy that runs on multiple cores, without the infamous Global Interpreter Lock (GIL). The current research is based on a recent new insight that promises to give really good performance. The speed of STM is generally measured by two factors: the ability to scale with the number of CPUs, and the amount of overhead when compared with other approaches in a single CPU (in this case, with the regular PyPy with the GIL). Scaling is not really a problem here, but single-CPU performance is --or used to be. This new approach gives a single-threaded overhead that should be very low, maybe 20%, which would definitely be news for STM systems. Right now (February 2014) we are still implementing it, so we cannot give final numbers yet, but early results on a small interpreter for a custom language are around 15%. This looks like a deal-changer for STM. In the talk, I will describe our progress, hopefully along with real numbers and demos. I will then dive under the hood of PyPy to give an idea about how it works. I will conclude with a picture of how the future of multi-threaded programming might looks like, for high-level languages like Python. I will also mention CPython: how hard (or not) it would be to change the CPython source code to use the same approach.	28	Science & Technology	PT42M1S	2521	2d	sd	false			289	2	0	0	0
892	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0vNIF7XVT7Q	2014-09-22T06:53:35Z	2014-09-22 06:53:35	Yves - Performance Python for Numerical Algorithms	Yves - Performance Python for Numerical Algorithms [EuroPython 2014] [23 July 2014] This talk is about several approaches to implement high performing numerical algorithms and applications in Python. It introduces into approaches like vectorization, multi-threading, parallelization (CPU/GPU), dynamic compiling, high throughput IO operations. The approach is a practical one in that every approach is illustrated by specific Python examples. ----- This talk is about several approaches to implement high performing numerical algorithms and applications in Python. It introduces into approaches like multi-threading, parallelization (CPU/GPU), dynamic compiling, high throughput IO operations. The approach is a practical one in that every approach is illustrated by specific Python examples. The talk uses, among others, the following libraries: * NumPy * numexpr * IPython.Parallel * Numba * NumbaPro * PyTables	28	Science & Technology	PT48M28S	2908	2d	sd	false			206	0	0	0	0
893	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4KYSHq0fyVc	2014-09-22T06:53:35Z	2014-09-22 06:53:35	Matt Williams - Ganga: an interface to the LHC computing grid	Matt Williams - Ganga: an interface to the LHC computing grid [EuroPython 2014] [25 July 2014] Ganga is a tool, designed and used by the large particle physics experiments at CERN. Written in pure Python, it delivers a clean, usable interface to allow thousands of physicists to interact with the huge computing resources available to them. ----- [Ganga](https://cern.ch/ganga) is a tool, designed and used by the large particle physics experiments at CERN. Written in pure Python, it delivers a clean, usable interface to allow thousands of physicists to interact with the huge computing resources available to them. It provides a single platform with which data analysis tasks can be run on anything from a local machine to being distributed seamlessly to computing centres around the world. The talk will cover the problems faced by physicists when dealing with the computer infrastructure and how Ganga helps to solve this problem. It will focus on how Python has helped create such a tool through its advanced features such as metaclasses and integration into IPython.	28	Science & Technology	PT24M28S	1468	2d	sd	false			194	3	0	0	0
894	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7-mh2JdshEE	2014-09-22T06:53:35Z	2014-09-22 06:53:35	Domen Kožar - Rethinking packaging, development and deployment	Domen Kožar - Rethinking packaging, development and deployment [EuroPython 2014] [22 July 2014] In Python, we're trying to solve packaging problems in our own domain, but maybe someone else already solved most our problems. In the talk I'll show how I develop and deploy Python projects that can be easily mixed with non-Python dependencies. http://nixos.org/nix/ will be demonstrated to replace technologies in our stack: pip, virtualenv, buildout, ansible, jenkins. ----- Python is often mixed with other languages in development stack, nowadays it's hard to escape any JavaScript dependencies. If you add some C dependencies such as GStreamer to the stack, packaging becomes a burden. While tweaking our packaging infrastructure will make things better, it's hard to fix fundamental problem of packaging with current ad-hoc solutions in Python domain. Using Nix (http://nixos.org/nix/) for about a year gave me an insight that solving packaging problem at operating system level (bottom-up) is a better approach. For example, wouldn't it be cool to have "virtualenv" implemented inside your package manager, so you could isolate also non-Python dependencies and not just Python packages for your project and not worry if system was updated? We'll also show what benefits do we get by using the same tool for development and deployment and how little we have to do to deploy our application. To see how Haskell community is touching the same subject, see blog post http://ocharles.org.uk/blog/posts/2014-02-04-how-i-develop-with-nixos.html	28	Science & Technology	PT40M21S	2421	2d	sd	false			131	1	0	0	0
895	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LDyxijDEqj4	2014-09-22T06:53:35Z	2014-09-22 06:53:35	Alex Brasetvik - Elasticsearch from the bottom up	Alex Brasetvik - Elasticsearch from the bottom up [EuroPython 2014] [24 July 2014] This talk will teach you about Elasticsearch and Lucene's architecture. The key data structure in search is the powerful inverted index, which is actually simple to understand. We start there, then ascend through abstraction layers to get an overview of how a distributed search cluster processes searches and changes. ----- ## Who I am and motivation I work with hosted Elasticsearch and have interacted with lots of developers. We see what many struggle with. Some relevant theory helps a lot. What follows has already lead to many "Aha!"-moments and developers piecing things together herself. ## The inverted index The most important index structure is actually very simple. It is essentially a sorted dictionary of terms, with a list of postings per term. We show three simple sample documents and the resulting inverted index. ## The index term The index term is the "unit of search", and the terms we make decide how we can search. With the inverted index and its sorted dictionary, we can quickly search for terms given their prefix. ## Importance of text analysis Thus, we need to transform our search problems into string prefix problems. This is done with text analysis, which is the process of making of index terms. It is highly important when implementing search. ## Building indexes The way indexes are built must balance how compact an index is, how easily we can search in it, how fast we can index documents - and the time it takes for changes to be visible. Lucene, and thus Elasticsearch, builds them in segments. ## Index segments A Lucene index consists of index segments, i.e. immutable mini-indexes. A search on an index is done by doing the search on all segments and merging the results. Segments are immutable: This enables important compression techniques. Deletes are not immediate, just a marker. Segments are occasionally merged to larger segments. Then documents are finally deleted. New segments are made by buffering changes in memory, and written when flushing happens. Flushes are largely caused by refreshing every second, due to real time needs. ## Caches Caches like filter- and field caches are managed per segment. They are essential for performance. Immutable segments make for simple reasoning about caches. New segments only cause partial cache invalidations. ## Elasticsearch indexes Much like a Lucene index is made up of many segments, an Elasticsearch index is made up of many Lucene indexes. Two Elasticsearch indexes with 1 shard is essentially the same as one Elasticsearch index with 2 shards. Search all shards and merge. Much like segments, but this time possibly across machines. Shard / Index routing enables various partitioning strategies. Simpler than it sounds, so one important example: Essential for time based data, like logs: can efficiently skip searching entire indexes - and roll out old data by deleting the entire index. ## Common pitfalls We must design our indexing for how we search - not the searches for how things are indexed. Be careful with wildcards and regexes. Since segments are immutable, deleting documents is expensive while deleting an entire index is cheap. Updating documents is essentially a delete and re-index. Heavy updating might cause problems. Have enough memory and then some. Elasticsearch is very reliant on its caches. ## Summary We've seen how index structures are used, and why proper text processing is essential for performant searches. Also, you now know what index segments are, and how they affect both indexing and searching strategies. ## Questions	28	Science & Technology	PT36M54S	2214	2d	sd	false			3931	33	0	0	1
896	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hAC9E4VKHxk	2014-09-22T06:53:35Z	2014-09-22 06:53:35	Celia - 3D sensors and Python: A space odyssey	Celia - 3D sensors and Python: A space odyssey [EuroPython 2014] [23 July 2014] This talk will show how to build a simple open source based NUI (Natural User Interface) game with 3D Sensors, incorporating PyOpenNI with PyGame and WebGL. OpenNI allows you operate several 3D sensors, enabling hardware independent game development (supported 3D sensors are Microsoft Kinect, PrimeSense Carmine or Asus XTion). It also runs on Linux, Mac OS X and Windows. ----- This talk will start with a brief introduction to 3D Sensors and OpenNI. Then we’ll surf into PyOpenNI, features such as the skeleton, hand and gesture tracking, RGB and depth video. Every topic will be presented with practical demos. The talk will end with a demo integrating WebGL (THREE.JS), 3D sensors, Flask and ZMQ to produce a simple fully open source based NUI game. Some simple demos of PyOpenNI and PyGame can be found at [1](http://www.youtube.com/watch?v=wI2ktioiPY8) and [2](http://youtu.be/3e8jibGUQ2Q) Attendees will not only learn about game related technologies but also about innovative ways of doing domotics, cinema & art, Interactive visualization, scientific research, educations, etc. 3D Sensors will be available for testing during the event - you can get yours for about 80 to 140 Euros (depending on the brand). Slides and demo code will be available at Github. Talk structure: * Introduction: hardware and OpenNI goodies and a tale of PCL (5’) * Hands On PyOpenNI * Normal and Depth camera - basics concepts and small demo (5’) * Skeleton - basics concepts and small demo. (5’) * Hand & gesture - basics concepts and small demo. (5’) * Final Demo * What we’re going to use? Flask, ZMQ, THREE.JS, PyOpenNI. (6’) * Q&A. (4’)	28	Science & Technology	PT22M40S	1360	2d	sd	false			305	1	0	0	0
897	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	i6wbu_COsMM	2014-09-22T06:53:35Z	2014-09-22 06:53:35	adam - How Disqus is using Django as the basis of our Service Oriented Architecture	adam - How Disqus is using Django as the basis of our Service Oriented Architecture [EuroPython 2014] [24 July 2014] Disqus maintains the largest Django app out there. And we love it! It has, however, grown rather large and unwieldy. In the last year Disqus has had an increasing number of smaller services cropping up based on several different platforms. So this talk will be about how we do continuous deployment with our emerging service-based infrastructure.	28	Science & Technology	PT30M59S	1859	2d	sd	false			311	3	0	0	0
898	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7UIbuwUlE60	2014-09-22T06:53:18Z	2014-09-22 06:53:18	Sarah Mount - Message-passing concurrency for Python	Sarah Mount - Message-passing concurrency for Python [EuroPython 2014] [22 July 2014] Concurrency and parallelism in Python are always hot topics. This talk will look the variety of forms of concurrency and parallelism. In particular this talk will give an overview of various forms of message-passing concurrency which have become popular in languages like Scala and Go. A Python library called python-csp which implements similar ideas in a Pythonic way will be introduced and we will look at how this style of programming can be used to avoid deadlocks, race hazards and "callback hell". ----- Concurrency and parallelism in Python are always hot topics. Early Python versions had a threading library to perform concurrency over operating system threads, Python version 2.6 introduced the multiprocessing library and Python 3.2 has introduced a futures library for asynchronous tasks. In addition to the modules in the standard library a number of packages such as gevent exist on PyPI to implement concurrency with "green threads". This talk will look the variety of forms of concurrency and parallelism. When are the different libraries useful and how does their performance compare? Why do programmers want to "remove the GIL" and why is it so hard to do? In particular this talk will give an overview of various forms of message-passing concurrency which have become popular in languages like Scala and Go. A Python library called python-csp which implements similar ideas in a Pythonic way will be introduced and we will look at how this style of programming can be used to avoid deadlocks, race hazards and "callback hell".	28	Science & Technology	PT42M1S	2521	2d	sd	false			361	3	0	0	0
899	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	I0Z4z_3ZwE0	2014-09-22T06:53:18Z	2014-09-22 06:53:18	Heiko - The Shogun Machine Learning Toolbox	Heiko - The Shogun Machine Learning Toolbox [EuroPython 2014] [24 July 2014] We present the Shogun Machine Learning Toolbox, a framework for Machine Learning, which is the art of finding structure in data, with applications in object recognition, brain-computer interfaces, robotics, stock-prices prediction, etc. We give a gentle introduction to ML and Shogun's Python interface, focussing on intuition and visualisation. ----- We present the Shogun Machine Learning Toolbox, a unified framework for Machine Learning algorithms. Machine Learning (ML) is the art of finding structure in data in an automated way and has given rise to a wide range of applications such as recommendation systems, object recognition, brain-computer interfaces, robotics, predicting stock prices, etc. Our toolbox offers extensive bindings with other software and computing languages, Python being the major target. The library was initiated in 1999 and remained under heavy development henceforth. In addition to its mature core-framework, Shogun offers state-of-the-art techniques based on latest ML research. This is partly made possible by the 21 Google Summer of Code projects (5+8+8 since 2011) that our students successfully completed. Shogun's codebase has &gt;20k commits made by &gt;100 contributors representing &gt;500k lines of code. While its core is written in C++, a unique of technique for generating interfaces allows usage from a wide range of target languages -- under the same syntax. This includes in particular Python, but also Matlab/Octave, Java, C#, R, ruby, and more. We believe that users should be able to choose their favourite language rather than us dictating this choice. The same applies for supported OS (Linux, Mac, Win). Shogun is part of Debian Linux. Features of Shogun include most classical ML methods such as classification, regression, dimensionality reduction, clustering, etc, most of them in different flavours. All implemented algorithms in Shogun work on a modular data representation, which allows to easily switch between different sorts of objects as for example strings or matrices. Common ML-tasks and data IO can be carried under a unified interface. This is also true for the various external open-source libraries that are embedded within Shogun. Code examples are provided for all implemented algorithms. The main and most complete set of examples is in the Python language. In addition, in order to push usage of Shogun in education at universities, we recently started adding more illustrative IPython notebooks. A growing list of statically rendered versions are readily available from our [website](http://www.shogun-toolbox.org/page/documentation/notebook) and implement a cross-over of tutorial-style explanations, code, and visualization examples. We even took this up a notch and started building our own IPython-notebook server with Shogun installed in the cloud at (try cloud button in notebook view) . This allows users to try Shogun without installation via the IPython notebook web interface. All example notebooks can be loaded, interactively modified, and executed. In addition, using the Python Django framework, we built a collection of interactive web-demos where users can play around with basic ML algorithms, [demos](http://www.shogun-toolbox.org/page/documentation/demo) In the proposed talk, we will give a gentle and general introduction to ML and the core functionality of Shogun, with a focus on its Python interface. This includes solving basic ML tasks such as classification and regression and some of the more recent features, such as last year's GSoC projects and their IPython notebook writeups. ML material will be presented with a focus on intuition and visualisation and no previous familiarity with ML methods is required. ## Key points in the talk * What are the goals in ML? * Example problems in ML (classification, regression, clustering) * Some basic algorithm ideas * Focus on Visualisation, not Maths ## Intended Audience * All people dealing with data (data scientists, big-data hackers) who are looking for tools to deal with it * People with a general interest but no education in Machine Learning * People interested in the technology behind Shogun (swig, cloud notebook server, web-demos) * People from the ML community (scipy-stack) * ML scientists/Statisticians ## Code examples * [Classification](https://github.com/shogun-toolbox/shogun/blob/develop/examples/undocumented/python_modular/classifier_libsvm_modular.py) * [Clustering](https://github.com/shogun-toolbox/shogun/blob/develop/examples/undocumented/python_modular/graphical/em_2d_gmm.py) * [Source seperation](https://github.com/shogun-toolbox/shogun/blob/develop/examples/undocumented/python_modular/graphical/converter_jade_bss.py) * [IPython notebook examples](http://www.shogun-toolbox.org/page/documentation/notebook) ### Slide examples See our Europython 2010 [slides](https://www.drop	28	Science & Technology	PT19M47S	1187	2d	sd	false			835	6	0	0	1
900	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	e1GFr2DGxwk	2014-09-22T06:53:18Z	2014-09-22 06:53:18	Design considerations while Evaluating, Developing, Deploying a distributed task processing system	konarkmodi - Design considerations while Evaluating, Developing, Deploying a distributed task processing system [EuroPython 2014] [23 July 2014] With the growing world of web, there are numerous use-cases which require tasks to be executed in an asynchronous manner and in a distributed fashion. Celery is one of the most robust, scalable, extendable and easy-to-implement frameworks available for distributed task processing. While developing applications using Celery, I have had considerable experience in terms of what design choices one should be aware of while evaluating an existing system or developing one's own system from scratch.	28	Science & Technology	PT40M39S	2439	2d	sd	false			74	0	0	0	0
901	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lypO8BDfEL0	2014-09-22T06:53:18Z	2014-09-22 06:53:18	Magdalena Rother - How to become a software developer in science?	Magdalena Rother - How to become a software developer in science? [EuroPython 2014] [24 July 2014] My path from 'Hello world' to software development was long and hard. The approach I learned during my research may help you to create high quality software and improve as a developer. The talk covers how you can benefit from your non-IT knowledge, atomize your project and how collaboration accelerates your learning. ----- **Goal**: give practical tools for improving skills and software quality to people with a background other than IT. Eight years ago, as a plant biologist, I knew almost nothing about programming. When I took a course in python programming, I found myself so fascinated that it altered my entire career. I became a scientific software developer. It was long and hard work to get from the level of 'Hello world' to the world of software development. The talk will cover how to embrace a non-IT education as a strength, how and why to atomize programming tasks and the importance of doing side projects. ### 1. Embrace your background Having domain specific knowledge from a field other than IT helps you to communicate with the team, the users and the group leader. It prevents misunderstandings and helps to define features better. A key step you can take is systematically apply the precise domain specific language to the code e.g when naming objects, methods or functions. Another is to describe the underlying scientific process step by step as a Use Case and write it down in pseudocode. ### 2. Atomisation Having a set of building block in your software helps to define responsibilities clearly. Smaller parts are easier to test, release and change. Modular design makes the software more flexible and avoids the Blob and Lava Flow Anti-Patterns. When using object oriented programming a rule of thumb is that an object (in Python also a method) does only one thing. You can express this Single Responsibility Principle as a short sentence for each module. Another practical action is to introduce Design Patterns that help to decouple data and its internal representation. As a result, your software becomes more flexible. ### 3. Participating in side projects Learning from others is a great opportunity to grow. Through side projects you gain a fresh perspective and learn about best practices in project management. You gain new ideas for improvement and become aware of difficulties in your own project. You can easily participate in a scientific project by adding a small feature, writing a test suite or provide a code review on a part of a program. Summarizing, in scientific software development using domain-specific knowledge, atomisation of software, and participation in side projects are three things that help to create high quality software and to continuously improve as a developer. The talk will address challenges in areas where science differs from the business world. It will present general solution one might use for software developed in a scientific environment for research projects rather then discussing particular scientific packages. ### Qualifications During my PhD I developed a software on 3D RNA modeling (www.genesilico.pl/moderna/) that resulted in 7 published articles. I am coauthor on a paper on bioinformatic software development. Currently I am actively developing a system biology software in Python at the Humboldt University Berlin (www.rxncon.org).	28	Science & Technology	PT24M52S	1492	2d	sd	false			375	1	0	0	0
902	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	mOMXVBd8kTo	2014-09-22T06:53:18Z	2014-09-22 06:53:18	synasius - How to make a full fledged REST API with Django OAuth Toolkit	synasius - How to make a full fledged REST API with Django OAuth Toolkit [EuroPython 2014] [22 July 2014] World is going mobile and the need of a backend talking with your apps is getting more and more important. What if I told you writing REST APIs in Python is so easy you don’t need to be a backend expert? Take generous tablespoons of Django, mix thoroughly with Django REST Framework and dust with Django OAuth Toolkit to bake the perfect API in minutes.	28	Science & Technology	PT23M59S	1439	2d	sd	false			503	1	0	0	0
903	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tS3oPThQ7y0	2014-09-22T06:53:18Z	2014-09-22 06:53:18	Emily Bache - Will I still be able to get a job in 2024 if I don't do TDD?	Emily Bache - Will I still be able to get a job in 2024 if I don't do TDD? [EuroPython 2014] [22 July 2014] Geoffrey Moores's book "Crossing the chasm" outlines the difficulties faced by a new, disruptive technology, when adoption moves from innovators and visionaries into the mainstream. Test Driven Development is clearly a disruptive technology, that changes the way you approach software design and testing. It hasn't yet been embraced by everyone, but is it just a matter of time? Ten years from now, will a non-TDD practicing developer experience the horror of being labelled a technology adoption 'laggard', and be left working exclusively on dreadfully boring legacy systems? It could be a smart move to get down to your nearest Coding Dojo and practice TDD on some Code Katas. On the other hand, the thing with disruptive technologies is that even they can become disrupted when something better comes along. What about Property-Based Testing? Approval Testing? Outside-In Development? In this talk, I'd like to look at the chasm-crossing potential of TDD and some related technologies. My aim is that both you and I will still be able to get a good job in 2024. ----- TDD hasn't yet been embraced by everyone, but is it just a matter of time? Ten years from now, will a non-TDD practicing developer experience the horror of being labelled a technology adoption 'laggard', and be left working exclusively on dreadfully boring legacy systems? It could be a smart move to get down to your nearest Coding Dojo and practice TDD on some Code Katas. On the other hand, the thing with disruptive technologies is that even they can become disrupted when something better comes along. What about Property-Based Testing? Approval Testing? Outside-In Development? In this talk, I'd like to look at the chasm-crossing potential of TDD and some related technologies. My aim is that both you and I will still be able to get a good job in 2024.	28	Science & Technology	PT46M47S	2807	2d	sd	false			593	6	0	0	0
904	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7lNMmhCRRnw	2014-09-22T06:53:17Z	2014-09-22 06:53:17	Constanze Kurz - One year of Snowden, what's next?	Constanze Kurz - One year of Snowden, what's next? [EuroPython 2014] [21 July 2014] Since June 2013, disclosed by Edward Snowden, we learn more and more facts about American and British spies’ deep appetite for information, economic spying and the methods they use to collect data. They systematically tapped international communications on a scale that only few people could imagine. But what are the consequences for societies when they now know about the NSA metadata repository capable of taking in billions of "events" daily to collected and analyze? Is there a way to defend against an agency with a monstrous secret budget?	28	Science & Technology	PT58M	3480	2d	sd	false			128	1	1	0	1
905	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	KqTUNJ1smYM	2014-09-22T06:53:17Z	2014-09-22 06:53:17	Thomas Wiecki - Probabilistic Programming in Python	Thomas Wiecki - Probabilistic Programming in Python [EuroPython 2014] [24 July 2014] Probabilistic Programming allows flexible specification of statistical models to gain insight from data. The high interpretability and ease by which different sources can be combined has huge value for Data Science. PyMC3 features next generation sampling algorithms, an intuitive model specification syntax, and just-in-time compilation for speed, to allow estimation of large-scale probabilistic models. ----- Probabilistic Programming allows flexible specification of statistical models to gain insight from data. Estimation of best fitting parameter values, as well as uncertainty in these estimations, can be automated by sampling algorithms like Markov chain Monte Carlo (MCMC). The high interpretability and flexibility of this approach has lead to a huge paradigm shift in scientific fields ranging from Cognitive Science to Data Science and Quantitative Finance. PyMC3 is a new Python module that features next generation sampling algorithms and an intuitive model specification syntax. The whole code base is written in pure Python and Just-in-time compiled via Theano for speed. In this talk I will provide an intuitive introduction to Bayesian statistics and how probabilistic models can be specified and estimated using PyMC3.	28	Science & Technology	PT45M35S	2735	2d	sd	false			1130	12	0	0	0
906	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	VWdGxmJLRgE	2014-09-22T06:53:17Z	2014-09-22 06:53:17	Marc-Andre Lemburg - Advanced Database Programming with Python	Marc-Andre Lemburg - Advanced Database Programming with Python [EuroPython 2014] [25 July 2014] The Python DB-API 2.0 provides a direct interface to many popular database backends. It makes interaction with relational database very straight forward and allows tapping into the full set of features these databases provide. The talk will cover advanced database topics which are relevant in production environments such as locks, distributed transactions and transaction isolation. ----- The Python DB-API 2.0 provides a direct interface to many popular database backends. It makes interaction with relational database very straight forward and allows tapping into the full set of features these databases provide. The talk will cover advanced database topics which are relevant in production environments such as locks, distributed transactions and transaction isolation. ---- The talk will give an in-depth discussion of advanced database programming topics based on the Python DB-API 2.0: locks and dead-locks, two-phase commits, transaction isolation, result set scrolling, schema introspection and handling multiple result sets. Talks slides are available on request.	28	Science & Technology	PT30M59S	1859	2d	sd	false			231	3	0	0	0
907	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	gUniRsB6hsY	2014-09-22T06:53:17Z	2014-09-22 06:53:17	Andreas Pelme - Introduction to pytest	Andreas Pelme - Introduction to pytest [EuroPython 2014] [23 July 2014] pytest is a full featured testing tool that makes it possible to write “pythonic” tests. This talk will introduce pytest and some of its unique and innovative features. It will help you get started with pytest for new or existing projects, by showing basic usage and configuration. ----- This talk will show introduce pytest and show some unique and innovative features. It will show how to get started using it and some of the most important features. One of these features is the ability to write tests in a more “pythonic” way by using the assert statement for assertions. Another feature in pytest is fixtures – a way to handle test dependencies in a structured way. This talk will introduce the concept of fixtures and show how they can be used. No previous knowledge of pytest is required – this talk is for people who are new to testing or has experience with other Python testing tools such as unittest or Nose.	28	Science & Technology	PT29M15S	1755	2d	sd	false			778	3	0	0	0
908	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	gbwJwt574DU	2014-09-22T06:53:17Z	2014-09-22 06:53:17	Simon Cross - Conversing with people living in poverty	Simon Cross - Conversing with people living in poverty [EuroPython 2014] [24 July 2014] Vumi is a text messaging system designed to reach out to those in poverty on a massive scale via their mobile phones. It's written in Python using Twisted. This talk is about how and why we built it and how you can join us in making the world a better place. ----- 43% of the world's population live on less than €1.5 per day. The United Nations defines poverty as a "lack of basic capacity to participate effectively in society". While we often think of the poor as lacking primarily food and shelter, the UN definition highlights their isolation. They have the least access to society's knowledge and services and the most difficulty making themselves and their needs heard in our democracies. While smart phones and an exploding ability to collect and process information are transforming our access to knowledge and the way we organize and participate in our societies, those living in poverty have largely been left out. This has to change. Basic mobile phones present an opportunity to effect this change [3]. Only three countries in the world have fewer than 65 mobile phones per 100 people [4]. The majority of these phones are not Android or iPhones, but they do nevertheless provide a means of communication -- via voice calls, SMSes [6], USSD [7] and instant messaging. By comparison, 25 countries have less than 5% internet penetration [5]. Vumi [1] is an open source text messaging system designed to reach out to those in poverty on a massive scale via their mobile phones. It's written in Python using Twisted. Vumi is already used to: * provide Wikipedia access over USSD and SMS in Kenya [8]. * register a million voters in Libya [10]. * deliver health information to mothers in South Africa [9]. * prevent election violence in Kenya [11]. This talk will cover: * a brief overview of mobile networking and cellphone use in Africa * why we built Vumi * the challenges of operating in unreliable environments * an overview of Vumi's features and architecture * how you can help! Vumi features some cutting edge design choices: * horizontally scalable Twisted processes communicating using RabbitMQ. * declarative data models backed by Riak. * sharing common data models between Django and Twisted. * sandboxing hosted Javascript code from Python. Overview of challenges Vumi addresses: *Scalability*: Vumi needs to support both small scale applications (demos, pilot projects, applications tailored for a particular community) and large ones (things that everyone within a country might use). We address this using Twisted workers that exchange messages via RabbitMQ and store data in Riak. Having projects share RabbitMQ and Riak instances significantly reduces the overhead for small projects (e.g. its not cost effective to launch the recommended minimum of 5 Riak servers for a small project). *Barriers to entry*: Often the people with good ideas don't have access to one of many things needed to run a production system themselves, e.g. capital, time, stable infrastructure. We address this by providing a hosted Vumi instance that runs sandboxed Javascript applications. All the application author needs is their idea, the ability to write Javascript and upload it to our servers. The target audience here is African entrepreneurs at incubator spaces like iHub (Nairobi), kLab (Kigali), BongoHive (Lusaka) and JoziHub (Johannesburg). *Unreliable third-party systems*: It's one thing for parts of ones own system to go down, it's another for crucial third-party systems to go down. Vumi takes an SMTP-like approach to solving this and uses persistent queues so that messages can back up in the queue while third-party systems are down and be processed when they become available again. We also feedback information on whether third-party messaging systems have accepted or reject messages to the application that initiated them. Vumi is developed by the Praekelt Foundation [2] (and individual contributors!). [1]: &lt;http://vumi.org/&gt; "Vumi" [2]: &lt;http://praekeltfoundation.org/&gt; "Praekelt Foundation" [3]: &lt;http://www.youtube.com/watch?v=0bXjgx4J0C4#t=20&gt; "Spotlight on Africa" [4]: &lt;http://en.wikipedia.org/wiki/List_of_countries_by_number_of_mobile_phones_in_use&gt; [5]: &lt;http://en.wikipedia.org/wiki/List_of_countries_by_number_of_Internet_users&gt; [6]: &lt;http://en.wikipedia.org/wiki/Short_Message_Service&gt; [7]: &lt;http://en.wikipedia.org/wiki/Unstructured_Supplementary_Service_Data [8]: &lt;http://blog.praekeltfoundation.org/post/65981723628/wikipedia-zero-over-text-with-praekelt-foundation&gt; [9]: &lt;http://blog.praekeltfoundation.org/post/65042080515/mama-launches-healthy-family-nutrition-programme&gt; [10]: &lt;http://www.libyaherald.com/2014/01/01/over-one-million-register-for-constitutional-elections-on-final-sms-registration-day	28	Science & Technology	PT29M11S	1751	2d	sd	false			104	0	0	0	0
909	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hF_FBsdr-Qk	2014-09-22T06:53:17Z	2014-09-22 06:53:17	Josef Heinen - Scientific Visualization with GR	Josef Heinen - Scientific Visualization with GR [EuroPython 2014] [25 July 2014] Python developers often get frustrated when managing visualization packages that cover the specific needs in scientific or engineering environments. The GR framework could help. GR is a library for visualization applications ranging from publication-quality 2D graphs to the creation of complex 3D scenes and can easily be integrated into existing Python environments or distributions like Anaconda. ----- Python has long been established in software development departments of research and industry, not least because of the proliferation of libraries such as *SciPy* and *Matplotlib*. However, when processing large amounts of data, in particular in combination with GUI toolkits (*Qt*) or three-dimensional visualizations (*OpenGL*), it seems that Python as an interpretative programming language may be reaching its limits. --- *Outline* - Introduction (1 min) - motivation - GR framework (2 mins) - layer structure - output devices and capabilities - GR3 framework (1 min) - layer structure - output capabilities (3 mins) - high-resolution images - POV-Ray scenes - OpenGL drawables - HTML5 / WebGL - Simple 2D / 3D examples (2 min) - Interoperability (PyQt/PySide, 3 min) - How to speed up Python scripts (4 mins) - Numpy - Numba (Pro) - Animated visualization examples (live demos, 6 mins) - physics simulations - surfaces / meshes - molecule viewer - MRI voxel data - Outlook (1 min) *Notes* Links to similar talks, tutorials or presentations can be found [here][1]. Unfortunately, most of them are in German language. The GR framework has already been presented in a talk at PyCon DE [2012][2] and [2013][3], during a [poster session][4] at PyCon US 2013, and at [PythonCamps 2013][5] in Cologne. The slides for the PyCon.DE 2013 talk can be found [here][6]. As part of a collaboration the GR framework has been integrated into [NICOS][7] (a network-based control system completely written in Python) as a replacement for PyQwt. [1]: http://gr-framework.org/ [2]: https://2012.de.pycon.org/programm/schedule/sessions/54 [3]: https://2013.de.pycon.org/schedule/sessions/45/ [4]: https://us.pycon.org/2013/schedule/presentation/158/ [5]: http://josefheinen.de/rasberry-pi.html [6]: http://iffwww.iff.kfa-juelich.de/pub/doc/PyCon_DE_2013 [7]: http://cdn.frm2.tum.de/fileadmin/stuff/services/ITServices/nicos-2.0/dirhtml/	28	Science & Technology	PT23M18S	1398	2d	sd	false			285	2	0	0	0
910	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hGxam9hUKkU	2014-09-22T06:53:17Z	2014-09-22 06:53:17	Chris Clauss - Pythonista: A full-featured Python environment for iOS devices	Chris Clauss - Pythonista: A full-featured Python environment for iOS devices [EuroPython 2014] [22 July 2014] The Pythonista app delivers a full-featured Python development experience on an iPad or an iPhone. This introduction to the app will provide a rapid overview of the Pythonista user experience, features and Community Forum. Then it will focus on a few source code examples of using the GPS to deliver real-time local weather, use the image library to manipulate images and convert documents, use the gyroscope to understand pitch, yaw, and roll, use Dropbox to backup and restore scripts, images, etc.	28	Science & Technology	PT40M32S	2432	2d	sd	false			503	1	0	0	1
911	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jNbfeqp8LbQ	2014-09-22T06:53:17Z	2014-09-22 06:53:17	Dougal Matthews - Using asyncio (aka Tulip) for home automation	Dougal Matthews - Using asyncio (aka Tulip) for home automation [EuroPython 2014] [25 July 2014] This talk will cover the new asyncio library in Python 3.4 (also known as Tulip) and will use the area of home automation as a case study to explore its features. This talk will be based on code using Python 3.3+. Home automation is a growing area and the number of devices and potential applications is huge. From monitoring electricity usage to the temperature inside or outside your house to remote control of lights and other appliances the options are almost endless. However, managing and monitoring these devices is typically a problem that works best with event driven applications. This is where asnycio comes in, it was originally proposed in PEP 3156 by our BDFL, Guido van Rossum. Asyncio aims to bring a clear approach to the python ecosystem and borrows from a number of existing solutions to come up with something clean and modern for the Python stdlib. ----- This talk will cover the new asyncio library in Python 3.4 (also known as Tulip) and will use the area of home automation as a case study to explore its features. This talk will be based on code using Python 3.3+. Home automation is a growing area and the number of devices and potential applications is huge. From monitoring electricity usage to the temperature inside or outside your house to remote control of lights and other appliances the options are almost endless. However, managing and monitoring these devices is typically a problem that works best with event driven applications. This is where asnycio comes in, it was originally proposed in PEP 3156 by our BDFL, Guido van Rossum. Asyncio aims to bring a clear approach to the python ecosystem and borrows from a number of existing solutions to come up with something clean and modern for the Python stdlib. This talk will introduce asyncio and use it within the context of home automation and dealing with multiple event driven devices. Therefore we will cover asyncio and the lessions learned from using different devices in this context. Some of the devices that will be used include: - Raspberry Pi - RFXCom's RFXtrx, USB serial tranciever. - Owl CM160 electricity tracker. - Oregon scientific thermometers. - Foscam IP cameras. This talk will also briefly cover the previous solution I used which was developed with Twisted and compare it briefly with my new code using asyncio.	28	Science & Technology	PT26M57S	1617	2d	sd	false			105	1	0	0	0
912	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pXduirOmnJg	2014-09-22T06:53:17Z	2014-09-22 06:53:17	andrea crotti - Metaprogramming, from decorators to macros	andrea crotti - Metaprogramming, from decorators to macros [EuroPython 2014] [24 July 2014] Starting off with the meaning of metaprogramming we quickly dive into the different ways Python allows this. First we talk about class and functions decorators, when decorators are not enough anymore we'll explore the wonders of metaclasses. In the last part of the talk we'll talk about macros, first in Lisp and then using the amazing macropy library. ----- This talk is a journey in the wonderful world of metaprogramming. We start off with the meaning of metaprogramming and what it can be used for. Then we look at what can be done in Python, introducing function and class decorators. When decorators are not enough anymore we move to the black magic of metaclasses, showing how we can implemement a simple Django-like model with them. In the bonus track we'll talk about macros, as the ultimate metaprogramming weapon, showing briefly how Lisp macros work and introducing the amazing [macropy library](https://github.com/lihaoyi/macropy).	28	Science & Technology	PT39M3S	2343	2d	sd	false			173	0	0	0	0
913	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yDlMIRpVLJg	2014-09-22T06:53:17Z	2014-09-22 06:53:17	Designing NRT(NearRealTime) stream processing systems: Using python with Storm and Kafka	konarkmodi - Designing NRT(NearRealTime) stream processing systems: Using python with Storm and Kafka [EuroPython 2014] [22 July 2014] The essence of near-real-time stream processing is to compute huge volumes of data as it is received. This talk will focus on creating a pipeline for collecting huge volumes of data using Kafka and processing for near-real time computations using Storm.	28	Science & Technology	PT36M35S	2195	2d	sd	false			2006	9	1	0	1
914	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	18r346Tn768	2014-09-22T06:53:16Z	2014-09-22 06:53:16	Travis Oliphant - Python's Role in Big Data Analytics: Past, Present, and Future	Travis Oliphant - Python's Role in Big Data Analytics: Past, Present, and Future [EuroPython 2014] [25 July 2014] Python has had a long history in Scientific Computing which means it has had the fundamental building blocks necessary for doing Data Analysis for many years. As a result, Python has long played a role in scientific problems with the largest data sets. Lately, it has also grown in traction as a tool for doing rapid Data Analysis. As a result, Python is the center of an emerging trend that is unifying traditional High Performance Computing with "Big Data" applications. In this talk I will discuss the features of Python and its popular libraries that have promoted its use in data analytics. I will also discuss the features that are still missing to enable Python to remain competitive and useful for data scientists and other domain experts. Finally, will describe open source projects that are currently occupying my attention which can assist in keeping Python relevant and even essential in Data Analytics for many years to come.	28	Science & Technology	PT49M45S	2985	2d	sd	false			342	1	0	0	0
915	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3-PyXOrGICs	2014-09-22T06:53:16Z	2014-09-22 06:53:16	Carl Crowder - Automatic code reviews	Carl Crowder - Automatic code reviews [EuroPython 2014] [23 July 2014] A lot of great Python tools exist to analyse and report on your codebase, but they can require a lot of initial set up to be useful. Done right, they can be like an automatic code review. This talk will explain how to set up and get the best out of these tools, especially for an existing, mature codebase. ----- Static analysis tools are a great idea in theory, but are not often really used in practice. These tools usually require quite a lot of initial effort to get set up in a way which produces meaningful output for you or your organisation's particular coding style and values. As a result, it's common to see initial enthusiasm replaced by ignoring the tools. Such tools can be incredibly beneficial however, and even go so far as to provide an automatic code review, and this talk will explain what kind of benefits you can get from the tools, as well as explain what you can and cannot expect. This talk is aimed at experienced developers who are interested in improving their coding practices but who have either never tried static analysis tools, or who have not seen the upsides. It will hopefully also be useful to people who do use the tools, perhaps introducing them to new tools or concepts they were not aware of yet.	28	Science & Technology	PT20M48S	1248	2d	sd	false			70	0	1	0	0
916	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3kvJK-Tq-eo	2014-09-22T06:53:16Z	2014-09-22 06:53:16	Ralph Heinkel - Combining the powerful worlds of Python and R	Ralph Heinkel - Combining the powerful worlds of Python and R [EuroPython 2014] [25 July 2014] Although maybe not very well known in the Python community there exists a powerful statistical open-source ecosystem called R. Mostly used in scientific contexts it provides lots of functionality for doing statistical analysis, generation of various kinds of plots and graphs, and much, much more. The triplet R, Rserve, and pyRserve allows the building up of a network bridge from Python to R: Now R-functions can be called from Python as if they were implemented in Python, and even complete R scripts can be executed through this connection. ----- pyRserve is a small open source project originally developed to fulfill the needs of a German biotech company to do statistical analysis in a large Python-based Lab Information Management System (LIMS). In contrast to other R-related libraries like RPy where Python and R run on the same host, pyRserve allows the distribution of complex operations and calculations over multiple R servers across the network. The aim of this talk is to show how easily Python can be connected to R, and to present a number of selected (simple) code examples which demonstrate the power of this setup.	28	Science & Technology	PT25M54S	1554	2d	sd	false			169	2	0	0	0
917	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	45SfZ7VX6Eo	2014-09-22T06:53:16Z	2014-09-22 06:53:16	Reimar Bauer - pymove3D - Python moves the world - Attractive programming for young people.	Reimar Bauer - pymove3D - Python moves the world - Attractive programming for young people. [EuroPython 2014] [22 July 2014] The second time a contest for schoolar students is organized by the Python Software Verband e.V.. It is about to write a Python program that is executable in Blender using its 3D capabilities. The talk overall gives an overview what experience we got by these ideas and how we want to continue.	28	Science & Technology	PT23M9S	1389	2d	sd	false			58	1	0	0	0
918	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Jqo-DJsTCao	2014-09-22T06:53:16Z	2014-09-22 06:53:16	Ashikaga - Python for Zombies: 15.000 enrolled in the first Brazilian MOOC to teach Python	Ashikaga - Python for Zombies: 15.000 enrolled in the first Brazilian MOOC to teach Python [EuroPython 2014] [24 July 2014] Experiences of how we spread the Python community in Brazil with a non english MOOC (Massive Open Online Course) to teach programming. Hacking basic modules and classes to obtain the "Answer to the Ultimate Question of Life, the Universe, and Everything". A funny way to teach programming.	28	Science & Technology	PT26M11S	1571	2d	sd	false			33	0	0	0	0
919	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OMJJxhE6wWo	2014-09-22T06:53:16Z	2014-09-22 06:53:16	Markus Zapke-Gründemann - Writing multi-language documentation using Sphinx	Markus Zapke-Gründemann - Writing multi-language documentation using Sphinx [EuroPython 2014] [23 July 2014] How to write multi-language documentation? What tools can you use? What mistakes should you avoid? This talk is based on the experiences I gathered while working on several multi-language documentation projects using Sphinx. ----- Internationalized documentation is a fairly new topic. And there are different approaches to do this. I will talk about how Sphinx internationalization support works, which tools and services I use and how to organize the translation workflow in an Open Source project. Finally I will have a look at what the future of internationalization in Sphinx might bring.	28	Science & Technology	PT24M46S	1486	2d	sd	false			93	0	0	0	0
920	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lOsifzusvb8	2014-09-22T06:53:16Z	2014-09-22 06:53:16	Robert Lehmann - Teaching Python	Robert Lehmann - Teaching Python [EuroPython 2014] [22 July 2014] Using Python in bringing people closer to programming has been popular for a while. But what are the most effective ways to do so? The OpenTechSchool reports. ----- Python has been used in educational programmes ever since. With a bandwidth that large, navigating the landscape of Python tutorials is hard indeed. This talk will look at successful Python teaching material. From the numerous iterations our material has gone through, we draw conclusions on what's crucial in teaching Python. It will introduce how the OpenTechSchool is teaching Python and what measures it found most effective in spreading programming in general and Python in particular. Among these are rapid feedback, supervised learning, localization, and knowing your target audience. The author is a member of the OpenTechSchool, a free community initiative which offers Python workshop on a number of topics. Some of the workshops have been running for more than two years now. He has written the first versions of "Python for beginners," a workshop which has been used in many cities to teach Python to programming novices.	28	Science & Technology	PT28M9S	1689	2d	sd	false			87	0	1	0	0
921	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	upnGzL4E49I	2014-09-22T06:53:16Z	2014-09-22 06:53:16	Christian Tismer/Anselm Kruis - Stackless: Recent advancements and future goals	Christian Tismer/Anselm Kruis - Stackless: Recent advancements and future goals [EuroPython 2014] [23 July 2014] Stackless (formerly known as Stackless-Python) is an enhanced variant of the Python-language. Stackless is best known for its lightweight microthreads. But that's not all. In this talk Stackless core developers demonstrate recent advancements regarding multi-threading, custom-scheduling, debugging with Stackless and explain future plans for Stackless. ----- Stackless: Recent advancements and future goals ------------------------------------------------------- Since Python release 1.5 Stackless Python is an enhanced variant of C-Python. Stackless is best known for its addition of lightweight microthreads (tasklets) and channels. Less known are the recent enhancements that became available with Stackless 2.7.6. In this talk core Stackless developers demonstrate * The improved multi-threading support * How to build custom scheduling primitives based on atomic tasklet operations * The much improved debugger support * ... Stackless recently switched the new master repository from hg.python.org/stackless to bitbucket to allow for a more open development process. We'll summarise our experience and discuss our plans for the future development of Stackless. The talk will be help by Anselm Kruis and Christian Tismer. If we are lucky, we will also welcome Kristján Valur Jónsson from Iceland.	28	Science & Technology	PT44M40S	2680	2d	sd	false			155	0	0	0	0
922	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5DhDruQSIMk	2014-09-22T06:53:15Z	2014-09-22 06:53:15	Mislav Stipetic/Darko Ronić - Mobile Games to the Cloud With Python	Mislav Stipetic/Darko Ronić - Mobile Games to the Cloud With Python [EuroPython 2014] [22 July 2014] When a mobile game development company decides to switch to a more cloud based development it is faced with obstacles different from those it’s used to on mobile devices. This talk explains how Python provided us with most of the infrastructure for this task and how a Python game backend was built as a result. ----- #### The Talk This talk has two goals. Showing the audience the lessons we learned during a project which moved a simple mobile game to a server backend is our first intention. In addition to that we want to describe how such a system works in a real life example, to show which problems and which requirements arise in its creation. When the audience leaves the talk they will know how a real-life mobile game uses Python for powering the backend servers. #### The Problem Most of the game development for mobile devices is focused on running the game on the device. The game designers and game developers play a primary role in creating the product. The server backend plays a supporting role providing a multiplayer or social experience to the users. Indeed, at Nanobit Ltd., things were also done that way. We had a small Python infrastructure built around Django which provided a small portion of multiplayer experience for the players. The majority of development was still focused on playing the game on the device. That way of thinking was put to test when we decided to center our future games around the multiplayer experience. Due to the fact that our infrastructure at the time was not enough for what we had in mind, we had to start from scratch. The decision was made to use Python as the center of our new infrastructure. In order to achieve it, a server backend was needed that would allow the game to be played “in the cloud” with the device only being a terminal to the player. Most of the game logic would have to be processed in the cloud which meant that each player required a constant connection to the backend and with over 100.000 players in our previous games that presented a challenge. How to build an infrastructure which can support that? Since every user action had to be sent to the backend how to process thousands of them quick enough? Those problems were big and were just the start. #### The Solution The design of the backend lasted for a couple of months and produced a scalable infrastructure based on “workers” developed in Python, “web servers” that use Tornado and a custom message queue which connected the two. The storage part is a combination of Riak and Redis. Since the backend is scalable new workers and new web servers had to be deployed easily so an orchestration module was build using Fabric. The scalability and launching of new workers and web servers was achieved using Docker for creation and deployment of containers. Each container presents one module of the system (worker, web server, queue). The end result can now support all of our future games and only requires the game logic of each game to be added to the workers. #### The Technologies * Python for coding the game logic, web servers. More than 90% of the system was written in Python. * Fabric * SQLAlchemy * Riak * Redis * ZeroMQ * nginx * Docker * Websockets * AWS #### The Lessons Learned * How to tune the backend to handle the increasing number of active players. * How to tackle the problem of frequent connection dropping and reachability issues of poor mobile device Internet connection in Tornado with a little help of Redis. * How to prevent users from trying to outsmart the system by denying illegal moves. * How to enable game profile syncing and live updating. * Improving the performance of workers by prioritizing data being stored to databases (Riak, SQL). * New issues and lessons show up all the time so there will definitely be more of them by the time of the conference. #### Basic Outline 1. Intro (5 min) 1. Who are we? 2. How was Python used in our previous games 3. Why we decided to change it all 2. Requirements (6 min) 1. What was the goal of creating the game backend 2. Why was Python our first choice 3. Python backend (14 min) 1. The architecture of the backend 2. Which technologies did we use and how were they connected together 3. How the backend handles the game logic 4. Lessons learned 4. Questions & Answers (5 min)	28	Science & Technology	PT29M44S	1784	2d	sd	false			270	2	0	0	0
923	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9vNr_ZzZZAk	2014-09-22T06:53:15Z	2014-09-22 06:53:15	Stefan Schwarzer - Support Python 2 and 3 with the same code	Stefan Schwarzer - Support Python 2 and 3 with the same code [EuroPython 2014] [24 July 2014] Your library supports only Python 2, - but your users keep nagging you about Python 3 support? As Python 3 gets adopted more and more, users ask for Python 3 support in existing libraries for Python 2. Although there are several approaches, this talk focuses on using the very same code for a Python 2 and a Python 3 version. The talk discusses the main problems when supporting Python 3 and best practices to apply for compatibility with Python 2 and 3. ----- Your library supports only Python 2, - but your users keep nagging you about Python 3 support? As Python 3 gets adopted more and more, users ask for Python 3 support in existing libraries for Python 2. This talk mentions some approaches for giving users a Python 3 version, but will quickly focus on using the very same code for a Python 2 and a Python 3 version. This is much easier if you require Python 2.6 and up, and yet a bit easier if you require Python 3.3 as the minimum Python 3 version. The talk discusses main problems when supporting Python 3 (some are easily solved): * `print` is a function. * More Python APIs return iterators that used to return lists. * There's now a clear distinction between bytes and unicode (text) strings. * Files are opened as text by default, requiring an encoding to apply on reading and writing. The talk also explains some best practices: * Start with a good automatic test coverage. * Deal with many automatic conversions with a one-time 2to3 run. * Think about how your library should handle bytes and unicode strings. (Rule of thumb: Decode bytes as early as possible; encode unicode text as late as possible.) * Should you break compatibility with your existing Python 2 API? (Yes, if there's no other way to design a sane API for Python 2 and 3. If you do it, raise the first part of the version number.) * Try to keep code that's different for Python 2 and 3 minimal. Put code that needs to be different for Python 2 and 3 into a `compat` module. Or use third-party libraries like `six` or `future`. Finally, the talk will mention some helpful resources on the web.	28	Science & Technology	PT39M58S	2398	2d	sd	false			105	0	0	0	0
924	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	KRawfCQvCCk	2014-09-22T06:53:15Z	2014-09-22 06:53:15	Jyrki Pulliainen - Packaging in packaging: dh-virtualenv	Jyrki Pulliainen - Packaging in packaging: dh-virtualenv [EuroPython 2014] [24 July 2014] Deploying your software can become a tricky task, regardless of the language. In the spirit of the Python conferences, every conference needs at least one packaging talk. This talk is about dh-virtualenv. It's a Python packaging tool aimed for Debian-based systems and for deployment flows that already take advantage of Debian packaging with Python virtualenvs ----- [Dh-virtualenv][1] is an open source tool developed at Spotify. We use it to ease deploying our Python software to production. We built dh-virtualenv as a tool that fits our existing continuous integration flow with a dedicated sbuild server. As we were already packaging software in Debian packages, the aim of dh-virtualenv was to make transition to virtualenv based installations as smooth as possible. This talk covers how you can use dh-virtualenv to help you deploy your software to production, where you are already running a Debian-based system, such as Ubuntu, and what are the advantages and disadvantages of the approach over other existing and popular techniques. We will discuss the deploying as a problem in general, look into building a dh-vritualenv-backed package, and in the end, look into how dh-virtualenv was actually made. Goal is that after this presentation you know how to make your Debian/Ubuntu deployments easier! [dh-virtualenv][1] if fully open sourced, production tested software, licensed under GPLv2+ and available in Debian testing and unstable. More information of it is also available in our [blogpost][2]. Talk outline: 1. Introduction & overview (3min) * Who am I? * Why am I fiddling with Python packaging? * What do you get out of this talk? 2. Different shortcomings of Python deployments (5min) * Native system packages * Virtualenv based installations * Containers, virtual machine images 3. dh-virtualenv (10 min) * What is dh-virtualenv? * Thought behind dh-virtualenv * Advantages over others * Requirements for your deployment flow * Short intro to packaging Sentry with dh-virtualenv 4. How is it built? (10 min) * Debian package building flow primer * How dh-virtualenv fits that flow * What does it do build time and why? [1]:http://github.com/spotify/dh-virtualenv [2]:http://labs.spotify.com/2013/10/10/packaging-in-your-packaging-dh-virtualenv/	28	Science & Technology	PT31M34S	1894	2d	sd	false			127	0	0	0	0
925	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Zft1xvsi2bw	2014-09-22T06:53:15Z	2014-09-22 06:53:15	Valerio Maggio - Scikit-learn to "learn them all"	Valerio Maggio - Scikit-learn to "learn them all" [EuroPython 2014] [24 July 2014] Scikit-learn is a powerful library, providing implementations for many of the most popular machine learning algorithms. This talk will provide an overview of the "batteries" included in Scikit-learn, along with working code examples and internal insights, in order to get the best for our machine learning code. ----- **Machine Learning** is about *using the right features, to build the right models, to achieve the right tasks* [[Flach, 2012]][0] However, to come up with a definition of what actually means **right** for the problem at the hand, it is required to analyse huge amounts of data, and to evaluate the performance of different algorithms on these data. However, deriving a working machine learning solution for a given problem is far from being a *waterfall* process. It is an iterative process where continuous refinements are required for the data to be used (i.e., the *right features*), and the algorithms to apply (i.e., the *right models*). In this scenario, Python has been found very useful for practitioners and researchers: its high-level nature, in combination with available tools and libraries, allows to rapidly implement working machine learning code without *reinventing the wheel*. [**Scikit-learn**](http://scikit-learn.org/stable/) is an actively developing Python library, built on top of the solid `numpy` and `scipy` packages. Scikit-learn (`sklearn`) is an *all-in-one* software solution, providing implementations for several machine learning methods, along with datasets and (performance) evaluation algorithms. These "batteries" included in the library, in combination with a nice and intuitive software API, have made scikit-learn to become one of the most popular Python package to write machine learning code. In this talk, a general overview of scikit-learn will be presented, along with brief explanations of the techniques provided out-of-the-box by the library. These explanations will be supported by working code examples, and insights on algorithms' implementations aimed at providing hints on how to extend the library code. Moreover, advantages and limitations of the `sklearn` package will be discussed according to other existing machine learning Python libraries (e.g., [`shogun`](http://shogun-toolbox.org "Shogun Toolbox"), [`pyML`](http://pyml.sourceforge.net "PyML"), [`mlpy`](http://mlpy.sourceforge.net "MLPy")). In conclusion, (examples of) applications of scikit-learn to big data and computational intensive tasks will be also presented. The general outline of the talk is reported as follows (the order of the topics may vary): * Intro to Machine Learning * Machine Learning in Python * Intro to Scikit-Learn * Overview of Scikit-Learn * Comparison with other existing ML Python libraries * Supervised Learning with `sklearn` * Text Classification with SVM and Kernel Methods * Unsupervised Learning with `sklearn` * Partitional and Model-based Clustering (i.e., k-means and Mixture Models) * Scaling up Machine Learning * Parallel and Large Scale ML with `sklearn` The talk is intended for an intermediate level audience (i.e., Advanced). It requires basic math skills and a good knowledge of the Python language. Good knowledge of the `numpy` and `scipy` packages is also a plus. [0]: http://goo.gl/BnhoHa "Machine Learning: The Art and Science of Algorithms that Make Sense of Data, *Peter Flach, 2012*"	28	Science & Technology	PT40M17S	2417	2d	sd	false			364	0	0	0	0
926	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vfMWfVlscFM	2014-09-22T06:53:15Z	2014-09-22 06:53:15	Francisco Fernández Castaño - Graph Databases, a little connected tour	Francisco Fernández Castaño - Graph Databases, a little connected tour [EuroPython 2014] [23 July 2014] There are many kinds of NoSQL databases like, document databases, key-value, column databases and graph databases. In some scenarios is more convenient to store our data as a graph, because we want to extract and study information relative to these connections. In this scenario, graph databases are the ideal, they are designed and implemented to deal with connected information in a efficient way. ----- There are many kinds of NoSQL databases like, document databases, key-value, column databases and graph databases. In some scenarios is more convenient to store our data as a graph, because we want to extract and study information relative to these connections. In this scenario, graph databases are the ideal, they are designed and implemented to deal with connected information in a efficient way. In this talk I'll explain why NoSQL is necessary in some contexts as an alternative to traditional relational databases. How graph databases allow developers model their domains in a natural way without translating these domain models to an relational model with some artificial data like foreign keys and why is more efficient a graph database than a relational one or even a document database in a high connected environment. Then I'll explain specific characteristics of Neo4J as well as how to use Cypher the neo4j query language through python.	28	Science & Technology	PT25M32S	1532	2d	sd	false			201	0	0	0	0
927	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yPSmj2kmX8g	2014-09-22T06:53:15Z	2014-09-22 06:53:15	Dave Halter - Identifying Bugs Before Runtime With Jedi	Dave Halter - Identifying Bugs Before Runtime With Jedi [EuroPython 2014] [23 July 2014] Finding bugs before runtime has been an incredibly tedious task in Python. Jedi is an autocompletion library with interesting capabilities: It understands a lot of the dynamic features of Python. I will show you how we can use the force of (the) Jedi to identify bugs in your Python code. It's not just another pylint. It's way better. ----- Jedi is an autocompletion library for Python that has gained quite a following over the last year. There are a couple of plugins for the most popular editors (VIM, Sublime, Emacs, etc.) and mainstream IDEs like Spyder are switching to Jedi. Jedi basically tries to redefine the boundaries of autocompletion in dynamic languages. Most people still think that there's no hope for decent autocompletion in Python. This talk will try to argue the opposite, that decent autocompletion is very close. While the first part will be about Jedi, the second part of this talk will discuss the future of dynamic analysis. Dynamic Analysis is what I call the parts that static analysis doesn't cover. The hope is to generate a kind of "compiler" that doesn't execute code but reports additional bugs in your code (AttributeErrors and the like). I still have to work out the details of the presentation. I also have to add that Jedi I'm currently working full-time on Jedi and that there's going to be some major improvements until the conference. Autocompletion and static/dynamic analysis as well as refactoring are hugely important tools for a dynamic language IMHO, because they can improve the only big disadvantage compared to static languages: Finding bugs before running your tool.	28	Science & Technology	PT25M4S	1504	2d	sd	false			356	2	0	0	0
928	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	GAy-qS_gp1s	2014-09-22T06:52:57Z	2014-09-22 06:52:57	Lightning Talks	Lightning Talks [EuroPython 2014]	28	Science & Technology	PT1H16M9S	969	2d	sd	false			78	0	0	0	0
929	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IbH6_Yx2Q-4	2014-09-22T06:52:57Z	2014-09-22 06:52:57	Giles Thomas - An HTTP request's journey through a platform-as-a-service	Giles Thomas - An HTTP request's journey through a platform-as-a-service [EuroPython 2014] [23 July 2014] PythonAnywhere hosts tens of thousands of Python web applications, with traffic ranging from a couple of hits a week to dozens of hits a second. Hosting this many sites reliably at a reasonable cost requires a well-designed infrastructure, but it uses the same standard components as many other Python-based websites. We've built our stack on GNU/Linux, nginx, uWSGI, Redis, and Lua -- all managed with Python. In this talk we'll give a high-level overview of how it all works, by tracing how a request goes from the browser to the Python application and its response goes back again. As well as showing how a fairly large deployment works, we'll give tips on scaling and share a few insights that may help people running smaller sites discover how they can speed things up.	28	Science & Technology	PT24M13S	1453	2d	sd	false			149	1	0	0	0
930	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bHjJottAfdo	2014-09-22T06:52:57Z	2014-09-22 06:52:57	Schlomo Shapiro - Sponsoring Open Source	Schlomo Shapiro - Sponsoring Open Source [EuroPython 2014] und damit den Chef überzeugen	28	Science & Technology	PT28M2S	1682	2d	sd	false			68	0	0	0	0
931	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vorPOLKwEEs	2014-09-22T06:52:57Z	2014-09-22 06:52:57	Lightning Talks	Lightning Talks [EuroPython 2014]	28	Science & Technology	PT1H28M23S	1703	2d	sd	false			47	0	0	0	0
932	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2cuJGI9tRGY	2014-09-22T06:52:56Z	2014-09-22 06:52:56	Erik Janssens - SQLAlchemy Drill	Erik Janssens - SQLAlchemy Drill [EuroPython 2014] [23 July 2014] If you have been looking to use SQLAlchemy in one of your projects, but found the documentation a bit overwhelming then this talk is for you. If you have used SQLAlchemy but feel there are some holes in your knowledge of the library, then this talk is for you as well. The idea is that during this talk you bring your laptop with you, and make sure you have SQLAlchemy installed. At the beginning of the talk, we fire up our Python interpreter and start to explore the library in a structured way. In the next 25 minutes, we'll go hands on through the various parts of the SQLAlchemy. We try out the concepts of each part of the library and make sure the basics are well understood. ----- In this talk will introduce the audience to SQLAlchemy in a well structured way, so that basic concepts are understood. This talk will be a combination of slides and interactive code editing in IPython. Both the working of SQLAlchemy as well as best practices in using SQLAlchemy will be demonstrated. I will demonstrate the basic workings of: * the SQL generation layer * the DDL generation * the ORM * the session * transactions The used code will allow those who have their laptop with them to try the code samples for themselves.	28	Science & Technology	PT28M36S	1716	2d	sd	false			179	2	1	0	1
933	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3lhsA5ywh00	2014-09-22T06:52:56Z	2014-09-22 06:52:56	Daniel Pope - gevent: asynchronous I/O made easy	Daniel Pope - gevent: asynchronous I/O made easy [EuroPython 2014] [23 July 2014] gevent provides highly scalable asynchronous I/O without becoming a nest of callbacks, or even needing code changes. Daniel will explain how to get started with gevent, discuss patterns for its use and describe the differences with Twisted, Tornado and Tulip/asyncio. ----- It has been claimed "Callbacks are the new GOTO". Most asynchronous IO libraries use callbacks extensively. gevent (http://www.gevent.org) uses coroutines to provide highly scalable asynchronous I/O with a synchronous programming model that doesn't need code changes and callbacks. By elegantly monkey patching the Python standard library, both your code and all pure Python libraries become asynchronous too, making a separate collection of protocol implementations (in the style of Twisted) unnecessary. Code written like this is easier to understand, particularly for more junior developers. Crucially, IO errors can be raised at the right places. I will be introducing gevent's programming model, why it's easier, walk through simple code samples, and discuss experiences and metaphors for programming with it.	28	Science & Technology	PT44M1S	2641	2d	sd	false			307	0	1	0	0
934	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8KHjtd3bJ3U	2014-09-22T06:52:56Z	2014-09-22 06:52:56	Max Tepkeev - How we switched our 800+ projects from Apache to uWSGI	Max Tepkeev - How we switched our 800+ projects from Apache to uWSGI [EuroPython 2014] [23 July 2014] During the last 7 years the company I am working for developed more than 800 projects in PHP and Python. All this time we were using Apache+nginx for hosting this projects. In this talk I will explain why we decided to switch all our projects from Apache+nginx to uWSGI+nginx and how we did that. ----- The talk will start from describing the setup we had for the last 7 years, i.e. Apache with mod_wsgi for Python projects and mod_php4/5 for PHP projects + nginx. I will explain why we used this setup for so long time, what problems we faced with this setup and what solutions we tried to solve them before switching to uWSGI. Then I will tell about uWSGI, what it is, how it works and what features it has. I will show the comparison of configuration files, how simple it is to configure uWSGI compared to Apache. Lastly I will explain how we managed to switch all our 800+ projects developed over the years in 2 different languages with 2 major versions changed (PHP4/5 and Python2/3), how this switch simplified our development and administration of this projects, the improvements we got in memory management and other areas. Of course I will concentrate mainly on our Python projects because it is EuroPython after all and not EuroPHP ;-)	28	Science & Technology	PT28M19S	1699	2d	sd	false			151	1	0	0	0
935	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	O1ZvnT1BD10	2014-09-22T06:52:56Z	2014-09-22 06:52:56	Lightning Talks	Lightning Talks [EuroPython 2014]	28	Science & Technology	PT1H31M25S	1885	2d	sd	false			42	0	0	0	0
936	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QB7VXSc5H3A	2014-09-22T06:52:56Z	2014-09-22 06:52:56	Pieter Hintjens - Our decentralized future	Pieter Hintjens - Our decentralized future [EuroPython 2014] [23 July 2014] Pieter will talk about the urgent push towards a decentralized future. As founder of the ZeroMQ community, he will explain the vision, design and reality of distributed software systems. He’ll explain his view on the community itself, also a highly decentralized “Living System”, as Hintjens calls it. Finally he’ll talk about edgenet, a model for a decentralized Internet.	28	Science & Technology	PT47M6S	2826	2d	sd	false			2778	48	0	0	3
937	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cgzy9vRAp9o	2014-09-22T06:52:56Z	2014-09-22 06:52:56	pymove3D Winner Announcement	pymove3D Winner Announcement [EuroPython 2014[ [21 July 2014]	28	Science & Technology	PT21M5S	1265	2d	sd	false			136	0	0	0	0
938	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hU3vEGwzQsQ	2014-09-22T06:52:56Z	2014-09-22 06:52:56	Slavek Kabrda - Red Hat Loves Python	Slavek Kabrda - Red Hat Loves Python [EuroPython 2014] [24 July 2014] Come learn about what Red Hat is doing with Python and the Python community, and how you can benefit from these efforts. Whether it is the new Python versions in Red Hat Enterprise Linux via the new Red Hat Software Collections, compatible Python cartridges in OpenShift Platform-as-a-Service (PaaS), or being the leading contributor to OpenStack, there's a lot going on at Red Hat. We're Pythonistas, too!	28	Science & Technology	PT23M28S	1408	2d	sd	false			56	0	0	0	0
939	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jC5miV9njlY	2014-09-22T06:52:56Z	2014-09-22 06:52:56	Maciej/Fabrizio Romano - Python Driven Company	Maciej/Fabrizio Romano - Python Driven Company [EuroPython 2014] [25 July 2014] Adopting Python across a company brings extra agility and productivity not provided by traditional mainstream tools like Excel. This is the story of programmers teaching non-programmers, from different departments, to embrace Python in their daily work. ----- By introducing ipython notebook, pandas and the other data analysis packages that make python even more accessible and attractive, we attempted to adapt python as a core technology across our whole company. We’ve challenged the dominant position of Microsoft Excel and similar tools, and dared to replace it by pandas-powered ipython notebooks. During this transitional phase, we have been inspired and sometimes forced to develop multiple packages that extend pandas, numpy etc., in order to enable our colleagues, in other departments, to access all the data they need. Moreover, we are developing several high level functionalities for the notebook environment. The notebook environment is allowing us to be extremely responsive to the changes our users are asking for, since, for part of the work, we don’t have to go through the whole traditional development process. The talk focuses on challenges and problems we’ve solved and managed in order to achieve our long term goal of creating highly agile, data-driven non-tech teams, free from the constraints imposed by mainstream technologies, and all of this thanks to python.	28	Science & Technology	PT35M11S	2111	2d	sd	false			197	0	0	0	0
940	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pJOmlFf5Je4	2014-09-22T06:52:56Z	2014-09-22 06:52:56	Bob Ippolito - What can python learn from Haskell?	Bob Ippolito - What can python learn from Haskell? [EuroPython 2014] [21 July 2014] What can we learn from Erlang or Haskell for building reliable high concurrency services? Bob was involved in many Python projects but argues that for some domains there may be better methods found elsewhere. He started looking for alternatives back in 2006 when building high concurrency services at Mochi Media (originally with Twisted), which led him to the land of Erlang and later Haskell. Bob is going to talk about what he learned along the way. In particular, he’ll cover some techniques that are used in functional programming languages and how they can be used to solve problems in more performant, robust and/or concise ways than the standard practices in Python. He is also going to discuss some potential ways that the Python language and its library ecosystem could evolve accordingly. ----- What can we learn from Erlang or Haskell for building reliable high concurrency services? Bob was involved in many Python projects but argues that for some domains there may be better methods found elsewhere. He started looking for alternatives back in 2006 when building high concurrency services at Mochi Media (originally with Twisted), which led him to the land of Erlang and later Haskell. Bob is going to talk about what he learned along the way. In particular, he’ll cover some techniques that are used in functional programming languages and how they can be used to solve problems in more performant, robust and/or concise ways than the standard practices in Python. He is also going to discuss some potential ways that the Python language and its library ecosystem could evolve accordingly.	28	Science & Technology	PT41M20S	2480	2d	sd	false			539	6	0	0	2
941	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-gOJyNq_4ao	2014-09-22T06:52:55Z	2014-09-22 06:52:55	Angel Ramboi - Gamers do REST	Angel Ramboi - Gamers do REST [EuroPython 2014] [22 July 2014] An overview (sprinkled with implementation details and solutions to issues we encountered) of how Demonware uses Python and Django to build RESTful APIs and how we manage to reliably serve millions of gamers all over the world that play Activision-Blizzard’s successful franchises Call of Duty and Skylanders. Topics the presentation will touch: tech stack overview; API design; configuration handling; middleware usage for logging, metrics and error handling; authentication/authorization. ----- An overview (sprinkled with implementation details and solutions to issues we encountered) of how Demonware uses Python and Django to build RESTful APIs and how we manage to reliably serve millions of gamers all over the world that play Activision-Blizzard’s successful franchises Call of Duty and Skylanders. Topics the presentation will touch: - tech stack overview - API design - configuration handling - middleware usage for logging, metrics and error handling - authentication/authorization	28	Science & Technology	PT24M20S	1460	2d	sd	false			51	1	0	0	0
942	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4dunSFkKavo	2014-09-22T06:52:55Z	2014-09-22 06:52:55	Federico Marani - Scaling with Ansible	Federico Marani - Scaling with Ansible [EuroPython 2014] [23 July 2014] Ansible is a powerful DevOps swiss-army knife tool, very easy to configure and with many extensions built-in. This talk will quickly introduce the basics of Ansible, then some real-life experience tips on how to use this tool, from setting up dev VMs to multi-server setups. ----- Infrastructure/Scaling is a topic really close to me, I'd like to have the chance to talk about how we set this up in the company I work for. Our infrastructure is around 10-15 servers, provisioned on different cloud providers, so a good size infrastructure. Presentation is going to be divided in 3 parts, first part is going to be focused on comparing sysadmin and devops, then there will be an introduction to the basic concepts of Ansible. I want to spend most on the last part, which is going to give some tips based on our experience with it. Many ideas will come from this presentation https://speakerdeck.com/fmarani/devops-with-ansible which i gave at DJUGL in London, with a longer session I will have more chances to delve into more detail, especially on how we use it, from vagrant boxes setup to AWS and DigitalOcean boxes, network configuration, software configurations, etc... I want to offer as many real-life tips as possible, without going too much offtopic as far as Ansible is concerned	28	Science & Technology	PT40M37S	2437	2d	sd	false			180	2	1	0	0
943	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8xHd3JkhWd4	2014-09-22T06:52:55Z	2014-09-22 06:52:55	Welcome	Welcome [EuroPython 2014] [21 July 2014]	28	Science & Technology	PT20M56S	1256	2d	sd	false			692	1	0	0	0
944	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JJUY7EEpFj8	2014-09-22T06:52:55Z	2014-09-22 06:52:55	Frank - Managing the Cloud with a Few Lines of Python	Frank - Managing the Cloud with a Few Lines of Python [EuroPython 2014] [23 July 2014] One of the advantages of cloud computing is that resources can be enabled or disabled dynamically. E. g. is an distributed application short on compute power one can easily add more. But who wants to do that by hand? Python is a perfect fit to control the cloud. The talk introduces the package Boto which offers an easy API to manage most of the Amazon Web Services (AWS) as well as a number of command line tools. First some usage examples are shown to introduce the concepts behind Boto. For that a few virtual hosts with different configurations are launched, and the use of the storage service S3 is briefly introduced. Based on that a scalable continuous integration system controlled by Boto is developed to show how easy all the required services can be used from Python. Most of the examples will be demonstrated during the talk. They should be easily adoptable for similar use cases or serve as an starting point for more different ones. ----- One of the advantages of cloud computing is that resources can be enabled or disabled dynamically. E. g. is an distributed application short on compute power one can easily add more. But who wants to do that by hand? Python is a perfect fit to control the cloud. The talk introduces the package Boto which offers an easy API to manage most of the Amazon Web Services (AWS) as well as a number of command line tools. First some usage examples are shown to introduce the concepts behind Boto. For that a few virtual instances with different configurations are launched, and the use of the storage service S3 is briefly introduced. Based on that a scalable continuous integration system controlled by Boto is developed to show how easy all the required services can be used from Python. Most of the examples will be demonstrated during the talk. They should be easily adoptable for similar use cases or serve as an starting point for more different ones.	28	Science & Technology	PT25M37S	1537	2d	sd	false			113	1	0	0	0
945	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PC5-i7KYVf4	2014-09-22T06:52:55Z	2014-09-22 06:52:55	Maciej Dziergwa - How to become an Agile company - case study	Maciej Dziergwa - How to become an Agile company - case study [EuroPython 2014] [23 July 2014] The STX Next story has the classic arc of “zero to hero.” During the last 9 years, STX Next has grown from a small business with a handful of developers, to one of the biggest Python companies in Europe, and a leading proponent of agile and scrum methodologies. We feel that now is the best moment to share our experiences in implementing effective, agile development processes in a company of nearly 100 developers. Maciej Dziergwa will be discussing how he’s grown his business, what challenges there are today in python development, and how he plans to take his company to the next level. Especially we want to spread our ideas of building de-localized teams/frequently changing teams/teams with young members that learn rapidly making synergy effect. Join us during our Business Day on 23th July 2014! Remember that 2+2 can be much more than 4...	28	Science & Technology	PT22M30S	1350	2d	sd	false			112	1	0	0	0
946	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WuExjRWKdYY	2014-09-22T06:52:55Z	2014-09-22 06:52:55	Conference Closing	Conference Closing [EuroPython 2014] [25 July 2014]	28	Science & Technology	PT15M52S	952	2d	sd	false			20	0	0	0	0
947	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dLOp5IWyZlc	2014-09-22T06:52:55Z	2014-09-22 06:52:55	Lightning Talks	Lightning Talks [EuroPython 2014]	28	Science & Technology	PT40M17S	2417	2d	sd	false			102	1	0	0	0
948	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ggHsRX48SJw	2014-09-22T06:52:55Z	2014-09-22 06:52:55	Using python, LXC and linux to create a mass VM hosting, managed by django and angularjs	Daniel Kraft/Oliver Roch - Using python, LXC and linux to create a mass VM hosting, managed by django and angularjs [EuroPython 2014] [22 July 2014] How we created a scalable mass VM hosting for open source web apps with python, LXC and linux with a web-UI based on django and angularjs. We'll show the underlying architecture of this service, several linux internals that make this possible and we'll talk about bitter failure during development. This talk will be python- and linux-centric with some hints for integrating angularjs into django.	28	Science & Technology	PT23M9S	1389	2d	sd	false			412	1	0	0	0
949	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	i6osnSZQCtM	2014-09-22T06:52:55Z	2014-09-22 06:52:55	Lightning Talks	Lightning Talks [EuroPython 2014]	28	Science & Technology	PT1H22M47S	1367	2d	sd	false			42	0	0	0	0
950	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	j1mN7j83AV8	2014-09-22T06:52:55Z	2014-09-22 06:52:55	Thomas Aglassinger - Solution oriented error handling	Thomas Aglassinger - Solution oriented error handling [EuroPython 2014] [22 July 2014] This talk shows how to use Python's built in error handling mechanisms to keep the productive code clean, derive error messages helpful for the user directly from the code and release ressources properly. ----- Traditionally error handling is regarded an annoyance by developers because it removes the focus from the already difficult enough productive parts of the code to parts that ideally will never be called. And even if, end users seem to be ignore the error messages and just click "Ok" or call the help desk. Solution oriented error handling uses Python's existing try/catch/finally idiom, with statement, assert statement and exception hierarchy in a way that keeps the code clean and easy to maintain. It gives a clear distinction between errors that can be solved by the end user, the system administrator and the developer. Naming conventions and a simple set of coding guidelines ensure that helpful error messages can be easily derived from the code. Most code examples work with Python 2.6+ and Python 3.x, on a few occasions minor differences are pointed out. Topics covered are: 1. Introduction to error handling in Python - What are errors? - How to represent errors in Python - Detecting errors - Delegating errors to the caller - clean resource management 2. Principles of solution oriented error handling - responsibilities between user, admin and developer - when to use raise or assert 3. Error messages - What are "good" error messages - How to derive error messages from the source code - Adding context to the error - How to report errors to the user 4. Solution oriented usage of Python's exception hierarchy - admins fix `EnvironmentError` - users fix `DataError` - representing `DataError` - converting exceptions to `DataError` - developers fix everything else - special Python exceptions not representing errors 5. Template for a solution oriented command line application 6. Best practices for `raise` and `except` - When to use `raise`? - When to use `except`? This talk is a translation of a German [talk](https://github.com/roskakori/talks/tree/master/pygraz/errorhandling) given at the PyGRAZ user group and in a (slightly depythonized variant) the Grazer Linux Tag 2013 ([slides and video](http://glt13-programm.linuxtage.at/events/198.de.html)).	28	Science & Technology	PT28M19S	1699	2d	sd	false			346	2	0	0	0
951	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jufUqH3bDG0	2014-09-22T06:52:55Z	2014-09-22 06:52:55	Maximilien Riehl - Practical PyBuilder	Maximilien Riehl - Practical PyBuilder [EuroPython 2014] [25 July 2014] PyBuilder is a software build tool written in pure python which mainly targets pure python applications. It provides glue between existing build frameworks, thus empowering you to focus on the big picture of the build process. It will be shown through demonstrations and samples how a simple, human-readable and declarative configuration can lead to an astonishingly well-integrated build process which will make maintainers, developers and newcomers happy. ----- # Why another build tool Starting up a simple python project with best practices still takes a lot of boilerplate and glueing (e.G. chaining unit tests and integration tests in the build process, adding a linter, measuring coverage, ...). It often results in extremely ugly homebrew scripts and edge-case solutions that are not reusable. There are even programs out there (e.G. cookiecutter) that encourage boilerplate code generation! # Build orchestration PyBuilder borrows from the *maven* idea of phases (packaging, verifying, publishing, ...) to set up a fully declarative and automated build that can be run locally and remotely (build servers) in the very same way. Rather than reinventing the wheel, it provides glue between existing solutions (like unittest, coverage, flake8, ...) through a simple but powerful plugin mechanism. # The talk After a more theoretical talk with a colleague at PyConDE 2013, I want to show how it's actually like to work with *PyBuilder*. This includes * starting up a project * running builds * using plugins * writing a plugin The demo code will be made available on GitHub and I'll probably have recordings prepped in case something goes wrong. Reviewer FAQ =============== ### How does PyBuilder compare to other existing solutions like zc.buildout? As opposed to solutions like zc.buildout which focus on the *building* of complex projects (many parts, complex dependencies) PyBuilder emphasizes the full build process for very simple projects. Undoubtedly, buildout is more powerful for building in that regard and there is no reason to switch to PyBuilder. However, for simple projects (a few packages, pure python) we believe that PyBuilder is better, especially if you're starting out with Python. The plugin architecture (as opposed to recipes) makes it easier to reason about what is going on. We are able to model dependencies between build phases (like "coverage" needing "unit tests" and "packaging" needing "integration tests") where recipes are not. It also seems (after looking through the recipes available for buildout) that we have more focus on QA as part of the build process (lint code, differentiate between unit/integration tests, code analysis, ...). There is also a special focus on having the build descriptor written in Python (with fluent interfaces where possible) so that it is possible to understand what the configuration is by reading plain english, as opposed to zc.buildout (where the configuration is an ini file, or SCons which is very make-oriented). In the end, a big difference between most build tools and PyBuilder is that PyBuilder is more about orchestration. We didn't reinvent packaging or linting, we simply use what is already there (setuptools, flake8, pymetrics, ...). This allows users to use the tools they want without having to do the integration themselves, and still get a nice, unified build process out of it. A simple example : In buildout, code analysis can be done with ``` [buildout] parts += code-analysis [code-analysis] recipe = plone.recipe.codeanalysis directory = ${buildout:directory}/src ``` This is not readable IMHO. In PyBuilder it can look like this : ``` use_plugin('python.flake8') project.set_property('flake8_include_test_sources', True) project.set_property('flake8_ignore', 'E501') project.set_property('flake8_break_build', True) ``` ### "It provides glue between existing build frameworks" - which ones ? Could you name (some at least) ? Currently there is only a plugin for building with distutils/setuptools. Should that change (e.G. new contender) it would be easy to switch using PyBuilder. Examples where glue is needed : * Glue setuptools + unittest, so that no distribution can be shipped if tests fail * Glue setuptools + coverage + unittest, so that no distribution can be shipped if the statement coverage is too low (configurable ofc) * Glue setuptools + pip so that cloned projects can be built with their dependencies without needing to pip install manually	28	Science & Technology	PT23M1S	1381	2d	sd	false			428	1	2	0	0
952	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ymU2uj6Ax3s	2014-09-22T06:52:55Z	2014-09-22 06:52:55	Ben Nuttall - Pioneering the Future of Computing Education	Ben Nuttall - Pioneering the Future of Computing Education [EuroPython 2014] [24 July 2014] How the Raspberry Pi Foundation are leading the way in the computing in schools revolution by providing affordable open and connectable hardware to people of all levels of experience. Now we have an education team, we're pushing forward with creating resources and training teachers to help deliver modern computing education around the world. All our learning resources are Creative Commons licensed and available on GitHub. We write materials that match the UK computing curriculum. ----- I'm Ben, from Raspberry Pi. I do development and outreach for the Foundation and I work with the rest of the education team to help make learning through computer science, coding and hardware hacking more accessible to all. In this talk I explain the Raspberry Pi story: its mission - the reason the Pi exists; what happened before release - getting the board in to production; what happened in the first two years - the community birth and growth; and what's coming next - education focus, new hardware and improved software. Python is the main language used (and advocated by us) in education with Raspberry Pi. We're creating learning resources to match up with the new UK computing curriculum, where we teach young people programming and computer science concepts with Python on Pi, and help teachers deliver quality material in the classroom to work towards the objectives the curriculum sets out to achieve. With Raspberry Pi we open up possibilities for connecting to the real world in an accessible way using the powerful, high level and human read/write -able language of Python. We work closely with the community: hobbyists organising Raspberry Jam events; educators teaching with Raspberry Pi; the software communities and their contributions - and we welcome any interested parties to get involved with helping us provide for the wider community.	28	Science & Technology	PT25M55S	1555	2d	sd	false			34	0	0	0	0
953	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FCUvqO6rJys	2014-09-22T06:52:54Z	2014-09-22 06:52:54	The Continuum Platform: Advanced Analytics and Web-based Interactive Visualization for Enterprises	Travis Oliphant - The Continuum Platform: Advanced Analytics and Web-based Interactive Visualization for Enterprises [EuroPython 2014] [24 July 2014] The people at Continuum have been involved in the Python community for decades. As a company our mission is to empower domain experts inside enterprises with the best tools for producing software solutions that deal with large and quickly-changing data. The Continuum Platform brings the world of open source together into one complete, easy-to-manage analytics and visualization platform. In this talk, Dr. Oliphant will review the open source libraries that Continuum is building and contributing to the community as part of this effort, including Numba, Bokeh, Blaze, conda, llvmpy, PyParallel, and DyND, as well as describe the freely available components of the Continuum Platform that anyone can benefit from today: Anaconda, wakari.io, and binstar.org.	28	Science & Technology	PT24M55S	1495	2d	sd	false			165	1	0	0	0
954	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NiSqG6s8skA	2014-09-22T06:52:54Z	2014-09-22 06:52:54	Petr Viktorin - The Magic of Attribute Access	Petr Viktorin - The Magic of Attribute Access [EuroPython 2014] [22 July 2014] Have you ever wondered how the "self" argument appears when you call a method? Did you know there is a general mechanism behind it? Come learn all about attributes and descriptors. ----- The first part of this talk will describe what exactly happens when you read or write an attribute in Python. While this behavior is, of course, explained in the Python docs, more precisely in the [Data model][1] section and [related][2] [writeups][3], the documentation gives one a "bag of tools" and leaves combining them to the reader. This talk, on the other hand, will present one chunk of functionality, the attribute lookup, and show how its mechanisms and customization options work together to provide the flexibility (and gotchas) Python provides. The topics covered will be: * method resolution order, with a nod to the C3 algorithm * instance-, class-, and metaclass-level variables * `__dict__` and `__slots__` * data/non-data descriptors * special methods (`__getattr__`, `__getattribute__`, `__setattr__`, `__dir__`) In the second part of the talk, I will show how to use the customization primitives explained before on several interesting and/or useful examples: * A proxy object using `__getattr__` * Generic desciptor - an ORM column sketch * the rudimentary `@property`, method, `staticmethod` reimplemented in pure Python (explained [here][2] and elsewhere), which lead to * SQLAlchemy's [`@hybrid_proprerty`][4] * Pyramid's deceptively simple memoizing decorator, [`@reify`][5] * An ["Unpacked" tuple properties][6] example to drive home the idea that descriptors can do more than provide attribute access (and mention weak dicts as a way to non-intrusively store data on an object) (These are subject to change as I compose the talk. Also some examples may end up interleaved with the theory.) Hopefully I'll have time to conclude with a remark about how Python manages to be a "simple language" despite having these relatively complex mechanisms. [1]: http://docs.python.org/3/reference/datamodel.html [2]: http://docs.python.org/3/howto/descriptor.html [3]: https://www.python.org/download/releases/2.3/mro/ [4]: http://docs.sqlalchemy.org/en/rel_0_9/orm/extensions/hybrid.html [5]: http://docs.pylonsproject.org/projects/pyramid/en/latest/api/decorator.html [6]: https://gist.github.com/encukou/9789993	28	Science & Technology	PT26M47S	1607	2d	sd	false			1738	23	0	0	0
955	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Pl-q8F_-C4M	2014-09-22T06:52:54Z	2014-09-22 06:52:54	Richard Wall - Twisted Names: DNS Building Blocks for Python Programmers	Richard Wall - Twisted Names: DNS Building Blocks for Python Programmers [EuroPython 2014] [25 July 2014] In this talk I will report on my efforts to update the DNS components of Twisted and discuss some of the things I've learned along the way. I'll demonstrate the EDNS0, DNSSEC and DANE client support which I have been working on and show how these new Twisted Names components can be glued together to build novel DNS servers and clients. Twisted is an event-driven networking engine written in Python and licensed under the open source MIT license. It is a platform for developing internet applications. ----- # Description My talk will consist of four main sections. Given the 30 minute time constraint, I may shorten or drop the two introductory parts in favour of the narrative and demonstration of interesting new APIs and code examples in the final two parts. My experience of delivering a similar talk at PyconUK 2013 is that those are the parts that will most interest the audience and prompt most audience questions. Here are my proposed sections with rough time allocations and descriptions: ## Introducing Twisted Names (0-5) Twisted includes a comprehensive set of DNS components, collectively known as Twisted Names. - &lt;https://twistedmatrix.com/trac/wiki/TwistedNames&gt; I will begin the talk with a quick introduction to Twisted Names and its capabilities, including one or two simple code examples. ## Introducing My Project (0-5) With generous funding from The NLnet Foundation I am adding EDNS(0) and DNSSEC client support in Twisted Names, including full DNSSEC verification and DANE support. In the talk I will quickly summarise the steps taken and lessons learned in securing that funding, and hope to encourage the audience to seek funding to support there own pet OSS projects. ## What's New in Twisted Names / Project Progress Report (10) My project plan is divided into the following broad milestones. 1. EDNS(0) 1. OPT record 2. Extended Message object with additional EDNS(0) items 3. EDNS Client 2. RRSET handling 1. Canonical Form and Order of Resource Records 2. Receiving RRSETs 3. DNSSEC 1. New DNSSEC Records and Lookup Methods 2. Security-aware Non-validating Client 3. Validating Client 4. DANE 1. A twistd dns authoritative server capable of loading and serving TLSA records. 2. A Twisted web client Agent wrapper which performs TLSA lookup and verification of a server certificate. 3. A HostnameClientEndpoint which performs TLSA lookup and verification of a server certificate. 4. A command line tool for debugging TLSA records and for verifying a certificate file against a domain name. 5. A TLSA Record class for encoding and decoding TLSA bytes. 6. A TLSA lookup method which accepts port, protocol and hostname and constructs a suitable TLSA domain name. In the talk I will quickly outline these goals, report on my progress so far, and show running code examples to demonstrate the new APIs. ## Future Developments (5) The aim of my project is to lay foundations that will eventually allow end-to-end DNSSEC verification in all the core Twisted networking components, including Twisted Conch (SSH), Mail (SMTP, POP3), Perspective Broker (RPC), Web (HTTP, XML-RPC, SOAP), Words (XMPP, IRC). Additionally I hope that this foundation work will encourage the development of end-to-end DNSSEC verification in many of the Open Source and commercial projects built on top of Twisted. I will end the talk by outlining these exciting possibilities, and demonstrate some code examples that illustrate these possibilities. ## Q & A (5-10) I'm determined to leave at least five minutes at the end for audience questions. At PyconUK 2013 I was frustrated because I ran out of time and ended up answering questions outside the lecture theatre; questions which would have been interesting to the whole audience.	28	Science & Technology	PT27M51S	1671	2d	sd	false			274	1	0	0	0
956	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	aNrrGf-uNUY	2014-09-22T06:52:54Z	2014-09-22 06:52:54	holger krekel - packaging and testing with devpi and tox	holger krekel - packaging and testing with devpi and tox [EuroPython 2014] [24 July 2014] This talk discusses good ways to organise packaging and testing for Python projects. It walks through a per-company and an open source scenario and explains how to best use the "devpi-server" and "tox" for making sure you are delivering good and well tested and documented packages. As time permits, we also discuss in-development features such as real-time mirroring and search. ----- The talk discusses the following tools: - devpi-server for running an in-house or per-laptop python package server - inheritance between package indexes and from pypi.python.org public packages - the "devpi" client tool for uploading docs and running tests - running of tests through tox - summary view with two work flows: open source releases and in-house per-company developments - roadmap and in-development features of devpi and tox (The presenter is the main author of the tools in question).	28	Science & Technology	PT26M46S	1606	2d	sd	false			456	1	0	0	0
957	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dYpfIz219vs	2014-09-22T06:52:54Z	2014-09-22 06:52:54	Floris Bruynooghe - Advanced Uses of py.test Fixtures	Floris Bruynooghe - Advanced Uses of py.test Fixtures [EuroPython 2014] [23 July 2014] One unique and powerful feature of py.test is the dependency injection of test fixtures using function arguments. This talk aims to walk through py.test's fixture mechanism gradually introducing more complex uses and features. This should lead to an understanding of the power of the fixture system and how to build complex but easily-managed test suites using them. ----- This talks will assume some basic familiarity with the py.test testing framework and explore only the fixture mechanism. It will build up more complex examples which will lead up to touching on other plugin features of py.test. It is expected people will be familiar with python features like functions as first-class objects, closures etc.	28	Science & Technology	PT26M32S	1592	2d	sd	false			590	2	0	0	0
958	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4MkwYCVce5E	2014-09-13T18:38:58Z	2014-09-13 18:38:58	plaetzchen - Don't fear our new robot overlords!	plaetzchen - Don't fear our new robot overlords! [EuroPython 2014] [23 July 2014] This talk will show you GoldenEye. A setup of a robot, image recognition and Python. What could be better? GoldenEye uses computer vision to detect icons on an attached mobile device and then tells a robot to tap them. All off these tests are written in python's unittest module and the API is as easy as possible to make writing complex tests an ease. ----- GoldenEye is our solution for mobile front end tests. Testing on mobile devices can be quite devastating: On iOS you can write front test in JavaScript in Instruments but it is quite impossible to connect Instruments to you CI solution of choice. On Android the situation isn't much better. Other front end test frameworks can work with mobile devices (or simulators) but they lack the ability to see. Of course you can check if a color is set correctly, if a frame has the right x and y coordinates but in a world of different screen sizes writing these tests can be quite challenging as well. In the end you will always need to look on your screen again and again trying to spot any issues. GoldenEye takes a different approach. It does not need to run on your development computer, you don't need a Mac for running tests on iOS devices and you can have real touches on your controls. This is archived by using openCV and it's python bindings, Pythons's unittest module and the Tapsterbot, an OpenSource delta robot made with 3D printing and an Arduino controller. To write a test you just take some screenshots on your device, cut out the icons you need to tap or inspect and write a very simple unit test using a high-level API that takes away the hard parts. WARNING: This talk features a real robot. In case of machine world-domination: RUN!	28	Science & Technology	PT38M43S	2323	2d	sd	false			68	0	0	0	0
959	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	72Y8BaNjEC4	2014-09-13T18:38:58Z	2014-09-13 18:38:58	Roberto Polli - Statistics 101 for System Administrators	Roberto Polli - Statistics 101 for System Administrators [EuroPython 2014] [22 July 2014] Python allows every sysadmin to run (and learn) basic statistics on system data, replacing sed, awk, bc and gnuplot with an unique, reusable and interactive framework. The talk is a case study where python allowed us to highlight some network performance points in minutes using itertools, scipy and matplotlib. The presentation includes code snippets and a brief plot discussion. ----- #Statistics 101 for System Administrators ## Agenda * A latency issue * Data distribution * 30 seconds correlation with pearsonr * Combinating data * Plotting and the power of color ## An use case - Network latency issues - Correlate latency with other events ## First statistics - we created our parsing library - [using various recipes](http://chimera.labs.oreilly.com/books/1230000000393/ch06.html) - Having the data in a dict like &gt; table = { &gt; 'time': [ 1,2,3, ..], &gt; 'elapsed': [ 0.12, 12.43, ..], &gt; 'error': [ 2, 0, ..], &gt; 'size': [123,3223, ..], &gt; 'peers': [2313, 2303, ..], - It's easy to get max, min and standard deviation &gt; print [k, max(v), min(v), stats.mean(v) ] for k,v in table.items() ] ## Distribution - A distribution shows event frequency &gt; from matplotlib import pyplot &gt; pyplot.hist(table['elapsed']) - Time and Size distributions ## (Linear) Correlation - What's correlation - What's not correlation - pearsonr and probability - catch for linear correlation &gt; from scipy.stats.stats import pearsonr &gt; a, b = range(0,10), range(0,20, 2) &gt; c = [randint(0,10) for x in a] &gt; pearsonr(a, b), pearsonr(a,c) &gt; (1.0, 0.0), (0.43, 0.2) ## Combinations - using itertools.combinations - netfishing correlation &gt;from itertools import combination &gt;for f1, f2 in combinations(table, 2): &gt; r, p_value = pearsonr(table[f1], table[f2]) &gt; print("the correlation between %s and %s is: %s" % (f1, f2, r)) &gt; print("the probability of a given distribution (see manual) is: %s" % p_value) ## Plot always - pearsonr finds *only* linear correlation - our eyes work better :P - so...plot always! - color is the 3d dimension of a plot! &gt; from pyplot import scatter, title, xlabel, ylabel, legend &gt; from pyplot import savefig, close as closefig &gt; &gt; for f1, f2 in combinations(table, 2): &gt; scatter(table[f1], table[2], label="%s_%s" % (f1,f2)) &gt; # add legend and other labels &gt; r, p = pearsonr(table[f1], table[f2]) &gt; title("Correlation: %s v %s, %s" % (f1, f2, r)) &gt; xlabel(f1), ylabel(f2) &gt; legend(loc='upper left') # show the legend in a suitable corner &gt; savefig(f1 + "_" + f2 + ".png") &gt; closefig() ## Wrap Up! - do not use pearsonr to *exclude* relation between events - plots may serve better - scatter plot can show a system thruput and exclude correlation between fields A and fields B - continue collecting results	28	Science & Technology	PT29M44S	1784	2d	sd	false			199	2	0	0	0
960	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	x78LukPdwiM	2014-09-13T18:38:58Z	2014-09-13 18:38:58	Julie Pichon - I want to help! How to make your first contribution to open-source.	Julie Pichon - I want to help! How to make your first contribution to open-source. [EuroPython 2014] [23 July 2014] Do you like open-source? Would you like to give back somehow but are not sure what to do or where to start? Together we will look at the usual workflow for making any kind of contribution, using a real patch as an example. ----- This talk aims to show at a high-level what is the process for contributing to most open-source projects. We will go from discovering a project to how to find the contributor guidelines, prepare your contribution for submission and what happens next. The general principles will be illustrated with an example from the speaker's first contribution to OpenStack. The target audience for the talk is people who have never contributed to open-source, though they would like to. Although the example will be a code contribution, the process as described applies to all kinds of contributions.	28	Science & Technology	PT19M14S	1154	2d	sd	false			277	6	0	0	2
961	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DXmblsdcsHw	2014-09-13T18:38:57Z	2014-09-13 18:38:57	Stefan Behnel - The Cython Compiler for Python	Stefan Behnel - The Cython Compiler for Python [EuroPython 2014] [22 July 2014] The Cython compiler is the most widely used static compiler for Python. It is used to speed up Python code and to extend CPython with fast native extension modules that process huge amounts of data all around the world. This talk by one of the core developers gives an intro to using the compiler and an overview of its major features. ----- The Cython compiler is the most widely used static compiler for Python. The code it generates is used in countless critical applications that process huge amounts of data world wide. Cython has two major use cases: to compile Python code into fast native extension modules, and to connect native code to the CPython runtime. The main goal of the Cython project is to make it easy for users to manually optimise their Python code to make it run at C speed. This talk by one of the core developers will give an intro to using the compiler and an overview of its major features. Outline will be more or less as follows: * Cython: intro to the project and the compiler (4 min.) * compiling Python code - how to do it and what you get (3 min.) - a tiny bit of distutils (2 min.) * static typing and Cython extensions to the Python language - static typing in Cython language syntax (3 min.) - static typing in pure Python syntax (2 min.) - why Cython's type system is cool and what users need to know about it (8 min.) - Cython for optimising Python code (5 min.) * quick intro: talking to native C/C++ code in Cython - using external C APIs (4 min.) - using external C++ APIs (3 min.) - how to build and link in distutils (2 min.) - notes on ways to wrap large C-APIs (1 min.) * quick overview: special features for high-performance code - NumPy integration and memory views, fused types, parallel loops in all brevity (3 min.)	28	Science & Technology	PT48M1S	2881	2d	sd	false			707	4	0	0	0
962	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FlnDcOCLS1I	2014-09-13T18:38:57Z	2014-09-13 18:38:57	Hynek - The Sorry State of SSL	Hynek - The Sorry State of SSL [EuroPython 2014] [22 July 2014] Those web pages with shiny lock icons boasting that your data is safe because of “256 bit encryption”? They are lying. In times of mass surveillance and commercialized Internet crime you should know why that’s the case. This talk will give you an overview that will help you to assess your personal security more realistically and to make your applications as secure as possible against all odds. ----- The rule of thumb for people without degrees in cryptography on securing data on the Internet is “GPG for data at rest. TLS for data in motion”. And it’s actually a very good rule everyone should follow. The only kicker though is that configuring (and using!) TLS properly is not as simple as it sounds and if you’re not diligent as a user, developer, and ops engineer, you can easily compromise your data’s security despite best effort of everyone else. This talk will be multifaceted; you will learn: - how SSL and TLS roughly work and why their state is sorry, - server- and client-side duties for best possible security, - what alternatives you have for using TLS in Python, - things to keep in mind when configuring servers, - and what perils outside your control still can trip you up. In other words, the leitmotif is to show you the most common traps you should know about when using and deploying applications relying on TLS for transport layer security and how to avoid them.	28	Science & Technology	PT44M56S	2696	2d	sd	false			201	4	0	0	0
963	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TelloGqOEU4	2014-09-13T18:38:57Z	2014-09-13 18:38:57	Katarzyna Jachim - Python in system testing	Katarzyna Jachim - Python in system testing [EuroPython 2014] [23 July 2014] When you think about Python+testing, you usually think about testing your code - unittests, mostly. But it is not the only case! When you have a big system, you need to test it on much higher level - if only to check if all the components are wired in the right way. You may do it manually, but it is tedious and time-consuming - so you want to automate it. And here comes Python - the language of choice in many QA departments. ----- When you think about Python+testing, you usually think about testing your code - unittests, mostly. But it is not the only case! When you have a big system, you need to test it on much higher level - if only to check if all the components are wired in the right way. You may do it manually, but it is tedious and time-consuming - so you want to automate it. And here comes Python - the language of choice in many QA departments. I will tell about differences between unittesting and system testing which result in totally different requirements on test management/running systems. I will tell how we use Python (and a little why) to automate our work. Finally, I will tell a little about my "idee fixe" - a framework for system testing written in Python.	28	Science & Technology	PT23M9S	1389	2d	sd	false			117	0	0	0	0
964	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YIhGbFW985c	2014-09-13T18:38:57Z	2014-09-13 18:38:57	Dmitry Trofimov - Python Debugger Uncovered	Dmitry Trofimov - Python Debugger Uncovered [EuroPython 2014] [24 July 2014] This talk will explain how to implement a debugger for Python. We'll start with setting a simple trace function, then look how it is implemented in modern IDEs like PyCharm and Pydev. Then we go further in the details and uncover the tricks used to implement some cool features like exception handling and multiprocess debugging. ----- Presentation describes how to implement debugger for Python and has 4 parts: * Tracing Python code Explains how to use trace function * Debugger Architecture Explains which parts consists of a modern full-fledged debugger. * A Bit of Details Explains how to make code to work for all python versions and implementations, survive gevent monkey-patching etc. * Cool Features Explains how to implement exception handling and multiprocess debugging	28	Science & Technology	PT31M11S	1871	2d	sd	false			258	2	1	0	0
965	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	c0s9gqvnKog	2014-09-13T18:38:57Z	2014-09-13 18:38:57	Andreas Klostermann - Brain Waves for Hackers	Andreas Klostermann - Brain Waves for Hackers [EuroPython 2014] [22 July 2014] Using the Neurosky Mindwave headset we can read brain waves via bluetooth. In this talk I will present ways to interface with this device and to analyze their data, mostly from the perspective of a Python hacker, and not so much from the perspective of academic research or the development of production-ready software. I will convey the basic scientific and technical background, keeping in mind the non-medical audience, and touch on several practical applications, especially Neurofeedback and its use for personal mental training and potential therapeutic uses. The Audience can expect to walk away with a basic knowledge of EEG analysis, Neurofeedback and how to start experimenting with these devices on their own. ----- A new class of cheap consumer EEG devices allows ordinary hackers and even high school students a glimpse into the human brain. This talk will present how to use the "Neurosky Mindwave" headset with python software, and lay out the basic scientific and technical background. The Mindwave Mobile is a device that can be easily talked to using bluetooth, and it talks a binary protocol which is specifically designed to be useful without much computing power in the receiving device or advanced knowledge of signal processing. In fact, an Arduino with a few lines of code is perfectly capable of parsing some of the byte stream and reacting to the mental state of the user, while fully-featured python software can do advanced analysis using PyEEG and Pandas. The same hardware module and protocol is used in the Nekomimi headset (mind-controlled cat ears for cosplay) and some Boardgames (MindFlex). A python library for interfacing with the headset is presented and will be demonstrated on stage. Mostly kivy applications will be used. Also I will present some data analysis you can perform with pandas and scipy. Neurofeedback is a type of mental exercise where a computer uses the EEG data to direct the user towards certain mental states. In the easiest configuration a program would display a bar with the "concentration" level, and the user would learn how to tilt this bar upwards. In more complicated setups a game could react favorably towards states like relaxation or concentration. Using Gamification, Neurofeedback can provide a more engaging experience for children or adults, than other techniques with similar goals, like mindfulness meditation, and the more immediate feedback should enhance the effectiveness of mental training, though that has not been investigated scientifically yet. Neurofeedback has been shown to be effective (albeit not recommended as sole treatment) in Patients with Attention Deficit Hyperactivity Disorder (ADHD), Epilepsy and Dementia. Some background about these conditions and applications of Neurofeedback to them will be given. The first use of Neurofeedback was done in Cats, during early experiments with EEG electrodes in the 60ies. Cats where conditioned to exhibit certain wave patterns, and later, due to a coincidence, the researchers noticed that the conditioned cats where more resistant to epilepsy-inducing medications. The effect has since been reproduced in humans, in cases where medications did not work sufficiently. Ample hints on not to treat any of this information as medical advice will be provided. The goal of this talk is to promote Neurofeedback as a useful mental training and to encourage development of applications around Neurofeedback and the analysis of EEG data, from the perspective of a python hacker. I gave a similar talk at PyConDe 2013 in Cologne. The new talk will be in English, show some improvements on the software, and more advanced demonstrations.	28	Science & Technology	PT33M36S	2016	2d	sd	false			700	13	0	0	1
966	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	e4SK_g5r6ig	2014-09-13T18:38:57Z	2014-09-13 18:38:57	Deni Bertovic - Supercharge your development environment using Docker	Deni Bertovic - Supercharge your development environment using Docker [EuroPython 2014] [23 July 2014] These days applications are getting more and more complex. It's becoming quite difficult to keep track of all the different components an application needs to function (a database, an AMQP, a web server, a document store...). It keeps getting harder and harder to setup new development environments and to bring new developers into the team. Stuff works on one dev machine but doesn't on others? Code breaks often when deployed to production even though all tests were passing and it worked on the dev machine? The idea of this talk is to convey how important it is that we have our development environment as close to production as possible. That means setting up all those various services on your laptop/workstation. ----- In this talk I am going to show how to utilize light weight lxc containers using docker, and make your development process much more straightforward. How to share container images among your development team and be sure that everyone is running the exact same stack. Do all this without hogging too many resources, without the need for complex provisioning scripts and management systems. And above all else, how to do it fast! Rough Guidelines: 1. Describe what is LXC (Linux containers) 2. Benefits of using containers instead of traditional VM's 2. Explain where Docker comes in 3. Show how to build simple containers using Dockefile syntax 4. What are container images and how to share them 5. How to share private container images 6. Tips and tricks on how to automate	28	Science & Technology	PT22M36S	1356	2d	sd	false			156	1	0	0	0
967	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ffdsIcD2Yps	2014-09-13T18:38:57Z	2014-09-13 18:38:57	Michael König - Embedding Python: Charming the Snake with C++	Michael König - Embedding Python: Charming the Snake with C++ [EuroPython 2014] [23 July 2014] At the example of our in-house distributed scheduling system, we discuss the challenges of embedding the Python interpreter in a C++ program. Besides the actual integration of the interpreter, efficient data exchange between both languages is discussed. In addition, this presentation demonstrates how higher-level abstractions further diminish the language barrier. ----- Python with its huge standard library and sophisticated packages developed by its thriving community has become an incredibly useful tool for data scientists. At Blue Yonder, we value Python for the ease with which we can access and combine machine learning algorithms to build accurate prediction models. To get the most business value out of the use of Python, we strive to rid our model developers from all burdens outside their core expertise, i.e., developing statistical models. To leverage our existing infrastructure, essentially a distributed scheduling system written in C++, we decided to embed a Python interpreter in our application. The goal was to let developers use the language best suited for their problem, and to let them incorporate code created by others even if it is not written in the same language. In this presentation, I will talk about a few obstacles which we had to overcome in integrating the (C)Python interpreter in our C++ program, e.g., clean resource management, error handling, and broken features in the interpreter's API. I will show how we employed features from the [Boost Python C++ library](http://www.boost.org/doc/libs/1_55_0/libs/python/) not only for simple data exchange, but also for more powerful concepts such as data sources. Finally, I will demonstrate how C++ objects can be used to seamlessly interact with Python, for example to use Python's logging package as usual while the actual logging is handled by our C++ application. With this combination of both worlds, we achieved a desirable mix of virtues: safe, reliable operations; good run-time performance; fast development; and highly expressive, unit testable core domain logic.	28	Science & Technology	PT28M6S	1686	2d	sd	false			678	4	0	0	0
968	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	m5lSRZGQljk	2014-09-13T18:38:57Z	2014-09-13 18:38:57	Tomasz Paczkowski - Fun with cPython memory allocator	Tomasz Paczkowski - Fun with cPython memory allocator [EuroPython 2014] [25 July 2014] Working with Python does not usually involve debugging memory problems: the interpreter takes care of allocating and releasing system memory and you get to enjoy working on real world issues. But what if you encounter such problems? What if your program never releases memory? How do you debug it? This talk describes some of the lesser known properties of cPython memory allocator and some ways to debug memory-related problems, all this based on real events. ----- Working with Python does not usually involve debugging memory problems: the interpreter takes care of allocating and releasing system memory and you get to enjoy working on real problems. But what if you encounter such problems? What if your program never releases memory? How do you debug it? I will tell a story of one programmer discovering such problems. The talk will take listeners on a journey of issues they can encounter, tools they can use to debug the problems and possible solutions to seek out. There will also be a brief mention of general memory management principles. cPython uses a combination of its own allocator, `malloc`, and `mmap` pools to manage memory of Python programs. It usually is smart enough, but there are some darker corners that are not well known by an average Joe Programmer (read: me). There are tools that can help debug memory problems, but those are also relatively unknown, and tend to have documentation that one might find lacking. I will describe one such tool, called `guppy`, which I have found particulary helpful.	28	Science & Technology	PT28M35S	1715	2d	sd	false			110	2	0	0	0
969	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sM1TX3arQTA	2014-09-13T18:38:57Z	2014-09-13 18:38:57	Nicola Iarocci - Eve - REST APIs for Humans™	Nicola Iarocci - Eve - REST APIs for Humans™ [EuroPython 2014] [24 July 2014] Powered by Flask, Redis, MongoDB and good intentions the Eve REST API framework allows to effortlessly build and deploy highly customizable, fully featured RESTful Web Services. The talk will introduce the project and its community, recount why and how it's being developed, and show the road ahead. ----- Nowadays everyone has data stored somewhere and needs to expose it through a Web API, possibly a RESTful one. [Eve](http://python-eve.org) is the BSD-licensed, Flask-powered RESTful application and framework that allows to effortlessly build and deploy highly customizable, fully freatured RESTful Web Services. Eve features a robust, feature rich, REST-centered API implementation. MongoDB support comes out of the box and community-driven efforts to deliver ElasticSearch and SQLAlchemy data layers are ongoing. Eve approach is such that you only need to configure your API settings and behaviour, plug in your datasource, and you’re good to go. Features such as Pagination, Sorting, Conditional Requests, Concurrency Control, Validation, HATEOAS, JSON and XML rendering, Projections, Customisable Endpoints, Rate Limiting are all included. Advanced features such as custom Authentication and Authorisation, Custom Validation, Embedded Resource Serialisation are also easily available. In my talk I will introduce the project and its community, recount why and how it's being developed, show the source code, illustrate key concepts and show the road ahead.	28	Science & Technology	PT30M44S	1844	2d	sd	false			249	6	0	0	0
970	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	swJD7PbWCZw	2014-09-13T18:38:57Z	2014-09-13 18:38:57	Lynn Root - For lack of a better name(server): DNS Explained	Lynn Root - For lack of a better name(server): DNS Explained [EuroPython 2014] [23 July 2014] You've deployed! But your friends can't see it - what's wrong? I'm betting DNS. Maybe you've fixed a couple of entries, point some records to hostnames, waited patiently for new domains to resolve only to notice your nameservers are incorrect. But what actually goes on with DNS? Come to this talk to find out how DNS works, and how to interact and create a DNS with Python. ----- Following instructions of what entries to create where is easy enough when using a PaaS. But DNS is hard – deployment issues always seem to come down to DNS. A solid understanding of DNS will not only help with deploying your applications, but will also give a greater understanding of how the internet works, and more generally, distributed systems. In this talk, you will learn what DNS is, how it works and how to communicate with it, and how Python can make both interacting and spinning up your own DNS server simple (I swear!). Outline: * Intro (1-2m) * What DNS is (5 min) * URL -&gt; IP addr, e.g. "phonebook" lookup (obligatory pun: Call me, Maybe?) * hierarchical system & resolution sequence (local DNS cache/resolver, ISP resolver, recursive DNS search) * popular types (primary, secondary/slave, forwarding, authoritative only, etc) * System components: what makes a DNS? * How to communicate with DNS (3 min) * Protocol: UDP * Operations: CRUD * Resource records (A, AAAA, CNAME, SOA, SRV, etc) * tools: dig/nsupdate/nslookup * Security overview (3min) (disclaimer: NOT a DNS security expert, not planning to get into the details here) * Server-Server, DynDNS: TSIG/GSS-TSIG * Server-Client: DNSSEC * Python + DNS (10 min) * plain UDP query in Python (no 3rd-party libraries/no magic) * Interacting with a DNS w/ Python (dnspython.py) * Sample DNS server with Twisted * "fake" demo (either local or pre-recorded screen cast) of querying/updating/etc of the Twisted DNS * Wrap up - resources page, github links, etc (1min) * Q&A - ~5 min	28	Science & Technology	PT24M53S	1493	2d	sd	false			648	4	0	0	1
971	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0PlpU8sMm80	2014-09-13T18:38:56Z	2014-09-13 18:38:56	Alexey Malashkevich - How Pony ORM translates Python generators to SQL queries	Alexey Malashkevich - How Pony ORM translates Python generators to SQL queries [EuroPython 2014] [24 July 2014] Pony ORM is an Object-Relational Mapper implemented in Python. It uses an unusual approach for writing database queries using Python generators. Pony analyzes the abstract syntax tree of a generator and translates it to its SQL equivalent. The translation process consists of several non-trivial stages. In this talk one of Pony ORM authors will reveal the internal details of this process. ----- [Pony ORM](http://ponyorm.com) is an object-relational mapper implemented in Python. It allows writing advanced queries to a database using plain Python in the form of a generator expression. This way queries look very concise. The main feature of Pony is to provide a method to write declarative queries to databases in pure Python using generators. For this purpose Pony analyzes the abstract syntax tree of a generator and translates it to its SQL equivalent. Following is a sample of a query in Pony: select(p for p in Product if "iPad" in p.name and p.price &gt;= 500) This query translates to SQL using a specific database dialect. Currently Pony works with SQLite, MySQL, PostgreSQL and Oracle databases. In this talk one of Pony ORM authors will go through the process of the query translation and dig into the implementation details. Attendees are going to walk away with the understanding of: 1. Principles of building a programming language translator 2. Python to SQL translator implementation details 3. Approaches for creating a pluggable translator architecture The presentation outline: - Why Python generators are good for representing SQL queries - Main stages of Python to SQL translation overview - Decompiling Python bytecode into Python AST - Translating Python AST to database-independent SQL representation - Generating SQL for specific database - Pluggable translator architecture - Performance concerns: is such way of building SQL slower or faster then Django's and SQLAlchemy's?	28	Science & Technology	PT44M54S	2694	2d	sd	false			530	6	0	0	0
972	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1TXjQrS7p3o	2014-09-13T18:38:56Z	2014-09-13 18:38:56	Mauri - VPython goes to School	Mauri - VPython goes to School [EuroPython 2014] [22 July 2014] Using VPython in high school is an interesting way to introduce students to get in touch with computer programming concepts and to link computer science with other disciplines like Math, Geometry, Physics, Chemistry ----- My presentation is focused mainly on my teaching experience in a high school using VPython. I've posed some problems to my students to solve with VPython: from basic static building representations like castle to more complex dynamic models like bouncing balls. This approach seems a good way to get in touch with computer programming concepts and to link computer science with other disciplines like Math, Geometry, Physics, Chemistry	28	Science & Technology	PT25M17S	1517	2d	sd	false			49	1	0	0	0
973	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4ldJAZRsFv8	2014-09-13T18:38:56Z	2014-09-13 18:38:56	Chesnay Schepler - Big Data Analytics with Python using Stratosphere	Chesnay Schepler - Big Data Analytics with Python using Stratosphere [EuroPython 2014] [25 July 2014] Stratosphere is a distributed platform for advanced big data analytics. It features a rich set of operators, advanced, iterative data flows, an efficient runtime, and automatic program optimization. We present Stratophere's new Python programming interface. It allows Python developers to easily get their hands on Big Data. ----- [Stratosphere](http://stratosphere.eu/) is implemented in Java. In 2013 we introduced support for writing Stratosphere programs in Scala. Since Scala also runs in the Java JVM the language integration was easy for Scala. In late 2013, we started to develop a generic language binding framework for Stratosphere to support non-JVM languages such as Python, JavaScript, Ruby but also compiled languages such as C++. The language binding framework uses [Google’s Protocol Buffers](https://code.google.com/p/protobuf/) for efficient data serialization and transportation between the languages. Since many “Data Scientists” and machine learning experts are using Python on a daily basis, we decided to use Python as the reference implementation for Stratosphere’s language binding feature. Our talk at the EuroPython 2014 will present how Python developers can leverage the Stratosphere Platform to solve their big data problems. We introduce the most important concepts of Stratosphere such as the operators, connectors to data sources, data flows, the compiler, iterative algorithms and more. Stratosphere is a mature, next generation big-data analytics platform developed by a vibrant [open-source community](https://github.com/stratosphere/stratosphere). The system is available under the Apache 2.0 license. The project started in 2009 as a joint research project of multiple universities in the Berlin area (Technische Universität, Humboldt Universität and Hasso-Plattner Institut). Nowadays it is an award winning system that has gained worldwide attention in both research and industry. A note to the program committee: As mentioned, the development of the Python language binding of Stratosphere has started a few months ago, therefore, the code is not yet in the main development branch. However, we are already able to execute the “Hello World” of big data, the “Word Count” example using the Python interface. See this example in the development branch: https://github.com/filiphaase/stratosphere/blob/langbinding/stratosphere-addons/stratosphere-language-binding/src/main/python/eu/stratosphere/language/binding/wordcountexample/WordCountPlan.py Please contact us if you have any questions!	28	Science & Technology	PT20M26S	1226	2d	sd	false			154	1	0	0	0
974	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7TyrJlbRLNY	2014-09-13T18:38:56Z	2014-09-13 18:38:56	Martijn Faassen - Morepath: a Python Web Framework with Super Powers	Martijn Faassen - Morepath: a Python Web Framework with Super Powers [EuroPython 2014] [24 July 2014] Morepath is a server web framework written with modern, rich client web development in mind. Why another new Python web framework in 2014? Because it can be done better: Morepath understands how to construct hyperlinks from models. Writing a generic view in Morepath is like writing any other view. With Morepath, you can reuse, extend and override apps as easily as you can construct them. Even if you don't end up using Morepath, you will learn something about how the nature of web frameworks. ----- [Morepath](http://morepath.readthedocs.org) is a new server web framework written with modern, rich client web development in mind. In the talk I will be discussing some core features of Morepath that make it different: * Its different take on routing and linking. Morepath has support to help you construct hyperlinks to models. * Its view system: plain views, generic views, view composition. * Morepath's approach to application construction allows application extension and overriding, and composition. This talk will attempt to convince people to try Morepath. For those unable or unwilling to try, I will communicate some design principles behind Morepath which can be of help to any web developer.	28	Science & Technology	PT27M45S	1665	2d	sd	false			96	2	0	0	0
975	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	U8EgvTTIWeE	2014-09-13T18:38:56Z	2014-09-13 18:38:56	Julian Berman - Design Your Tests	Julian Berman - Design Your Tests [EuroPython 2014] [23 July 2014] While getting started testing often provides noticeable immediate improvement for any developer, it's often not until the realization that tests are things that need design to provide maximal benefit that developers begin to appreciate or even enjoy them. We'll investigate how building shallow, transparent layers for your tests makes for better failures, clearer tests, and quicker diagnoses. ----- * Life span of a test * 5 minute - why does this fail? * 5 day - what is this missing? * 5 week - do I have coverage for this? * 5 month - what's *not* causing this bug? * Transparent simplicity * one or two "iceberg" layers for meaning * Higher-order assertions - build collections of state that have meaning for the domain in the tests * bulk of the details are in the code itself * show an example * grouping for organization * Mixins * show an example * unittest issues * assertion/mixin clutter * setUp/tearDown tie grouping to the class layer or to inheritance via super * addCleanup * weak association / lookup-ability between code and its tests * package layout * other conventions * Alternative approaches * testtools' matchers * py.test `assert` magic	28	Science & Technology	PT25M32S	1532	2d	sd	false			131	1	0	0	0
976	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XoZDdwz43uQ	2014-09-13T18:38:56Z	2014-09-13 18:38:56	Honza Král - Lessons learned from building Elasticsearch client	Honza Král - Lessons learned from building Elasticsearch client [EuroPython 2014] [24 July 2014] Lessons learned when building a client for a fully distributed system and trying to minimize context-switching pains when using multiple languages. ----- Last year we decided to create official clients for the most popular languages, Python included. Some of the goals were: * support the complete API of elasticsearch including all parameters * provide a 1-to-1 mapping to the rest API to avoid having opinions and provide a familiar interface to our users consistent across languages and evironments * degrade gracefully when the es cluster is changing (nodes dropping out or being added) * flexibility - allow users to customize and extend the clients easily to suit their, potentially unique, environment In this talk I would like to take you through the process of designing said client, the challenges we faced and the solutions we picked. Amongst other things I will touch on the difference between languages (and their respective communities), the architecture of the client itself, mapping out the API and making sure it stays up to date and integrating with existing tools.	28	Science & Technology	PT24M40S	1480	2d	sd	false			139	0	0	0	0
977	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iGtJwD0l4ps	2014-09-13T18:38:56Z	2014-09-13 18:38:56	ykaplan - Marconi - OpenStack Queuing and Notification Service	ykaplan - Marconi - OpenStack Queuing and Notification Service [EuroPython 2014] [22 July 2014] Marconi is a multi-tenant cloud queuing system written in Python as part of the OpenStack project. Marconi aims to ease the design of distributed systems and allow for asynchronous work distribution without creating yet another message broker. This talk aims to give the audience a broad look at Marconi’s design and technologies used. ----- Similar to other message bus frameworks, Marconi's main goals are: performance, availability, durability, fault-tolerance and scalability. Besides providing support for queuing and notification services through OpenStack, Marconi aims to ease the design of distributed systems and allow for asynchronous work distribution without creating yet another message broker. This talk aims to give the audience a broad look at Marconi’s architecture, design, technologies used, development process, and discuss the issues it adresses.	28	Science & Technology	PT24M36S	1476	2d	sd	false			37	0	0	0	0
978	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iruHbfrI1IA	2014-09-13T18:38:56Z	2014-09-13 18:38:56	Erik van Zijst - The inner guts of Bitbucket	Erik van Zijst - The inner guts of Bitbucket [EuroPython 2014] [24 July 2014] Today Bitbucket is more than 30 times bigger than at the time of acquisition almost 4 years ago and serves repositories to over a million developers. This talk lays out its current architecture in great detail, from Gunicorn and Django to Celery and HA-Proxy to NFS. ----- This talk is about Bitbucket's architecture. Leaving no stone unturned, I'll be covering the entire infrastructure. Every component, from web servers to message brokers and load balancing to managing hundreds of terabytes of data. Since its inception in 2008, Bitbucket has grown from a standard, modest Django app into a large, complex stack that while still based around Django, has expanded into many more components. Today Bitbucket is more than 30 times bigger than at the time of acquisition almost 4 years ago and serves Git and Mercurial repos to over a million users and growing faster now than ever before. Our current architecture and infrastructure was shaped by rapid growth and has resulted in a large, mostly horizontally scalable system. What has not changed is that it's still nearly all Python based and could serve as inspiration or validation for other community members responsible for rapidly scaling their apps. This talk will layout the entire architecture and motivate our technology choices. From our Gunicorn to Celery and HA-Proxy to NFS.	28	Science & Technology	PT28M49S	1729	2d	sd	false			263	9	0	0	0
979	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tKXpMVQIH2Y	2014-09-13T18:38:56Z	2014-09-13 18:38:56	juliass - Multiplatform binary packaging and distribution of your client apps	juliass - Multiplatform binary packaging and distribution of your client apps [EuroPython 2014] [24 July 2014] Distributing your python app to clients it’s a common task that can become hard when “stand alone” and “obfuscated code” come as requirements. Common answers in forums are on the lines of “Python is not the language you’re looking for” or “What are you trying to hide?” but another answer is possible.	28	Science & Technology	PT20M19S	1219	2d	sd	false			81	0	0	0	0
980	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tqkcXyhMmOE	2014-09-13T18:38:56Z	2014-09-13 18:38:56	Flavio Percoco - Systems Integration: The OpenStack success story	Flavio Percoco - Systems Integration: The OpenStack success story [EuroPython 2014] [23 July 2014] OpenStack is a huge, open-source cloud provider. One of the main tenets of OpenStack is the (Shared Nothing Architecture) to which all modules stick very closely. In order to do that, services within OpenStack have adopted different strategies to integrate themselves and share data without sacrificing performance nor moving away from SNA. This strategies are not applicable just to OpenStack but to any distributed system. Sharing data, regardless what that data is, is a must-have requirement of any successful cloud service. This talk will present some of the existing integration strategies that are applicable to cloud infrastructures and enterprise services. The talk will be based on the strategies that have helped OpenStack to be successful and most importantly, scalable. ----- Abstract ======= OpenStack is a huge, open-source cloud provider. One of the main tenets of OpenStack is the (Shared Nothing Architecture) to which all modules stick very closely. In order to do that, services within OpenStack have adopted different strategies to integrate themselves and share data without sacrificing performance nor moving away from SNA. This strategies are not applicable just to OpenStack but to any distributed system. Sharing data, regardless what that data is, is a must-have requirement of any successful cloud service. This talk will present some of the existing integration strategies that are applicable to cloud infrastructures and enterprise services. The talk will be based on the strategies that have helped OpenStack to be successful and most importantly, scalable. Details ====== Along the lines of what I've described in the abstract, the presentation will walk the audience through the state of the art of existing system integration solutions, the ones that have been adopted by OpenStack and the benefits of those solutions. At the end of the talk, a set of solutions under development, ideas and improvements to the existing ones will be presented. The presentation is oriented to distributed services, fault-tolerance and replica determinism. It's based on a software completely written in python and running successfully on several production environments. The presentation will be split in 3 main topics: Distributed System integration ----------------------------------- * What's it ? * Why is it essential for cloud infrastructures? * Existing methods and strategies OpenStack success story ---------------------------- * Which methods did OpenStack adopt? * How / Why do they work? * What else could be done? Coming Next --------------- * Some issues of existing solutions * What are we doing to improve that? * Other solutions coming up	28	Science & Technology	PT40M	2400	2d	sd	false			68	0	0	0	0
981	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7P6fl8uNsQM	2014-09-13T18:38:55Z	2014-09-13 18:38:55	Jair Trejo - Non Sequitur: An exploration of Python's random module	Jair Trejo - Non Sequitur: An exploration of Python's random module [EuroPython 2014] [24 July 2014] An exploration of Python's random module for the curious programmer, this talk will give a little background in statistics and pseudorandom number generation, explain the properties of python's choice of pseudorandom generator and explore through visualizations the different distributions provided by the module. ----- # Audience Non mathematical people who wants a better understanding of Python's random module. # Objectives The audience will understand pseudorandom number generators, the properties of Python's Mersenne Twister and the differences and possible use cases between the distributions provided by the `random` module. # The talk I will start by talking about what randomness means and then about how we try to achieve it in computing through pseudorandom number generators (5 min.) I will give a brief overview of pseudorandom number generation techniques, show how their quality can be assessed and finally talk about Python's Mersenne Twister and why it is a fairly good choice. (10 min.) Finally I will talk about how from randomness we can build generators with interesting probability distributions. I'll compare through visualizations thos provided in Python's `random` module and show examples of when they can be useful in real-life. (10 min.)	28	Science & Technology	PT29M13S	1753	2d	sd	false			57	0	0	0	0
982	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	O6WAOYwTCFY	2014-09-13T18:38:55Z	2014-09-13 18:38:55	Fredrik Håård - Jython in practice	Fredrik Håård - Jython in practice [EuroPython 2014] [24 July 2014] A lot of people have heard of Jython, some have tried it, but it seems few have actually deployed it in a corporate environment. In this talk I'll share my experiences in using Jython as a testbed for Java applications, for rapid prototyping in Java desktop and web environments, and for embedding scripting capabilities in Java products. ----- Not everyone gets paid to work with Python all the time, but if you find yourself in a Java project, there are good chances you could benefit from Python without throwing out the Java stack. Using Jython, you can do rapid prototyping without the long edit-compile-test cycles normally associated with large Java projects, whether on the web or the desktop, and when testing an application might become a nightmare of scaffolding in Java, a little Jython may be just what you need to be able to run your tests smoothly. At the end of this talk, I will put on my politician´s hat and bring up the best - and worst - arguments to use to get permission to use Jython in a corporate environment.	28	Science & Technology	PT25M50S	1550	2d	sd	false			73	1	0	0	0
983	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WWQbatJ41Kc	2014-09-13T18:38:55Z	2014-09-13 18:38:55	M.Yasoob Khalid - Web Scraping in Python 101	M.Yasoob Khalid - Web Scraping in Python 101 [EuroPython 2014] [22 July 2014] This talk is about web scraping in Python, why web scraping is useful and what Python libraries are available to help you. I will also look into proprietary alternatives and will discuss how they work and why they are not useful. I will show you different libraries used in web scraping and some example code so that you can choose your own personal favourite. I will also tell why writing your own scrapper in scrapy allows you to have more control over the scraping process. ----- Who am I ? ========= * a programmer * a high school student * a blogger * Pythonista * and tea lover - Creator of freepythontips.wordpress.com - I made soundcloud-dl.appspot.com - I am a main contributor of youtube-dl. - I teach programming at my school to my friends. - It's my first programming related conference. - The life of a python programmer in Pakistan What this talk is about ? ================== - What is Web Scraping and its usefulness - Which libraries are available for the job - Open Source vs proprietary alternatives - Whaich library is best for which job - When and when not to use Scrapy What is Web Scraping ? ================== Web scraping (web harvesting or web data extraction) is a computer software technique of extracting information from websites. - Wikipedia ###In simple words : It is a method to extract data from a website that does not have an API or we want to extract a LOT of data which we can not do through an API due to rate limiting. We can extract any data through web scraping which we can see while browsing the web. Usage of web scraping in real life. ============================ - to extract product information - to extract job postings and internships - extract offers and discounts from deal-of-the-day websites - Crawl forums and social websites - Extract data to make a search engine - Gathering weather data etc Advantages of Web scraping over using an API ======================== - Web Scraping is not rate limited - Anonymously access the website and gather data - Some websites do not have an API - Some data is not accessible through an API etc Which libraries are available for the job ? ================================ There are numerous libraries available for web scraping in python. Each library has its own weaknesses and plus points. Some of the most widely known libraries used for web scraping are: - BeautifulSoup - html5lib - lxml - re ( not really for web scraping, I will explain later ) - scrapy ( a complete framework ) A comparison between these libraries ============================== - speed - ease of use - what do i prefer - which library is best for which purpose Proprietary alternatives ================== - a list of proprietary scrapers - their price - are they really useful for you ? Working of proprietary alternatives =========================== - how they work (render javascript) - why they are not suitable for you - how custom scrapers beat proprietary alternatives Scrapy ======= - what is it - why is it useful - asynchronous support - an example scraper Question ======= - Questions from the viewers	28	Science & Technology	PT20M18S	1218	2d	sd	false			574	3	0	0	1
984	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YELZFKIDGEE	2014-09-13T18:38:55Z	2014-09-13 18:38:55	Piotr Przymus - Everything You Always Wanted to Know About Memory in Python But Were Afraid to Ask	Piotr Przymus - Everything You Always Wanted to Know About Memory in Python But Were Afraid to Ask [EuroPython 2014] [25 July 2014] Have you ever wondered what happens to all the precious RAM after running your 'simple' CPython code? Prepare yourself for a short introduction to CPython memory management! This presentation will try to answer some memory related questions you always wondered about. It will also discuss basic memory profiling tools and techniques. ----- This talk will cover basics of CPython memory usage. It will start with basics like objects and data structures representation. Then advanced memory management aspects, such as sharing, segmentation, preallocation or caching, will be discussed. Finally, memory profiling tools will be presented.	28	Science & Technology	PT29M4S	1744	2d	sd	false			118	0	0	0	0
985	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZPONLdNkLl4	2014-09-13T18:38:55Z	2014-09-13 18:38:55	Austin Bingham - Python refactoring with Rope and Traad	Austin Bingham - Python refactoring with Rope and Traad [EuroPython 2014] [23 July 2014] Rope is a powerful Python refactoring library. Traad (Norwegian for “thread”) is a tool which makes it simpler to integrate rope into IDEs via a simple HTTP API. In this session we’ll look at how traad and rope work together and how traad integrates with at least one popular editor. ----- Python is a modern, dynamic language which is growing in popularity, but tool support for it is sometime lacking or only available in specific environments. For refactoring and other common IDE functions, however, the powerful open-source rope library provides a set of tools which are designed to be integrated into almost any programming environment. Rope supports most common refactorings, such as renaming and method extraction, but also more Python-specific refactorings, such as import organization. Rope’s underlying code analysis engine also allows it to do things like locating method definitions and generating auto-completion suggestions. While rope is designed to be used from many environments, it’s not always easy or ideal to integrate rope directly into other programs. Traad (Norwegian for “thread”) is another open-source project that addresses this problem by wrapping rope into a simple client-server model so that client programs (IDEs, editors, etc.) can perform refactorings without needing to embed rope directly. This simplifies dependencies, makes clients more robust in the face of errors, eases traad client development, and even allows clients to do things like switch between Python 2 and 3 refactoring in the same session. In this session we’ll look at how rope operates, and we’ll see how traad wraps it to provide an easier integration interface. The audience will get enough information to start using rope themselves, either directly or via traad, and they’ll see how to use traad for integrating rope into their own environments. More generally, we’ll look at why client-server refactoring tools might be preferable to the more standard approach of direct embedding.	28	Science & Technology	PT25M2S	1502	2d	sd	false			145	0	0	0	0
986	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	mp394EtSOJU	2014-09-13T18:38:55Z	2014-09-13 18:38:55	Nicholas Tollervey/holger krekel - The Return of "The Return of Peer to Peer Computing".	Nicholas Tollervey/holger krekel - The Return of "The Return of Peer to Peer Computing". [EuroPython 2014] [24 July 2014] At last year's Europython Holger Krekel gave a keynote called "The Return of Peer to Peer Computing". He described how developers, in light of the Snowden surveillance revelations, ought to learn about and build decentralized peer-to-peer systems with strong cryptography. This talk introduces, describes and demonstrates ideas, concepts and code that a group of Pythonistas have been working on since Holger's keynote. We asked ourselves two questions: what are the fundamental elements / abstractions of a peer-to-peer application and, given a reasonable answer to the first question, what can we build? We will present work done so far, discuss the sorts of application that might be written and explore how peer-to-peer technology could be both attractive and viable from an economic point of view. ----- This talk introduces, describes and demonstrates concepts and code created during sprints and via online collaboration by a distributed group of Pythonistas under the working title p4p2p (http://p4p2p.net). We asked ourselves, as frameworks such as Zope/Plone, Django, Pyramid or Flask are to web development what would the equivalent sort of framework look like for peer-to-peer application development? We've tackled several different technical issues: remote execution of code among peers, distributed hash tables as a mechanism for peer discovery and data storage, various cryptographic requirements and the nuts and bolts of punching holes in firewalls. Work is ongoing (we have another sprint at the end of March) and the final content of the talk will depend on progress made. However, we expect to touch upon the following (subject to the caveat above): * What is the problem we're trying to solve? * Why P2P? * The story of how we ended up asking the questions outlined in the abstract. * What we've done to address these questions. * An exploration of the sorts of application that could be built using P2P. * A call for helpers and collaboration. Happy to answer any questions!	28	Science & Technology	PT39M35S	2375	2d	sd	false			26	0	0	0	0
987	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	zZwBQwasfDA	2014-09-13T18:38:55Z	2014-09-13 18:38:55	Niv/tomr - Learning Chess from data	Niv/tomr - Learning Chess from data [EuroPython 2014] [24 July 2014] Is watching a chess game enough to figure out the rules? What is common denominator between different plays and game ending? In this presentation, we will show how Machine Learning and Hadoop can help us re-discover chess rules and gain new understanding of the game. ----- Can empirical samples unveil the big picture? Is chess games descriptions expose good enough data to gain understanding of chess rules - legal piece moves, castling, check versus checkmate, etc. Which features are important in describing a chess game and which features are not. What is a good representation of a chess game for this uses. What is the minimal sample size which is required in order to learn this in a good enough manner and where this learning can go wrong. **Ne3 =&gt; E=mc2** Looking at the bigger picture - Can we understand big systems based on empirical samples. Can we reverse engineer physics and discover how physical system work based on no external knowledge beside empirical samples.	28	Science & Technology	PT21M57S	1317	2d	sd	false			68	2	0	0	0
988	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4jjcN9lQAxI	2013-07-07T10:11:20Z	2013-07-07 10:11:20	EuroPython 2013 - Reportage Teaser (Harlem Shake)	The EuroPython staff is "hard at work" during the event	28	Science & Technology	PT35S	35	2d	hd	false	https://i.ytimg.com/vi/4jjcN9lQAxI/maxresdefault.jpg		4928	27	5	0	3
989	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1aH4lVxZv0U	2013-07-06T05:03:47Z	2013-07-06 05:03:47	Pizza Napoli Track (EuroPython 2013)		28	Science & Technology	PT5H25M42S	1542	2d	sd	false			557	3	1	0	1
990	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TudEQwVqS5w	2013-07-06T01:32:31Z	2013-07-06 01:32:31	BigMac Track (EuroPython 2013)		28	Science & Technology	PT3H15M	900	2d	sd	false			296	1	0	0	0
991	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	96WoCShO3i0	2013-07-05T17:41:43Z	2013-07-05 17:41:43	F Frenguelli An Intro to Blender Modeling and Scripting part 2)	[Europython 2013] F Frenguelli An Intro to Blender Modeling and Scripting part 2) 5 July 2013 TRACK pizza napoli	27	Education	PT1H41M34S	2494	2d	sd	false			450	3	0	0	0
992	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XgTt93qQ-Zk	2013-07-05T17:30:25Z	2013-07-05 17:30:25	Holger Krekel- P2P Open Trying Things	[EuroPython 2013] Holger Krekel P2P Open Trying Things - 05 July 2013 "Track Big-Mac"	27	Education	PT50M57S	3057	2d	sd	false			234	0	0	0	0
993	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SakyBg_UpA8	2013-07-05T17:20:24Z	2013-07-05 17:20:24	K Lautaportti Introduction to Cassandra	[Europython 2013] K Lautaportti Introduction to Cassandra 3 July 2013 TRACK pizza napoli	27	Education	PT53M49S	3229	2d	sd	false			232	3	0	0	0
994	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WyKhMggzDB8	2013-07-05T17:16:11Z	2013-07-05 17:16:11	Lightnings Talks, 5th July	[EuroPython 2013] Ligthnings Talks - 05 July 2013 "Track Lasagne"	28	Science & Technology	PT1H12M	720	2d	sd	false			1322	10	0	0	6
995	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-S7KS-1-wdc	2013-07-05T17:15:38Z	2013-07-05 17:15:38	A Groszer mongopersist Persisting python objects transparently to MongoDB beginning left)	[Europython 2013] K Lautaportti Introduction to Cassandra 5 July 2013 TRACK tagliatelle	27	Education	PT21M8S	1268	2d	sd	false			117	0	0	0	1
996	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LTXOP7ykwy8	2013-07-05T17:14:01Z	2013-07-05 17:14:01	P Enfedaque Python objects essentials Part 3	[Europython 2013] P Enfedaque Python objects essentials Part 3 2 July 2013 TRACK pizza margherita	27	Education	PT1H21M20S	1280	2d	sd	false			123	2	0	0	0
997	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	EyS1oauXr_U	2013-07-05T17:09:45Z	2013-07-05 17:09:45	M Hrnjadovic Get up to speed with OpenStack! Part 1	[Europython 2013] M Hrnjadovic Get up to speed with OpenStack! Part 1 2 July 2013 TRACK pizza margherita	27	Education	PT1H8M17S	497	2d	sd	false			197	0	0	0	0
998	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-2MC_3PlpGY	2013-07-05T17:07:35Z	2013-07-05 17:07:35	P Enfedaque Python objects essentials Part 2	[Europython 2013] P Enfedaque Python objects essentials Part 2 2 July 2013 TRACK pizza margherita	27	Education	PT57M16S	3436	2d	sd	false			181	1	0	0	0
999	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	V5YcM-MV0hY	2013-07-05T17:03:33Z	2013-07-05 17:03:33	H Schlawack Solid Python Application Deployments For Everybody QUESTIONS	[Europython 2013] H Schlawack Solid Python Application Deployments For Everybody QUESTIONS 2 July 2013 TRACK ravioli	28	Science & Technology	PT8M26S	506	2d	sd	false			548	1	0	0	0
1000	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	a2CnNKeRRXo	2013-07-05T17:01:09Z	2013-07-05 17:01:09	M Hrnjadovic Get up to speed with OpenStack! Part 2	[Europython 2013] M Hrnjadovic Get up to speed with OpenStack! Part 2 2 July 2013 TRACK pizza margherita	28	Science & Technology	PT40M32S	2432	2d	sd	false			59	0	0	0	0
1001	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PV6-pgemKRA	2013-07-05T16:55:26Z	2013-07-05 16:55:26	M Hrnjadovic Get up to speed with OpenStack! Part 3	[Europython 2013] M Hrnjadovic Get up to speed with OpenStack! Part 3 2 July 2013 TRACK pizza margherita	27	Education	PT12M53S	773	2d	sd	false			45	0	0	0	0
1002	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LsLgZUGM3kg	2013-07-05T16:14:12Z	2013-07-05 16:14:12	M. Di Pierro - Web2Py	M. Di Pierro - Web2Py [Europython 2013] 5 July 2013 TRACK RAVIOLI	27	Education	PT33M14S	1994	2d	sd	false			7733	61	1	0	12
1003	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jO0bKgdbb2M	2013-07-05T16:08:54Z	2013-07-05 16:08:54	Thomas Waldmann - PGP/GPG Keysigning	[EuroPython 2013] Thomas Waldmann PGP/GPG Keysigning - 05 July 2013 "Track Big-Mac"	27	Education	PT36M33S	2193	2d	sd	false			424	0	1	0	0
1004	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7f-yVOEtPjM	2013-07-05T15:55:16Z	2013-07-05 15:55:16	R. Bauer - Pymove 3D	R. Bauer - Pymove 3D [Europython 2013] 5 July 2013 Track Pizza Margherita	27	Education	PT1H2M24S	144	2d	sd	false			163	0	0	0	0
1005	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tNfkslQnFjc	2013-07-05T14:45:41Z	2013-07-05 14:45:41	Radomir Dopieralski - Game Development Tools	[EuroPython 2013] Radomir Dopieralski Game Development Tools - 05 July 2013 "Track Lasagne"	27	Education	PT23M53S	1433	2d	sd	false			268	2	1	0	0
1006	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DtOBROowzDg	2013-07-05T14:41:25Z	2013-07-05 14:41:25	Domen Kožar - Nixos Operating System Declarative Configuration Distribution	[EuroPython 2013] Domen Kožar Nixos Operating System: Declarative Configuration Distribution - 05 July 2013 "Track Big-Mac"	27	Education	PT24M34S	1474	2d	sd	false			890	9	0	0	0
1007	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0IzXcjHs-P8	2013-07-05T14:31:41Z	2013-07-05 14:31:41	L. Hastings - All Singing All Dancing Python Bytecode	[Europython 2013] L. Hastings - All Singing All Dancing Python Bytecode 5 July 2013 Track Tagliatelle	27	Education	PT53M54S	3234	2d	sd	false			3130	39	0	0	1
1008	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Cj37txHR988	2013-07-05T14:25:02Z	2013-07-05 14:25:02	B. Bryon - PEP 423 issues, best practices, tools about names	[Europython 2013] B. Bryon - PEP 423 issues, best practices, tools about names 5 July 2013 Track Ravioli	27	Education	PT22M56S	1376	2d	sd	false			1090	1	0	0	0
1009	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	S0tirdmJrZI	2013-07-05T14:22:05Z	2013-07-05 14:22:05	C Di Mauro x86x64 assembly + Python = new CPU architecture to rule the world)	[Europython 2013] 5 July 2013 Track Pizza Napoli	28	Science & Technology	PT32M37S	1957	2d	sd	false			231	0	0	0	0
1010	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HqqfWgbHr4I	2013-07-05T14:21:27Z	2013-07-05 14:21:27	P. Szabó - EuroPython 2013 Google Jam Quiz Solutions	P Szabó EuroPython 2013 Google Jam Quiz Solutions [Europython 2013] 5 July 2013 Track Ravioli	27	Education	PT35M1S	2101	2d	sd	false			72	0	0	0	0
1011	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0cZ7szFuz18	2013-07-05T14:18:13Z	2013-07-05 14:18:13	Andrea Crotti - Emacs and shell as your best friends	[EuroPython 2013] Andrea Crotti Emacs and shell as your best friends- 05 July 2013 "Track Lasagne"	27	Education	PT26M22S	1582	2d	sd	false			15003	63	3	0	10
1012	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DDaOBv8GQKk	2013-07-05T14:14:18Z	2013-07-05 14:14:18	Holger Krekel - P2P/NSA Idea Gathering	[EuroPython 2013] Holger Krekel P2P/NSA Idea Gathering - 05 July 2013 "Track Lasagne"	27	Education	PT17M12S	1032	2d	sd	false			93	1	0	0	1
1013	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	RWFpMMfECeg	2013-07-05T14:13:02Z	2013-07-05 14:13:02	Gabriel Nistor - Rest API Framework	[EuroPython 2013] Gabriel Nistor - Rest API Framework - 05 July 2013 "Track Big-Mac"	27	Education	PT22M10S	1330	2d	sd	false			651	2	0	0	0
1014	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	AIYsV5scL7A	2013-07-05T14:12:22Z	2013-07-05 14:12:22	Alexys Jacob - Write a Fault Tolerant web service using gevent + uwsgi	[EuroPython 2013] Julien Thebault Write a Fault Tolerant web service using gevent + uwsgi - 05 July 2013 "Track Big-Mac"	27	Education	PT19M25S	1165	2d	sd	false			791	0	0	0	0
1015	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PlXEsrhF1iE	2013-07-05T13:56:16Z	2013-07-05 13:56:16	D. Jemerov- Why Python Sucks	D. Jemerov- Why Python Sucks [Europython 2013] 5 July 2013 Track Pizza Margherita	27	Education	PT25M46S	1546	2d	sd	false			19430	69	49	0	48
1016	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	s_vwqBaCgOc	2013-07-05T12:10:05Z	2013-07-05 12:10:05	Oltjano Terpollari - Python for hackers and Penetration testing	[EuroPython 2013] Oltjano Terpollari - Python for hackers and Penetration testing - 05 July 2013 "Track Spaghetti"	27	Education	PT40M9S	2409	2d	sd	false			5394	28	1	0	4
1017	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hxkyIIGluSw	2013-07-05T11:43:53Z	2013-07-05 11:43:53	N Zupan, D Kožar Getting started with Plone CMS development part 2	N Zupan, D Kožar Getting started with Plone CMS development part 2 [Europython 2013] 5 July 2013 Track Pizza Napoli	27	Education	PT1H42M13S	2533	2d	sd	false			146	0	0	0	0
1018	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	U1K19GoLMuk	2013-07-05T11:31:38Z	2013-07-05 11:31:38	F Frenguelli An intro to Blender modeling and scripting Part 2	N Zupan, D Kožar Getting started with Plone CMS development part 2 [Europython 2013] 5 July 2013 Track Pizza Margherita	27	Education	PT1H58M18S	3498	2d	sd	false			151	0	0	0	0
1019	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	r_-3usncq-4	2013-07-05T11:28:32Z	2013-07-05 11:28:32	Alessandro Pisa Python da programmatore a domatore	[EuroPython 2013] Alessandro Pisa - Python da programmatore a domatore - 05 July 2013 "Track Big-Mac"	27	Education	PT48M58S	2938	2d	sd	false			106	4	0	0	0
1020	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lZ5Bw8iS3OY	2013-07-05T11:26:53Z	2013-07-05 11:26:53	Ezio Melotti Capire le codifiche e Unicode	[EuroPython 2013] Ezio Melotti Capire le codifiche e Unicode - 05 July 2013 "Track Big-Mac"	27	Education	PT43M14S	2594	2d	sd	false			120	1	0	0	1
1021	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	gaLt619FjuE	2013-07-05T11:24:03Z	2013-07-05 11:24:03	Marc-André Lemburg - Efficient Python development with small teams	[EuroPython 2013] Marc-André Lemburg - Efficient Python development with small teams - 05 July 2013 "Track Lasagne"	27	Education	PT52M11S	3131	2d	sd	false			601	1	0	0	0
1022	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OZJzRYxxpMs	2013-07-05T11:13:17Z	2013-07-05 11:13:17	Alessandro Molina - Fast, documented and reliable JSON based webservices with Python	[EuroPython 2013] Alessandro Molina - Fast, documented and reliable JSON based webservices with Python - 05 July 2013 "Track Spaghetti"	28	Science & Technology	PT43M26S	2606	2d	sd	false			1109	0	0	0	0
1023	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	S-kbfpRpVsY	2013-07-05T11:10:28Z	2013-07-05 11:10:28	C Kerstiens Going beyond the Django ORM limitations with Postgres	C Kerstiens Going beyond the Django ORM limitations with Postgres [Europython 2013] 5 July 2013 Track Ravioli	27	Education	PT37M11S	2231	2d	sd	false			1141	6	0	0	0
1024	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nDXK63YmAYE	2013-07-05T10:39:44Z	2013-07-05 10:39:44	P. Büchler- Introducing Python as a main programming language in a company	P Büchler Introducing Python as a main programming language in a company [Europython 2013] 5 July 2013 Track Ravioli	27	Education	PT55M52S	3352	2d	sd	false			164	2	0	0	0
1025	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	aUf8Fkb7TaY	2013-07-05T10:27:10Z	2013-07-05 10:27:10	A.Pelme - Testing Django applications with pytest	A Pelme Testing Django applications with pytest [Europython 2013] 5 July 2013 Track Ravioli	27	Education	PT49M57S	2997	2d	sd	false			5849	56	1	0	2
1026	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BpLz_5x_vTo	2013-07-05T10:07:59Z	2013-07-05 10:07:59	Christophe Pettus - Extending Python into PostgreSQL	[EuroPython 2013] Christophe Pettus - Extending Python into PostgreSQL - 05 July 2013 "Track Lasagne"	27	Education	PT41M	2460	2d	sd	false			2035	6	0	0	0
1027	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4e6z3Ada00I	2013-07-05T09:25:38Z	2013-07-05 09:25:38	F Frenguelli An intro to Blender modeling and scripting Part 1	N Zupan, D Kožar Getting started with Plone CMS development part 1 [Europython 2013] 5 July 2013 Track Pizza Margherita	27	Education	PT1H34M43S	2083	2d	sd	false			356	3	0	0	2
1028	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3wN1JeWD3Vo	2013-07-05T09:14:35Z	2013-07-05 09:14:35	N Zupan, D Kožar Getting started with Plone CMS development part 1	N Zupan, D Kožar Getting started with Plone CMS development part 1 [Europython 2013] 5 July 2013 Track Pizza Napoli	27	Education	PT1H20M14S	1214	2d	sd	false			136	1	0	0	0
1029	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	VmfWkeUOuYY	2013-07-05T08:51:08Z	2013-07-05 08:51:08	G Dubus Pyramid advanced configuration tactics for nice apps and libs	G Dubus Pyramid advanced configuration tactics for nice apps and libs [Europython 2013] 5 July 2013 Track Ravioli	27	Education	PT34M1S	2041	2d	sd	false			1665	6	0	0	0
1030	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	f909GqJvDnE	2013-07-05T08:37:12Z	2013-07-05 08:37:12	G Aubert Developing multi platform apps with Python in 2013	[Europython 2013] 5 July 2013 Track Ravioli	27	Education	PT35M33S	2133	2d	sd	false			569	1	0	0	0
1031	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rj4mf5aNhh0	2013-07-05T08:36:34Z	2013-07-05 08:36:34	Radomir Dopieralski - Magical attributes	[EuroPython 2013] Radomir Dopieralski - Magical attributes - 05 July 2013 "Track Spaghetti"	27	Education	PT38M59S	2339	2d	sd	false			338	8	0	0	1
1032	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IacmaNwU458	2013-07-05T08:35:52Z	2013-07-05 08:35:52	Edward Easton - Python Packaging on the Enterprise	[EuroPython 2013] Edward Easton - Python Packaging on the Enterprise - 05 July 2013 "Track Lasagne"	27	Education	PT35M25S	2125	2d	sd	false			332	0	0	0	1
1033	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9RPXU2TleD8	2013-07-05T08:26:12Z	2013-07-05 08:26:12	Enrico Franchi - Scegliere le armi per la battaglia del calcolo intensivo	[EuroPython 2013] Enrico Franchi - Scegliere le armi per la battaglia del calcolo intensivo - 05 July 2013 "Track Big-Mac"	27	Education	PT1H5M36S	336	2d	sd	false			33	0	0	0	0
1034	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-sCaA-ILuoQ	2013-07-05T08:05:41Z	2013-07-05 08:05:41	J Hallén Testing for beginners	J Hallén Testing for beginner [Europython 2013] 5 July 2013 Track Tagliatelle	27	Education	PT40M55S	2455	2d	sd	false			89	2	0	0	0
1035	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_lVijLepOAM	2013-07-05T08:05:18Z	2013-07-05 08:05:18	H Král Beyond Search	H Král Beyond Search [Europython 2013] 5 July 2013 Track Ravioli	27	Education	PT39M26S	2366	2d	sd	false			4496	9	0	0	0
1036	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	w0Y91qRaxhQ	2013-07-05T07:57:37Z	2013-07-05 07:57:37	Joe Gordon - Very Large Development How to run code review for 800+ Open Source Python Developers	[EuroPython 2013] Joe Gordon - Very Large Development: How to run code review for 800+ Open Source Python Developers - 05 July 2013 "Track Lasagne"	27	Education	PT40M4S	2404	2d	sd	false			181	0	0	0	0
1037	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BErOaezd4Hw	2013-07-05T07:42:21Z	2013-07-05 07:42:21	Petr Viktorin - Terminals, command lines, and text interfaces	[EuroPython 2013] Petr Viktorin - Terminals, command lines, and text interfaces - 05 July 2013 "Track Spaghetti"	27	Education	PT29M45S	1785	2d	sd	false			799	5	0	0	0
1038	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	86EL6XUci-Q	2013-07-04T16:57:03Z	2013-07-04 16:57:03	S Trygubenko Functional programming in Python and even Haskell Part 2	[Europython 2013] S. Trygubenko - Functional programming in Python and even Haskell Part 2 4 July 2013 Track Pizza Margherita	27	Education	PT1H15M47S	947	2d	sd	false			128	1	0	0	0
1039	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	s9X9CaLAYSc	2013-07-04T16:38:15Z	2013-07-04 16:38:15	Mike Müller - The Python Paradox	[EuroPython 2013] Mike Müller - The Python Paradox - 04 July 2013 "Track Lasagne"	27	Education	PT36M56S	2216	2d	sd	false			835	2	1	0	0
1040	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Yvd38Tjw7k0	2013-07-04T16:37:00Z	2013-07-04 16:37:00	Extra Lightning Talks 03 July - 2	[EuroPython 2013] Extra Lightning Talks 03 July 2013 "Track Lasagne"	27	Education	PT4M45S	285	2d	sd	false			48	0	0	0	0
1041	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eoPbA1iMfRg	2013-07-04T16:15:20Z	2013-07-04 16:15:20	Extra Lightning Talks 03 July - 1	[EuroPython 2013] Extra Lightning Talks 03 July 2013 "Track Lasagne"	27	Education	PT2M47S	167	2d	sd	false			40	0	0	0	0
1042	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	AxvhzYzhQEA	2013-07-04T15:58:12Z	2013-07-04 15:58:12	S. Trygubenko - Functional programming in Python and even Haskell Part 1	[Europython 2013] S. Trygubenko - Functional programming in Python and even Haskell Part 1 4 July 2013 Track Pizza Margherita	27	Education	PT1H52M34S	3154	2d	sd	false			275	1	0	0	0
1043	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	mWhruFejlxU	2013-07-04T15:47:31Z	2013-07-04 15:47:31	Cody Somerville - OpenStack on OpenStack Deploying OpenStack using OpenStack	[EuroPython 2013] Cody Somerville - OpenStack on OpenStack: Deploying OpenStack using OpenStack - 04 July 2013 "Track Lasagne"	27	Education	PT22M9S	1329	2d	sd	false			196	1	0	0	0
1044	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TGv33xl-HUs	2013-07-04T15:00:25Z	2013-07-04 15:00:25	H. Krosing Python and PostgreSQL for Huge Data Warehouses	[Europython 2013] H. Krosing Python and PostgreSQL for Huge Data Warehouses 4 July 2013 Track Ravioli	27	Education	PT57M2S	3422	2d	sd	false			2607	12	1	0	0
1045	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Hn-XCv7rc7U	2013-07-04T14:58:28Z	2013-07-04 14:58:28	T. Perl - Affordable Off The Shelf Augmented Reality in Python	[Europython 2013] T. Perl - Affordable Off The Shelf Augmented Reality in Python 4 July 2013 Track Tagliatelle	27	Education	PT56M55S	3415	2d	sd	false			1415	9	0	0	3
1046	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DQkbth9RF08	2013-07-04T14:44:26Z	2013-07-04 14:44:26	Marc-André Lemburg - Designing Large-Scale Applications in Python	[EuroPython 2013] Marc-André Lemburg - Designing Large-Scale Applications in Python - 04 July 2013 "Track Spaghetti"	27	Education	PT53M53S	3233	2d	sd	false			277	3	0	0	0
1047	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QycE3RJjA8g	2013-07-04T13:39:50Z	2013-07-04 13:39:50	Davide Corio - Kivy, Python RAD per lo sviluppo di applicazioni mobile e non solo	[EuroPython 2013] Davide Corio - Kivy, Python RAD per lo sviluppo di applicazioni mobile e non solo - 04 July 2013 "Track Big-Mac"	27	Education	PT46M47S	2807	2d	sd	false			1239	5	0	0	0
1048	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	j-o2M_whft4	2013-07-04T13:33:37Z	2013-07-04 13:33:37	S. Deponti - Server side story	[Europython 2013] S. Deponti - Server side story 4 July 2013 Track Ravioli	27	Education	PT47M45S	2865	2d	sd	false			459	0	0	0	0
1049	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7o7WqOqiQ0U	2013-07-04T13:30:09Z	2013-07-04 13:30:09	Andrew Mleczko - Take Back Control Over Your Work. Agile Tips For Python Developers	[EuroPython 2013] Andrew Mleczko - Take Back Control Over Your Work. Agile Tips For Python Developers. - 04 July 2013 "Track Spaghetti"	27	Education	PT46M24S	2784	2d	sd	false			265	1	1	0	0
1050	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wNBLD5tXHu4	2013-07-04T13:22:56Z	2013-07-04 13:22:56	Domen Kožar - Tools for successful project development	[EuroPython 2013] Domen Kožar - Tools for successful project development - 04 July 2013 "Track Lasagne"	27	Education	PT38M37S	2317	2d	sd	false			140	2	0	0	0
1051	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-LvXbl5d02U	2013-07-04T13:22:38Z	2013-07-04 13:22:38	G. Salluzzo, A. De Marco- Mocket a Socket Mock Framework	[Europython 2013] G. Salluzzo, A. De Marco- Mocket a Socket Mock Framework 4 July 2013 Track Ravioli	27	Education	PT37M5S	2225	2d	sd	false			491	1	0	0	0
1052	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	czWNvlBPInc	2013-07-04T12:31:39Z	2013-07-04 12:31:39	A . Molina - Web Applications on Python3 and Python2 with TurboGears Part 2	[Europython 2013] A Molina Web Applications on Python3 and Python2 with TurboGears part 2 4 July 2013 Track Pizza Napoli	27	Education	PT2H29S	29	2d	sd	false			1620	4	1	0	0
1053	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-HZpj70BuXI	2013-07-04T11:46:35Z	2013-07-04 11:46:35	F. Caboni-A hands on introduction to software testing reloaded) Part 3	[Europython 2013] F. Caboni-A hands on introduction to software testing reloaded) Part 3 4 July 2013 Track Pizza Margherita	27	Education	PT1H43M42S	2622	2d	sd	false			80	1	0	0	0
1054	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	W7MbKypiVvA	2013-07-04T11:24:34Z	2013-07-04 11:24:34	Simone Orsi - Costruisci la tua piattaforma open-source di video-sharing in Python	[EuroPython 2013] Simone Orsi - Costruisci la tua piattaforma open-source di video-sharing in Python - 04 July 2013 "Track Big-Mac"	27	Education	PT38M47S	2327	2d	sd	false			108	3	0	0	0
1055	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	0_vd9ctwQW4	2013-07-04T11:24:00Z	2013-07-04 11:24:00	Anders Lehman - Using iPython Notebook in the Classroom	[EuroPython 2013] Anders Lehman - Using iPython Notebook in the Classroom - 04 July 2013 "Track Lasagne"	27	Education	PT49M34S	2974	2d	sd	false			748	4	0	0	0
1056	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3uqA5hiyg78	2013-07-04T11:19:59Z	2013-07-04 11:19:59	(wrong cover) N Defossé Designing a Real Time Control System based on Django, ZMQ and WebSockets	[Europython 2013] (wrong cover) N Defossé Designing a Real Time Control System based on Django, ZMQ and WebSockets 4 July 2013 Track Ravioli	27	Education	PT42M18S	2538	2d	sd	false			1283	12	0	0	4
1057	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3dCK0xI4054	2013-07-04T11:16:24Z	2013-07-04 11:16:24	T. Ziadé - Vaurien The Chaos TCP Proxy	[Europython 2013] T. Ziadé - Vaurien The Chaos TCP Proxy 4 July 2013 Track Tagliatelle	27	Education	PT35M37S	2137	2d	sd	false			193	0	0	0	0
1058	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	W_jMjwSFgTw	2013-07-04T10:35:27Z	2013-07-04 10:35:27	M. Fötsch- libspotify Add music to Python	[Europython 2013] M. Fötsch- libspotify Add music to Python 4 July 2013 Track Tagliatelle	27	Education	PT37M18S	2238	2d	sd	false			523	3	0	0	0
1059	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	G0jWMoOEFxc	2013-07-04T10:32:50Z	2013-07-04 10:32:50	Daniel Pope - Programming physics games with Python and OpenGL	[EuroPython 2013] : Daniel Pope - Programming physics games with Python and OpenGL - 04 July 2013 "Track Lasagne"	27	Education	PT54M1S	3241	2d	sd	false			134202	760	24	0	45
1060	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	F3IQUzik3k4	2013-07-04T10:10:29Z	2013-07-04 10:10:29	Mike Müller - Meta Programming - Some Use Cases for Everyday Programming	[EuroPython 2013] Mike Müller - Meta Programming - Some Use Cases for Everyday Programming - 04 July 2013 "Track Spaghetti"	27	Education	PT40M9S	2409	2d	sd	false			265	3	0	0	0
1061	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qmdk5mVLsHM	2013-07-04T09:57:50Z	2013-07-04 09:57:50	R. De Ioris Writing websockets applications with uWSGI and Gevent	[Europython 2013] R. De Ioris Writing websockets applications with uWSGI and Gevent 4 July 2013 Track Ravioli	27	Education	PT30M14S	1814	2d	sd	false			1809	14	0	0	1
1062	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Ksh0jqT81ls	2013-07-04T09:37:22Z	2013-07-04 09:37:22	Mathieu Virbel - Kivy, versatile framework for mobile and desktop	[EuroPython 2013] Mathieu Virbel - Kivy, versatile framework for mobile and desktop - 04 July 2013 "Track Lasagne"	27	Education	PT1H26M51S	1611	2d	sd	false			3512	22	0	0	2
1063	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NqxpRjqvTIA	2013-07-04T09:10:47Z	2013-07-04 09:10:47	A. Molina -Web Applications on Python3 and Python2 with TurboGears Part 1	[Europython 2013] A. Molina -Web Applications on Python3 and Python2 with TurboGears Part 1 4 July 2013 Track Pizza Napoli	27	Education	PT1H29M34S	1774	2d	sd	false			4448	9	0	0	0
1064	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BDjXZY_8d58	2013-07-04T09:03:38Z	2013-07-04 09:03:38	K.. Hayen - An optimizing static Python compiler	K.. Hayen - An optimizing static Python compiler [Europython 2013] 4 July 2013 Track Ravioli	27	Education	PT1H30M50S	1850	2d	sd	false			1002	11	0	0	1
1065	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tuaX75N55Xs	2013-07-04T09:02:50Z	2013-07-04 09:02:50	Enrico Franchi - Never get in a battle of bits without ammunition	[EuroPython 2013] Enrico Franchi - Never get in a battle of bits without ammunition - 04 July 2013 "Track Spaghetti"	27	Education	PT1H27M55S	1675	2d	sd	false			69	0	0	0	0
1066	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OSbM1qu6cts	2013-07-04T09:00:23Z	2013-07-04 09:00:23	F. Caboni A hands on introduction to software testing reloaded) Part 1 (final with tech problems)	F. Caboni A hands on introduction to software testing reloaded) Part 1 [Europython 2013] 4 July 2013 Track Pizza Margerita	27	Education	PT1H8M15S	495	2d	sd	false			149	2	0	0	0
1067	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1P8pxGiXv6o	2013-07-04T08:49:33Z	2013-07-04 08:49:33	F Caboni A hands on introduction to software testing reloaded) Part 2	[Europython 2013] 4 July 2013 Track Pizza Margerita	27	Education	PT20M44S	1244	2d	sd	false			43	1	0	0	0
1068	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4g2hQ2w8q50	2013-07-04T08:41:36Z	2013-07-04 08:41:36	A. Crotti - TDD from scratch	A. Crotti - TDD from scratch [Europython 2013] 4 July 2013 Track Ravioli	27	Education	PT41M20S	2480	2d	sd	false			278	2	0	0	0
1069	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	V6EoXrVEos8	2013-07-04T08:33:15Z	2013-07-04 08:33:15	Maurizio Delmonte - SimpleManagement come semplificare la gestione progetti con Python	[EuroPython 2013] Maurizio Delmonte - SimpleManagement: come semplificare la gestione progetti con Python - 04 July 2013 "Track Big-Mac"	27	Education	PT36M55S	2215	2d	sd	false			103	1	0	0	0
1070	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2KchJchEE4o	2013-07-04T08:03:52Z	2013-07-04 08:03:52	H. Krekel- devpi driving your packaging and testing needs	[Europython 2013] H. Krekel- devpi driving your packaging and testing needs 4 July 2013 Track Tagliatelle	27	Education	PT40M46S	2446	2d	sd	false			80	0	0	0	0
1071	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TlFdveHBUIU	2013-07-04T07:52:53Z	2013-07-04 07:52:53	Davide Corio - OpenERP nel paese delle meraviglie	[EuroPython 2013] Davide Corio - OpenERP nel paese delle meraviglie - 04 July 2013 "Track Big-Mac"	27	Education	PT40M37S	2437	2d	sd	false			473	1	0	0	0
1072	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	48DnfQAMvJs	2013-07-03T17:35:57Z	2013-07-03 17:35:57	Yves Hilpisch - A Better Future with Python	[EuroPython 2013] Yves Hilpisch - A Better Future with Python - 03 July 2013 "Track Lasagne"	28	Science & Technology	PT49M46S	2986	2d	sd	false			997	5	0	0	0
1073	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	roaskd4Ebts	2013-07-03T17:09:07Z	2013-07-03 17:09:07	Tagliatelle Track (EuroPython 2013)		28	Science & Technology	PT4H30M34S	1834	2d	sd	false			125	0	0	0	0
1074	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iUNbgNuN0qY	2013-07-03T16:58:22Z	2013-07-03 16:58:22	Lightning Talks	[EuroPython 2013] Lightning Talks - 03 July 2013 "Track Lasagne"	27	Education	PT1H14M57S	897	2d	sd	false			318	1	0	0	0
1075	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	d2X0q8Zb_RQ	2013-07-03T16:56:08Z	2013-07-03 16:56:08	F Håård User to framework author in four hour Part 2	[Europython 2013] F. Håård - User to framework author in four hour Part 2 3 July 2013 Track Pizza Margherita	27	Education	PT1H25M27S	1527	2d	sd	false			33	2	0	0	0
1076	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	41llRs1fa5Q	2013-07-03T16:54:13Z	2013-07-03 16:54:13	D Greenfeld, A Roy Intro to Django Part 2	[Europython 2013] D. Greenfeld, A Roy- Intro to Django Part 2 3 July 2013 Track Pizza Napoli	27	Education	PT1H16M2S	962	2d	sd	false			229	3	0	0	0
1077	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Irzv9EqzhTE	2013-07-03T15:21:25Z	2013-07-03 15:21:25	D. Greenfeld, A Roy- Intro to Django Part 1	[Europython 2013] D. Greenfeld, A Roy- Intro to Django Part 1 3 July 2013 Track Pizza Napoli	27	Education	PT2H2M39S	159	2d	sd	false			769	4	0	0	2
1078	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bL8lGzQEcOs	2013-07-03T15:09:53Z	2013-07-03 15:09:53	F. Håård - User to framework author in four hour Part 1	[Europython 2013] F. Håård - User to framework author in four hour Part 1 3 July 2013 Track Pizza Margherita	27	Education	PT1H44M21S	2661	2d	sd	false			95	1	0	0	0
1079	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BCTlX-omFS4	2013-07-03T14:51:35Z	2013-07-03 14:51:35	M. Ceron - Practical uses for function annotations	[Europython 2013] M. Ceron - Practical uses for function annotations 3 July 2013 Track Ravioli	27	Education	PT57M21S	3441	2d	sd	false			178	0	0	0	0
1080	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1A7OcpvXHsQ	2013-07-03T14:48:44Z	2013-07-03 14:48:44	Ezio Melotti, Franco Carbognani - Python su Marte	[EuroPython 2013] Ezio Melotti, Franco Carbognani - Python su Marte - 03 July 2013 "Track Big-Mac"	27	Education	PT56M30S	3390	2d	sd	false			95	1	0	0	0
1081	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fqwFodRWIcM	2013-07-03T14:42:14Z	2013-07-03 14:42:14	C. Theune - batou a multi component environment platform ) deployment tool	[Europython 2013] C. Theune - batou a multi component environment platform ) deployment tool 3 July 2013 Track Tagliatelle	27	Education	PT48M40S	2920	2d	sd	false			35	0	0	0	0
1082	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	osQLB3-dvT4	2013-07-03T14:40:57Z	2013-07-03 14:40:57	Alan Franzoni - Python Good Practices	[EuroPython 2013] Alan Franzoni - Python Good Practices - 03 July 2013 "Track Spaghetti"	27	Education	PT49M45S	2985	2d	sd	false			440	1	0	0	0
1083	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tFzqSo1cRwU	2013-07-03T14:32:21Z	2013-07-03 14:32:21	Andreas Schreiber - Messaging for the Internet of Things	[EuroPython 2013] Andreas Schreiber - Messaging for the Internet of Things - 03 July 2013 "Track Lasagne"	27	Education	PT45M58S	2758	2d	sd	false			63	0	0	0	0
1084	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZUlU4UUxiFk	2013-07-03T14:22:08Z	2013-07-03 14:22:08	F. Bruynooghe - Taming greenlets using eventlet	[Europython 2013] F. Bruynooghe - Taming greenlets using eventlet 3 July 2013 Track %Tagliatelle	27	Education	PT51M30S	3090	2d	sd	false			258	1	0	0	0
1085	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	k9zHomZ7mnw	2013-07-03T14:21:52Z	2013-07-03 14:21:52	L. Hastings - All Singing All Dancing Python Bytecode	[Europython 2013] L. Hastings - All Singing All Dancing Python Bytecode 3 July 2013 Track Ravioli	27	Education	PT50M40S	3040	2d	sd	false			149	1	0	0	0
1086	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_e1-8owBC98	2013-07-03T13:37:39Z	2013-07-03 13:37:39	Tarek Ziadé - Circus, process and socket manager	[EuroPython 2013] Tarek Ziadé - Circus, process and socket manager - 03 July 2013 "Track Lasagne" First 2 minutes are lost	27	Education	PT51M22S	3082	2d	sd	false			267	0	0	0	0
1087	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tOjdkmAoS8o	2013-07-03T13:37:39Z	2013-07-03 13:37:39	Steven Citron-Pousty - Bringing Spatial Love to your Python Application	[EuroPython 2013] Steven Citron-Pousty - Bringing Spatial Love to your Python Application - 03 July 2013 "Track Spaghetti"	27	Education	PT51M58S	3118	2d	sd	false			206	0	0	0	0
1088	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1WgieCdbKpQ	2013-07-03T13:32:16Z	2013-07-03 13:32:16	Massimo Azzolini - Essere agili Metodi, strumenti e integrazioni Python "to rule them all"	[EuroPython 2013] Massimo Azzolini - Essere agili? Metodi, strumenti e integrazioni: Python "to rule them all" - 03 July 2013 "Track Big-Mac"	27	Education	PT45M33S	2733	2d	sd	false			60	0	0	0	0
1089	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ykQ2BvHWLek	2013-07-03T11:42:23Z	2013-07-03 11:42:23	S. Citron Pousty - Python in the cloud with PaaS Part 2	[Europython 2013] S. Citron Pousty - Python in the cloud with PaaS Part 2 3 July 2013 Track Pizza Napoli	28	Science & Technology	PT1H39M2S	2342	2d	sd	false			139	0	0	0	0
1090	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3yLX8NrxylU	2013-07-03T11:32:14Z	2013-07-03 11:32:14	E. Melotti, F Carbognani - Python on Mars	[Europython 2013] E. Melotti, F Carbognani - Python on Mars 3 July 2013 Track Tagliatelle	27	Education	PT46M14S	2774	2d	sd	false			193	1	0	0	1
1091	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ANTKdlxlYl0	2013-07-03T11:29:17Z	2013-07-03 11:29:17	A. Amici - Solving Google Code Jam problems with PyPy Part 2	[Europython 2013] A. Amici - Solving Google Code Jam problems with PyPy Part 2 3 July 2013 Track Pizza Margherita	27	Education	PT1H39M5S	2345	2d	sd	false			455	2	0	0	0
1092	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Zd0bXwVwgGM	2013-07-03T11:19:02Z	2013-07-03 11:19:02	Jyrki Pulliainen - Taming Pythons with ZooKeeper	[EuroPython 2013] Jyrki Pulliainen - Taming Pythons with ZooKeeper - 03 July 2013 "Track Spaghetti"	27	Education	PT49M46S	2986	2d	sd	false			315	3	1	0	0
1093	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	m5Udg79uiMo	2013-07-03T11:13:03Z	2013-07-03 11:13:03	Erik Janssens - Data model patterns with SQLAlchemy	[EuroPython 2013] Erik Janssens - Data model patterns with SQLAlchemy - 03 July 2013 "Track Lasagne"	27	Education	PT47M8S	2828	2d	sd	false			2116	7	0	0	0
1094	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cVmArXkFjaY	2013-07-03T11:11:52Z	2013-07-03 11:11:52	H. Krosing - plpython now as powerful as C	[Europython 2013] H. Krosing - plpython now as powerful as C 3 July 2013 Track Ravioli	27	Education	PT38M57S	2337	2d	sd	false			217	1	0	0	0
1095	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DD1zLltB1RQ	2013-07-03T11:10:42Z	2013-07-03 11:10:42	Emanuele Palazzetti - Speed up your Django apps with Jython and SPDY	[EuroPython 2013] Emanuele Palazzetti - Speed up your Django apps with Jython and SPDY - 03 July 2013 "Track Big-Mac"	27	Education	PT40M42S	2442	2d	sd	false			142	1	0	0	0
1096	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	A-Ng73NXcTI	2013-07-03T11:01:50Z	2013-07-03 11:01:50	R. Sherwood, D Sale - The 'Agile Movement'	[Europython 2013] R. Sherwood, D Sale - The 'Agile Movement' 3 July 2013 Track Tagliatelle	27	Education	PT55M8S	3308	2d	sd	false			318	5	1	0	0
1097	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	b9vTUZYmtiE	2013-07-03T10:17:54Z	2013-07-03 10:17:54	G. Peretin - Greenlet based concurrency	[Europython 2013] G. Peretin - Greenlet based concurrency 3 July 2013 Track Ravioli	27	Education	PT41M10S	2470	2d	sd	false			1895	36	0	0	3
1098	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4PKUZxN-GkE	2013-07-03T10:15:42Z	2013-07-03 10:15:42	Alessandro Pisa - Python from programmer to tamer	[EuroPython 2013] Alessandro Pisa - Python: from programmer to tamer - 03 July 2013 "Track Lasagne"	27	Education	PT45M52S	2752	2d	sd	false			54	1	1	0	0
1099	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hseVV0nXZ6M	2013-07-03T10:13:32Z	2013-07-03 10:13:32	Robeto De Ioris - Corso di sopravvivenza per sviluppatori OpenSource	[EuroPython 2013] Robeto De Ioris - Corso di sopravvivenza per sviluppatori OpenSource - 03 July 2013 "Track Big-Mac"	27	Education	PT43M33S	2613	2d	sd	false			81	0	0	0	0
1100	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	twMAodddp4Q	2013-07-03T10:10:22Z	2013-07-03 10:10:22	David Cramer - Scalable SQL Patterns - part 2	[EuroPython 2013] David Cramer - Scalable SQL Patterns - 03 July 2013 "Track Spaghetti"	27	Education	PT26M3S	1563	2d	sd	false			117	0	0	0	0
1101	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	X7kBzIhtDeY	2013-07-03T10:07:11Z	2013-07-03 10:07:11	David Cramer - Scalable SQL Patterns - part 1	[EuroPython 2013] David Cramer - Scalable SQL Patterns - 03 July 2013 "Track Spaghetti"	27	Education	PT14M31S	871	2d	sd	false			379	0	0	0	0
1102	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ufpe0WKinHY	2013-07-03T09:11:20Z	2013-07-03 09:11:20	A. Amici - Solving Google Code Jam problems with PyPy Part 1	[Europython 2013] A. Amici - Solving Google Code Jam problems with PyPy 3 July 2013 Track Pizza Margerita	27	Education	PT1H11M11S	671	2d	sd	false			1718	9	0	0	0
1103	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vv9JRWYyMJ0	2013-07-03T09:02:48Z	2013-07-03 09:02:48	S. Citron - Pousty Python in the cloud with PaaS Part 1	[Europython 2013] S. Citron - Pousty Python in the cloud with PaaS Part 1 3 July 2013 Track Pizza Napoli	27	Education	PT1H24M28S	1468	2d	sd	false			47	0	0	0	0
1104	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9tiY-Sni04w	2013-07-03T08:41:05Z	2013-07-03 08:41:05	G. Hentsch - Coding for the Modern Warzone	[Europython 2013] G. Hentsch - Coding for the Modern Warzone 3 July 2013 Track Tagliatelle	27	Education	PT39M	2340	2d	sd	false			92	0	0	0	0
1105	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	84ZBXc3IgFY	2013-07-03T08:36:38Z	2013-07-03 08:36:38	Thomas Waldmann - Passwords - the server side	[EuroPython 2013] Thomas Waldmann - Passwords - the server side - 03 July 2013 "Track Spaghetti"	27	Education	PT39M42S	2382	2d	sd	false			161	2	0	0	0
1106	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	EGPkxmJdS7M	2013-07-03T08:30:00Z	2013-07-03 08:30:00	Andrea Crotti - Decorators and context managers	[EuroPython 2013] Andrea Crotti - Decorators and context managers - 03 July 2013 "Track Lasagne"	27	Education	PT32M14S	1934	2d	sd	false			657	6	0	0	0
1107	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	a-mzJ7wFIcA	2013-07-03T08:25:18Z	2013-07-03 08:25:18	A. Mleczko - Lost in OAuth Learn Velruse And Get Your Life Back	[Europython 2013] A. Mleczko - Lost in OAuth Learn Velruse And Get Your Life Back 3 July 2013 Track Ravioli	27	Education	PT26M49S	1609	2d	sd	false			124	1	0	0	0
1108	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tq5yjkihBL8	2013-07-03T08:00:30Z	2013-07-03 08:00:30	R. Polli - Will ipython replace bash	[Europython 2013] R. Polli Will ipython replace bash 3 July 2013 Track Tagliatelle	27	Education	PT40M13S	2413	2d	sd	false			527	2	4	0	1
1109	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	U_qp8u_BH_E	2013-07-03T07:47:06Z	2013-07-03 07:47:06	Giles Thomas - Lessons learned from serving 14 million in-browser Python consoles with Tornado	[EuroPython 2013] Giles Thomas - Lessons learned from serving 1/4 million in-browser Python consoles with Tornado - 03 July 2013 "Track Spaghetti"	27	Education	PT36M35S	2195	2d	sd	false			1693	12	0	0	2
1110	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SB1KfMEgrXk	2013-07-03T07:46:31Z	2013-07-03 07:46:31	D. Matthews - PostgreSQL for Pythonistas	[Europython 2013] D. Matthews PostgreSQL for Pythonistas. 3 July 2013 Track Ravioli	27	Education	PT30M9S	1809	2d	sd	false			207	2	0	0	0
1111	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FdeFQblT9V4	2013-07-03T07:33:25Z	2013-07-03 07:33:25	Lynn Root - Introduce Django to your old friends	[EuroPython 2013] Lynn Root - Introduce Django to your old friends - 03 July 2013 "Track Lasagne"	27	Education	PT25M41S	1541	2d	sd	false			273	2	0	0	0
1112	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FFSOjj_ndE0	2013-07-03T03:10:42Z	2013-07-03 03:10:42	Spaghetti Track (EuroPython 2013)		28	Science & Technology	PT5H15M7S	907	2d	sd	false			169	2	0	0	0
1113	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5XzGd8TJda4	2013-07-03T01:37:40Z	2013-07-03 01:37:40	Pizza Napoli Track (EuroPython 2013)		28	Science & Technology	PT5H14M24S	864	2d	sd	false			146	0	0	0	0
1114	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rz0FmyPqcDw	2013-07-03T00:41:44Z	2013-07-03 00:41:44	Lasagne Track (EuroPython 2013)		28	Science & Technology	PT3H49M13S	2953	2d	sd	false			107	0	0	0	0
1115	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7TImWbnUDeI	2013-07-02T17:34:41Z	2013-07-02 17:34:41	Daniel Greenfeld - Thinking Hard About Python	[EuroPython 2013] Daniel Greenfeld - Thinking Hard About Python - 02 July 2013 "Track Lasagne"	27	Education	PT48M48S	2928	2d	sd	false			808	1	0	0	0
1116	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UBvinPQX1Tk	2013-07-02T17:24:42Z	2013-07-02 17:24:42	H Percival Obey the Testing Goat! Rigorous Test Driven Web Development with Django and Selenium Pt2	[EuroPython 2013] H Percival Obey the Testing Goat! Rigorous Test Driven Web Development with Django and Selenium Part2 02 July 2013 Track Pizza Napoli	28	Science & Technology	PT1H11M47S	707	2d	sd	false			408	4	0	0	0
1117	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	n-_o5Vd9ceM	2013-07-02T15:58:10Z	2013-07-02 15:58:10	S Shankar Introduction to machine learning using Python tools	[EuroPython 2013] S Shankar Introduction to machine learning using Python tools 02 July 2013 Track Tagliatelle	27	Education	PT55M31S	3331	2d	sd	false			725	3	1	0	0
1118	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2LoNmCtoAXg	2013-07-02T15:51:12Z	2013-07-02 15:51:12	E Janssens & J Dierckx The next iteration of your GUI	[EuroPython 2013] E. Janssens J. Dierckx The next iteration of your GUI 02 July 2013 Track Ravioli	27	Education	PT57M18S	3438	2d	sd	false			352	1	0	0	0
1119	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TZeGN7baT5A	2013-07-02T15:49:28Z	2013-07-02 15:49:28	H Krosing PostgreSQL is Web Scale Really	[EuroPython 2013] H Krosing PostgreSQL is Web Scale Really 02 July 2013 Track Tagliatelle	27	Education	PT53M21S	3201	2d	sd	false			231	0	0	0	0
1120	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Nj4nwh_VrPM	2013-07-02T15:43:59Z	2013-07-02 15:43:59	R. Collins TDM Test Driven Madness	[EuroPython 2013] R. Collins TDM Test Driven Madness 02 July 2013 Track Ravioli	27	Education	PT57M19S	3439	2d	sd	false			789	7	0	0	0
1121	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	k6Z2JHUmZXM	2013-07-02T15:30:58Z	2013-07-02 15:30:58	Helger Krekel - pytest - rapid and simple testing with Python	[EuroPython 2013] Helger Krekel - pytest - rapid and simple testing with Python - 02 July 2013 "Track Lasagne" First 5 minutes of conference are lost.	27	Education	PT1H50S	50	2d	sd	false			2168	19	0	0	1
1122	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XoItc3DIIF4	2013-07-02T15:30:08Z	2013-07-02 15:30:08	Alessandro Amici - Programmazione competitiva con PyPy: "Vincere con Python!"	[EuroPython 2013] Alessandro Amici - Programmazione competitiva con PyPy: "Vincere con Python!" 02 July 2013 "Track Big-Mac"	28	Science & Technology	PT53M5S	3185	2d	sd	false			120	2	0	0	0
1123	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Pz-DIkpk7PM	2013-07-02T15:26:08Z	2013-07-02 15:26:08	H.Percival Obey the Testing Goat! Rigorous Test Driven Web Development with Django and Selenium Pt1	[EuroPython 2013] H. Percival Obey the Testing Goat! Rigorous Test Driven Web Development with Django and Selenium Part1 02 July 2013 Track Pizza Napoli	27	Education	PT2H2M55S	175	2d	sd	false			1940	15	0	0	1
1124	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	G7yjwiwlVUA	2013-07-02T15:23:02Z	2013-07-02 15:23:02	Antonio Cuni - Bug hunting for dummies	[EuroPython 2013] : Antonio Cuni - Bug hunting for dummies - 02 July 2013 "Track Spaghetti"	27	Education	PT52M45S	3165	2d	sd	false			115	0	0	0	0
1125	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jjXWVhVMR9k	2013-07-02T14:59:15Z	2013-07-02 14:59:15	Alessandro Amici - Coding competitions with PyPy aka "Python for the win!"	[EuroPython 2013] Alessandro Amici - Coding competitions with PyPy aka "Python for the win!" - 02 July 2013 "Track Lasagne"	27	Education	PT47M19S	2839	2d	sd	false			343	2	0	0	1
1126	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	I-lGyn3PHP4	2013-07-02T14:54:27Z	2013-07-02 14:54:27	John Britton - Git Internals - Graphs, Hashes, and Compression	[EuroPython 2013] John Britton - Git Internals - Graphs, Hashes, and Compression - 02 July 2013 "Track Spaghetti"	27	Education	PT57M32S	3452	2d	sd	false			3096	34	0	0	1
1127	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	d-1aZrSLGUw	2013-07-02T13:30:25Z	2013-07-02 13:30:25	Lasagne Track (EuroPython 2013)		28	Science & Technology	PT45S	45	2d	sd	false			36	0	0	0	0
1128	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kJh3emqbco8	2013-07-02T12:02:06Z	2013-07-02 12:02:06	M Müller Faster Python Programs through Optimization Part 2	[EuroPython 2013] M. Müller Faster Python Programs through Optimization Part 2 02 July 2013 Track Pizza Napoli	27	Education	PT1H58M	3480	2d	sd	false			60	0	0	0	0
1129	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iNOd7-_TdDo	2013-07-02T11:30:04Z	2013-07-02 11:30:04	F Percoco Marconi Queuing and Notification service for OpenStack	[EuroPython 2013] F Percoco Marconi Queuing and Notification service for OpenStack 02 July 2013 Track Tagliatelle	27	Education	PT38M31S	2311	2d	sd	false			495	1	0	0	1
1130	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7w3eCB3vgig	2013-07-02T11:29:02Z	2013-07-02 11:29:02	F Percoco OpenStack A python based IaaS provider( no audio sometimes)	[EuroPython 2013] F Percoco OpenStack A python based IaaS provider 02 July 2013 Track Tagliatelle	27	Education	PT39M56S	2396	2d	sd	false			108	0	0	0	0
1131	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lJtED-xN-HE	2013-07-02T11:22:12Z	2013-07-02 11:22:12	Andrey Vlasovskikh - Static analysis of Python	[EuroPython 2013] : Andrey Vlasovskikh - Static analysis of Python - 02 July 2013 "Track Spaghetti"	27	Education	PT50M43S	3043	2d	sd	false			184	1	0	0	0
1132	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	RvbDCzroavY	2013-07-02T11:14:34Z	2013-07-02 11:14:34	H. Schlawack Solid Python Application Deployments For Everybody	[EuroPython 2013] H Schlawack Solid Python Application Deployments For Everybody 02 July 2013 Track Ravioli	27	Education	PT41M16S	2476	2d	sd	false			2696	11	0	0	0
1133	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kRCtKrsqxks	2013-07-02T11:10:40Z	2013-07-02 11:10:40	K. Schluehr Functional testing with Python	[EuroPython 2013] K. Schluehr Functional testing with Python 02 July 2013 Track Ravioli	27	Education	PT29M11S	1751	2d	sd	false			411	1	2	0	0
1134	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2MZ1VbYQrfY	2013-07-02T11:09:37Z	2013-07-02 11:09:37	Andrew Mleczko - Celery and Social Networks. 5 Things I Have Learned During Earthquake Hackathon	[EuroPython 2013] Andrew Mleczko - Celery and Social Networks. 5 Things I Have Learned During Earthquake Hackathon - 02 July 2013 "Track Lasagne"	27	Education	PT42M14S	2534	2d	sd	false			59	0	0	0	0
1135	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fyvSnpHo7_g	2013-07-02T10:47:55Z	2013-07-02 10:47:55	Aureliana Barghini - Simulare l'assetto e l'orbita di un satellite con SymPy e PyEphem	[EuroPython 2013] Aureliana Barghini - Simulare l'assetto e l'orbita di un satellite con SymPy e PyEphem - 02 July 2013 "Track Big-Mac"	27	Education	PT23M20S	1400	2d	sd	false			142	1	0	0	0
1136	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kdVypb05VOI	2013-07-02T10:30:14Z	2013-07-02 10:30:14	Ezio Melotti - Understanding Encodings	[EuroPython 2013] Ezio Melotti - Understanding Encodings - 02 July 2013 "Track Lasagne"	27	Education	PT56M18S	3378	2d	sd	false			372	5	0	0	0
1137	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	AkWS957LwyU	2013-07-02T10:25:12Z	2013-07-02 10:25:12	Adam Hitchcock - How DISQUS does it when it isn't Django	[EuroPython 2013] : Adam Hitchcock - How DISQUS does "it" when "it" isn't Django - 02 July 2013 "Track Spaghetti"	27	Education	PT53M35S	3215	2d	sd	false			276	5	0	0	0
1138	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UOWgwd56Vuw	2013-07-02T10:22:46Z	2013-07-02 10:22:46	Fabrizio Manfredi, Federico Mosca - Uno sguardo agli internal di RestFS	[EuroPython 2013] Fabrizio Manfredi, Federico Mosca - Uno sguardo agli internal di RestFS - 02 July 2013 "Track Big-Mac"	27	Education	PT49M36S	2976	2d	sd	false			36	0	0	0	0
1139	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	EvIsHvR5PFw	2013-07-02T10:00:33Z	2013-07-02 10:00:33	C Boudjnah Introduction to OpenStack Swift	[EuroPython 2013] C Boudjnah Introduction to OpenStack Swift 02 July 2013 Track Ravioli	28	Science & Technology	PT41M53S	2513	2d	sd	false			421	3	1	0	0
1140	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_gSMatUoPTo	2013-07-02T09:39:28Z	2013-07-02 09:39:28	F Xicluna Lets code with style	[EuroPython 2013] F. Xicluna - Let's code with style - 02 July 2013 Track Ravioli	27	Education	PT39M53S	2393	2d	sd	false			71	0	0	0	0
1141	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SwSQ-hTiBW0	2013-07-02T09:10:52Z	2013-07-02 09:10:52	P Enfedaque Python objects essentials Part 1	[EuroPython 2013] P. Enfedaque Python objects essentials - 02 July 2013 " Track Pizza Margherita"	27	Education	PT1H31M12S	1872	2d	sd	false			251	1	0	0	1
1142	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	H-AfWZ5uios	2013-07-02T09:03:07Z	2013-07-02 09:03:07	M Müller Faster Python Programs through Optimization Part 1	[EuroPython 2013] M. Müller Faster Python Programs through Optimization - 02 July 2013 " Track Pizza Napoli"	27	Education	PT1H25M39S	1539	2d	sd	false			95	0	0	0	0
1143	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PVRVKYus7tI	2013-07-02T08:42:35Z	2013-07-02 08:42:35	David Cramer - Open Source as a Business	[EuroPython 2013] : David Cramer - Open Source as a Business - 02 July 2013 "Track Spaghetti"	27	Education	PT41M31S	2491	2d	sd	false			1218	13	0	0	0
1144	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BpjgoYxt6Yg	2013-07-02T08:31:48Z	2013-07-02 08:31:48	Alessio Siniscalchi - Flussi di dati GPS in near real time	[EuroPython 2013] Alessio Siniscalchi - Flussi di dati GPS in near real-time - 02 July 2013 "Track Big-Mac"	27	Education	PT37M47S	2267	2d	sd	false			48	0	0	0	0
1145	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NLZKjYxJHk8	2013-07-02T08:28:24Z	2013-07-02 08:28:24	Lynn Root - Sink or swim 5 life jackets to throw to New Coders	[EuroPython 2013] Lynn Root - Sink or swim: 5 life jackets to throw to New Coders- 02 July 2013 "Track Lasagne"	27	Education	PT32M44S	1964	2d	sd	false			227	6	0	0	1
1146	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UvVMwJtfnUw	2013-07-02T08:22:51Z	2013-07-02 08:22:51	Muharem Hrnjadovic I see Openstack In Your Future	[EuroPython 2013] Muharem Hrnjadovic- I see Openstack In Your Future! - 02 July 2013 " Track Tagliatelle"	27	Education	PT37M47S	2267	2d	sd	false			115	0	0	0	0
1147	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QDCpkXYXaCI	2013-07-02T08:11:29Z	2013-07-02 08:11:29	D Mattews ElasticSearch Introduction and lessons	[EuroPython 2013] D. Matthews ElasticSearch. Introduction and lessons learned ! - 02 July 2013 " Track Ravioli"	27	Education	PT32M10S	1930	2d	sd	false			1741	9	0	0	0
1148	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Qvy1sQH3wM4	2013-07-02T08:08:19Z	2013-07-02 08:08:19	C. Kerstiens - Postgres Demystified	[EuroPython 2013] C. Kerstiens - Postgres Demystified - 02 July 2013 "Track Lasagne"	27	Education	PT36M35S	2195	2d	sd	false			239	4	0	0	0
1149	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	u0L3DuAPOVw	2013-07-02T08:07:54Z	2013-07-02 08:07:54	H. Percival - Obidire alla capra	[EuroPython 2013] H. Percival - Obidire alla capra! TDD con Python i Selenium - 02 July 2013 "Track Big-Mac"	27	Education	PT38M36S	2316	2d	sd	false			333	8	0	0	0
1150	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fJSZ8oH00vE	2013-07-02T07:59:03Z	2013-07-02 07:59:03	B. Renenié - Deployability of Python Web Applications	[EuroPython 2013] B. Renenié - Deployability of Python Web Applications - 02 July 2013 "Track Spaghetti"	27	Education	PT33M59S	2039	2d	sd	false			88	1	0	0	0
1151	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5JOj8wozO2M	2013-07-02T03:53:57Z	2013-07-02 03:53:57	Lasagne Track (EuroPython 2013)		28	Science & Technology	PT10H34M39S	2079	2d	sd	false			460	1	0	0	0
1152	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	plf657a_pu4	2013-07-02T03:14:49Z	2013-07-02 03:14:49	Ravioli Track (EuroPython 2013)		28	Science & Technology	PT8H1M12S	72	2d	sd	false			84	0	0	0	0
1153	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tFLX2alt6Z0	2013-07-02T02:32:02Z	2013-07-02 02:32:02	Spaghetti Track (EuroPython 2013)		28	Science & Technology	PT5H10M	600	2d	sd	false			102	0	0	0	0
1154	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4nqnRtC3NUk	2013-07-02T02:23:00Z	2013-07-02 02:23:00	Tagliatelle Track (EuroPython 2013)		28	Science & Technology	PT7H57M43S	3463	2d	sd	false			101	0	0	0	0
1155	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	j6d8PvLw-D0	2013-07-02T01:37:09Z	2013-07-02 01:37:09	Big Mac Track (EuroPython 2013)		28	Science & Technology	PT7H49M49S	2989	2d	sd	false			96	0	0	0	0
1156	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wyylj8uBMIs	2013-07-02T00:47:00Z	2013-07-02 00:47:00	Pizza Margherita Track (EuroPython 2013)		28	Science & Technology	PT7H9M28S	568	2d	sd	false			253	2	0	0	0
1157	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lP4cLqLMzS0	2013-07-01T17:40:51Z	2013-07-01 17:40:51	Lightning talks	[EuroPython 2013] Lightning talks - 01 July 2013 "Track Lasagne"	27	Education	PT1H1M21S	81	2d	sd	false			235	0	0	0	0
1158	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tVB_krH04-g	2013-07-01T17:25:03Z	2013-07-01 17:25:03	Lynn Root - GETTING MORE DEVELOPER GIRLS USING PYTHON	[EuroPython 2013] Lynn Root - GETTING MORE DEVELOPER GIRLS USING PYTHON- 01 July 2013 " Track Tagliatelle"	27	Education	PT36M56S	2216	2d	sd	false			249	2	0	0	1
1159	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	gHG9FRSlPxw	2013-07-01T13:59:45Z	2013-07-01 13:59:45	Alex Martelli - "Good enough" is good enough!	[EuroPython 2013] Alex Martelli - "Good enough" is good enough! - 01 July 2013 "Track Lasagne"	27	Education	PT1H18S	18	2d	sd	false			3340	30	0	0	1
1160	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SCgl0xXFVOg	2013-07-01T11:25:24Z	2013-07-01 11:25:24	Holger Krekel - The return of peer to peer computing	[EuroPython 2013] H. Krekel - The return of peer to peer computing - 01 July 2013 "Track Lasagne"	27	Education	PT43M13S	2593	2d	sd	false			2409	16	0	0	2
1161	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-T5l3vh5X2U	2013-07-01T11:25:06Z	2013-07-01 11:25:06	Questions to Holger Krekel - The return of peer to peer computing	[EuroPython 2013] Questions to Holger Krekel - The return of peer to peer computing - 01 July 2013 "Track Lasagne"	27	Education	PT28M51S	1731	2d	sd	false			109	1	0	0	0
1162	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5pZVqBFtuLk	2013-07-01T11:22:56Z	2013-07-01 11:22:56	Armin Ronacher - Thinking outside of the box	[EuroPython 2013] Armin Ronacher - Thinking outside of the box - 01 July 2013 "Track Lasagne"	27	Education	PT34M31S	2071	2d	sd	false			3116	27	3	0	0
1163	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MG2HACx_DfU	2013-07-01T11:11:03Z	2013-07-01 11:11:03	Introduction + V. van Lindberg - The next 20 years of Python	[EuroPython 2013] Introduction + V. van Lindberg - The next 20 years of Python - 01 July 2013 "Track Lasagne"	27	Education	PT1H18M9S	1089	2d	sd	false			741	5	0	0	2
1164	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	uFqK7ACo-2U	2013-02-05T11:51:21Z	2013-02-05 11:51:21	Reportage EuroPython 2012	EuroPython in 3 minutes!	29	Nonprofits & Activism	PT2M55S	175	2d	hd	false	https://i.ytimg.com/vi/uFqK7ACo-2U/maxresdefault.jpg		10862	10	0	0	0
1165	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	b60jYn8iIIE	2012-07-30T12:28:52Z	2012-07-30 12:28:52	Javascript for Pythonistas	[EuroPython 2012] R. Dopieralski - 4 JULY 2012 in "Track Pizza Margherita"	28	Science & Technology	PT2H3M36S	216	2d	sd	false			850	6	1	0	0
1166	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dKZjbm_qLUM	2012-07-30T12:09:03Z	2012-07-30 12:09:03	Writing a Pyramid application	[EuroPython 2012] D. Nouri - 6 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT1H35M33S	2133	2d	sd	false			11808	45	2	0	5
1167	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wmimppnIfLY	2012-07-30T11:51:17Z	2012-07-30 11:51:17	In search of reduced loading times	[EuroPython 2012] Aposolis Bessas - 6 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT44M22S	2662	2d	sd	false			211	1	0	0	0
1168	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bXrtX6yRJJI	2012-07-27T16:19:27Z	2012-07-27 16:19:27	Developing Android apps completely in Python part 2	[EuroPython 2012] T Pearl - 6 JULY 2012 in "Track Tagliatelle" Please note: Part 1 of the training was lost due to technical problems. More details can be found on this page: https://thp.io/2012/europython/	28	Science & Technology	PT1H50M54S	3054	2d	sd	false			221279	488	34	0	36
1169	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	M_xcTtnucgo	2012-07-27T16:02:39Z	2012-07-27 16:02:39	Sviluppare una Restful web API con Python- fask e MongoDB - 2	[EuroPython 2012] Nicola Iarocci - 6 JULY 2012 in "Track Pizza Big Mac"	28	Science & Technology	PT54M21S	3261	2d	sd	false			308	2	0	0	0
1170	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	aK8gDUUBMiM	2012-07-23T15:04:14Z	2012-07-23 15:04:14	Supercharging C++ Code with Embedded Python	[EuroPython 2012] Michael Fotsch - 6 JULY 2012 in "Track Big Mac"	28	Science & Technology	PT43M43S	2623	2d	sd	false			10210	47	2	0	4
1171	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qYas6qMr17Q	2012-07-07T14:58:34Z	2012-07-07 14:58:34	Slicing and Dicing with Cubes - Light-weight OLAP Framework and Server	[EuroPython 2012] S Urbanek - 6 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT2H3M24S	204	2d	sd	false			6940	28	1	0	4
1172	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	oH41rWS6GoE	2012-07-07T14:37:03Z	2012-07-07 14:37:03	Python for finance part 2	[EuroPython 2012] Y Hilpisch - 6 JULY 2012 in "Track Pizza Margherita"	28	Science & Technology	PT2H13M18S	798	2d	sd	false			3006	8	1	0	1
1173	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	CMBH0LG3g4I	2012-07-07T14:13:20Z	2012-07-07 14:13:20	Experimental Product Design with Python (Lean Startup)	[EuroPython 2012] M Ramm - 6 JULY 2012 "Track Spaghetti"	28	Science & Technology	PT57M30S	3450	2d	sd	false			1626	4	1	0	1
1174	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tJGGu2bqZeI	2012-07-07T14:07:31Z	2012-07-07 14:07:31	Python for finance part 1	[EuroPython 2012] Y Hilpisch - 6 JULY 2012 in "Track Pizza Margherita"	28	Science & Technology	PT1H29M51S	1791	2d	sd	false			19143	40	5	0	3
1175	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5TwRVEe9MpA	2012-07-07T14:05:52Z	2012-07-07 14:05:52	Building an Advanced Python Installation for Linux and Windows	[EuroPython 2012] Anselm Kruis - 6 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT56M41S	3401	2d	sd	false			532	3	0	0	0
1176	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UjdU77m1228	2012-07-07T14:02:50Z	2012-07-07 14:02:50	OpenGL and Python on computer and embed device	[EuroPython 2012] M Virbel - 6 JULY 2012 "Track Tagliatelle"	28	Science & Technology	PT54M53S	3293	2d	sd	false			6790	25	3	0	3
1177	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	puf2x473RTE	2012-07-07T14:00:12Z	2012-07-07 14:00:12	Some tricks for incremental refactoring of Python Code	[EuroPython 2012] Steve Barnes - 6 JULY 2012 "Track Lasagne"	28	Science & Technology	PT38M26S	2306	2d	sd	false			3489	6	2	0	4
1178	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WSHD029BAls	2012-07-07T13:56:47Z	2012-07-07 13:56:47	Cubes light weight olap fw server	[EuroPython 2012] S Urbanek - 6 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT40M1S	2401	2d	sd	false			3492	21	1	0	1
1179	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iRR5K3bzxXg	2012-07-07T13:56:19Z	2012-07-07 13:56:19	Fully versioned distributed object persistence	[EuroPython 2012] Malthe Borch - 6 JULY 2012 "Track Lasagne"	28	Science & Technology	PT39M50S	2390	2d	sd	false			366	1	0	0	0
1180	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8NJTuubGbNc	2012-07-07T13:54:53Z	2012-07-07 13:54:53	How Did You Do That Or How a Non developer Snuck Python Into a Large Organization	[EuroPython 2012] Michael Pedersen - 6 JULY 2012 "Track Lasagne"	28	Science & Technology	PT38M44S	2324	2d	sd	false			339	2	0	0	0
1181	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	f1t2M2wcY2k	2012-07-07T13:54:12Z	2012-07-07 13:54:12	Lightning talks - Friday	[EuroPython 2012] - 6 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT1H16M45S	1005	2d	sd	false			528	6	1	0	0
1182	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lJYEup-0gJo	2012-07-07T13:53:58Z	2012-07-07 13:53:58	Lets play with Python and OpenCV	[EuroPython 2012] Omar Mendez - 6 JULY 2012 "Track Lasagne"	28	Science & Technology	PT55M33S	3333	2d	sd	false			54694	115	38	0	16
1183	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8sZaE2zWbUo	2012-07-07T13:53:23Z	2012-07-07 13:53:23	OpenGL and Python on computer and embed device part 2	[EuroPython 2012] S Urbanek - 6 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT52M	3120	2d	sd	false			550	1	0	0	1
1184	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tK45uXtNfUo	2012-07-07T13:52:31Z	2012-07-07 13:52:31	Composite Key is ready for Django 1 4	[EuroPython 2012] Simone Federici Michel Petrucha - 6 JULY 2012 "Track Spaghetti"	28	Science & Technology	PT45M29S	2729	2d	sd	false			931	2	0	0	0
1185	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SpaWsnCRNo8	2012-07-07T13:50:27Z	2012-07-07 13:50:27	How Brazil is building a digital nation with open source and Python	[EuroPython 2012] Erico Andrei - 6 JULY 2012 "Track Lasagne"	28	Science & Technology	PT46M21S	2781	2d	sd	false			413	4	0	0	0
1186	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BaqaIw2c91o	2012-07-07T13:48:47Z	2012-07-07 13:48:47	The Larch Environment Python programs as visual interactive documents	[EuroPython 2012] G French - 6 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT1H27S	27	2d	sd	false			403	0	0	0	0
1187	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jfkKOaNsE00	2012-07-07T13:47:59Z	2012-07-07 13:47:59	Going massive with uWSGI and nginx	[EuroPython 2012] Roberto De Ioris - 6 JULY 2012 "Track Spaghetti"	28	Science & Technology	PT35M41S	2141	2d	sd	false			7016	19	2	0	5
1188	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7BIagoQdlrc	2012-07-07T13:46:00Z	2012-07-07 13:46:00	Python for Startups	[EuroPython 2012] Peter Inglesby - 6 JULY 2012 "Track Lasagne"	28	Science & Technology	PT40M12S	2412	2d	sd	false			1655	4	1	0	1
1189	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fEIqPDFhRA4	2012-07-07T13:45:56Z	2012-07-07 13:45:56	HeavyBASE a Python peer to peer database for clinical trials and biobanks	[EuroPython 2012] Luca Clivio - 6 JULY 2012 "Track Lasagne"	28	Science & Technology	PT43M5S	2585	2d	sd	false			604	2	0	0	0
1190	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	D3-NZXHO5QI	2012-07-07T13:45:48Z	2012-07-07 13:45:48	Discovering Descriptors	[EuroPython 2012] Peter Inglesby - 6 JULY 2012 "Track Spaghetti"	28	Science & Technology	PT37M51S	2271	2d	sd	false			5222	48	1	0	7
1191	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ymtlFdrwsZY	2012-07-07T13:44:52Z	2012-07-07 13:44:52	Building complex scalable systems on Python and AWS	[EuroPython 2012] Jens De Smit - 6 JULY 2012 "Track Lasagne"	28	Science & Technology	PT47M3S	2823	2d	sd	false			996	3	1	0	0
1192	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	sq8ef-KVaRc	2012-07-07T13:44:12Z	2012-07-07 13:44:12	Introduction to Number Crunching	[EuroPython 2012] Enrico Franchi e Valerio Maggio - 6 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT55M15S	3315	2d	sd	false			671	2	0	0	0
1193	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Inzpxafkgr8	2012-07-07T13:41:49Z	2012-07-07 13:41:49	Pysmbc python c mods are easy	[EuroPython 2012] R Polli - 6 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT37M20S	2240	2d	sd	false			117	0	0	0	0
1194	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OeToCdcv8zo	2012-07-07T13:40:19Z	2012-07-07 13:40:19	Creating federated authorisation for a Django survey system	[EuroPython 2012] Ed Crewe - 6 JULY 2012 in "Track Ravioli "	28	Science & Technology	PT43M25S	2605	2d	sd	false			593	3	0	0	1
1195	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	U7twgv9IhqQ	2012-07-07T13:39:34Z	2012-07-07 13:39:34	Beyond Clouds Open Source Edge Computing in Python with SlapOS	[EuroPython 2012] Jean Paul Smets - 6 JULY 2012 "Track Lasagne"	28	Science & Technology	PT58M1S	3481	2d	sd	false			643	3	0	0	0
1196	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WqBlq09pyBI	2012-07-07T13:33:55Z	2012-07-07 13:33:55	Slew library GUIs made easy	[EuroPython 2012] A Mottola - 6 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT37M53S	2273	2d	sd	false			247	2	0	0	0
1197	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TPcDVxnsLuU	2012-07-07T13:27:47Z	2012-07-07 13:27:47	How to set proprietary geospatial data free with GDALOGR and Proj4	[EuroPython 2012] Alessandro Amici - 6 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT40M35S	2435	2d	sd	false			336	1	0	0	0
1198	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	kEqwe7EGuQU	2012-07-06T18:16:19Z	2012-07-06 18:16:19	Minimalism in software development- or why you should do less	[EuroPython 2012] Fredrik Haard - 5 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT43M39S	2619	2d	sd	false			1956	26	1	0	3
1199	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cPZokpaA0Vw	2012-07-06T18:08:35Z	2012-07-06 18:08:35	Using sockets in Python	[EuroPython 2012] F Buynooghe - 5 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT55M5S	3305	2d	sd	false			7324	16	1	0	5
1200	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	VOUH4_ka2Ls	2012-07-06T17:46:39Z	2012-07-06 17:46:39	Twisted tutorial part 2	[EuroPython 2012] S Thorne - 5 JULY 2012 in "Track Pizza Margherita"	28	Science & Technology	PT1H48M45S	2925	2d	sd	false			3733	9	0	0	1
1201	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	RCBiw78SDb8	2012-07-06T17:35:47Z	2012-07-06 17:35:47	Some Experiences with Python-For-Android -Py4A	[EuroPython 2012] Nik Klever - 5 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT50M13S	3013	2d	sd	false			3328	13	2	0	2
1202	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	M8v06Wksx24	2012-07-06T17:17:48Z	2012-07-06 17:17:48	Costruire applicazioni web complesse con le pluggable applications di TurboGears2 in pochi minuti	[EuroPython 2012] Alessandro Molina - 5 JULY 2012 in "Track Big Mac"	28	Science & Technology	PT35M34S	2134	2d	sd	false			209	2	0	0	0
1203	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	83YIQwtXKzk	2012-07-06T16:55:30Z	2012-07-06 16:55:30	Functional programming in Python and even Haskell part 1	[EuroPython 2012] S Trygubenko - 5 JULY 2012 in "Track Pizza Napoli"	28	Science & Technology	PT2H22M30S	1350	2d	sd	false			3121	10	1	0	2
1204	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WfyoC0h9QKA	2012-07-06T16:18:00Z	2012-07-06 16:18:00	Fully Test driven Django with selenium part 1	[EuroPython 2012] H Percival - 5 JULY 2012 in "Pizza Napoli"	28	Science & Technology	PT1H41M43S	2503	2d	sd	false			4266	15	3	0	5
1205	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YKYpyGG6dvU	2012-07-06T16:06:06Z	2012-07-06 16:06:06	Scegliere con saggezza il proprio WSGI server	[EuroPython 2012] Roberto De Ioris - 5 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT55M53S	3353	2d	sd	false			176	2	0	0	0
1206	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1oenHuqyQXc	2012-07-06T16:05:28Z	2012-07-06 16:05:28	Fully Test driven Django with selenium part 2	[EuroPython 2012] H Percival - 5 JULY 2012 in "Pizza Napoli"	28	Science & Technology	PT1H51M47S	3107	2d	sd	false			1099	7	0	0	1
1207	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	GuNwewBU_Hw	2012-07-06T16:04:46Z	2012-07-06 16:04:46	Twisted tutorial part 1	[EuroPython 2012] S Thorne - 5 JULY 2012 in "Track Pizza Margherita"	28	Science & Technology	PT1H33M28S	2008	2d	sd	false			23459	65	19	0	10
1208	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8q2ROzfX8E0	2012-07-06T15:59:22Z	2012-07-06 15:59:22	Maurizio Delmonte Non solo Django MVC orientato ai contenuti con Plone e Zope Toolkit	 	28	Science & Technology	PT1H27M29S	1649	2d	sd	false			183	3	0	0	0
1209	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FLIEJt6IymY	2012-07-06T15:58:18Z	2012-07-06 15:58:18	Building your first app with python and MongoDB	[EuroPython 2012] Ross Lawley - 5 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT51M30S	3090	2d	sd	false			15330	41	2	0	4
1210	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_JrZUm9ZHIw	2012-07-06T15:58:16Z	2012-07-06 15:58:16	Fast Data Mining with Pytables and pandas	[EuroPython 2012] Y Hipisch - 5 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT57M57S	3477	2d	sd	false			14797	41	1	0	3
1211	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1yZmtiNeffg	2012-07-06T15:56:49Z	2012-07-06 15:56:49	The integrators guide to duct-taping	[EuroPython 2012] S Deponti - 5 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT55M14S	3314	2d	sd	false			146	1	0	0	0
1212	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IslxBmz1pVg	2012-07-06T15:54:33Z	2012-07-06 15:54:33	Python and Arduino a tale of snakes and kings	[EuroPython 2012] Davide Corio e Alessandro Pasotti - 5 JULY 2012 in "Track Big Mac"	28	Science & Technology	PT51M17S	3077	2d	sd	false			539	4	0	0	0
1213	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MFqP03EfT4I	2012-07-06T15:54:06Z	2012-07-06 15:54:06	sys._current_frames- take real-time X-rays of your software for fun and performance	[EuroPython 2012] Leonardo Almeida - 5 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT50M10S	3010	2d	sd	false			547	1	0	0	0
1214	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	KOvgfbBFZxk	2012-07-06T15:51:02Z	2012-07-06 15:51:02	Advanced Flask Pattern	[EuroPython 2012] A Ronacher - 5 JULY 2012 in "Track Pizza Margherita"	28	Science & Technology	PT1H3M11S	191	2d	sd	false			9631	75	1	0	2
1215	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MXEF7CE9ERQ	2012-07-06T15:49:00Z	2012-07-06 15:49:00	Python e Arduino una storia di serpenti e re	[EuroPython 2012] Davive Corio e Alessandro Pasotti - 5 JULY 2012 - "Track Big Mac"	28	Science & Technology	PT53M50S	3230	2d	sd	false			1606	7	0	0	0
1216	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6XvSvPhqRZ4	2012-07-06T15:48:34Z	2012-07-06 15:48:34	Full Text Search for Trac with Apache Solr	[EuroPython 2012] A Willmer- 5 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT50M8S	3008	2d	sd	false			1425	3	0	0	0
1217	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	J992TknDAT8	2012-07-06T15:46:45Z	2012-07-06 15:46:45	Functional programming in Python and even Haskell part 2	[EuroPython 2012] S Trygubenko - 5 JULY 2012 in "Track Pizza Napoli"	28	Science & Technology	PT54M49S	3289	2d	sd	false			550	1	0	0	0
1218	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	29rzDcisVZQ	2012-07-06T15:46:37Z	2012-07-06 15:46:37	Repreducible installation of applications Zc Buildout	[EuroPython 2012] T Lotze- 5 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT40M33S	2433	2d	sd	false			430	1	1	0	0
1219	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vUwSWtWJrnY	2012-07-06T15:45:11Z	2012-07-06 15:45:11	Content Management professionale con Python nel 2012	[EuroPython 2012] Maurizio Delmonte - 5 JULY 2012 in "Track Big Mac"	28	Science & Technology	PT56M30S	3390	2d	sd	false			158	0	0	0	0
1220	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	c6PYnZUMF7o	2012-07-06T15:44:04Z	2012-07-06 15:44:04	HotPy 2 - A High Performance Binary-Compatible Virtual Machine for Python	[EuroPython 2012] Mark Shannon - 5 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT58M2S	3482	2d	sd	false			865	5	0	0	0
1221	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OMLDHNaUMB8	2012-07-06T15:39:40Z	2012-07-06 15:39:40	Behaviour Driven Development at BSkyB	[EuroPython 2012] Russell Sherwood- David Sale - 5 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT42M9S	2529	2d	sd	false			1094	4	0	0	0
1222	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	I_HqPjl6quo	2012-07-06T15:39:33Z	2012-07-06 15:39:33	Python web applications in multihost- low latency environments	[EuroPython 2012] P Schon - 5 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT43M30S	2610	2d	sd	false			393	1	0	0	0
1223	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JlNYO4zUDAQ	2012-07-06T15:39:33Z	2012-07-06 15:39:33	Language alone wont pay your bills	[EuroPython 2012] Alan Franzoni - 5 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT46M59S	2819	2d	sd	false			423	3	0	0	0
1224	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	AmmVtWY2GfU	2012-07-06T15:38:08Z	2012-07-06 15:38:08	Python in banking systems	[EuroPython 2012] M Dziergwa - 5 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT43M41S	2621	2d	sd	false			5396	14	1	0	1
1225	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5kn3Sugrxz8	2012-07-06T15:37:09Z	2012-07-06 15:37:09	Python is faster than fortran	[EuroPython 2012] M Muller - 5 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT39M3S	2343	2d	sd	false			6242	8	52	0	10
1226	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	EwLih26Cjfs	2012-07-06T15:37:02Z	2012-07-06 15:37:02	Aspect oriented programming applied to dictionary trees	[EuroPython 2012] Florian Friesdorf - 5 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT54M24S	3264	2d	sd	false			577	3	0	0	0
1227	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XAARbHEjZUQ	2012-07-06T15:36:53Z	2012-07-06 15:36:53	A Ronacher Advanced Flask Pattern Q A session	 	28	Science & Technology	PT42M43S	2563	2d	sd	false			932	6	0	0	0
1228	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HiOp8KQLcgM	2012-07-06T15:36:22Z	2012-07-06 15:36:22	NDB new data store library for Google App engine	[EuroPython 2012] G Van Rossum - 5 JULY 2012 in "Track Pizza Margherita"	28	Science & Technology	PT46M23S	2783	2d	sd	false			1915	2	2	0	0
1229	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jrQT77qFN3o	2012-07-06T15:30:04Z	2012-07-06 15:30:04	A schereiber A laboratory Notebook System	 	28	Science & Technology	PT43M27S	2607	2d	sd	false			480	1	0	0	0
1230	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Skdz5tTAHK0	2012-07-06T15:29:23Z	2012-07-06 15:29:23	Guidelines to writing a Python API	[EuroPython 2012] George Peristerakis - 5 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT40M20S	2420	2d	sd	false			3164	0	9	0	0
1231	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qZfkxymF_Xo	2012-07-06T15:25:51Z	2012-07-06 15:25:51	Marc-Andre Lemburg - PSF Adress	 	28	Science & Technology	PT15M40S	940	2d	sd	false			45	0	0	0	0
1232	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PcopX_ney0g	2012-07-06T15:20:11Z	2012-07-06 15:20:11	Building a full featured Python Web Application in 10 minutes part 2	Building a full featured Python Web Application in 10 minutes with turbogears2 pluggable extensions part 2 [EuroPython 2012] A Molina - 5 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT30M21S	1821	2d	sd	false			5375	3	0	0	2
1233	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	l2PnVKQJg0I	2012-07-06T13:25:15Z	2012-07-06 13:25:15	Increasing women engagement in the Python community	[EuroPython 2012] L Root - 5 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT58M11S	3491	2d	sd	false			413	5	3	0	0
1234	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PeVB5DNptD4	2012-07-06T12:48:35Z	2012-07-06 12:48:35	Making DISQUS realtime	[EuroPython 2012] Adam Hitchcock - 5 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT1H1M55S	115	2d	sd	false			2013	16	0	0	0
1235	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2Ng-UIedZMY	2012-07-06T12:30:04Z	2012-07-06 12:30:04	Concurrent futures is here	[EuroPython 2012] Andrew Dalke - 5 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT43M27S	2607	2d	sd	false			1304	7	0	0	1
1236	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cn0bD2i-Ev8	2012-07-06T08:32:22Z	2012-07-06 08:32:22	Usiamo la api di uWSGI per scrivere applicazioni meno noiose	[EuroPython 2012] Roberto De Ioris - 4 JULY 2012 in "Track Big Mac"	28	Science & Technology	PT55M8S	3308	2d	sd	false			148	0	0	0	0
1237	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	x4hec861h2w	2012-07-05T22:03:32Z	2012-07-05 22:03:32	Camelot 101	[EuroPython 2012] J Dierckx A Cuni - 4 JULY 2012 in "Track Pizza Napoli"	28	Science & Technology	PT3H57M7S	3427	2d	sd	false			574	1	0	0	1
1238	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OyavJFwEZFo	2012-07-05T21:18:10Z	2012-07-05 21:18:10	Javascript for Pythonistas part 1	[EuroPython 2012] P Dopieralski - 4 JULY 2012 in "Track Pizza Margherita"	28	Science & Technology	PT2H3M36S	216	2d	sd	false			1300	4	0	0	0
1239	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4-4hTwlzTMk	2012-07-05T21:17:24Z	2012-07-05 21:17:24	Javascript for Pythonistas part 2	[EuroPython 2012] P Dopieralski - 4 JULY 2012 in "Track Pizza Margherita"	28	Science & Technology	PT1H13M5S	785	2d	sd	false			258	1	0	0	0
1240	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	GqpAkqy2In8	2012-07-05T20:36:34Z	2012-07-05 20:36:34	Mongodb and Python 2	[EuroPython 2012] R Lawley - 4 JULY 2012 in "Track Pizza Napoli"	28	Science & Technology	PT1H42M12S	2532	2d	sd	false			608	0	1	0	0
1241	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jZj7K3r9s3k	2012-07-05T20:35:23Z	2012-07-05 20:35:23	Google Apps loves Python	[EuroPython 2012] Simone Dalla - 4 JULY 2012 in "Track Big Mac"	28	Science & Technology	PT47M31S	2851	2d	sd	false			338	0	0	0	0
1242	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OTHggyZAot0	2012-07-05T20:34:49Z	2012-07-05 20:34:49	Music Theory - Genetic Algorithms and Python	[EuroPython 2012] Nicolas Tollervey - 4 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT54M31S	3271	2d	sd	false			47884	436	9	0	21
1243	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	99AoONzl-Ik	2012-07-05T20:33:29Z	2012-07-05 20:33:29	Seamless integration of python and postgresql	[EuroPython 2012] H Krossing - 4 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT56M35S	3395	2d	sd	false			1481	5	0	0	0
1244	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	isXLQEUWVy4	2012-07-05T20:32:19Z	2012-07-05 20:32:19	Mongodb and Python	[EuroPython 2012] R Lawley - 4 JULY 2012 in "Track Pizza Napoli"	28	Science & Technology	PT1H34M23S	2063	2d	sd	false			2076	4	0	0	0
1245	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4XRrLdogkdA	2012-07-05T19:54:39Z	2012-07-05 19:54:39	Multi-document consistency with MongoDB	[EuroPython 2012] Anders Hammarquist - 4 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT43M26S	2606	2d	sd	false			816	0	0	0	0
1246	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lvyfpteeA54	2012-07-05T18:09:39Z	2012-07-05 18:09:39	Faster python programs through optimization part 1	[EuroPython 2012] M Mollerv- 4 JULY 2012 in "Track Pizza Margherita"	28	Science & Technology	PT1H35M28S	2128	2d	sd	false			2072	9	2	0	2
1247	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	G2MfIP7GT4M	2012-07-05T17:55:51Z	2012-07-05 17:55:51	Spotify Ask us anything	[EuroPython 2012] Jyrki Pulliainen - 4 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT53M47S	3227	2d	sd	false			242	1	0	0	0
1248	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vaA0ohGKARY	2012-07-05T17:48:58Z	2012-07-05 17:48:58	Faster python programs through optimization part 2	[EuroPython 2012] M Mollerv- 4 JULY 2012 in "Track Pizza Margherita"	28	Science & Technology	PT1H41M6S	2466	2d	sd	false			421	4	0	0	2
1249	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UhYXIWmq-3Y	2012-07-05T17:28:15Z	2012-07-05 17:28:15	Practical guide to kill optimization- testing and other sw. project beasts	[EuroPython 2012] Fabio Pliger - 4 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT1H7M	420	2d	sd	false			218	0	0	0	0
1250	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qh9fN2iHaCQ	2012-07-05T16:32:10Z	2012-07-05 16:32:10	Developing Restful web apis with python-flask and mongodb	[EuroPython 2012] N Iarocci - 4 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT1H28M19S	1699	2d	sd	false			22233	100	4	0	8
1251	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-tbmih_I040	2012-07-05T14:14:55Z	2012-07-05 14:14:55	La salute per i geek stai meglio- risparmia - vivi a lungo tramite la pigrizia	[EuroPython 2012] Nicola Larosa - 4 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT39M54S	2394	2d	sd	false			135	0	0	0	0
1252	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	i5YwerH73EY	2012-07-05T14:10:21Z	2012-07-05 14:10:21	Building C- Apls on Pyton	[EuroPython 2012] A Bingham - 4 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT50M13S	3013	2d	sd	false			374	3	0	0	0
1253	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	garsUmsZIac	2012-07-05T09:56:31Z	2012-07-05 09:56:31	Lessons in Testing	[EuroPython 2012] David Cramer - 4 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT1H10M58S	658	2d	sd	false			587	5	1	0	0
1254	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	N2e9ICXHkbw	2012-07-05T09:37:15Z	2012-07-05 09:37:15	Python - Qt - MySQL - Konga ERP.m4v	[EuroPython 2012] Fabrizio Toso - 4 JULY 2012 in "Track Big Mac"	28	Science & Technology	PT49M46S	2986	2d	sd	false			2442	5	1	0	0
1255	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	VnyvyTgWbzg	2012-07-05T09:24:38Z	2012-07-05 09:24:38	Pyrun - the one file python runtime environment	[EuroPython 2012] M Lembuirg - 4 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT37M40S	2260	2d	sd	false			1036	1	0	0	1
1256	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QliDfkkFa4c	2012-07-05T09:10:48Z	2012-07-05 09:10:48	Obidire alla capra TDD con Python i Selenium	[EuroPython 2012] Harry Percival - 4 JULY 2012 in "Track Big Mac"	28	Science & Technology	PT1H27M1S	1621	2d	sd	false			281	2	0	0	1
1257	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IvKO63BSc9c	2012-07-05T08:59:45Z	2012-07-05 08:59:45	Big a little i practical artifici8al intelligence in python	[EuroPython 2012] T Mawushe - 4 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT46M31S	2791	2d	sd	false			585	3	0	0	0
1258	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ZDHkla5rllg	2012-07-05T08:53:07Z	2012-07-05 08:53:07	Nuitka the python compiler	[EuroPython 2012] K Haye - 4 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT1H28M13S	1693	2d	sd	false			8660	35	3	0	3
1259	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yxALwwDyWoA	2012-07-05T08:40:05Z	2012-07-05 08:40:05	Healty webapps throught continous introspection	[EuroPython 2012] Nicolas Venegas - 4 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT51M35S	3095	2d	sd	false			203	2	0	0	0
1260	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	RSIs_5ME6UE	2012-07-05T08:38:53Z	2012-07-05 08:38:53	Health for geeks feel better-save monay-live longer by being lazy	[EuroPython 2012] N Larosa - 4 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT41M15S	2475	2d	sd	false			297	3	0	0	0
1261	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9DIpgNzC5KM	2012-07-05T08:27:36Z	2012-07-05 08:27:36	Restfs the next generation cloud storage	[EuroPython 2012] F Manfredi F Mosca - 4 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT54M50S	3290	2d	sd	false			258	4	0	0	0
1262	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pDkrkP0yf70	2012-07-05T08:25:57Z	2012-07-05 08:25:57	The story of stackless Python	[EuroPython 2012] C Tismet A Rigo - 4 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT54M29S	3269	2d	sd	false			2473	13	1	0	2
1263	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xmsK1geCDq4	2012-07-05T07:39:02Z	2012-07-05 07:39:02	Clone detection in python	[EuroPython 2012] V Maggio - 4 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT56M26S	3386	2d	sd	false			412	1	0	0	0
1264	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	di3csK0Wsik	2012-07-04T19:00:42Z	2012-07-04 19:00:42	Pypedia a python development environment on a wiki	[EuroPython 2012] A Kanterakis - 4 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT53M12S	3192	2d	sd	false			286	0	0	0	0
1265	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Cgf73JmuINU	2012-07-04T18:59:26Z	2012-07-04 18:59:26	Protocol specifications written in python	[EuroPython 2012] F Haard - 4 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT49M57S	2997	2d	sd	false			429	2	0	0	0
1266	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fm78gjYkYKc	2012-07-04T18:51:29Z	2012-07-04 18:51:29	Hands on Pygame	[EuroPython 2012] R Dopieralski - 3 JULY 2012 in "Track Pizza Napoli"	28	Science & Technology	PT1H30M24S	1824	2d	sd	false			2192	10	1	0	5
1267	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cMtBUvORCfU	2012-07-04T18:45:29Z	2012-07-04 18:45:29	PyPy JIT under the hood	[EuroPython 2012] A Rigo - A Cuni - 4 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT1H1M27S	87	2d	sd	false			587	4	1	0	0
1268	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BP3G1s4eYMk	2012-07-04T18:33:29Z	2012-07-04 18:33:29	Come liberare i dati catastali in formato CXF con GDALOGR e Proj4	[EuroPython 2012] Alessandro Amici - 4 JULY 2012 in "Track Big Mac"	28	Science & Technology	PT38M17S	2297	2d	sd	false			840	3	0	0	0
1269	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Q6EKaBd7jmY	2012-07-04T18:30:45Z	2012-07-04 18:30:45	Sviluppare una Restful web API con Python fask e MongoDB	[EuroPython 2012] Nicola Tarocci - 3 JULY 2012 in "Track Big Mac"	28	Science & Technology	PT1H21M59S	1319	2d	sd	false			1142	8	0	0	0
1270	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WX7aB0e4-Lk	2012-07-04T18:23:06Z	2012-07-04 18:23:06	Method restrictions and implementing them for python	[EuroPython 2012] P Szabo - 3 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT56M17S	3377	2d	sd	false			100	0	0	0	0
1271	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4Ztq-Yz1ero	2012-07-04T18:20:28Z	2012-07-04 18:20:28	Tornado in Depth	[EuroPython 2012] O Vilaplana - 3 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT1H6M36S	396	2d	sd	false			12375	28	8	0	5
1272	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-xuelXMtYNE	2012-07-04T18:11:24Z	2012-07-04 18:11:24	Esageriamo con uWSGI e Ngnix	[EuroPython 2012] Roberto De Ioris - 3 JULY 2012 in "Track Big Mac"	28	Science & Technology	PT41M24S	2484	2d	sd	false			179	0	0	0	0
1273	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OH4Q9db0xFw	2012-07-04T18:08:52Z	2012-07-04 18:08:52	Spotify - pipelining your music	[EuroPython 2012] Jyrki Pulliainen - 3 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT57M21S	3441	2d	sd	false			240	1	0	0	0
1274	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5yzzjDHpbgc	2012-07-04T18:05:04Z	2012-07-04 18:05:04	Openstack Overview - Operational Detail of a large Python Project	[EuroPython 2012] Padraig Brady - 3 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT1H15M34S	934	2d	sd	false			1315	3	0	0	2
1275	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HlGDP92dlfY	2012-07-04T18:00:21Z	2012-07-04 18:00:21	Juju - Service orchestration and deployment	[EuroPython 2012] J Page - 3 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT47M43S	2863	2d	sd	false			421	1	0	0	0
1276	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	itn8W9zI0Wk	2012-07-04T18:00:14Z	2012-07-04 18:00:14	Further neck and amd shoulder massage training	[EuroPython 2012] Rob Collins - 3 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT54M9S	3249	2d	sd	false			2438	4	3	0	0
1277	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	lmuhyc4aPYs	2012-07-04T17:58:33Z	2012-07-04 17:58:33	Snakes and onions - Python developers and Tor	[EuroPython 2012] Runa Sandvik - 3 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT46M9S	2769	2d	sd	false			925	6	0	0	0
1278	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	m8mS28xBh_A	2012-07-04T17:46:26Z	2012-07-04 17:46:26	Getting the logging module to your bidding	[EuroPython 2012] M Sandford - 3 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT41M39S	2499	2d	sd	false			601	0	1	0	0
1279	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	C-uE-NHL2E4	2012-07-04T17:45:00Z	2012-07-04 17:45:00	NDB - the new data store library for Google App Engine 2	[EuroPython 2012] Guido Van Rossum - 3 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT48M52S	2932	2d	sd	false			1256	14	0	0	0
1280	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	oquJqXsSQ38	2012-07-04T17:42:38Z	2012-07-04 17:42:38	Becoming a better programmer	[EuroPython 2012] Harald Massa - 3 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT52M32S	3152	2d	sd	false			2105	14	0	0	2
1281	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	gmIG56Hf9dc	2012-07-04T17:41:24Z	2012-07-04 17:41:24	How to bootsrap a startup using django	[EuroPython 2012] J Leidel -P Wassibauer - 3 JULY 2012	28	Science & Technology	PT52M20S	3140	2d	sd	false			4237	22	0	0	1
1282	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fkrpe4olen8	2012-07-04T17:37:44Z	2012-07-04 17:37:44	PostSQL - using PostgreSQL as a better NoSQL	[EuroPython 2012] H Krosing - 3 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT38M49S	2329	2d	sd	false			1526	7	1	0	0
1283	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	m4OHUDsNrLo	2012-07-04T17:20:17Z	2012-07-04 17:20:17	Complex - social network anlysis in Python	[EuroPython 2012] E Franchi - 3 JULY 2012 in "Track Ravioli"	28	Science & Technology	PT1H4M17S	257	2d	sd	false			768	6	0	0	0
1284	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ENnI2FU3EV4	2012-07-04T17:14:53Z	2012-07-04 17:14:53	What i learned from big web app deployments	[EuroPython 2012] Christian Theune - 3 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT53M19S	3199	2d	sd	false			532	1	0	0	0
1285	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jY8V0yvTRC0	2012-07-04T17:08:12Z	2012-07-04 17:08:12	NDB - the new data store library for Google App Engine 1	[EuroPython 2012] Guido Van Rossum - 3 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT8M46S	526	2d	sd	false			782	1	0	0	1
1286	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Pqm1mc26eoE	2012-07-04T17:07:59Z	2012-07-04 17:07:59	OpenERP 6.1- come progettare applicazioni business	[EuroPython 2012] Davide Corio - 3 JULY 2012 in "Track Big Mac"	28	Science & Technology	PT45M14S	2714	2d	sd	false			395	2	0	0	0
1287	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5twaatBqmjE	2012-07-04T17:07:10Z	2012-07-04 17:07:10	Diving into Flask - head on	[EuroPython 2012] Andni Mishkovskyi - 3 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT45M28S	2728	2d	sd	false			4366	17	0	0	0
1288	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	S8Y1eN-34eY	2012-07-04T17:02:18Z	2012-07-04 17:02:18	Programming mobile apps with python	[EuroPython 2012] Andreas Schreiber - 3 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT41M23S	2483	2d	sd	false			10282	31	2	0	4
1289	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xWY0UQn3dcA	2012-07-04T17:02:12Z	2012-07-04 17:02:12	Python without filesystem	[EuroPython 2012] Arnaud Fontaine - 3 JULY 2012 in "Track Lasagne"	28	Science & Technology	PT47M41S	2861	2d	sd	false			260	0	0	0	0
1290	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WqVMZnefnO8	2012-07-04T16:52:41Z	2012-07-04 16:52:41	Python white magic	[EuroPython 2012] Antonio Cuni - 3 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT55M13S	3313	2d	sd	false			641	4	1	0	0
1291	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tbk0Mpj3SO8	2012-07-04T16:42:35Z	2012-07-04 16:42:35	Going International	[EuroPython 2012] A Bessas - 3 JULY 2012 in "Track Tagliatelle"	28	Science & Technology	PT42M15S	2535	2d	sd	false			168	0	0	0	1
1292	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	RwbEEzl3bL4	2012-07-04T14:03:42Z	2012-07-04 14:03:42	Not the state of the Python union	[EuroPython 2012] G. van Rossum - 2 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT1H36M2S	2162	2d	sd	false			883	5	0	0	2
1293	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YdxXqc2Npls	2012-07-04T13:56:49Z	2012-07-04 13:56:49	Ask your BDFL	[EuroPython 2012] Guido van Rossum - 2 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT56M39S	3399	2d	sd	false			755	5	0	0	0
1294	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	guc1IwNegFM	2012-07-04T13:54:07Z	2012-07-04 13:54:07	Recruting session	[EuroPython 2012] - 2 JULY 2012 "Track Spaghetti"	28	Science & Technology	PT53M43S	3223	2d	sd	false			235	1	0	0	0
1295	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9gbUFyPltDs	2012-07-04T13:49:41Z	2012-07-04 13:49:41	Permission or forgiveness	[EuroPython 2012 ] Alex Martelli - 2 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT1H45S	45	2d	sd	false			725	6	0	0	1
1296	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2EnkSshoEkk	2012-07-04T13:47:05Z	2012-07-04 13:47:05	Lightning Talks - Monday	[EuroPython 2012] - 2 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT1H15M36S	936	2d	sd	false			1302	11	1	0	4
1297	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	x6OL88pzjHQ	2012-07-04T12:41:38Z	2012-07-04 12:41:38	Pypy current status and gil-less future	[EuroPython 2012] A. Rigo, A. Cuni, M. Fijalkowski - 2 JULY 2012 in "Track Spaghetti"	28	Science & Technology	PT1H2M41S	161	2d	sd	false			829	4	0	0	4
1298	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-aTjP9_di4E	2012-07-03T22:07:37Z	2012-07-03 22:07:37	EuroPython 2012 - Track Big Mac		28	Science & Technology	PT9H51M10S	3070	2d	sd	false			336	0	0	0	0
1299	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ilwSRRLlOnE	2012-02-27T16:17:19Z	2012-02-27 16:17:19	Browse and print problems and solutions	[EuroPython 2011] Jonathan Fine - 21 June 2011 in "Track Tagliatelle"	27	Education	PT53M23S	3203	2d	sd	false			120	0	0	0	0
1300	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	RacJs2e3Tyk	2012-02-27T16:05:03Z	2012-02-27 16:05:03	writing a parallel and distributed tool for backing up a multi terabyte dat	[EuroPython 2011] Marco Nenciarini - 21 June 2011 in "Track Ravioli"	27	Education	PT26M33S	1593	2d	sd	false			143	2	0	0	0
1301	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eu_vAisNHVA	2011-08-11T10:23:31Z	2011-08-11 10:23:31	EuroPython 2011: Video Reportage!	Here is a report that condenses in 3 minutes the adventure of 2011! Thanks to all participants, speakers and sponsors who made ​​this great event in Italy dedicated to Python!	27	Education	PT4M15S	255	2d	hd	false	https://i.ytimg.com/vi/eu_vAisNHVA/maxresdefault.jpg		4235	22	0	0	2
1302	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BDiEbi0yCY8	2011-08-11T10:02:05Z	2011-08-11 10:02:05	EuroPython 2012: Join us in Florence on July!	We hope to have you among the participants of 2012! EuroPython is the official European conference about the Python programming language. It is aimed at everyone in the Python community, of all skill levels, both users and programmers.	27	Education	PT36S	36	2d	hd	false	https://i.ytimg.com/vi/BDiEbi0yCY8/maxresdefault.jpg		1240	3	0	0	0
1303	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	uh92G5RDiiA	2011-08-10T10:39:23Z	2011-08-10 10:39:23	Man Page of the Warrior of Light	[EuroPython 2011] Semen Trygubenko - 22 June 2011 in "Track Tagliatelle "	27	Education	PT47M22S	2842	2d	sd	false			646	2	0	0	0
1304	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	O3mdKNjsdlQ	2011-07-24T15:35:40Z	2011-07-24 15:35:40	sqlmap - security development in Python	[EuroPython 2011] Miroslav Stampar - 23 June 2011 in "Track Tagliatelle"	27	Education	PT1H5M25S	325	2d	sd	false			1188	2	0	0	0
1305	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YiimQ3zyxRQ	2011-07-24T15:33:14Z	2011-07-24 15:33:14	What is Google App Engine?	[EuroPython 2011] wesley chun - 23 June 2011 in "Track Tagliatelle"	27	Education	PT1H24M51S	1491	2d	sd	false			2728	3	5	0	1
1306	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SVXq0LfuPUE	2011-07-24T15:17:35Z	2011-07-24 15:17:35	The political implications of having fun (while programming open source)	[EuroPython 2011] Benno Luthiger - 23 June 2011 in "Track Spaghetti"	27	Education	PT1H4M18S	258	2d	sd	false			177	0	0	0	0
1307	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vMjnjmUcldA	2011-07-24T14:47:48Z	2011-07-24 14:47:48	The London Python Code Dojo - an Education in Developer Education	[EuroPython 2011] Nicholas Tollervey - 24 June 2011 in "Track Ravioli "	27	Education	PT49M12S	2952	2d	sd	false			220	2	0	0	0
1308	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	k9NGWSqcmDI	2011-07-24T14:31:21Z	2011-07-24 14:31:21	Snakes on a cloud: the OpenStack project	[EuroPython 2011] Thierry Carrez - 23 June 2011 in "Track Lasagne"	27	Education	PT56M51S	3411	2d	sd	false			300	1	0	0	0
1309	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	UwV2Hdb8XQQ	2011-07-24T14:25:29Z	2011-07-24 14:25:29	Sqlkit: empowering database access	[EuroPython 2011] Alessandro Dentella - 23 June 2011 in "Track Spaghetti"	27	Education	PT53M11S	3191	2d	sd	false			189	1	0	0	0
1310	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Av6KcdWvWnU	2011-07-24T14:14:27Z	2011-07-24 14:14:27	Refactoring PyChart	[EuroPython 2011] Jacob Hallén - 23 June 2011 in "Track Tagliatelle"	27	Education	PT41M37S	2497	2d	sd	false			487	1	1	0	0
1311	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IL4o0HSGOsU	2011-07-24T14:10:42Z	2011-07-24 14:10:42	Scraping Techniques to Extract Advertisements from Web Pages	[EuroPython 2011] Mirko Urru,Stefano Cotta Ramusino - 24 June 2011 in "Track Tagliatelle "	27	Education	PT33M40S	2020	2d	sd	false			794	1	0	0	1
1312	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	twrNGyl1sbc	2011-07-24T14:06:12Z	2011-07-24 14:06:12	Fun with Python's newer tools	[EuroPython 2011] Raymond Hettinger - 23 June 2011 in "Track Spaghetti"	27	Education	PT59M22S	3562	2d	hd	false	https://i.ytimg.com/vi/twrNGyl1sbc/maxresdefault.jpg		11004	43	0	0	7
1313	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Lil248rRPYw	2011-07-24T14:04:38Z	2011-07-24 14:04:38	Precompiling and deploying Python to any Linux, Mac OS X or FreeBSD system	[EuroPython 2011] Péter Szabó - 23 June 2011 in "Track Tagliatelle"	27	Education	PT39M57S	2397	2d	sd	false			393	1	0	0	0
1314	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	oY0h-ZKrdA8	2011-07-24T13:59:01Z	2011-07-24 13:59:01	Introduction to Qt	[EuroPython 2011] Matti Airas - 23 June 2011 in "Track Ravioli"	27	Education	PT58M20S	3500	2d	hd	false	https://i.ytimg.com/vi/oY0h-ZKrdA8/maxresdefault.jpg		1194	2	1	0	0
1315	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yf34NCtdxVI	2011-07-24T13:56:44Z	2011-07-24 13:56:44	JSON data + RML template = PDF report	[EuroPython 2011] Stefano Cotta Ramusino - 23 June 2011 in "Track Ravioli"	27	Education	PT42M6S	2526	2d	sd	false			2134	1	2	0	0
1316	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	l5E3BZOZ7Qg	2011-07-24T13:31:00Z	2011-07-24 13:31:00	Django productivity tips and tricks	[EuroPython 2011] Simone Federici - 23 June 2011 in "Track Ravioli"	27	Education	PT53M3S	3183	2d	sd	false			1447	1	5	0	1
1317	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	btyuUwcfLW0	2011-07-24T13:30:04Z	2011-07-24 13:30:04	Healthcare process management in Python: a use case	[EuroPython 2011] Federico Caboni - 24 June 2011 in "Track Tagliatelle "	27	Education	PT35M35S	2135	2d	sd	false			1086	5	0	0	0
1318	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	isDQXSv5kGw	2011-07-24T13:22:18Z	2011-07-24 13:22:18	Developing Desktop and mobile apps with PySide and QML	[EuroPython 2011] Thomas Perl - 24 June 2011 in "Training Pizza Margherita "	27	Education	PT25M43S	1543	2d	hd	false	https://i.ytimg.com/vi/isDQXSv5kGw/maxresdefault.jpg		5947	15	0	0	0
1319	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	U_IZVEZImq4	2011-07-24T13:20:40Z	2011-07-24 13:20:40	Data Driven Cache Invalidation	[EuroPython 2011] Magnus Hagander - 23 June 2011 in "Track Ravioli"	27	Education	PT51M45S	3105	2d	hd	false	https://i.ytimg.com/vi/U_IZVEZImq4/maxresdefault.jpg		519	2	0	0	0
1320	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	c4WltP4-Xlk	2011-07-24T13:15:20Z	2011-07-24 13:15:20	Derivatives Analytics with Python & Numpy	[EuroPython 2011] Yves Hilpisch - 24 June 2011 in "Track Ravioli "	27	Education	PT55M16S	3316	2d	sd	false			2108	5	1	0	0
1321	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	zvwi-PLrCgE	2011-07-24T13:08:05Z	2011-07-24 13:08:05	Deploying web applications to the cloud with Python	[EuroPython 2011] Nate Aune - 23 June 2011 in "Track Ravioli"	27	Education	PT47M35S	2855	2d	hd	false	https://i.ytimg.com/vi/zvwi-PLrCgE/maxresdefault.jpg		691	3	0	0	0
1322	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yWR00Y6tkC8	2011-07-24T13:02:14Z	2011-07-24 13:02:14	Beyond Python Enhanced Generators	[EuroPython 2011] Erik Groeneveld - 23 June 2011 in "Track Spaghetti"	27	Education	PT1H26M13S	1573	2d	sd	false			542	0	0	0	0
1323	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	a6oHHGIV3r4	2011-07-24T12:55:42Z	2011-07-24 12:55:42	Combining Embedded and Interactive Python in a Debugger: A Case Study	[EuroPython 2011] Caroline Tice - 23 June 2011 in "Track Ravioli"	27	Education	PT52M8S	3128	2d	sd	false			364	2	1	0	0
1324	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	F4qHeJqlYbk	2011-07-24T12:29:49Z	2011-07-24 12:29:49	Building a Scientific Software Application with the Enthought Tool Suite	[EuroPython 2011] Mark Dickinson - 24 June 2011 in "Training Pizza Margherita "	27	Education	PT22M44S	1364	2d	sd	false			906	0	1	0	1
1325	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	k-wbWT8KwAI	2011-07-24T12:24:32Z	2011-07-24 12:24:32	A Python Takeover	[EuroPython 2011] Mark Ramm-Christensen - 23 June 2011 in "Track Lasagne"	27	Education	PT36M	2160	2d	sd	false			556	1	0	0	0
1326	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HHFCFJSPWrI	2011-07-21T03:15:12Z	2011-07-21 03:15:12	Python 103: Mmmm... Understanding Python's Memory Model, Mutability, and Methods	[EuroPython 2011] wesley chun - 22 June 2011 in "Track Lasagne"	27	Education	PT1H17M42S	1062	2d	hd	false	https://i.ytimg.com/vi/HHFCFJSPWrI/maxresdefault.jpg		4372	46	2	0	2
1327	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	u1sVfGEBKWQ	2011-07-21T02:43:32Z	2011-07-21 02:43:32	What makes Python so AWESOME	[EuroPython 2011] Raymond Hettinger - 20 June 2011 in "Track Spaghetti"	27	Education	PT1H13M21S	801	2d	sd	false	https://i.ytimg.com/vi/u1sVfGEBKWQ/maxresdefault.jpg		71065	269	16	0	35
1328	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	R9jo6HMlgLo	2011-07-21T02:22:10Z	2011-07-21 02:22:10	Python at Cloudkick	[EuroPython 2011] Tomaž Muraus - 22 June 2011 in "Track Spaghetti"	27	Education	PT35M13S	2113	2d	sd	false	https://i.ytimg.com/vi/R9jo6HMlgLo/maxresdefault.jpg		105	0	0	0	0
1329	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	y2eKgo3gw-0	2011-07-21T02:09:23Z	2011-07-21 02:09:23	Visualization and Analysis of Large Scale Datasets with Python	[EuroPython 2011] Christine Moran - 23 June 2011 in "Training Pizza Margherita "	27	Education	PT16M24S	984	2d	sd	false			1026	1	0	0	0
1330	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_ANajHy3ufk	2011-07-21T01:58:03Z	2011-07-21 01:58:03	Python + Oracle = Prosperity & Performance	[EuroPython 2011] Todd Trichler - 23 June 2011 in "Training Pizza Napoli "	27	Education	PT19M50S	1190	2d	sd	false			1725	2	2	0	0
1331	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	HgN8rOstPjc	2011-07-21T01:56:25Z	2011-07-21 01:56:25	Playing tasks with Django-Celery	[EuroPython 2011] Mauro Rocco - 22 June 2011 in "Track Tagliatelle "	27	Education	PT45M28S	2728	2d	sd	false			1258	2	0	0	4
1332	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	aRYvBuYXcjk	2011-07-21T01:54:13Z	2011-07-21 01:54:13	MiG - A Complete Grid Middleware (mostly) in Python	[EuroPython 2011] Jonas Bardino - 22 June 2011 in "Track Tagliatelle "	27	Education	PT55M17S	3317	2d	hd	false	https://i.ytimg.com/vi/aRYvBuYXcjk/maxresdefault.jpg		164	0	0	0	0
1333	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qcqEAE4QoeA	2011-07-21T01:53:54Z	2011-07-21 01:53:54	PyPy hands-on	[EuroPython 2011] Antonio Cuni,Armin Rigo - 21 June 2011 in "Training Pizza Margherita"	27	Education	PT21M34S	1294	2d	sd	false	https://i.ytimg.com/vi/qcqEAE4QoeA/maxresdefault.jpg		429	1	1	0	0
1334	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TN9nIBxDXU8	2011-07-21T01:53:41Z	2011-07-21 01:53:41	Pricing products using Python graphs and sets	[EuroPython 2011] Rob Collins - 22 June 2011 in "Track Ravioli "	27	Education	PT41M53S	2513	2d	sd	false	https://i.ytimg.com/vi/TN9nIBxDXU8/maxresdefault.jpg		633	2	1	0	0
1335	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	smUceHEg1P0	2011-07-21T01:51:17Z	2011-07-21 01:51:17	Pitfalls of Continuous Deployment	[EuroPython 2011] David Cramer - 22 June 2011 in "Track Ravioli "	27	Education	PT1H12M9S	729	2d	sd	false	https://i.ytimg.com/vi/smUceHEg1P0/maxresdefault.jpg		570	3	0	0	0
1336	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	DanjGO0VEAs	2011-07-21T01:37:04Z	2011-07-21 01:37:04	New beauty in Camelot	[EuroPython 2011] Erik Janssens,Jeroen Dierckx - 22 June 2011 in "Track Ravioli "	27	Education	PT45M41S	2741	2d	sd	false			182	0	0	0	0
1337	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	e0tK-Kawx3E	2011-07-21T01:26:37Z	2011-07-21 01:26:37	Objects and classes in Python (and JavaScript)	[EuroPython 2011] Jonathan Fine - 23 June 2011 in "Training Pizza Napoli "	27	Education	PT18M38S	1118	2d	sd	false			583	2	0	0	0
1338	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	FITsetDUKJ0	2011-07-21T01:19:31Z	2011-07-21 01:19:31	Introduction to Gevent	[EuroPython 2011] Denis Bilenko - 20 June 2011 in "Track Spaghetti"	27	Education	PT33M45S	2025	2d	sd	false	https://i.ytimg.com/vi/FITsetDUKJ0/maxresdefault.jpg		2886	9	0	0	1
1339	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	u3oVf_Z4kmI	2011-07-21T01:17:36Z	2011-07-21 01:17:36	How to make intelligent web-apps	[EuroPython 2011] Deepak Thukral - 22 June 2011 in "Track Ravioli "	27	Education	PT47M44S	2864	2d	sd	false	https://i.ytimg.com/vi/u3oVf_Z4kmI/maxresdefault.jpg		500	3	0	0	0
1340	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tJ8mufRrW60	2011-07-21T01:13:34Z	2011-07-21 01:13:34	How to build complex web applications having fun?	[EuroPython 2011] Andrew Mleczko - 22 June 2011 in "Track Ravioli "	27	Education	PT1H2M50S	170	2d	sd	false			560	2	0	0	0
1341	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	R8fC4efkj2s	2011-07-21T01:08:54Z	2011-07-21 01:08:54	Managing the cloud with libcloud	[EuroPython 2011] Tomaž Muraus - 22 June 2011 in "Track Ravioli "	27	Education	PT33M42S	2022	2d	sd	false			512	0	0	0	0
1342	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	M5ckXyiiu7g	2011-07-21T01:08:22Z	2011-07-21 01:08:22	Exploit your GPU power with PyCUDA (and friends)	[EuroPython 2011] Stefano Brilli - 22 June 2011 in "Track Spaghetti"	27	Education	PT1H1M34S	94	2d	hd	false	https://i.ytimg.com/vi/M5ckXyiiu7g/maxresdefault.jpg		2187	13	0	0	2
1343	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	LsfrMjcIudA	2011-07-21T01:04:26Z	2011-07-21 01:04:26	Good API design	[EuroPython 2011] Alex Martelli - 20 June 2011 in "Track Spaghetti"	27	Education	PT1H5M45S	345	2d	sd	false	https://i.ytimg.com/vi/LsfrMjcIudA/maxresdefault.jpg		2740	18	0	0	0
1344	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5epAiVgitL0	2011-07-21T00:55:08Z	2011-07-21 00:55:08	High-performance computing on gamer PCs	[EuroPython 2011] Yann Le Du - 20 June 2011 in "Track Lasagne"	27	Education	PT41M3S	2463	2d	sd	false	https://i.ytimg.com/vi/5epAiVgitL0/maxresdefault.jpg		227	0	0	0	0
1345	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	c08Ee2gQ3pY	2011-07-21T00:50:17Z	2011-07-21 00:50:17	Exploring CPython's bytecode	[EuroPython 2011] Floris Bruynooghe - 22 June 2011 in "Track Lasagne"	27	Education	PT50M20S	3020	2d	sd	false	https://i.ytimg.com/vi/c08Ee2gQ3pY/maxresdefault.jpg		407	1	0	0	0
1346	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	aNl7GrnKTcs	2011-07-21T00:35:23Z	2011-07-21 00:35:23	Emulating Stackless and greenlet with each other	[EuroPython 2011] Péter Szabó - 20 June 2011 in "Track Ravioli"	27	Education	PT53M57S	3237	2d	sd	false	https://i.ytimg.com/vi/aNl7GrnKTcs/maxresdefault.jpg		233	0	0	0	0
1347	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6jD34p8PokU	2011-07-21T00:27:54Z	2011-07-21 00:27:54	Debugging and profiling techniques	[EuroPython 2011] Giovanni Bajo - 22 June 2011 in "Track Spaghetti"	27	Education	PT1H31M7S	1867	2d	hd	false	https://i.ytimg.com/vi/6jD34p8PokU/maxresdefault.jpg		720	1	0	0	0
1348	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MoL2nDYcW1U	2011-07-21T00:21:59Z	2011-07-21 00:21:59	Distributing Python programs through PyInstaller	[EuroPython 2011] Giovanni Bajo - 22 June 2011 in "Track Lasagne"	27	Education	PT51M37S	3097	2d	hd	false	https://i.ytimg.com/vi/MoL2nDYcW1U/maxresdefault.jpg		8924	36	4	0	5
1349	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	GMGi9FpiNTk	2011-07-21T00:17:13Z	2011-07-21 00:17:13	Diversity as a Dependency	[EuroPython 2011] Anna Ravenscroft - 20 June 2011 in "Track Spaghetti"	27	Education	PT50M59S	3059	2d	sd	false	https://i.ytimg.com/vi/GMGi9FpiNTk/maxresdefault.jpg		100	0	0	0	0
1350	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4EmKiBCCZ3o	2011-07-21T00:01:17Z	2011-07-21 00:01:17	Challenges in developing a large Django site	[EuroPython 2011] Simon Willison - 22 June 2011 in "Track Spaghetti"	27	Education	PT52M2S	3122	2d	sd	false	https://i.ytimg.com/vi/4EmKiBCCZ3o/maxresdefault.jpg		1190	7	0	0	0
1351	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vd2T_LNn3C0	2011-07-20T23:56:36Z	2011-07-20 23:56:36	Developing cutting-edge applications with PyQt	[EuroPython 2011] Lorenzo Mancini,Matteo Bertozzi - 23 June 2011 in "Training Pizza Margherita "	27	Education	PT25M6S	1506	2d	sd	false			9143	8	0	0	0
1352	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Sg6RmIty9-w	2011-07-20T23:51:39Z	2011-07-20 23:51:39	Building a hosting platform with Python	[EuroPython 2011] Andrew Godwin - 20 June 2011 in "Track Lasagne"	27	Education	PT42M20S	2540	2d	sd	false	https://i.ytimg.com/vi/Sg6RmIty9-w/maxresdefault.jpg		293	0	0	0	0
1353	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	paK0-lkksIc	2011-07-20T23:18:40Z	2011-07-20 23:18:40	Advanced Python	[EuroPython 2011] Raymond Hettinger - 21 June 2011 in "Training Pizza Margherita"	27	Education	PT25M1S	1501	2d	sd	false	https://i.ytimg.com/vi/paK0-lkksIc/maxresdefault.jpg		4466	12	2	0	2
1354	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8e0l_Dt28MQ	2011-07-20T21:49:45Z	2011-07-20 21:49:45	5 Years of Bad Ideas	[EuroPython 2011] Armin Ronacher - 20 June 2011 in "Track Spaghetti"	27	Education	PT43M24S	2604	2d	sd	false	https://i.ytimg.com/vi/8e0l_Dt28MQ/maxresdefault.jpg		2785	24	0	0	1
1355	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Z_q-52ap-Vg	2011-07-18T16:24:48Z	2011-07-18 16:24:48	Web API Mashups in a Python Application	[EuroPython 2011] Johan Euphrosine - 21 June 2011 in "Track Tagliatelle"	27	Education	PT30M34S	1834	2d	sd	false			590	1	0	0	0
1356	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SFi7LpBr-JY	2011-07-18T16:15:55Z	2011-07-18 16:15:55	Using Python in Software for the Medical Industry	[EuroPython 2011] wesley chun - 21 June 2011 in "Track Tagliatelle"	27	Education	PT50M57S	3057	2d	sd	false			1422	3	0	0	0
1357	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nx04zGh3gME	2011-07-18T16:04:14Z	2011-07-18 16:04:14	Sqlkit: database ad accesso immediato	[EuroPython 2011] Alessandro Dentella - 21 June 2011 in "Track Italiana Big Mac"	27	Education	PT1H9M6S	546	2d	sd	false			121	0	0	0	0
1358	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qkB-ZqqyYrY	2011-07-18T15:59:43Z	2011-07-18 15:59:43	Ubuntu e la programmazione occasionale	[EuroPython 2011] Paolo Sammicheli - 21 June 2011 in "Track Italiana Big Mac"	27	Education	PT51M51S	3111	2d	sd	false			135	0	0	0	0
1359	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	oN02lznMDE8	2011-07-18T15:46:34Z	2011-07-18 15:46:34	Social Network Analysis con Python	[EuroPython 2011] Enrico Franchi - 24 June 2011 in "Track Italiana Big Mac "	27	Education	PT1H26M34S	1594	2d	sd	false			464	2	0	0	0
1360	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SGz5RZEOMFE	2011-07-18T15:37:03Z	2011-07-18 15:37:03	Remote execution of Python scripts using Viri	[EuroPython 2011] Marc Garcia - 21 June 2011 in "Track Tagliatelle"	27	Education	PT49M50S	2990	2d	sd	false			453	2	0	0	0
1361	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7QiuxqEpq2o	2011-07-18T15:29:55Z	2011-07-18 15:29:55	Python's other collection types and algorithms	[EuroPython 2011] Andrew Dalke - 21 June 2011 in "Track Spaghetti"	27	Education	PT57M12S	3432	2d	sd	false			322	0	0	0	2
1362	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pJqSbhGIhWU	2011-07-18T15:17:26Z	2011-07-18 15:17:26	Latest advances in the Google APIs platform	[EuroPython 2011] Ali Afshar - 21 June 2011 in "Track Ravioli"	27	Education	PT40M12S	2412	2d	sd	false			134	0	0	0	0
1363	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eKz5-hzGZoM	2011-07-18T15:13:02Z	2011-07-18 15:13:02	Python at Cloudkick	[EuroPython 2011] Tomaž Muraus - 22 June 2011 in "Track Spaghetti"	27	Education	PT35M13S	2113	2d	sd	false			42	0	0	0	0
1364	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	2pMUt1cIiEk	2011-07-18T15:03:16Z	2011-07-18 15:03:16	PyHP and the art of dating girls	[EuroPython 2011] Fabio Rotondo - 21 June 2011 in "Track Lasagne"	27	Education	PT36M22S	2182	2d	sd	false			144	1	0	0	0
1365	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	J1ZTPi06awk	2011-07-18T15:01:44Z	2011-07-18 15:01:44	PyPy hands-on	[EuroPython 2011] Antonio Cuni,Armin Rigo - 21 June 2011 in "Training Pizza Margherita"	27	Education	PT21M41S	1301	2d	sd	false			210	1	0	0	0
1366	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jUrgMpBkynI	2011-07-18T14:54:47Z	2011-07-18 14:54:47	Python + Oracle = Prosperity & Performance	[EuroPython 2011] Todd Trichler - 23 June 2011 in "Training Pizza Napoli "	27	Education	PT19M50S	1190	2d	sd	false			161	0	0	0	0
1367	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	YeSn9aovFCg	2011-07-18T14:52:46Z	2011-07-18 14:52:46	Exploring CPython's bytecode	[EuroPython 2011] Floris Bruynooghe - 22 June 2011 in "Track Lasagne"	27	Education	PT50M21S	3021	2d	sd	false			36	1	0	0	0
1368	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	l7e6NmyWclM	2011-07-18T14:48:19Z	2011-07-18 14:48:19	Gestione di processi clinici in Python: un caso d'uso	[EuroPython 2011] Federico Caboni - 23 June 2011 in "Track Italiana Big Mac "	27	Education	PT49M19S	2959	2d	sd	false			98	2	1	0	0
1369	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Bb3YEqtHvGs	2011-07-18T14:30:28Z	2011-07-18 14:30:28	Data Plumbing with Python	[EuroPython 2011] Pavlos Christoforou - 21 June 2011 in "Track Ravioli"	27	Education	PT40M12S	2412	2d	sd	false			239	0	0	0	0
1370	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	F7NOKSP_vlQ	2011-07-18T14:26:55Z	2011-07-18 14:26:55	Experiences making CPU-bound tasks run much faster	[EuroPython 2011] Ian Ozsvald - 22 June 2011 in "Training Pizza Margherita "	27	Education	PT22M29S	1349	2d	sd	false			944	1	0	0	0
1371	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6ko-tO-3bJ0	2011-07-18T14:23:17Z	2011-07-18 14:23:17	Developing cutting-edge applications with PyQt	[EuroPython 2011] Lorenzo Mancini,Matteo Bertozzi - 23 June 2011 in "Training Pizza Margherita "	27	Education	PT25M6S	1506	2d	sd	false			413	0	0	0	0
1372	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	GyC7ilNTNiY	2011-07-18T14:21:33Z	2011-07-18 14:21:33	Challenges in developing a large Django site	[EuroPython 2011] Simon Willison - 22 June 2011 in "Track Spaghetti"	27	Education	PT52M2S	3122	2d	sd	false			131	1	0	0	1
1373	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nQWVlXlJwp0	2011-07-18T14:11:49Z	2011-07-18 14:11:49	Best Practices for Python in the Cloud	[EuroPython 2011] Gisle Aas - 21 June 2011 in "Track Lasagne"	27	Education	PT49M48S	2988	2d	sd	false			276	0	0	0	0
1374	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	8SQbN5vhLto	2011-07-18T14:11:32Z	2011-07-18 14:11:32	Advanced Aspects of the Django Ecosystem: Haystack, Celery & Fabric	[EuroPython 2011] Simon Willison - 21 June 2011 in "Track Spaghetti"	27	Education	PT54M24S	3264	2d	sd	false			3692	21	0	0	1
1375	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ssiC75EclxI	2011-07-18T14:00:53Z	2011-07-18 14:00:53	Building a website with PyHP and Liwe	[EuroPython 2011] Fabio Rotondo - 22 June 2011 in "Training Pizza Napoli "	27	Education	PT25M48S	1548	2d	sd	false			252	2	1	0	1
1376	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	N_1EIkfQbv4	2011-07-18T13:53:08Z	2011-07-18 13:53:08	Building a Scientific Software Application with the Enthought Tool Suite	[EuroPython 2011] Mark Dickinson - 24 June 2011 in "Training Pizza Margherita "	27	Education	PT9M43S	583	2d	sd	false			110	0	0	0	0
1377	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7IIxc4yNo6M	2011-07-15T10:08:45Z	2011-07-15 10:08:45	A Deep-Dive Into Python Classes	[EuroPython 2011] Mark Smith - 22 June 2011 in "Track Lasagne"	27	Education	PT46M39S	2799	2d	sd	false			1756	4	0	0	2
1378	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3iqlzW8C3gw	2011-07-14T08:19:54Z	2011-07-14 08:19:54	Ubuntu and the opportunistic programming	[EuroPython 2011] Paolo Sammicheli - 20 June 2011 in "Track Tagliatelle"	27	Education	PT52M2S	3122	2d	sd	false			148	0	0	0	0
1379	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qpTAKS2jqZE	2011-07-14T08:19:47Z	2011-07-14 08:19:47	The London Python Code Dojo - an Education in Developer Education	[EuroPython 2011] Nicholas Tollervey - 24 June 2011 in "Track Ravioli "	27	Education	PT49M12S	2952	2d	sd	false			31	0	0	0	0
1380	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	43lq4qZDEOE	2011-07-14T08:05:08Z	2011-07-14 08:05:08	Introduction to Python Database Programming	[EuroPython 2011] Marc-André Lemburg - 21 June 2011 in "Track Tagliatelle"	27	Education	PT58M50S	3530	2d	sd	false			3926	2	5	0	1
1381	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rR0EZhe_UZk	2011-07-14T07:58:13Z	2011-07-14 07:58:13	Emulating Stackless and greenlet with each other	[EuroPython 2011] Péter Szabó - 20 June 2011 in "Track Ravioli"	27	Education	PT53M57S	3237	2d	sd	false			35	0	0	0	0
1382	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	E5POYrUawW8	2011-07-14T00:17:32Z	2011-07-14 00:17:32	uWSGI, il coltellino svizzero (di MacGyver) del deploy	[EuroPython 2011] Roberto De Ioris - 21 June 2011 in "Track Italiana Big Mac"	27	Education	PT57M38S	3458	2d	sd	false			1427	2	0	0	1
1383	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	vM9DUUz7Fa8	2011-07-14T00:06:23Z	2011-07-14 00:06:23	plac: more than just another command-line arguments parser	[EuroPython 2011] Michele Simionato - 21 June 2011 in "Track Ravioli"	27	Education	PT59M58S	3598	2d	sd	false			364	1	1	0	1
1384	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1E4GPmuLs9k	2011-07-13T23:46:05Z	2011-07-13 23:46:05	sqlmap - security development in Python	[EuroPython 2011] Miroslav Stampar - 23 June 2011 in "Track Tagliatelle"	27	Education	PT1H5M27S	327	2d	sd	false			451	3	1	0	0
1385	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1QTMeb9m_lE	2011-07-13T23:45:56Z	2011-07-13 23:45:56	Writing Books using Python & Open Source Software	[EuroPython 2011] wesley chun - 20 June 2011 in "Track Ravioli"	27	Education	PT51M41S	3101	2d	sd	false			601	0	0	0	2
1386	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	zP7p_wbOjbw	2011-07-13T23:38:57Z	2011-07-13 23:38:57	django-rdflib and postgresql - the best of both worlds	[EuroPython 2011] Stefan Talpalaru - 21 June 2011 in "Track Ravioli"	27	Education	PT39M1S	2341	2d	sd	false			1112	4	0	0	1
1387	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	U1r2nsd5wsQ	2011-07-13T23:34:03Z	2011-07-13 23:34:03	What makes Python so AWESOME	[EuroPython 2011] Raymond Hettinger - 20 June 2011 in "Track Spaghetti"	27	Education	PT1H13M21S	801	2d	sd	false			1872	7	1	0	0
1388	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ujP5LiQdgyI	2011-07-13T23:24:18Z	2011-07-13 23:24:18	django-rdflib e postgresql - il meglio dei due mondi	[EuroPython 2011] Stefan Talpalaru - 24 June 2011 in "Track Italiana Big Mac "	27	Education	PT39M36S	2376	2d	sd	false			229	0	0	0	0
1389	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tT7nNx6ahhA	2011-07-13T23:21:11Z	2011-07-13 23:21:11	What is Google App Engine?	[EuroPython 2011] wesley chun - 23 June 2011 in "Track Tagliatelle"	27	Education	PT1H21M49S	1309	2d	sd	false			171	1	0	0	0
1390	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JC5QqVWA8Vo	2011-07-13T23:06:08Z	2011-07-13 23:06:08	Using Storm to work with SQL databases	[EuroPython 2011] Jamu Kakar - 24 June 2011 in "Track Tagliatelle "	27	Education	PT1H6M57S	417	2d	sd	false			289	0	0	0	0
1391	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JuH4ZpoZBYM	2011-07-13T22:42:57Z	2011-07-13 22:42:57	The development process of Python	[EuroPython 2011] Ezio Melotti - 24 June 2011 in "Track Ravioli "	27	Education	PT1H34M2S	2042	2d	sd	false			235	2	0	0	0
1392	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	4fHnMecFIyw	2011-07-13T22:31:51Z	2011-07-13 22:31:51	Visualization and Analysis of Large Scale Datasets with Python	[EuroPython 2011] Christine Moran - 23 June 2011 in "Training Pizza Margherita "	27	Education	PT16M24S	984	2d	sd	false			140	1	0	0	0
1393	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	B5V7fWST3H0	2011-07-13T22:21:53Z	2011-07-13 22:21:53	The political implications of having fun (while programming open source)	[EuroPython 2011] Benno Luthiger - 23 June 2011 in "Track Spaghetti"	27	Education	PT1H4M18S	258	2d	sd	false			27	1	0	0	0
1394	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	yrboy25WKGo	2011-07-13T22:08:39Z	2011-07-13 22:08:39	The Art of Subclassing	[EuroPython 2011] Raymond Hettinger - 24 June 2011 in "Track Spaghetti"	27	Education	PT56M35S	3395	2d	sd	false			1078	3	1	0	0
1395	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IY96mgfZ_TM	2011-07-13T21:59:52Z	2011-07-13 21:59:52	The Myth of the Genius Programmer	[EuroPython 2011] Brian Fitzpatrick - 23 June 2011 in "Track Italiana Big Mac "	27	Education	PT38M26S	2306	2d	sd	false			2337	7	4	0	1
1396	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7oWykWu_5z4	2011-07-13T21:53:28Z	2011-07-13 21:53:28	Sqlkit: empowering database access	[EuroPython 2011] Alessandro Dentella - 23 June 2011 in "Track Spaghetti"	27	Education	PT53M11S	3191	2d	sd	false			38	0	0	0	0
1397	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BBAfIYpDMX4	2011-07-13T21:47:11Z	2011-07-13 21:47:11	Spotify: Horizontal scalability for great success	[EuroPython 2011] Nick Barkas - 22 June 2011 in "Track Spaghetti"	27	Education	PT42M	2520	2d	sd	false			406	3	0	0	0
1398	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5XjxTBgETfU	2011-07-13T21:39:55Z	2011-07-13 21:39:55	Sfrutta la potenza della GPU con PyCUDA (e compagni)	[EuroPython 2011] Stefano Brilli - 22 June 2011 in "Track Italiana Big Mac "	27	Education	PT51M11S	3071	2d	hd	false	https://i.ytimg.com/vi/5XjxTBgETfU/maxresdefault.jpg		190	1	0	0	1
1399	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	GZ9DzDJCe90	2011-07-13T21:38:06Z	2011-07-13 21:38:06	Spotify and Python: love at first sight	[EuroPython 2011] Jon Åslund - 20 June 2011 in "Track Spaghetti"	27	Education	PT32M29S	1949	2d	sd	false			2060	12	0	0	1
1400	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	wWzc-gn8IOU	2011-07-13T21:28:48Z	2011-07-13 21:28:48	Spatial data and GeoDjango	[EuroPython 2011] Bruno Renié - 21 June 2011 in "Track Tagliatelle"	27	Education	PT30M23S	1823	2d	sd	false			1795	3	0	0	0
1401	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tjF5jLD31kQ	2011-07-13T21:27:43Z	2011-07-13 21:27:43	Source code processing with Python	[EuroPython 2011] Kay Schluehr - 24 June 2011 in "Track Lasagne"	27	Education	PT32M42S	1962	2d	sd	false			331	0	0	0	0
1402	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QYadUMKQI3Q	2011-07-13T21:24:23Z	2011-07-13 21:24:23	Social Network Analysis in Python	[EuroPython 2011] Enrico Franchi - 23 June 2011 in "Track Lasagne"	27	Education	PT1H11M38S	698	2d	sd	false			2396	2	0	0	0
1403	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XA80glyC9kE	2011-07-13T21:23:03Z	2011-07-13 21:23:03	Realizzare un emulatore di videogiochi	[EuroPython 2011] Lorenzo Mancini - 22 June 2011 in "Track Italiana Big Mac "	27	Education	PT1H27M9S	1629	2d	sd	false			2767	15	1	0	2
1404	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-rmctl-VB1Y	2011-07-13T21:15:22Z	2011-07-13 21:15:22	Snakes on a cloud: the OpenStack project	[EuroPython 2011] Thierry Carrez - 23 June 2011 in "Track Lasagne"	27	Education	PT56M51S	3411	2d	sd	false			532	0	0	0	0
1405	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	t4eycS8ayFA	2011-07-13T21:03:01Z	2011-07-13 21:03:01	Scrivere un tool parallelo e distribuito per backup multi-terabyte	[EuroPython 2011] Marco Nenciarini - 23 June 2011 in "Track Italiana Big Mac "	27	Education	PT34M49S	2089	2d	sd	false			39	0	0	0	0
1406	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rZCANK4by0Q	2011-07-13T20:57:21Z	2011-07-13 20:57:21	Relate or !Relate	[EuroPython 2011] Mark Ramm-Christensen - 21 June 2011 in "Track Spaghetti"	27	Education	PT53M	3180	2d	sd	false			109	1	0	0	0
1407	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xE2-QKe9rGc	2011-07-13T20:57:11Z	2011-07-13 20:57:11	Saving Gaia with jQuery Mobile and GeoDjango	[EuroPython 2011] Calvin Cheng - 22 June 2011 in "Track Tagliatelle "	27	Education	PT48M21S	2901	2d	sd	false			347	1	0	0	0
1408	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cCKGqKTwfqI	2011-07-13T20:49:26Z	2011-07-13 20:49:26	Scraping Techniques to Extract Advertisements from Web Pages	[EuroPython 2011] Mirko Urru,Stefano Cotta Ramusino - 24 June 2011 in "Track Tagliatelle "	27	Education	PT33M40S	2020	2d	sd	false			96	0	0	0	0
1409	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5IYPF0YY6jo	2011-07-13T20:43:36Z	2011-07-13 20:43:36	Rubrica indirizzi all'ennesima potenza	[EuroPython 2011] Davide Corio - 23 June 2011 in "Track Italiana Big Mac "	27	Education	PT36M44S	2204	2d	sd	false			131	0	0	0	0
1410	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hdytprStoXc	2011-07-13T20:35:35Z	2011-07-13 20:35:35	Refactoring PyChart	[EuroPython 2011] Jacob Hallén - 23 June 2011 in "Track Tagliatelle"	27	Education	PT41M37S	2497	2d	sd	false			78	1	0	0	0
1411	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JbNG3rVLJvA	2011-07-13T20:35:03Z	2011-07-13 20:35:03	Python Tips, Tricks, and Idioms	[EuroPython 2011] Raymond Hettinger - 23 June 2011 in "Track Spaghetti"	27	Education	PT51M38S	3098	2d	hd	false	https://i.ytimg.com/vi/JbNG3rVLJvA/maxresdefault.jpg		9357	26	6	0	6
1412	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	q3hAFI8iaqg	2011-07-13T20:23:12Z	2011-07-13 20:23:12	Python for High Performance and Scientific Computing	[EuroPython 2011] Andreas Schreiber - 23 June 2011 in "Track Lasagne"	27	Education	PT48M46S	2926	2d	hd	false	https://i.ytimg.com/vi/q3hAFI8iaqg/maxresdefault.jpg		1738	3	0	0	0
1413	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	fVc1ruuixts	2011-07-13T20:13:52Z	2011-07-13 20:13:52	Python(x,y): diving into scientific Python	[EuroPython 2011] Vincent Noel - 22 June 2011 in "Training Pizza Margherita "	27	Education	PT22M42S	1362	2d	sd	false			10591	14	4	0	2
1414	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	34LcNUrFe30	2011-07-13T20:13:32Z	2011-07-13 20:13:32	Python 103: Mmmm... Understanding Python's Memory Model, Mutability, and Methods	[EuroPython 2011] wesley chun - 22 June 2011 in "Track Lasagne"	27	Education	PT1H17M42S	1062	2d	sd	false			242	2	0	0	0
1415	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bPJKYrZjq10	2011-07-13T20:13:24Z	2011-07-13 20:13:24	Python Design Patterns	[EuroPython 2011] Alex Martelli - 24 June 2011 in "Track Spaghetti"	27	Education	PT1H30M29S	1829	2d	sd	false			4478	16	0	0	3
1416	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	IyXOP7SJqKQ	2011-07-13T19:59:01Z	2011-07-13 19:59:01	Python MapReduce Programming with Pydoop	[EuroPython 2011] Simone Leo - 24 June 2011 in "Track Lasagne"	27	Education	PT1H5M29S	329	2d	sd	false			2529	5	3	0	1
1417	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ovVCnhwu9qQ	2011-07-13T19:55:07Z	2011-07-13 19:55:07	Python 3: the Next Generation (is here already)	[EuroPython 2011] wesley chun - 21 June 2011 in "Track Lasagne"	27	Education	PT1H12M14S	734	2d	sd	false			385	2	0	0	0
1418	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	JETzbuanMds	2011-07-13T19:55:01Z	2011-07-13 19:55:01	Python Enterprise: vento di libertà	[EuroPython 2011] Simone Federici - 23 June 2011 in "Track Italiana Big Mac "	27	Education	PT48M49S	2929	2d	sd	false			95	0	1	0	0
1419	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	iKqWk-yz8R8	2011-07-13T19:19:58Z	2011-07-13 19:19:58	Programmazione MapReduce in Python con Pydoop	[EuroPython 2011] Simone Leo - 23 June 2011 in "Track Italiana Big Mac "	27	Education	PT1H23M9S	1389	2d	sd	false			498	1	0	0	1
1420	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	XzXvVqdL6yk	2011-07-13T19:06:38Z	2011-07-13 19:06:38	Pricing products using Python graphs and sets	[EuroPython 2011] Rob Collins - 22 June 2011 in "Track Ravioli "	27	Education	PT41M53S	2513	2d	sd	false			89	0	0	0	0
1421	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nTpte3_jNO0	2011-07-13T19:03:48Z	2011-07-13 19:03:48	PyPy in production	[EuroPython 2011] Antonio Cuni,Armin Rigo - 23 June 2011 in "Track Lasagne"	27	Education	PT21M41S	1301	2d	sd	false			298	1	0	0	0
1422	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1YUFLLl8bGE	2011-07-13T19:00:36Z	2011-07-13 19:00:36	PostgreSQL - the database-sister of Python	[EuroPython 2011] Harald Armin Massa - 21 June 2011 in "Track Lasagne"	27	Education	PT49M22S	2962	2d	sd	false			1834	3	2	0	3
1423	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	KKkuu_A6ZhQ	2011-07-13T19:00:33Z	2011-07-13 19:00:33	Precompiling and deploying Python to any Linux, Mac OS X or FreeBSD system	[EuroPython 2011] Péter Szabó - 23 June 2011 in "Track Tagliatelle"	27	Education	PT40M48S	2448	2d	sd	false			67	0	0	0	0
1424	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	qLKNjpudFbY	2011-07-13T18:42:16Z	2011-07-13 18:42:16	Pitfalls of Continuous Deployment	[EuroPython 2011] David Cramer - 22 June 2011 in "Track Ravioli "	27	Education	PT1H12M13S	733	2d	sd	false			30	0	0	0	0
1425	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	mAXz2kbh_3U	2011-07-13T18:40:46Z	2011-07-13 18:40:46	Playing tasks with Django-Celery	[EuroPython 2011] Mauro Rocco - 22 June 2011 in "Track Tagliatelle "	27	Education	PT45M28S	2728	2d	sd	false			1271	1	0	0	1
1426	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	WNH2wAPlGQE	2011-07-13T18:37:40Z	2011-07-13 18:37:40	Paver: the build tool you missed	[EuroPython 2011] Lukáš Linhart - 22 June 2011 in "Track Tagliatelle "	27	Education	PT41M47S	2507	2d	sd	false			436	0	2	0	0
1427	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PT-bvTXFk5Y	2011-07-13T18:36:24Z	2011-07-13 18:36:24	PL/Python -- Python inside the PostgreSQL RDBMS	[EuroPython 2011] Peter Geoghegan - 20 June 2011 in "Track Ravioli"	27	Education	PT43M12S	2592	2d	sd	false			917	1	3	0	1
1428	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	b70_GgWpH40	2011-07-13T18:35:52Z	2011-07-13 18:35:52	OpenERP: 100% pythonic way for business management	[EuroPython 2011] Davide Corio - 23 June 2011 in "Track Tagliatelle"	27	Education	PT50M17S	3017	2d	hd	false	https://i.ytimg.com/vi/b70_GgWpH40/maxresdefault.jpg		666	0	0	0	0
1429	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	enNcrMTg2lM	2011-07-13T18:11:42Z	2011-07-13 18:11:42	MiG - A Complete Grid Middleware (mostly) in Python	[EuroPython 2011] Jonas Bardino - 22 June 2011 in "Track Tagliatelle "	27	Education	PT55M17S	3317	2d	sd	false			112	0	0	0	0
1430	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MVo0qEKK0wo	2011-07-13T18:10:23Z	2011-07-13 18:10:23	OpenStack Compute's automated testing	[EuroPython 2011] Soren Hansen - 24 June 2011 in "Track Tagliatelle "	27	Education	PT33M28S	2008	2d	sd	false			570	0	0	0	0
1431	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jwwEyEAR1YA	2011-07-13T18:06:14Z	2011-07-13 18:06:14	New beauty in Camelot	[EuroPython 2011] Erik Janssens,Jeroen Dierckx - 22 June 2011 in "Track Ravioli "	27	Education	PT45M41S	2741	2d	sd	false			752	0	0	0	0
1432	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jUHTORehfRg	2011-07-13T17:58:12Z	2011-07-13 17:58:12	Merengue: the new surprising and refreshing Django based CMS.	[EuroPython 2011] Manuel Saelices - 20 June 2011 in "Track Tagliatelle"	27	Education	PT41M53S	2513	2d	sd	false			1134	3	0	0	0
1433	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	tIgRlaChOqU	2011-07-13T17:57:16Z	2011-07-13 17:57:16	Objects and classes in Python (and JavaScript)	[EuroPython 2011] Jonathan Fine - 23 June 2011 in "Training Pizza Napoli "	27	Education	PT18M39S	1119	2d	sd	false			82	0	0	0	0
1434	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	zZY-5cHZsT0	2011-07-13T17:56:59Z	2011-07-13 17:56:59	Meteorology, Climate and Python: desperately trying to forget technical details	[EuroPython 2011] Claude Gibert - 24 June 2011 in "Track Lasagne"	27	Education	PT48M31S	2911	2d	sd	false			680	1	0	0	0
1435	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	ULxpa5jPvow	2011-07-13T17:45:17Z	2011-07-13 17:45:17	Making use of OpenStreetMap data with Python	[EuroPython 2011] Andrii Mishkovskyi - 22 June 2011 in "Track Lasagne"	27	Education	PT49M40S	2980	2d	sd	false			6142	9	3	0	3
1436	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	dIwsKYNbtnI	2011-07-13T17:37:33Z	2011-07-13 17:37:33	It's the message, stupid: python & amqp	[EuroPython 2011] Muharem Hrnjadovic - 21 June 2011 in "Track Ravioli"	27	Education	PT1H31M29S	1889	2d	sd	false			1777	3	1	0	0
1437	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	6FlvXN2JxTc	2011-07-13T17:36:32Z	2011-07-13 17:36:32	Managing the cloud with libcloud	[EuroPython 2011] Tomaž Muraus - 22 June 2011 in "Track Ravioli "	27	Education	PT33M42S	2022	2d	sd	false			49	0	0	0	0
1438	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3uTnXITm-kA	2011-07-13T17:27:27Z	2011-07-13 17:27:27	Making CPython Fast Using Trace-based Optimisations	[EuroPython 2011] Mark Shannon - 24 June 2011 in "Track Lasagne"	27	Education	PT54M34S	3274	2d	sd	false			239	1	0	0	0
1439	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	xlVCtmbIYNE	2011-07-13T17:06:07Z	2011-07-13 17:06:07	Leveraging an instant messaging protocol to build a scalable cloud architecture	[EuroPython 2011] Achiel van der Mandele - 24 June 2011 in "Track Lasagne"	27	Education	PT31M21S	1881	2d	sd	false			277	1	0	0	0
1440	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	K5u1MToA3NU	2011-07-13T17:05:57Z	2011-07-13 17:05:57	Introduction to Qt	[EuroPython 2011] Matti Airas - 23 June 2011 in "Track Ravioli"	27	Education	PT58M20S	3500	2d	sd	false			73	0	0	0	0
1441	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9Cq_Zmr0OgM	2011-07-13T17:03:04Z	2011-07-13 17:03:04	JSON data + RML template = PDF report	[EuroPython 2011] Stefano Cotta Ramusino - 23 June 2011 in "Track Ravioli"	27	Education	PT42M6S	2526	2d	sd	false			388	2	0	0	0
1442	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	SGj0-BZsFn4	2011-07-13T16:45:38Z	2011-07-13 16:45:38	Introducing Django REST framework	[EuroPython 2011] Tom Christie - 23 June 2011 in "Track Tagliatelle"	27	Education	PT46M19S	2779	2d	hd	false	https://i.ytimg.com/vi/SGj0-BZsFn4/maxresdefault.jpg		3990	8	2	0	2
1443	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	5MZDzwmfRmo	2011-07-13T16:27:57Z	2011-07-13 16:27:57	Introduction to Gevent	[EuroPython 2011] Denis Bilenko - 20 June 2011 in "Track Spaghetti"	27	Education	PT34M13S	2053	2d	sd	false			1024	4	1	0	1
1444	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jYhLqo4Mqbc	2011-07-13T16:20:37Z	2011-07-13 16:20:37	Interoperability: from Python to Clojure and the other way round	[EuroPython 2011] Enrico Franchi - 21 June 2011 in "Track Lasagne"	27	Education	PT47M1S	2821	2d	sd	false			691	1	0	0	0
1445	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	9tzd45ho8gE	2011-07-13T16:19:06Z	2011-07-13 16:19:06	Hacking PyLongObject on Python 3.2	[EuroPython 2011] Cesare Di Mauro - 24 June 2011 in "Track Ravioli "	27	Education	PT51M30S	3090	2d	sd	false			505	0	0	0	0
1446	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Dop2EoBwyR4	2011-07-13T16:14:19Z	2011-07-13 16:14:19	Fun with Python's newer tools	[EuroPython 2011] Raymond Hettinger - 23 June 2011 in "Track Spaghetti"	27	Education	PT59M22S	3562	2d	hd	false	https://i.ytimg.com/vi/Dop2EoBwyR4/maxresdefault.jpg		237	0	0	0	0
1447	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bv89IOFvn7o	2011-07-13T16:13:49Z	2011-07-13 16:13:49	Good API design	[EuroPython 2011] Alex Martelli - 20 June 2011 in "Track Spaghetti"	27	Education	PT1H5M45S	345	2d	hd	false	https://i.ytimg.com/vi/bv89IOFvn7o/maxresdefault.jpg		253	1	0	0	0
1448	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	eXW_lN4x04k	2011-07-13T16:07:08Z	2011-07-13 16:07:08	How to build complex web applications having fun?	[EuroPython 2011] Andrew Mleczko - 22 June 2011 in "Track Ravioli "	27	Education	PT1H2M50S	170	2d	sd	false			109	0	0	0	0
1449	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	N7monH2jXNI	2011-07-13T16:06:44Z	2011-07-13 16:06:44	How to make intelligent web-apps	[EuroPython 2011] Deepak Thukral - 22 June 2011 in "Track Ravioli "	27	Education	PT47M44S	2864	2d	sd	false			69	0	0	0	0
1450	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	pYlKLaqlFj8	2011-07-13T16:04:11Z	2011-07-13 16:04:11	Implementing distributed applications using ZeroMQ, Python and other bad guys...	[EuroPython 2011] Francesco Crippa - 24 June 2011 in "Track Spaghetti"	27	Education	PT56M7S	3367	2d	sd	false			3930	5	1	0	2
1451	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TkBkGGPY2P0	2011-07-13T15:46:47Z	2011-07-13 15:46:47	High-performance computing on gamer PCs	[EuroPython 2011] Yann Le Du - 20 June 2011 in "Track Lasagne"	27	Education	PT41M3S	2463	2d	sd	true			30	0	0	0	0
1452	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	67Nk4a-izKM	2011-07-13T15:31:32Z	2011-07-13 15:31:32	Exploit your GPU power with PyCUDA (and friends)	[EuroPython 2011] Stefano Brilli - 22 June 2011 in "Track Spaghetti"	27	Education	PT1H1M34S	94	2d	sd	false			177	1	0	0	0
1453	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MsmmrfkLuvY	2011-07-13T15:29:45Z	2011-07-13 15:29:45	Healthcare process management in Python: a use case	[EuroPython 2011] Federico Caboni - 24 June 2011 in "Track Tagliatelle "	27	Education	PT35M34S	2134	2d	sd	false			153	1	0	0	0
1454	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	jfBGt_g0Z4M	2011-07-13T15:25:54Z	2011-07-13 15:25:54	Generazione di codice in Python : dal documento al codice C++ passando per la modellizzazione UML.	[EuroPython 2011] Francesco Bochicchio - 24 June 2011 in "Track Italiana Big Mac "	27	Education	PT49M40S	2980	2d	sd	false			84	0	0	0	0
1455	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	71i5FlW30s0	2011-07-13T15:19:42Z	2011-07-13 15:19:42	Getting ready for PostgreSQL 9.1	[EuroPython 2011] Gabriele Bartolini,Harald Armin Massa,Marco Nenciarini - 22 June 2011 in "Training Pizza Napoli "	27	Education	PT20M56S	1256	2d	sd	false			1153	2	0	0	0
1456	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	TuCYD1qnNcw	2011-07-13T15:09:39Z	2011-07-13 15:09:39	Django: trucchi per migliorare la produttività	[EuroPython 2011] Simone Federici - 22 June 2011 in "Track Italiana Big Mac "	27	Education	PT50M22S	3022	2d	hd	false	https://i.ytimg.com/vi/TuCYD1qnNcw/maxresdefault.jpg		135	3	0	0	0
1457	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	MRjpZCw8Fg8	2011-07-13T14:56:54Z	2011-07-13 14:56:54	Distributing Python programs through PyInstaller	[EuroPython 2011] Giovanni Bajo - 22 June 2011 in "Track Lasagne"	27	Education	PT51M37S	3097	2d	sd	false			210	0	0	0	0
1458	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	w_zl52L6CU4	2011-07-13T14:56:53Z	2011-07-13 14:56:53	Flow-based programming made easy with PyF 2.0	[EuroPython 2011] Jonathan Schemoul - 24 June 2011 in "Training Pizza Napoli "	27	Education	PT18M36S	1116	2d	sd	false			1404	3	0	0	1
1459	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bvdhd5kl-nw	2011-07-13T14:49:15Z	2011-07-13 14:49:15	Django productivity tips and tricks	[EuroPython 2011] Simone Federici - 23 June 2011 in "Track Ravioli"	27	Education	PT53M3S	3183	2d	sd	false			127	0	3	0	0
1460	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	OqpkB1wv5bs	2011-07-13T14:48:03Z	2011-07-13 14:48:03	Developing a Cad application as an hobby. My exciting hobby is now my job	[EuroPython 2011] Matteo Boscolo - 22 June 2011 in "Track Tagliatelle "	27	Education	PT1H25M24S	1524	2d	hd	false	https://i.ytimg.com/vi/OqpkB1wv5bs/maxresdefault.jpg		542	2	0	0	0
1461	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PLYI46Ou-wI	2011-07-13T14:40:54Z	2011-07-13 14:40:54	Diversity as a Dependency	[EuroPython 2011] Anna Ravenscroft - 20 June 2011 in "Track Spaghetti"	27	Education	PT51M5S	3065	2d	sd	false			39	0	0	0	0
1462	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	BTpjJkTXFSQ	2011-07-13T14:29:48Z	2011-07-13 14:29:48	Deploying web applications to the cloud with Python	[EuroPython 2011] Nate Aune - 23 June 2011 in "Track Ravioli"	27	Education	PT47M36S	2856	2d	hd	false	https://i.ytimg.com/vi/BTpjJkTXFSQ/maxresdefault.jpg		101	0	0	0	0
1463	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	NXcWrxzq5KI	2011-07-13T14:23:56Z	2011-07-13 14:23:56	Derivatives Analytics with Python & Numpy	[EuroPython 2011] Yves Hilpisch - 24 June 2011 in "Track Ravioli "	27	Education	PT55M16S	3316	2d	sd	false			541	1	0	0	1
1464	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	aoXee8Y-3w0	2011-07-13T14:13:42Z	2011-07-13 14:13:42	Developing Desktop and mobile apps with PySide and QML	[EuroPython 2011] Thomas Perl - 24 June 2011 in "Training Pizza Margherita "	27	Education	PT25M43S	1543	2d	sd	false			522	2	0	0	0
1465	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	J29uIkdmHs8	2011-07-07T13:05:41Z	2011-07-07 13:05:41	Debugging and profiling techniques	[EuroPython 2011] Giovanni Bajo - 22 June 2011 in "Track Spaghetti"	27	Education	PT1H31M7S	1867	2d	sd	false			318	0	0	0	0
1466	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	QCXwsQp8rmM	2011-07-07T12:34:15Z	2011-07-07 12:34:15	Data Driven Cache Invalidation	[EuroPython 2011] Magnus Hagander - 23 June 2011 in "Track Ravioli"	27	Education	PT51M45S	3105	2d	sd	false			82	0	0	0	0
1467	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	PSeSWINJ5YM	2011-07-07T12:28:20Z	2011-07-07 12:28:20	Dependency injection is your friend	[EuroPython 2011] Alan Franzoni - 24 June 2011 in "Track Spaghetti"	27	Education	PT45M58S	2758	2d	sd	false			1070	3	1	0	1
1468	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	1dzK_k6k36U	2011-07-07T12:18:07Z	2011-07-07 12:18:07	Creare videogames con Panda3D	[EuroPython 2011] Claudio Desideri - 21 June 2011 in "Track Italiana Big Mac"	27	Education	PT1H31M10S	1870	2d	sd	false			956	10	0	0	0
1469	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	-3fTd53VNHw	2011-07-07T12:17:54Z	2011-07-07 12:17:54	Creating videogames with Panda3D	[EuroPython 2011] Claudio Desideri - 20 June 2011 in "Track Tagliatelle"	27	Education	PT53M58S	3238	2d	sd	false			1662	10	0	0	0
1470	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	3A7z75PSIuY	2011-07-07T12:11:56Z	2011-07-07 12:11:56	Come costruire un'azienda distribuita con Python	[EuroPython 2011] Maurizio Delmonte - 22 June 2011 in "Track Italiana Big Mac "	27	Education	PT49M41S	2981	2d	sd	false			278	2	0	0	0
1471	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	e0QaqrVbNMY	2011-07-07T11:36:57Z	2011-07-07 11:36:57	Combining Embedded and Interactive Python in a Debugger: A Case Study	[EuroPython 2011] Caroline Tice - 23 June 2011 in "Track Ravioli"	27	Education	PT52M8S	3128	2d	sd	false			121	0	0	0	1
1472	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hsIEX2PBvJo	2011-07-07T11:34:51Z	2011-07-07 11:34:51	Aspettando PostgreSQL 9.1	[EuroPython 2011] Gabriele Bartolini - 22 June 2011 in "Track Italiana Big Mac "	27	Education	PT54M17S	3257	2d	sd	false			698	0	0	0	0
1473	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	cubJ4tYVrNc	2011-07-07T11:33:39Z	2011-07-07 11:33:39	Building Scalable Web Apps	[EuroPython 2011] David Cramer - 21 June 2011 in "Track Spaghetti"	27	Education	PT46M31S	2791	2d	sd	false			830	1	0	0	0
1474	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	hAqtC_c2x1s	2011-07-07T11:27:00Z	2011-07-07 11:27:00	Building a hosting platform with Python	[EuroPython 2011] Andrew Godwin - 20 June 2011 in "Track Lasagne"	27	Education	PT42M20S	2540	2d	sd	false			41	0	0	0	0
1475	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	Sd4W0DhJ29A	2011-07-07T11:23:58Z	2011-07-07 11:23:58	Beyond Python Enhanced Generators	[EuroPython 2011] Erik Groeneveld - 23 June 2011 in "Track Spaghetti"	27	Education	PT1H26M13S	1573	2d	sd	false			95	0	0	0	2
1476	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	rwhZ4joMLsI	2011-07-07T11:16:34Z	2011-07-07 11:16:34	Advanced Pickling with Stackless Python and sPickle	[EuroPython 2011] Anselm Kruis - 24 June 2011 in "Track Tagliatelle "	27	Education	PT55M1S	3301	2d	sd	false			194	1	0	0	0
1477	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	heJuQWNdwJI	2011-07-07T11:04:21Z	2011-07-07 11:04:21	API design: Lessons Learned	[EuroPython 2011] Raymond Hettinger - 21 June 2011 in "Track Spaghetti"	27	Education	PT1H17M34S	1054	2d	sd	false			5147	14	1	0	2
1478	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	GB0EJUhC7yc	2011-07-07T11:01:16Z	2011-07-07 11:01:16	An iPhone-Python love affair: Building APIs for mobile	[EuroPython 2011] Anna Callahan,Nate Aune - 24 June 2011 in "Track Spaghetti"	27	Education	PT35M22S	2122	2d	sd	false			898	1	1	0	2
1479	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	nR9dlkn9wk4	2011-07-07T10:53:47Z	2011-07-07 10:53:47	Advanced Python	[EuroPython 2011] Raymond Hettinger - 21 June 2011 in "Training Pizza Margherita"	27	Education	PT25M1S	1501	2d	sd	false			2485	2	0	0	0
1480	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	_OX-3UhwUeg	2011-07-07T10:36:21Z	2011-07-07 10:36:21	A Visual Interactive Programming Environment	[EuroPython 2011] Geoffrey French - 24 June 2011 in "Track Ravioli "	27	Education	PT55M5S	3305	2d	sd	false			895	0	0	0	0
1481	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	7c1R78iAWJk	2011-07-07T10:30:22Z	2011-07-07 10:30:22	A Python Takeover	[EuroPython 2011] Mark Ramm-Christensen - 23 June 2011 in "Track Lasagne"	27	Education	PT36M	2160	2d	sd	false			60	0	0	0	0
1482	UC98CzaYuFNAA_gOINFB0e4Q	EuroPython Conference	bpjHa0G9X5w	2011-07-07T10:15:43Z	2011-07-07 10:15:43	5 Years of Bad Ideas	[EuroPython 2011] Armin Ronacher - 20 June 2011 in "Track Spaghetti"	27	Education	PT43M24S	2604	2d	sd	false			694	1	0	0	0
